INGENIERÍA EN SISTEMAS DE INFORMACIÓN
 4° NIVEL 
2024
TECNOLOGÍAS PARA LA AUTOMATIZACIÓNTECNOLOGÍAS PARA LA AUTOMATIZACIÓN
priSISTEMAS DE CONTROL AUTOMÁTICOGuía N° 1: Clasificación y Representación de sistemas para la automatizaciónContenidos
SECCIÓN TEORÍA
1 Introducción a los sistemas de control
iModelado
iiControl. Características principales
iiiSeñales
ivLazo abierto. Lazo cerrado
2 Clasificación de los sistemas de control
iSistema lineal (L)
iiSistema invariante en el tiempo (TI)
iiiSistema lineal invariante en el tiempo (LTI)
ivSistema causal
vSistema sin memoria
viSistema inversible
Sistemas de control automático - Página 1 de 451. Introducción a los sistemas de control
Los sistemas de control juegan un papel crucial en el mundo moderno, especialmente en los procesos 
automatizados. El conocimiento de las herramientas y la dinámica del control es esencial para 
garantizar el crecimiento, la automatización, la reducción de costos y el incremento de ganancias. En 
viiSistema en serie y paralelo
3 Modelo de sistema en el espacio de estado
SECCIÓN PRÁCTICA
4Ejercitación
iiElija una opción y justifique para un sistema dado
iiiDe acuerdo al siguiente enunciado, realice el modelo correspondiente. 
iv Tomamos el ejemplo del modelo de teoría de masa - resorte y     codificamos con MatLab para obtener:  4.1. Forma matricial. 4.2. Soluciónde sistema. 4.3. Gráficas de la solución del sistemavEjemplo del Planteo de un modelo matemático para sistema continuo.(Homework)
SECCIÓN PRÁCTICA CON SOFTWARE
5 Introducción a la aplicación  MatLab
6 Gráficos
SECCIÓN PRÁCTICA COMPETENCIAS
xx Ejercitación
Sistemas de control automático - Página 2 de 45deﬁnitiva, estos sistemas permiten la optimización de los recursos disponibles, lo cual es fundamental en 
un entorno cada vez más competitivo y tecnológicamente avanzado.
Controlar un sistema implica tener la capacidad de gestionar y mejorar los procesos de manera 
eﬁciente, permitiendo a las organizaciones adaptarse rápidamente a los cambios y demandas del 
mercado. Además, en un mundo cada vez más conectado, es vital comprender los problemas y desafíos 
que surgen con la integración de tecnologías avanzadas en diversos sectores.
Entender la importancia de los sistemas de control nos lleva a iniciar un estudio detallado de los mismos. 
Comenzaremos por explorar las características de los sistemas y señales y aprenderemos a 
describirlos mediante modelos matemáticos. Este conocimiento nos permitirá desarrollar y aplicar 
estrategias de control efectivas que optimicen el rendimiento y la eﬁciencia de los sistemas 
automatizados.
Un sistema de control es una conﬁguración estructurada y coordinada de componentes que recibe 
entradas, procesa estas entradas y genera salidas para inﬂuir en el comportamiento de un sistema 
con el ﬁn de alcanzar un objetivo especíﬁco, generalmente utilizando mecanismos de 
retroalimentación para mantener la estabilidad y compensar las perturbaciones.
i. Modelado
El modelado de sistemas es una herramienta fundamental para entender y predecir el comportamiento 
de diversos sistemas, ya sean físicos como una placa electrónica (hardware) o abstractos como un 
conjunto de relaciones matemáticas. Mediante el modelado, podemos codiﬁcar el funcionamiento 
interno de un sistema, creando representaciones matemáticas que capturan sus dinámicas y 
comportamientos.
Los modelos matemáticos pueden ser implementados en software especíﬁcos facilitando su análisis y 
optimización a través de herramientas computacionales avanzadas. 
Un sistema es una combinación de componentes que actúan interconectados,para cumplir un determinado objetivo. 
Gráficamente podemos pensar un sistema como  un rectángulo o caja negra yvariables que actúan sobre el sistema. Las flechas que entran (u) sonexcitaciones o entradas y las flechas que salen (y) son  variables producidas porel sistema o salidas. Podemos pensar en sistemas como la relación de entradas-salidas.
Sistemas de control automático - Página 3 de 45Modelado Entrada - Salida
Uno de los enfoques de modelado más útiles para propósitos de control es el Modelado 
Entrada/Salida. Este tipo de modelado se centra en describir la relación entre los estímulos aplicados a 
un sistema (entradas) y las respuestas observadas (salidas). 
Este enfoque es especialmente útil en situaciones donde la complejidad interna del sistema es elevada o 
donde los detalles internos no son completamente conocidos o accesibles. A través de este modelado, se 
puede desarrollar un entendimiento práctico y aplicable del comportamiento del sistema en su totalidad.
La relación entre la entrada y la salida se representa matemáticamente mediante la Función de 
Transferencia del proceso. La Función de Transferencia es una herramienta poderosa que permite 
analizar y diseñar sistemas de control, ya que proporciona una representación simpliﬁcada y manejable 
de cómo las entradas se transforman en salidas. Esta función se deriva a partir de las ecuaciones 
diferenciales que describen el sistema y se expresa en términos del dominio de Laplace, lo que facilita 
el análisis de la estabilidad y la respuesta del sistema.
En las siguientes guías de trabajo, abordaremos con profundidad el concepto de Función de 
Transferencia. 
ii. Control. Características principales
Controlar un proceso consiste en mantener constantes ciertas variables, preﬁjadas de antemano. Las 
variables controladas pueden ser, por ejemplo: Presión, Temperatura, Nivel, Caudal, Humedad, etc. 
Como ejemplo de un sistema de control analicemos la temperatura de nuestro cuerpo. Si la temperatura 
sube por encima de 37ºC, se suda, refrescando el cuerpo. Si la temperatura tiende a bajar de 37ºC, el 
cuerpo, involuntariamente, comienza a temblar, contracción muscular que calienta nuestro cuerpo, 
haciendo que se normalice nuestra temperatura. Por tanto, en este caso: 
· Sistema de medida o sensores -> Células nerviosas de la piel 
En esencia, el modelado de sistemas proporciona una comprensión profunda ydetallada de cómo operan los sistemas, permitiendo su control y mejoracontinua.
El Modelado de Entrada/Salida se basa en la idea de que, para cualquier entradadada, el sistema generará una salida específica. 
Un sistema de control es el conjunto de elementos, que hace posible que otrosistema, proceso o planta permanezca fiel a un programa establecido.
Sistemas de control automático - Página 4 de 45· Señal de consigna -> 37ºC
· Acción de control de la temperatura -> Sudar o temblar 
Los elementos de un sistema de control trabajan juntos para monitorear, regular y ajustar el 
comportamiento del sistema objetivo, asegurando que opere de acuerdo con las especiﬁcaciones 
deseadas. Los sistemas de control son fundamentales para mantener la estabilidad, eﬁciencia y eﬁcacia 
de los procesos automatizados, permitiendo un funcionamiento consistente y predecible.
Características Principales
Entradas (Inputs)
Señales o datos que representan las variables que se desean controlar o que afectan el 
comportamiento del sistema.
Ejemplos: temperatura, velocidad, posición, presión.
Salidas (Outputs)
Las respuestas del sistema controlado que resultan del procesamiento de las entradas.
Ejemplos: movimiento de un motor, cambio de temperatura, ajuste de válvulas.
Controlador
El componente del sistema de control que procesa las entradas y determina las acciones necesarias 
para obtener la salida deseada.
Puede ser un dispositivo físico (como un termostato) o un algoritmo/software (como un PID control).
Sistema Controlado (Planta)
El proceso o dispositivo cuya conducta se desea controlar.
Ejemplos: un horno industrial, un vehículo, una máquina herramienta.
Retroalimentación (Feedback)
Un mecanismo por el cual parte de la salida del sistema se devuelve a la entrada para ajustarla y 
corregir cualquier desviación del estado deseado.
La retroalimentación puede ser positiva o negativa, pero los sistemas de control generalmente 
utilizan retroalimentación negativa para mantener la estabilidad.
Perturbaciones (Disturbances) 
Factores externos que afectan el rendimiento del sistema y que deben ser compensados por el 
controlador.
iii. Señales
Sistemas de control automático - Página 5 de 45Las señales son manifestaciones físicas de procesos naturales o artiﬁciales de diversas naturalezas.
Características comunes:
Los dispositivos, circuitos y sistemas electrónicos manipulan estas señales eléctricas para monitorear, 
regular y controlar diversos procesos.
Señal continua
Una señal continua es una función continua de una o varias variables. Ejemplos de estas señales son 
los distintos tipos de electro gramas usados en medicina, que son señales unidimensionales, ya que se 
representan por una o varias curvas en función del tiempo. Sin embargo, los distintos tipos de 
radiografías son señales bidimensionales y los resultados de la tomografía axial computarizada y la 
resonancia nuclear magnética son señales tridimensionales. 
Las señales continuas, entendidas como funciones continuas de una o más variables, son fundamentales 
en numerosos aspectos de estos sistemas. Estas señales representan fenómenos físicos que varían de 
manera continua en el tiempo y/o en el espacio, tales como temperatura, presión, velocidad, corriente 
eléctrica, entre otros.
Además, muchos de los métodos matemáticos y herramientas analíticas que se utilizan en el control 
de sistemas están especíﬁcamente desarrollados para tratar con señales continuas.
Dependencia de Variables: Las señales son funciones de una o más variables independientes.
Portadoras de Información: Contienen información sobre el comportamiento o la naturaleza del 
fenómeno físico en cuestión.
En un sistema de control, una señal se puede definir como una representaciónfísica de una cantidad variable que transmite información sobre el estado o elcomportamiento del sistema. 
Tipo de señal eléctrica Gráﬁca según tipo de señal eléctrica
Señal analógica 
Número inﬁnito de valores que tiene una 
variación continua en el tiempo. 
 
Señal digital 
Número  ﬁnito de valores que tiene una 
variación discreta de valores en el tiempo. 
 
Señal digital binaria 
Dos valores concretos:, 1 y 0. La señal eléctrica 
sólo puede adoptar dos niveles de tensión. 
 
Sistemas de control automático - Página 6 de 45Al abordar señales como funciones continuas de una o más variables, se facilita el uso de técnicas 
avanzadas de análisis y diseño, tales como la transformada de Laplace y la transformada de Fourier, 
que son indispensables para la resolución de problemas en el dominio del tiempo y de la frecuencia. 
Estas técnicas permiten descomponer y estudiar las señales en sus componentes fundamentales, 
facilitando la comprensión de su comportamiento y la implementación de estrategias de control 
adecuadas.
 Proceso analógico y proceso digital
El proceso analógico es aquel que involucra señales analógicas, es decir señales continuas. Dichas 
señales se deﬁnen en un intervalo de tiempo continuo y se describen por ecuaciones diferenciales.
El proceso digital involucra señales digitales, se representa por medio de variables discretas, es decir que 
pueden cambiar en valores discretos de tiempo. Dichos instantes, se notan como KT, o kt (k=0, 1, 2, ….). T 
es el período de muestreo.
En el estudio de sistemas de control, es fundamental comprender y manejar tanto los procesos 
analógicos como los digitales. Cada uno de estos enfoques ofrece ventajas únicas y se emplea en 
diferentes contextos para alcanzar objetivos especíﬁcos en el control y la automatización de sistemas.
Los procesos analógicos se caracterizan por el uso de señales continuas que varían de manera 
continua en el tiempo. Estas señales representan directamente las magnitudes físicas, como la 
temperatura, la presión, la velocidad y la corriente eléctrica. Los sistemas de control analógicos operan 
de manera continua y suelen emplear componentes electrónicos como ampliﬁcadores operacionales, 
resistencias, condensadores e inductores para procesar estas señales.
El estudio de procesos analógicos es esencial porque muchos fenómenos naturales y sistemas físicos son 
inherentemente analógicos. Comprender cómo trabajar con estas señales permite a los ingenieros de 
control diseñar sistemas que interactúen de manera precisa y eﬁciente con el mundo real. Las técnicas 
de análisis mencionadas como la transformada de Laplace y las ecuaciones diferenciales se utilizan 
ampliamente para modelar y diseñar sistemas de control analógicos.
Por otro lado, los procesos digitales implican el uso de señales discretas, que varían en pasos ﬁnitos 
en el tiempo. Estas señales se representan mediante valores binarios (0 y 1) y son procesadas por 
computadoras y microcontroladores. Los sistemas de control digital convierten las señales 
analógicas del mundo real en señales digitales a través de convertidores analógico-digitales (ADC), 
y luego procesan estas señales utilizando algoritmos implementados en software. 
El estudio de procesos digitales es crucial en la actualidad debido a la creciente adopción de tecnologías 
digitales en todos los aspectos de la vida moderna. Los sistemas de control digital ofrecen ventajas 
signiﬁcativas, como la capacidad de implementar algoritmos complejos, la ﬂexibilidad en el diseño y la 
facilidad de integración con otros sistemas digitales. Además, permiten la implementación de técnicas 
avanzadas de control, como el control predictivo y el control adaptativo.
 Integración de proceso analógico y digital
En muchos sistemas de control modernos, es común encontrar una integración de procesos analógicos y 
digitales. Esta integración permite aprovechar lo mejor de ambos mundos: la precisión y continuidad 
de las señales analógicas, junto con la ﬂexibilidad y potencia de procesamiento de las señales 
Sistemas de control automático - Página 7 de 45digitales. Por ejemplo, en un sistema de control industrial, los sensores pueden medir variables físicas 
de manera continua (analógica), pero el procesamiento y la toma de decisiones se realizan de manera 
digital.
iv. Lazo abierto. Lazo cerrado
Lazo abierto
La entrada se elige en base en la experiencia que se tiene con dichos sistemas para producir el valor de 
salida requerido, sin embargo, no se ve modiﬁcada por el cambio en las condiciones de operación 
externas. La principal diferencia es que no existe información que se alimente de regreso 
(retroalimentación).
Ventajas. Son más sencillos y en consecuencia de bajo costo, y con buena conﬁabilidad. Sin embargo, 
con frecuencia son inexactos, si se descomponen se reemplazan fácilmente. 
Un tostador automático es un sistema de control de lazo abierto, que está controlado por un regulador 
de tiempo. El tiempo requerido para hacer tostadas, debe ser anticipado por el usuario, quien no forma 
parte del sistema. El control sobre la calidad de la tostada (salida) es interrumpido una vez que se ha 
determinado el tiempo, el que constituye tanto la entrada como la acción de control. 
Lazo cerrado
Se tiene una señal de retroalimentación hacia la entrada desde la salida, la cual se utiliza para modiﬁcar 
la entrada de modo que la salida se mantenga constante a pesar de los cambios en las condiciones de 
operación.
Ventajas. Más exactos y menos sensible a las perturbaciones y a los cambios en las características de los 
componentes. La velocidad de respuesta se incrementa.
Un mecanismo de piloto automático y el avión que controla, forman un sistema de control de lazo 
cerrado (por realimentación). Su objetivo es mantener una dirección especíﬁca del avión, a pesar de los 
cambios atmosféricos. 
El sistema ejecutará su tarea midiendo continuamente la dirección instantánea del avión y ajustando 
automáticamente las superﬁcies de dirección del mismo (timón, aletas, etc.) de modo que la dirección 
instantánea coincida con la especiﬁcada. El piloto u operador, quien ﬁja con anterioridad el piloto 
automático, no forma parte del sistema de control.  
El climatizador de un automóvil. Una variación en la salida o en otra variable, se mide, y el controlador, 
modiﬁca la señal de control, para que se estabilice, el sistema, ante la nueva situación. El sistema o la 
planta se mide en todo momento. El control tiene información de cómo está la salida (Planta). 
Sistemas de control automático - Página 8 de 452. Clasiﬁcación de los sistemas de control
La clasiﬁcación de los sistemas de control es esencial para entender y diseñar estrategias efectivas de 
control que optimicen el rendimiento de los procesos automatizados. Clasiﬁcar los sistemas permite una 
mejor comprensión de sus características y comportamiento. Esta clasiﬁcación no solo facilita el análisis 
teórico de los sistemas, sino que también es crucial para seleccionar y aplicar las técnicas de control 
adecuadas.
i. Sistema lineal (L)
Principio de Homogenenidad, Proporcionalidad o Escabilidad
El sistema cumple con el principio de homogeneidad si la entrada multiplicada por un escalar 
produce una la salida del sistema multiplicada por el mismo escalar.
Principio de Superposición o Aditividad
El sistema cumple con el principio de superposición si dos entradas son sumadas y pasadas a través 
del sistema lineal, la salida será equivalente a la suma de las dos entradas evaluadas 
individualmente.
Un sistema se define como lineal si cumple con dos principios fundamentales: Principio de homogeneidad (proporcionalidad o escabilidad) Principio de superposición (o aditividad).
 
La entrada x del sistema 
lineal L da la salida y
. 
 
 
Si x es multiplicada por un escalar  α y es pasada a través 
del mismo sistema,  la salida también será multiplicada 
por  α. 
Sistemas de control automático - Página 9 de 45Las dos propiedades analizadas pueden enunciarse en una sola: 
Si las entradas x e y son multiplicadas por factores α y β, respectivamente, entonces la suma de 
estas entradas dará la suma de las salidas individualmente.
Ejemplos
La suma de la salida de cada entrada independiente coincide con la salida de las entradas sumadas. EL 
SISTEMA ES LINEAL
 
 
. 
 
 
 
 
. 
 
 
Las propiedades de homogeneidad y superposición que caracterizan un sistemalineal indican que el sistema responde de manera proporcional a las entradas yque la respuesta a la suma de múltiples entradas es igual a la suma de lasrespuestas individuales a esas entradas.
Sea f(x) = x / 2
Principio de Homogeneidad  
Principio de Superposición Análisis de la salida de 
cada variable por 
separado
 
Análisis de la salida a 
partir de la suma de 
dos variables
 
Sistemas de control automático - Página 10 de 45La suma de la salida de cada entrada independiente no coincide con la salida de las entradas sumadas. 
EL SISTEMA NO ES LINEAL.
ii. Sistema invariante en el tiempo (TI)
En un sistema invariante en el tiempo, ambas salidas serán idénticas, excepto que la segunda ﬁgura 
estará retrasada en t0.
Si un sistema es invariante en el tiempo puede ser descripto por ecuaciones diferenciales. Los 
sistemas invariantes en el tiempo son modelados con ecuaciones de coeﬁcientes constantes. Una 
ecuación diferencial con coeﬁcientes constantes signiﬁca que los parámetros del sistema no van 
cambiando a través del tiempo y que la entrada dará el mismo resultado independientemente del 
momento en que fue aplicado.
Ejemplos
Sea f(x) = x + 1
Principio de Homogeneidad  
Principio de Superposición Análisis de la salida de 
cada variable por 
separado
 
Análisis de la salida a 
partir de la suma de 
dos variables
 
Un sistema invariante en el tiempo TI (Time- Invariant) tiene la propiedad de quecierta entrada siempre dará la misma salida, independientemente del momentoen que fue aplicada al sistema.
 
La entrada está deﬁnida en 
un tiempo t
. 
  
La entrada está deﬁnida en un tiempo t0 
después 
Sea y(t) = x (t)
Sistemas de control automático - Página 11 de 45Sea x1(t) con salida y1(t) 
Si x2(t) = x1 (t-t0), se debe demostrar que las salidas son iguales, o sea y2(t) = y1 (t-t0)
a. Salida y1 (t-t0)
Dada x1(t) la salida y1(t) = x1(t) 
Si x1(t-t0) la salida es y1(t-t0) = x1(t-t0). 
b. Salida y2(t)
Dada x2(t) la salida y2(t) = x2(t) =  x1(t-t0).
Por lo desarrollado en los puntos a y b, se demuestra que y2(t) = y1 (t-t0). EL SISTEMA ES INVARIANTE 
EN EL TIEMPO.
Sea x1(t) con salida y1(t) 
Si x2(t) = x1 (t-t0), se debe demostrar que las salidas son iguales, o sea y2(t) = y1 (t-t0)
a. Salida y1 (t-t0)
Dada x1(t) la salida y1(t) = t. x1(t) 
Si x1(t-t0) la salida es y1(t-t0) = (t-t0). x1 (t-t0). 
b. Salida y2(t)
Dada x2(t) la salida y2(t) = t.x2(t) = t. x1(t-t0).
Por lo desarrollado en los puntos a y b, se demuestra que y2(t) <> y1 (t-t0). EL SISTEMA ES VARIANTE EN 
EL TIEMPO.
iii. Sistema lineal invariante en el tiempo (LTI)
Como los sistemas LTI son subconjuntos de los sistemas lineales, éstos obedecen al principio de 
superposición. El efecto de aplicar el tiempo invariante a la deﬁnición de sistema lineal de la sección 
anterior es el siguiente:
Sea y(t) = t.x (t)
 
 . 
  
Representa una versión escalada y desplazada 
en el tiempo de la entrada y salida respecto de la 
ﬁgura anterior
Sistemas de control automático - Página 12 de 45iv. Sistema causal
Esto signiﬁca que si la primera entrada es recibida en tiempo t0, el sistema no deberá dar ninguna 
salida hasta ese tiempo. Un ejemplo de un sistema no-causal puede ser aquél que al “detectar” que 
viene un entrada da la salida antes de que la entrada llegue.
Un sistema causal es un tipo de sistema en el cual la salida del sistema en cualquier instante de tiempo t 
depende únicamente de las entradas presentes y pasadas, y no de las futuras. 
Esta característica es esencial en la mayoría de los sistemas de control reales, ya que la información 
futura generalmente no está disponible.
La gráﬁca representa un sistema NO causal, donde la salida se produce antes que la entrada, la cual 
ocurrió después en el tiempo.
Ejemplos
v. Sistema inversible
Dicho de otra forma, un sistema es invertible si al observar su salida podemos determinar la 
entrada.
 
 
. 
  
Un sistema es causal si no depende de valores futuros de las entradas paradeterminar la salida.
y(n) = x(n)^2 Es un sistema no lineal y causal. 
y(n) = x(2.n) Es un sistema lineal y no causal.
Un sistema es invertible si distintas entradas producen distintas salidas.
Sistemas de control automático - Página 13 de 45Un sistema inversible es un sistema en el que, dado el conocimiento de la salida y el estado del 
sistema, es posible determinar de manera única la entrada que produjo esa salida. En otras palabras, 
un sistema inversible permite recuperar las entradas originales a partir de las salidas observadas.
Ejemplos
vi. Sistema sin memoria
Un sistema sin memoria depende únicamente de la entrada actual. 
Un sistema con memoria depende de las entradas y/o estados anteriores además de la entrada 
actual. El sistema guarda información sobre las entradas y/o estados anteriores, lo que le permite 
tener "memoria" de su comportamiento pasado.
Un sistema tiene memoria si su salida en el tiempo actual depende de entradas futuras. Aunque 
típicamente los sistemas con memoria dependen de entradas pasadas, en este caso especíﬁco donde la 
salida en el tiempo actual depende de entradas futuras, la dependencia de una entrada futura indica que 
el sistema necesita "recordar" o conocer algo que aún no ha ocurrido, lo cual implica una forma de 
"memoria" en un sentido más amplio.
Ejemplos
Sea y(t)= 2x(t).  Su sistema inverso es x(t)=1/2 y(t). Al interconectarlos en serie se obtiene la entrada 
original como salida. El sistema es inversible.
Sea  
Para este sistema, la diferencia entre dos valores sucesivos de salida es 
precisamente el último valor de entrada. Por tanto,  el sistema inverso es:
Sea y(t)=seno(x(t)). Esta función es periódica con período 2π, lo que signiﬁca que para múltiples 
valores de x(t), el seno puede tener el mismo valor. Por ejemplo: seno (π/2) = seno  (5π/2) = 1. El 
sistema NO es inversible.
Un sistema es sin memoria si su salida para cada valor de su variableindependiente depende sólo de la entrada en ese mismo instante de tiempo. 
Sea y(t)= 2x(t). Sistema sin memoria.
Sistemas de control automático - Página 14 de 45vii. Sistema en serie y paralelo
3. Modelo de sistema en el espacio de estado
En el análisis y diseño de sistemas de control, se puede abordar la representación de los sistemas desde 
dos perspectivas: la representación externa y la representación interna. 
La representación externa de un sistema se centra en la relación directa entre las señales de 
entrada y salida. Este enfoque se utiliza para comprender cómo las entradas (o estímulos) afectan las 
salidas (o respuestas) del sistema. La función de transferencia es una herramienta comúnmente 
empleada en esta representación, la cual proporciona una descripción matemática del sistema en el 
dominio de la frecuencia. La función de transferencia es particularmente útil para el análisis de la 
estabilidad y la respuesta en frecuencia de los sistemas lineales e invariantes en el tiempo (LTI).
Sea
Sistema con memoria.
Sea y(t)= 2x(t+1), para t >= 0. Sistema con memoria.
Un sistema en serie representa una configuración donde la salida de un bloquese convierte en la entrada del siguiente, formando una cadena lineal de bloques. Un sistema en paralelo tiene bloques que reciben la misma entradasimultáneamente, y sus salidas se combinan, generalmente sumándose, paraformar la salida total del sistema.
Sistema LTI en serie 
Si dos o más sistemas están en serie uno con 
otro, el orden puede ser intercambiado sin 
que se vea afectada la salida del sistema. Los 
sistemas en series también son llamados como 
sistemas en cascada. 
Sistema LTI en paralelo
Si dos o más sistemas LTI están en paralelo con 
otro, un sistema equivalente es aquél que está 
deﬁnido como la suma de estos sistemas 
individuales. 
Sistemas de control automático - Página 15 de 45La representación interna, por otro lado, se enfoca en la dinámica interna del sistema mediante el 
uso de variables de estado. Estas variables proporcionan una descripción completa del estado del 
sistema en cualquier momento y permiten predecir su comportamiento futuro basado en el estado 
actual y las entradas presentes. El modelo en espacio de estados es la herramienta principal en esta 
representación, expresado mediante un conjunto de ecuaciones diferenciales de primer orden. El 
modelo en espacio de estados es especialmente potente para sistemas complejos y multivariables, ya 
que permite una descripción detallada de la dinámica interna del sistema.
El estado de un sistema dinámico se deﬁne como la menor colección de variables reales cuyo valor en 
un determinado instante, resume el pasado dinámico del sistema y es suﬁciente para predecir su 
evolución futura. 
La descripción interna establece entre las señales de entrada y salida una relación indirecta, la cual se 
formaliza a través de las denominadas ecuaciones de estado y de salida que escribimos, para el caso de 
variable continua:
x es el vector de estado, es decir, la mínima colección de n variables de estado necesarias para describir 
completamente el sistema, dispuestas en un vector.
Ф la función de transición de estados que permite determinar la evolución del vector de estado en un 
determinado instante a partir del conocimiento del estado actual y de las entradas de control aplicadas 
u.
ψ la función de lectura o salida que suministra el valor de las salidas actuales y en base a esta misma 
información.
En general la dimensión de los vectores u e y puede ser cualquiera. Si en particular ambos se reducen a 
un escalar (p = m = 1) el sistema se denomina SISO (single-input single-output). En el caso que ambas 
dimensiones fuesen mayores a la unidad, el sistema se denomina MIMO (multiple-input multiple-
output).
La representación interna (representación por variables de estado) relacionarámatemáticamente las salidas con las entradas a través de las variables de estadocomo paso intermedio.Es un método que trabaja en el dominio del tiempo.
 x’(t)=Ф(x(t),u(t))
y(t)=ψ(Ф(x(t),u(t))
Las ecuaciones de x’(t) se llaman ecuaciones de estado.Las ecuaciones de y(t) se llaman ecuaciones de salida.
Sistemas de control automático - Página 16 de 45El conocimiento del vector de estado en un determinado instante t0 junto con las entradas aplicadas al 
sistema a partir de ese momento, permite conocer el estado y la salida del sistema en cualquier instante 
posterior t. El espacio de estados de un proceso se deﬁne como el conjunto que contiene a todos los 
posibles valores del vector de estado, el cual es un espacio vectorial n dimensional.
En los sistemas dinámicos lineales, las funciones de transición y de lectura son aplicaciones lineales, 
donde x es un vector de n variables de estado, u un vector de p entradas, y un vector de m salidas, A la 
matriz dinámica de dimensión n x n, B la matriz de mando o de control de dimensión n x p, C la 
matriz de salida o lectura de dimensión m x n, y D la matriz de inﬂuencia directa de la entrada sobre 
la salida, de dimensión m x p que suele ser nula en la mayoría de aplicaciones.
Si además, el sistema es invariante en el tiempo, las matrices A, B, C y D serán constantes, por lo que el 
sistema:
Admite la siguiente representación matricial
Esta representación matricial puede escribirse como un conjunto de ecuaciones diferenciales de 
primer orden
También una ecuación diferencial de orden n, lineal, con coeﬁcientes constantes, puede llevarse a la 
forma matricial.
A partir de la ecuación diferencial de orden n:
Se deﬁne:
 x’(t)=Ax(t) + Bu(t) 
y(t)=Cx(t) + Du(t)
Sistemas de control automático - Página 17 de 45La representación matricial de este sistema es:
Para hacer un diagrama de esta situación, consideremos:
es decir, x2(t) es la derivada de x(t). En sentido inverso, es posible obtener x1(t) pues 
Esto signiﬁca que para recuperar x(t) a partir del conocimiento de su derivada primera, se debe integrar 
una vez.
Del mismo modo,
Si se desea recuperar  x1(t), se debe integrar dos veces.
Generalizando, dada x^n, para recuperar x(t) se debe integrar n veces.
Si consideramos la ecuación homogénea, es decir, f(t)=0
Sistemas de control automático - Página 18 de 45En forma más general:
La teoría de control moderna se basa en la descripción del modelo del sistema por medio de n 
ecuaciones diferenciales de primer orden que pueden combinarse en una ecuación diferencial vectorial-
matricial de primer orden.
La complejidad de estas ecuaciones no aumenta de forma cualitativa con el incremento del número de 
variables de estado, de entradas o de salidas. Además, los métodos del espacio de estado son 
particularmente adecuados para los cálculos en computadora debido a su representación matricial.
Ejemplos
El sistema de ecuaciones correspondiente es:
Una empresa de desarrollo de software cuenta con módulos que están en Prototipo, es decir, modelos 
en desarrollo evolutivo. Mediante el Desarrollo (incluye programación, implementación y prueba) los 
Dada la siguiente representación gráﬁca
Ejemplo Modelo de Proyecto con Módulos en Prototipo y Producción
Sistemas de control automático - Página 19 de 45mismos pasan a Producción. Se estima que por semana el 13% de los módulos en Prototipo pasan a 
Producción. Inicialmente los 750 proyectos están en prototipo y no hay ningún módulo en Producción.
El modelo representado en software Vensim responde a:
k=0.13 - Units: 1/semanas
Modulo en Producción= INTEG (Desarrollo,0) - Units: módulos 
Modulo en Prototipo= INTEG (-Desarrollo,750) - Units: módulos
Planteamos el modelo como un sistema de ecuaciones diferenciales de primer orden:
X1(t): Módulos en Prototipo
X2(t): Módulos en Producción
Modelo de masa simple, resorte, y amortiguador
Sistemas de control automático - Página 20 de 45Ante la presencia de bacterias, el cuerpo fabrica anticuerpos que la destruyen. Los anticuerpos se 
fabrican a una tasa proporcional al número de anticuerpos y las bacterias se reproducen a una 
velocidad proporcional a la cantidad de bacterias que hay en ese momento. Las ecuaciones del 
problema son:
X1(t) = Cantidad de ANTICUERPOS en el instante t
x2(t) = Cantidad de BACTERIAS en el instante t
Se aplica el método de la Transformada inversa de Laplace para obtener la solución del sistema:
La ecuación diferencial de esta planta es:
 F = Mx'' + bx' + kx 
M: masa en (Kg)
b: constante de amortiguador 
k: constante de resorte 
x: desplazamiento de la masa M
F: reacción del resorte y/o amortiguador producida por el desplazamiento de la masa
La ecuación matricial resultante es:
La gráﬁca representa un modelo hidráulico de tanques interconectados en forma paralela
La ecuación matricial resultante es:
Modelo de anticuerpos y bacterias
 
  
 Proponemos a=0.1 y x(0)=10
 
Sistemas de control automático - Página 21 de 45Cada tanque estará representado por una variable de estado. El modelo se describirá por medio de las 
variables x1, x2 y x3 que representa la cantidad de sal en tanque 1, 2 y 3 respectivamente en el instante t.
Utilizamos la ecuación diferencial más simple para representar matemáticamente este problema, que es 
la primera derivada de una variable. Es de gran importancia para modelar sistemas continuos, ya que 
representan la manera en que muchos factores crecen o decaen en función de una tasa determinada.
Las cantidades iniciales de sal en los tres tanques de salmuera en libra son: x1(0) = 15, x2(0) = x3(0) = 0
El sistema de ecuaciones es:
Sustituyendo los valores en las ecuaciones se obtiene:
 
 
Modelo de tres tanques
En la siguiente ﬁgura se presentan tres tanques de salmuera que 
contienen V1, V2 y V3 galones de salmuera (1 galón = 3,785 litros). En el 
tanque 1 ﬂuye agua dulce, en tanto que ﬂuye salmuera del tanque 1 al 2, 
del tanque 2 al 3 y fuera del tanque 3. 
Sea xi(t) la cantidad (en libras) de sal en el tanque i al tiempo t (i=1,2,3). Si 
cada una de las velocidades de ﬂujo son r galones por minuto, determinar 
las cantidades de sal al tiempo t en los tanques de salmuera. 
ki = r / Vi. Condiciones Iniciales: x1(0) = 15, x2(0) = x3(0) = 0
V1=20, V2=40, V3=50; r=10 (gal/min).
 Encontrar la cantidad de sal en cada tanque en el instante t >= 0.
Sistemas de control automático - Página 22 de 45La solución de un sistema de la forma x’(t)=Ax(t), tal como el que se ha desarrollado, se puede resolver 
por medio de la Transformada de Laplace.
La solución indica la cantidad de sal en cada tanque para t>0. La gráﬁca de la evolución de cada tanque 
es:
La representación de este modelo por medio del Diagrama de Simulación es:
El tanque 1 es inﬂuencia por el ﬂujo 1, cuya ecuación queda representada por x’1=-k1x1
El tanque 2 es inﬂuencia por el ﬂujo 1 y 2, cuya ecuación queda representada por x’2= k1x1 - k2x2
El tanque 3 es inﬂuencia por el ﬂujo 2 y 3, cuya ecuación queda representada por x’3=  k2x2 - k3x3
Sistemas de control automático - Página 23 de 454. Ejercitación
1. Tache la opción que no corresponda en cada enunciado y complete según se solicite para obtener 
proposiciones verdaderas.
SECCIÓN PRÁCTICA
a. Sea y(n)=x (-n)
Al evaluar la función para n=2 y n=-2, se puede aﬁrmar que el sistema es causal/no causal.
b. Sea
 
y(2) depende de x(__), esto implica que el sistema es causal/no causal. En cambio, si
 
y(2) depende de x(__), esto implica que el sistema es causal/no causal.
c. Los sistemas físicos de tiempo real son causales/no causales dado que el tiempo sólo se 
desplaza hacia adelante.
d.  
La salida depende del valor de la entrada en _______________, por lo que el sistema con/sin memoria.
e.  
La función inversa de T es _______________, al introducir la señal de salida del original nos 
devuelva la señal de entrada, es decir el sistema es _____________. 
f.  
Al introducir la señal de salida del original es posible/no es posible obtener la señal de entrada, es decir el sistema es _____________. 
Sistemas de control automático - Página 24 de 452. Elija una opción y justiﬁque. Sea:
El sistema es:
a) Lineal/ Causal /Invariante.   
b)  No Lineal/ Causal / Variante.
3. De acuerdo al siguiente enunciado, realice el modelo correspondiente. 
La ﬁgura muestra un Sistema eléctrico de doble recinto -sistema térmico-. El sistema debe mantener y 
ajustar las temperaturas de los recintos acotándolas en ciertos valores, teniendo en cuenta algunos 
parámetros físicos de los recintos. 
Estos recintos contienen ﬂuidos que no afectan al modelo propuesto y sus propiedades físicas y químicas 
no varían y tampoco hay entrada o salida de ﬂuido dentro de los recintos en el período de ensayo. 
El sistema modelado debe mostrar la interacción de los recintos con la entrada (resistencia eléctrica), que 
solo afecta al recinto exterior (según ﬁgura). 
Como se ve en el modelo, los dos recintos pierden temperatura, pero parte de la energía es absorbida 
por el otro recinto. Como se mencionó, el recinto exterior (x2 ) recibe la energía de la entrada, pero del 
mismo modo éste recibe la energía calórica que aporta el ambiente exterior. 
Considerando constante la temperatura ambiente, se compensa este término con el valor - 0,25Tamb.
g. Los sistemas _____________ son aquellos cuyas señales son continuas en el tiempo y pueden 
describirse mediante ecuaciones diferenciales/en diferencias. 
Los sistemas _____________ son aquellos en los cuales una o más variables pueden cambiar 
sólo en valores discreto de tiempo y pueden describirse mediante ecuaciones _____________
h. Sea y(n) = n. x(n)  , es un sistema lineal/no lineal, variante/invariante en el tiempo, causal/no causal, estable/inestable, inversible, no inversible.
i.  
¿Es una función lineal?
Sistemas de control automático - Página 25 de 45Se tomará como salida la temperatura del recinto interior .
Se toman en cuenta los siguientes parámetros:
Condiciones iniciales:
Obtenga:
a) Descripción del modelo mediante Ecuaciones de Estado. Aplicar condiciones iniciales y obtener el 
nuevo modelo.
b) Representación matricial del sistema.
4. Tomamos el ejemplo del modelo de teoría de masa - resorte y codiﬁcamos con MatLab para obtener:  
4.1. Forma matricial,
4.2. Solución de sistema.
4.3. Gráﬁcas de la solución del sistema
5. Ejemplo del Planteo de un modelo matemático para sistema continuo. (Homework)
u(t) es la cantidad de calor de entrada al recinto .(calentador eléctrico). 
T0, Tj, Ti son las temperaturas en el exterior del horno (ambiente), en el primer recinto y en el recinto 
interior respectivamente.
Ci, Cj son las capacidades caloríﬁcas del espacio interior y del exterior respectivamente. 
 hi, hj son los coeﬁcientes de transmisión de calor para la superﬁcie interior y exterior 
respectivamente. 
u(t)=0,5 
 T0=-0,25Tamb.
 Ci=2; Cj=0.75
 hi,=0.5:  hj =2
Sistemas de control automático - Página 26 de 45Sistemas de control automático - Página 27 de 455. Introducción a la aplicación MatLab
i. ¿Qué es Matlab? Características Principales
(Software Matemático Con Entorno Integrado)
El software MatLab se desarrolló como un “ Laboratorio de matrices”, pues su elemento básico 
es una matriz. Es un sistema interactivo y un lenguaje de programación de cómputos cientíﬁco y 
técnico en general. MATLAB es el nombre abreviado de “MATrix LABoratory”. Es un programa 
para realizar cálculos numéricos con vectores y matrices. Como caso particular puede también 
trabajar con números escalares, tanto reales como complejos.  
MATLAB es un lenguaje de computación técnica de alto nivel y un entorno interactivo para 
desarrollo de algoritmos, visualización de datos, análisis de datos y cálculo numérico. Con 
MATLAB, podrá resolver problemas de cálculo técnico más rápidamente que con lenguajes de 
programación tradicionales, tales como C, C++ y FORTRAN. Puede usarlo en una amplia gama de 
aplicaciones que incluyen procesamiento de señales e imágenes, comunicaciones, diseño de 
sistemas de control, sistemas de prueba y medición, modelado y análisis ﬁnanciero y biología 
computacional. Los conjuntos de herramientas complementarios (colecciones de funciones para 
propósitos especiales, que están disponibles por separado) amplían el entorno de MATLAB 
permitiendo resolver problemas especiales en estas áreas de aplicación. Además, contiene una 
serie de funciones para documentar y compartir su trabajo. Puede integrar su código de 
MATLAB con otros lenguajes y aplicaciones, y distribuir los algoritmos y aplicaciones que 
desarrollo usando MATLAB.
Características Principales
 1. Lenguaje de alto nivel para cálculo técnico 
2. Entorno de desarrollo para la gestión de código, archivos y datos 
SECCIÓN PRÁCTICA CON SOFTWARE
Sistemas de control automático - Página 28 de 453. Herramientas interactivas para exploración, diseño y resolución de problemas iterativos 
4. Funciones matemáticas para álgebra lineal, estadística, análisis de Fourier, ﬁltraje, 
optimización e integración numérica 
5. Funciones gráﬁcas bidimensionales y tridimensionales para visualización de datos 
6. Herramientas para crear interfaces gráﬁcas de usuario personalizadas 
7. Funciones para integrar los algoritmos basados en MATLAB con aplicaciones y lenguajes 
externos, tales como C/C++, FORTRAN, Java, COM y Microsoft Excel.
ii. Respecto de la Instalación y sus Directorios
Las nuevas versiones son fáciles de instalar. Pero es importante tener en cuenta que el núcleo 
fundamental de matlab se encuentra en los subdirectorios BIN y MATLAB. En BIN se encuentran 
los programas ejecutables. Es necesario comentar que matlab cuenta con dos tipos básicos de 
funciones:
 Como se desprende del árbol de directorios, los toolboxes se suelen instalar en forma de 
subdirectorios en el disco duro, colgando del subdirectorio TOOLBOX. En ellos se encuentran 
también funciones .m orientadas al control de sistemas. Ademés, se pueden incorporar otros 
toolboxes (signal processing, image processing, robust control, non-linear control,system 
identiﬁcation, etc), e incluso funciones propias del usuario.
 
Funciones denominadas built-in functions: Son funciones que matlab tiene incorporadas 
internamente y por tanto no son accesibles al usuario.
Funciones llamadas m functions: Son funciones cuyo código es accesible. Las que se 
encuentran en el subdirectorio MATLAB son las básicas para el funcionamiento del sistema.
Sistemas de control automático - Página 29 de 45matlab\general - Comandos de propósito general
matlab\ops - Operadores y caracteres especiales
matlab\lang - Constructores del lenguaje de programación
matlab\elmat - Matrices elementales y manipulación matricial
matlab\elfun - Funciones matemáticas elementales
matlab\specfun - Funciones matemáticas especiales
matlab\matfun - Funciones matriciales - ´algebra lineal numérica
matlab\datafun - Análisis de datos y transformada de Fourier
matlab\polyfun - Interpolación y polinomios
matlab\funfun - Funciones de funciones y métodos para ODE
matlab\sparfun - Funciones para matrices dispersas
matlab\graph2d - Gráﬁcos en dos dimensiones
matlab\graph3d - Gráﬁcos en tres dimensiones
matlab\specgraph - Gráﬁcos especializados
matlab\graphics - Manipulación de gráﬁcos
matlab\uitools - Herramientas de interfaz gráﬁca de usuario (GUI)
matlab\strfun - Cadenas de caracteres
matlab\iofun - Funciones para entrada/salida de ﬁcheros
matlab\timefun - Hora y fecha
matlab\datatypes - Tipos de datos y estructuras
matlab\winfun - Ficheros de interfaz con Windows (DDE/ActiveX)
matlab\demos - Ejemplos y demostraciones
simulink\simulink - Simulink
simulink\blocks - Librería de bloques de Simulink
simulink\simdemos - Ejemplos y demostraciones de Simulink
toolbox\control - Paquete de Control de Sistemas
Sistemas de control automático - Página 30 de 45iii. Misceláneas De Matlab Respecto Del Entorno De Trabajo
1. Con el comando path puede comprobarse cuáles son las localizaciones de los ﬁcheros y programas con los que 
va a trabajar matlab, pudiendo añadirse nuevos subdirectorios (incluso personales) a conveniencia. La forma más 
cómoda de interactuar con dichas localizaciones es mediante la opción File/Set-Path... en el menú de la ventana de 
comandos.
 2. Para poder usar cualquier función .m, como por ejemplo las contenidas en el paquete de control, bastará con 
que el camino \matlabxx\toolbox\control esté incluido en el path de matlab (cosa que ocurrirá si el paquete se 
instaló adecuadamente).
 3. Por otro lado, matlab comienza trabajando, por defecto, en el subdirectorio matlabxx\work. Si queremos 
cambiar de directorio de trabajo en cualquier momento, podemos hacerlo con el comando cd camino. Puede 
utilizarse el nombre completo del comando si se desea: chdir. Cabe decir que todas las funciones .m que existan en 
el directorio de trabajo serán localizadas sin necesidad de tener que incluir dicho directorio en el path de matlab.
 4. El comando pwd nos indica cuál es el directorio de trabajo actual.
 5. Para mostrar el contenido del directorio de trabajo, se pueden emplear los comandos dir ó ls. El comando 
delete nombre-ﬁchero puede emplearse para eliminar un archivo del directorio de trabajo. Asimismo, se pueden 
realizar operaciones típicas de línea de comandos del sistema operativo DOS, introduciendo el comando 
correspondiente precedido por el símbolo ”!”.
 6. Resulta interesante tener en cuenta que la línea de comandos de matlab posee ”memoria” y podemos recuperar 
comandos introducidos previamente, haciendo uso de las teclas de movimiento de cursor arriba y abajo. Para una 
localización más eﬁcaz de algún comando introducido previamente, podemos teclear los primeros caracteres del 
mismo antes de usar el cursor arriba y sólo buscará entre los comandos ya introducidos aquéllos cuyos primeros 
caracteres coincidan con los introducidos.
 7. Otra posibilidad que se ofrece es la de introducir varios comandos en una misma línea de la ventana de 
comandos, separados por coma o punto y coma.
 8. Puede ”limpiarse” el contenido de la ventana de comandos mediante la instrucción clc. Pero si se quiere limpiar 
el contenido de la memoria completo incluso el de las variables creadas hasta el momento se debe utilizar clear all.
 9. El símbolo % sirve para introducir comentarios. Todo lo escrito desde ese símbolo hasta el ﬁnal de la línea será 
ignorado por el intérprete de matlab.
 10. Si se quiere guardar toda la sesión en un archivo, basta usar el comando diary nombrearchivo. Dicho archivo 
contendrá los comandos introducidos y los correspondientes resultados. Cuando no se quiera seguir almacenando 
la información se introducirá diary oﬀ.
toolbox\local - Librería de funciones locales
 
Sistemas de control automático - Página 31 de 45 11. Si se desean almacenar todas las variables de memoria en un ﬁchero, junto con sus valores actuales, se usa el 
comando save nombre-ﬁchero. Esto crea un ﬁchero binario en el directorio de trabajo actual con el nombre 
introducido y con extensión .mat. Si no se da el nombre del ﬁchero, se crea uno llamado matlab.mat. En caso que 
se desee guardar en un ﬁchero con formato ascii, se introducirá en el comando un modiﬁcador: save -ascii 
nombre ﬁchero. Si sólo se quieren guardar una serie de variables, se introducirá save nombre-ﬁchero nombre-
variables separadas por espacios.
12. Para recuperar los ﬁcheros generados con el comando save se utilizará load nombre-ﬁchero.
13. La salida del sistema se efectúa al introducir quit ó exit, o simplemente cerrando la ventana de comandos.
14.Los elementos de cada ﬁla de una matriz se pueden introducir separados por espacios o por comas, 
indistintamente.
15. Para separar ﬁlas de una matriz se usa “;” o un simple retorno de carro. 
16. Los elementos de vectores y matrices pueden ser reales, complejos e incluso expresiones, como vemos en el 
caso del último elemento del vector C.
17. Si se está introduciendo un comando o conjunto de ellos cuya sintaxis sea muy larga, se puede continuar en la 
siguiente línea introduciendo al ﬁnal de la actual tres puntos seguidos (...).
18. Las variables a las que se asignan resultados, así como las variables de entorno, se almacenan en lo que se 
denomina el espacio de trabajo de matlab (workspace).
19. Además de variables numéricas, escalares o matriciales, en matlab pueden usarse cadenas de caracteres. Para 
ello se delimita una secuencia de caracteres mediante apóstrofes:  cadena = ’ejemplo de cadena de caracteres’.
 20. El comando help, muestra la ayuda de MatLab. Se puede utilizar help (solo) o help “lo que se desea averiguar”.
 iv. Entorno De Trabajo De Matlab
Los componentes más importantes del entorno de trabajo de MATLAB son el editor de caminos de búsqueda (Path 
Browser), el editor y depurador de errores (Editor & Debugger) y el visualizador del ambiente de trabajo (Workspace 
Browser). 
 Path Browser. Matlab puede llamar a una gran variedad de funciones, tanto propias como programadas por los 
usuarios. A veces, puede incluso haber funciones distintas que tienen el mismo nombre. Por tanto, es interesante 
saber cómo busca Matlab cualquier función que se le pida que ejecute. La clave es el camino de búsqueda (search 
path) que el programa utiliza cuando encuentra el nombre de una función. El search path es una lista de directorios 
que se puede ver y modiﬁcar mediante la orden path, o utilizando el Path Browser (Submenú Set Path en el menú 
File).
 El directorio actual. El concepto de directorio actual o de trabajo es crucial en Matlab. Es el directorio donde el 
usuario debe guardar los diferentes archivos que genere en las sesiones, para que Matlab pueda detectarlos. El 
contenido de dicho directorio puede obtenerse con la orden dir. Para cambiar el directorio actual se utiliza la orden 
cd (Change Directory ) seguido del nombre del nuevo directorio. Ejecutando cd .., se sube un nivel en la jerarquía de 
directorios. Estos cambios también pueden hacerse de un modo gráﬁco.
Sistemas de control automático - Página 32 de 45A continuación se resumen brevemente los principales elementos disponibles en esta ventana, cuyo aspecto, por 
defecto, se muestra en la siguiente Figura. Esta ventana puede variar de acuerdo a la versión pero en escencia es lo 
mismo.
 Editor/Debbuger. En Matlab tienen particular importancia los M-archivos, esto es, archivos con la extensión “*.m”, 
los cuales son archivos de texto ASCII que contienen un cierto conjunto de órdenes de Matlab. La importancia de 
estos archivos es que al teclear su nombre en la línea de órdenes de Matlab, se ejecutan todas las órdenes 
contenidas en dicho archivo. Matlab dispone de un editor propio que permite tanto crear y modiﬁcar estos archivos 
(proceso de edición-Editor ), como ejecutarlos paso a paso para detectar errores (proceso de depuración-
Debugger ).
Workspace Browser. El espacio de trabajo (Workspace) de Matlab es el conjunto de variables que en un 
determinado momento están deﬁnidas en la memoria del programa. Para obtener información sobre el workspace 
se pueden utilizar las órdenes who y whos. La segunda proporciona una información más detallada que la primera.
Entornos de trabajo para las versiones 2015 y 2017
Sistemas de control automático - Página 33 de 45v. Operadores 
  vi. Tipos De Variables
Sistemas de control automático - Página 34 de 45 vi. Variables especiales
 
vii. Sentencias De Control
viii. Principales Funciones Matemáticas 
Sistemas de control automático - Página 35 de 45ix. Programas
En Matlab hay dos tipos de programas: scripts y las funciones.
 Scripts.
 •Es simplemente una secuencia de órdenes de Matlab. 
•No tiene parámetros (argumentos) de entrada ni de salida. 
•Las variables deﬁnidas en un guión son globales, es decir, después del llamado del guión, estas variables siguen 
existiendo.
•Tienen la extensión .m
 Funciones
 •Tiene parámetros (argumentos) de entrada y de salida si se desea. 
•Las variables deﬁnidas dentro de la función dejan de existir una vez ﬁnalizada la ejecución de la función.
•Se deben guardar con el mismo nombre de la función y también tienen la extensión .m.
 
Ejemplo: Guardar el scripts siguiente con el nombre scripts1.m y ejecutar.
% evalúa la función y = x^2 para valores de x entre 0 y 10 a pasos de 1.
clear all; 
clc;
a = 0;b = 10;
dx = 1;
Sistemas de control automático - Página 36 de 45x = a:dx:b;
y = x.^2
 RTA.
y =  0 1 4 9 16 25 36 49 64 81 100
 
x. Actividad
6. Gráﬁcos
i. Algunos comandos
Sistemas de control automático - Página 37 de 45A continuación, se listan algunos comandos para graﬁcar en MatLab:
Sistemas de control automático - Página 38 de 45Sistemas de control automático - Página 39 de 45ii. Práctica de comandos
GINPUT, GTEXT
Un comando útil en Matlab es ginput. Ver >>help gineput (También gtext). El próximo programa dibuja y=x(x-1) sin 
x, luego sobre la ﬁgura, permite tomar 6 puntos con el ratón, que al ﬁnal muestra en la pantalla.
f='x*(x-1) *sin(x)'; ezplot(f);[x,y]=ginput(6); [x,y]
%Ahora con gtext
gtext({'This is the ﬁrst line','This is the second line'})
gtext({'First line','Second line'},'FontName','Times','Fontsize',12)
 PLOT (X, Y, S)
x = -pi:pi/10:pi;
 y = tan(sin(x)) - sin(tan(x));
plot(x,y,'--rs','LineWidth',2,... % lineas de color rojo y cuadrados
 'MarkerEdgeColor','k',... % remarcados en negro 
 'MarkerFaceColor','g',... %rellenos de color verde
 'MarkerSize',10)
 GRID, XLABEL, YLABEL
x=0:pi/25:pi;y=sin(x); z=x.*x; plot(x,y,x,z); 
grid;xlabel ('x '); ylabel ('valores '); 
Sistemas de control automático - Página 40 de 45ﬁgure(gcf) % crea ventana y retorna control
 HOLD ON, HOLD OFF
x=-4:0.05:4;
y=exp(-0.5*x).*sin (5*x);
ﬁgure (1); plot(x,y, 'r');
xlabel ('eje x'); ylabel (' eje y');
hold on;
y=exp(-0.5*x).*cos (5*x);
plot(x,y, 'm');
grid; legend ('dos exponenciales…');
hold oﬀ
 MESH
 close all % cierro ﬁgura
 u=-8:0.5:8; v=u;
 [U,V]=meshgrid(u,v);
 R=sqrt(U.*U+V.*V)+eps;
 W=sin(R)./R;
 mesh(W)
 SUBPLOT
En una misma ﬁgura puede ponerse más de una línea empleando el comando subplot. El comando subplot le 
permite separar la ﬁgura en tantas ﬁguras como se quiera, y ponerlas todas en una ﬁgura. 
a)
x=[-3:0.4:3]; 
 y=x; 
 close 
 subplot(2,2,1) 
 ﬁgure(gcf), ﬁ=[-6*pi:pi/20:6*pi]; 
 plot3(ﬁ.*cos(ﬁ),ﬁ.*sin(ﬁ),ﬁ,'r') 
 [X,Y]=meshgrid(x,y); 
 
Sistemas de control automático - Página 41 de 45 b) Por ejemplo, suponga quisiera ver una senoide, un coseno , y una onda tangente graﬁcadas en la misma ﬁgura, 
pero no en los mismos ejes. El siguiente código lo hará:
  x = linspace(0,2*pi,50);
 y = sin(x);
 z = cos(x);
 w = tan(x);
 subplot(2,2,1)
plot(x,y)
subplot(2,2,2)
plot(x,z)
subplot(2,2,3)
plot(x,w)  
SUBPLOT
x = 0:0.1:2*pi;
y1 = sin(x);
y2 = cos(x);
 subplot(2,1,1)
plot(x,y1)
title('y = sin(x)');
subplot(2,1,2)
plot(x,y2)
title('y = cos(x)');
 AXIS
a) Graﬁque la función y=exp(5t)-1:
 t=0:0.01:5;
y=exp(5*t)-1;
plot(t,y)
Sistemas de control automático - Página 42 de 45 Como puede ver, el gráﬁco tiende a inﬁnito. Atendiendo al eje y (escala: 8e10), es claro que no puede verse mucho 
en este gráﬁco. Para tener una mejor idea de lo que está pasando en el ploteo, miremos el primer segundo de esta 
función. Escriba el siguiente comando en la ventana de comandos del Matlab. 
axis([0, 1, 0, 50])
iii. Comandos destacados
El siguiente cuadro representa un breve resumen de algunos de los comandos del software de aplicación  
a tener en cuenta para esta guía:
Sistemas de control automático - Página 43 de 451. Obtenga la representación en MatLab del sistema para el:
ss()
 
Create state-space model, convert to state-space model (modelo en el espacio de 
estado)
initial() Respuesta libre del sistema. /condiciones iniciales para la respuesta temporal.
Sys Continuous-time dynamic system model (except frequency response data models). 
sys can represent a SISO or MIMO system, except that the 'matched'discretization 
method supports SISO systems only.
sys can have input/output or internal time delays; however, the 'matched' and 
'impulse' methods do not support state-space models with internal time delays.
The following identiﬁed linear systems cannot be discretized directly:
· idgrey models with FcnType is 'c'. Convert to idss model ﬁrst.
· idproc models. Convert to idtf or idpoly model ﬁrst.
For the syntax [sysd,G] = c2d(sys,Ts,opts), sys must be a state-space model.
 Crea un objeto de tipo sistema. Ejemplos:
– sys = tf(num,den) 
– sys = zpk(ceros,polos,k)
– sys = ss(A,B,C,D) 
Conversión 
entre 
modelos.
 
SECCIÓN PRÁCTICA COMPETENCIAS
xx Ejercitación
Sistemas de control automático - Página 44 de 45**Modelo del ejercicio de los 3 tanques 
**Modelo de masa simple, resorte, y amortiguador
Se solicita: 
a- representación matricial, solución del sistema mediante laplace y gráﬁca de la solución del sistema.
b- Caracterización de cada sistema
2. Representa la respuesta del sistema térmico de los recintos (evaluando solo a x1 ) frente a un impulso 
con las condiciones iniciales siguientes: (graﬁque)
» x0 = [20 ; 100] % suponiendo temperaturas iniciales de 20 y 100 grados en cada recinto.
Se recomienda la utilización de: ss(), initial().
Sistemas de control automático - Página 45 de 45
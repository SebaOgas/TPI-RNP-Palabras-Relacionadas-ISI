Preguntas Unidad 3 Ingeniería y Calidad de Software  
1. ¿Qué es la gestión de configuración? ¿Quién lo hace? ¿Qué se obtiene? ¿Qué 
incluye?  
Son actividades diseñadas para controlar el cambio, un proceso para establecer y 
mantener la integridad de los productos de trabajo. Lo hacen todos los que estén 
en el desarrollo de tareas. Se obtiene el plan de la GCS, que define la estrategia 
del proyecto. 
2. ¿A qué se define como “Integridad del producto”?  
Es saber exactamente lo que se le ha entregado al cliente, y saber el estado y 
contenido de las líneas base y elementos de configuración. 
3. ¿Cuáles diferencias hay entre mantenimiento del software y configuración del 
software?  
Mantenimiento Configuración 
Actividades de ingeniería de software Actividades de seguimiento y control 
Después de la entrega Mientras se desarrolla 
 
4. ¿Qué se entiende por elemento o ítem de configuración?   
Todo producto (final o intermedio, entregable o interno) cuyo cambio pueda 
resultar crítico para el buen desarrollo del proyecto. 
5. ¿Qué es una línea base?   
Conjunto de elementos de configuración formalmente designados y fijados en un 
momento específico del ciclo de vida. Solo puede ser modificada con un 
procedimiento formal de cambios. 
Representa la configuración vigente y aprobada. 
6. Nombre los beneficios de implementar un proceso de gestión de configuración. 
• Asegurar la correcta configuración del software 
• Proporcionar la capacidad de controlar los cambios 
• Reducir los sobreesfuerzos causados por problemas de integridad 
• Garantizar que todo el equipo trabaja sobre una misma línea base 
• Disponer de un inventario completo de los componentes del sistema 
7. ¿Qué pasa si NO se realiza una adecuada gestión de configuración?   
Existe un alto riesgo de: • Versión con errores  
• Versión con cambios no aprobados 
• Versión que no puede reproducirse 
• Re-trabajo porque no se probó los componentes que se debía probar 
• No poder recuperar una línea base anterior para realizar mantenimiento 
8. ¿Qué se hace en la actividad de identificación de configuración? ¿Qué 
proporcionan?  
Se identifican los elementos a ser controlados, establece esquemas para su 
identificación y versionado, y establece técnicas y herramientas para adquirir y 
gestionar los elementos controlados. Proporcionan la base para otras actividades 
de gestión de configuración. 
9. ¿Cuáles son los criterios que se pueden usar a la hora de seleccionar los 
elementos que estarán bajo gestión de configuración?  
• Productos de trabajo que vayan a ser usados por dos o más grupos 
• Productos de trabajo que puedan cambiar en el tiempo debido a cambios 
en requisitos o errores 
• Productos de trabajo que dependan de otros 
• Productos de trabajo críticos para el protecto 
10. De ejemplos de elementos o ítems de configuración a versionar que 
evolucionan en el tiempo y que son invariables  
Que evolucionan: 
• Código fuente 
• Especificaciones de requerimientos 
• Modelos de diseño 
• Modelos de datos 
• Datos y casos de prueba 
Invariables: 
• Minutas de reunión 
• Emails 
• Comprobantes, notas, memos 
• Paquetes de versión de productos 
11. Indique cómo funciona un gestor de configuración. ¿Para qué se estructura el 
directorio?  
Un gestor de configuración establece una estructura de directorios designando un 
área de almacenamiento, procedimientos y herramientas para acceder al sistema de configuración del proyecto. Tendrán que reflejar el plan de GCS la ubicación y 
estructura de los directorios donde se almacenan las líneas base y activos del 
proyecto. 
Se estructura el directorio para: 
• Planear cómo controlar la línea base 
• Soportar distintos niveles de GCS 
• Proporcionar un repositorio central con líneas base 
• Proporcionar un lugar donde compartir y transferir elementos de 
configuración 
• Proporcionar un lugar orientado al registro y generación de informes 
• Soportar el mantenimiento con copias de seguridad regulares 
12. ¿Qué es Integración continua o Continuous integration?  
Es una práctica de software donde los miembros del equipo integran su código de 
manera frecuente. 
13. ¿Cuál es el proceso normal de gestión de integración? ¿Cuáles son las 
ventajas de este esquema de trabajo?  
Proceso: 
1) Los desarrolladores envían sus modificaciones al controlador de versiones 
2) El servidor de CI monitorea el repositorio buscando cambios y ejecutando 
automáticamente el build 
3) Finalizado el build, el servidor envía a los responsables feedback del 
proceso 
4) El servidor realiza el paso 2 continuamente 
Ventajas: 
• Detección y corrección rápida de problemas de integración 
• Detección automática de código que rompe el build 
• Detección rápida de errores en el código por pruebas unitarias 
• Despliegue automatizado 
14. ¿Cuáles son las órdenes o comandos principales y qué permite cada uno de 
ellos?  
• checkout: obtener una copia de trabajo 
• update: actualiza la copia con cambios del repositorio 
• commit: almacena la copia en el repositorio 
• abort: abandona los cambios en la copia 
• add: añade ficheros a la lista de configuración • remove: elimina ficheros de la lista de configuración 
• edit: autoriza modificaciones a un fichero (si el checkout se hizo en modo 
solo lectura) 
15. Defina: versión, revisión, variante con sus tipos, configuración alternativa y 
release  
Versión: elemento de configuración en un instante dado 
Revisión: las distintas versiones que van apareciendo 
Variante: versión que coexiste con otra, con ciertas diferencias. Tipos: 
• Temporal: para trabajo en paralelo sin conflictos. Debe fusionarse. 
• Experimentales: para explorar vías. Se guarda la mejor y se descartan las 
demás. 
• Pruebas: para realizar pruebas. 
• Permanentes: no se mezclan. 
o De requisitos de usuario: cada variante para un requisito 
o De plataforma: por ejemplo, una variante por sistema operativo 
Configuración alternativa: se compone de un conjunto diferente de elementos de 
configuración 
Release: configuración del sistema que se va a entregar al cliente 
16. Nombre algunas operaciones o comandos indicando de qué se trata 
• Check-in o commit: actualiza el repositorio con cambios en el entorno 
• Check-out: descarga al entorno local una copia del repositorio 
• Update: descarga al entorno local solo lo que recibió cambios desde la 
última sincronización 
• Tag: rama de gestión de versiones 
• Trunk o main: rama de desarrollo principal 
• Branch: copia un fichero original con la intención (o no) de modificarlo 
• Merge: incorpora a un repositorio los cambios producidos en otro. 
Historias
Usuario
Ingeniería
requisitos
ágil
v.
2.0
Scrum
Manager
marca
registrada
propiedad
Iubaris
Info
Media
S.L.
Historias
Usuario
Ingeniería
requisitos
ágil
Versión
2.0
Abril
2018
Imagen
diseño
cubierta
Scrum
Manager
2018
Alexander
Menzinsky
Gertrudis
López
Juan
Palacio
Producción
Scrum
Manager
Información
derechos
licencia
http://www.safecreative.org/work/1804036442990
Formación
Scrum
Manager
2005-2018
ScrumManager
http://www.scrummanager.net
Contenido
Contenido
Información
recursos
comunidad
profesional
Mejora
continua
control
calidad
Scrum
Manager
Ingeniería
requisitos
ágil
Historias
Usuario
Temas
Epics
Tareas
11
Información
historia
usuario
13
Informaciones
necesarias
opcionales
13
Descripción
16
Valor
negocio
17
Estimación
18
Prioridad
20
Criterios
validación
22
Calidad
historias
usuario
24
División
historias
usuario
26
Comparativa
formas
toma
requisitos
28
Historias
usuario
versus
casos
28
Historias
usuario
versus
requisitos
funcionales
29
Historias
técnicas
30
User
Story
Mapping
31
Apéndice
Historias
usuario
ámbitos
34
Bibliografía
35
Tabla
ilustraciones
37
Índice
38
ScrumManager
Información
Información
recursos
comunidad
profesional
RECURSOS
versión
libro
http://www.scrummanager.net/bok/
Open
Knowledge
Scrum
http://www.scrummanager.net/oks/
Blog
http://www.scrummanager.net/blog/
Acerca
certificación
Scrum
Manager
https://scrummanager.com/index.php/es/certificacion
Preguntas
frecuentes
cursos
exámenes
Scrum
Manager
https://scrummanager.com/index.php/es/faq
REDES
SOCIALES
Twitter
https://twitter.com/scrummanager
Facebook
https://www.facebook.com/Scrum-Manager-144889095527292/
Google+
https://google.com/+ScrummanagerNet/
Pinterest
https://es.pinterest.com/scrummanager/pins/
REDES
PROFESIONALES
Grupo
profesional
LinkedIn
http://www.linkedin.com/e/gis/855957
Comunidades
Google
https://plus.google.com/communities/116174698722878580028
http://www.scrummanager.com
Control
calidad
Scrum
Manager
2005-2018
ScrumManager
http://www.scrummanager.net
Mejora
continua
control
calidad
Scrum
Manager
Gracias
elegir
servicios
formación
Scrum
Manager
valoración
criterio
control
calidad
Scrum
Manager
decide
validez
servicios
formación
caso
continuidad
cursos
centros
profesores
participado
actividad
formación
auditada
Scrum
Manager
rogamos
agradecemos
valore
calidad
material
profesor
temario
etc.
comentarios
sugerencias
Scrum
Manager
anonimiza
información
recibida
forma
comparte
profesores
centros
autorizados
valoraciones
aspectos
mejora
caso
nombres
alumnos
valoración
página
accesible
miembros
Scrum
Manager
https://scrummanager.com/index.php/es/qa
Ingeniería
requisitos
ágil
Historias
Usuario
historias
usuario
utilizadas
métodos
ágiles
especificación
requisitos
descripción
funcionalidad
software
percibe
usuario
Mike
Cohn
2004
Describen
funcionalidades
solución
necesidades
problemas
cliente
usuario
representan
qués
construir
escriben
forma
historia
frases
utilizando
lenguaje
común
usuario
forma
ágil
administrar
requisitos
usuarios
elaborar
cantidad
documentos
formales
requerir
tiempo
administrarlos
historias
usuario
forman
fórmula
captura
funcion
alidades
definida
2001
Ron
Jeffries
C's
Ilustración
Gráfico
fases
fórmula
C’s
historia
usuario
limitada
debería
poderse
mem
orizar
fácilmente
escribir
tarjeta
post
-it
card
promesa
conversación
posterior
implementadas
reunión
refinamiento
planificación
sprint
acompañadas
cr
iterios
validación
asociados
conversaciones
equipo
desarrollo
propietario
producto
cambios
bienvenidos
agilidad
vale
pena
profundizar
momento
implementación
cam
biado
escritas
criterios
validación
transformados
escenarios
pruebas
equipo
desarrollo
permiten
propietario
producto
usuario
negocio
confirmar
equipo
entendido
recogido
correctamente
requisitos
Ingeniería
requisitos
ágil
10
Ventajas
aportan
historias
usuario
cortas
representan
requisitos
modelo
negocio
implementarse
rápidamente
semanas
Necesitan
mantenimiento
Mantienen
relación
cercana
cliente
Permiten
dividir
proyectos
pequeñas
entregas
Permiten
estimar
fácilmente
esfuerzo
desarrollo
ideales
proyectos
requisitos
volátiles
claros
origen
historias
usuario
viene
XP
eXtremeProgramming
programación
extrema
historias
usuario
escritas
clientes
metodología
creada
Kent
Beck
descrita
1999
libro
eXtreme
Programming
Explained
historias
usuario
aplican
mayoría
métodos
ágiles
herramienta
importante
scrum
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
11
Temas
Epics
Tareas
qués
construir
encuentran
tipo
elementos
conocidos
epics
temas
denomina
epic
superhistoria
usuario
distingue
tamaño
diferencia
historias
usuario
baja
granularidad
epics
alta
granularidad
etiqueta
aplicamos
historia
cuyo
esfuerzo
completarla
sprint
epics
suelen
flujo
asociado
dividir
historias
usuario
palabras
historias
usuario
resultantes
des
composición
epic
íntimamente
relacionadas
medida
aumenta
prioridad
acerca
momento
implementación
equipo
descompone
historias
usuario
tamaño
adecuado
gestionada
principios
técnicas
ágiles
estimación
seguimiento
cercano
normalmente
diario
nivel
epics
historias
usuario
encuentran
temas
representan
colección
epics
historias
usuario
re
lacionados
describir
sistema
subsistema
totalidad
funcionalidad
describen
elemento
forma
visión
producto
ejemplo
sistema
software
gestión
contable
conjunto
epics
Altas
bajas
mantenimiento
clientes
Facturaciones
puntuales
recurrentes
Consultas
navegación
acciones
fidelización
Pedidos
Devoluciones
denominar
tema
gestión
clientes
jerarquía
requisitos
ágiles
historias
usuario
encuentran
cómos
construir
tareas
resultado
descomposición
equipo
historias
usuario
unidades
trabajo
adecuadas
gestionar
seguir
avance
ejecución
Gráfico
niveles
tamaño
requisitos
gestión
ágil
Ilustración
Gráfico
niveles
tamaño
requisitos
gestión
ágil
Ingeniería
requisitos
ágil
12
scrum
métodos
ágiles
general
pila
producto
contener
historias
usuario
temas
epics
granularidad
nivel
detalle
elemento
pila
producto
relación
posición
Recordemos
posición
relación
prioridad
lista
prioritario
epic
historias
usuario
tamaño
temas
describen
cosas
descompondrá
elementos
pequeños
medida
avanza
pila
historias
susceptibles
entrar
sprint
detalle
reunión
planificación
sprint
equipo
información
necesaria
desglosarlas
tareas
pila
sprint
historias
usuario
elementos
encabezar
lista
Ilustración
Granularidad
pila
producto
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
13
Información
historia
usuario
Informaciones
necesarias
opcionales
decidir
información
incluir
historia
usuario
preferible
adoptar
formatos
rígidos
resultados
scrum
agilidad
dependen
formas
institucionalización
principios
implementación
adecuada
características
empresa
proyecto
aparte
campos
consideran
necesarios
incluir
campo
proporcione
información
útil
proyecto
recordemos
foco
historias
usuario
informaciones
construcción
entendimiento
compartido
Ilustración
Ejemplo
tarjeta
historia
usuario
campos
consideran
necesarios
describir
adecuada
histori
as
usuario
Descripción
descripción
sintetizada
historia
usuario
estilo
libre
funcione
responder
preguntas
beneficia
beneficio
Mike
Cohn
recomienda
seguir
patrón
garantiza
funcionalidad
est
descrita
alto
nivel
extensa
Estimación
estimación
esfuerzo
necesario
tiempo
ideal
implementación
historia
usuario
convenga
equipo
utilizar
unidades
desarrollo
conocidas
puntos
historia
unidades
representan
tiempo
teórico
desarrollo
persona
estipule
comienzo
proyecto
Prioridad
sistema
priorización
permite
determinar
orden
historias
usuario
implementadas
Dependiendo
tipo
proyecto
funcionamiento
equipo
organización
aconsejables
campos
ID
identificador
historia
usuario
único
funcionalidad
trabajo
rol
usuario
quiero
objetivo
beneficio
Ingeniería
requisitos
ágil
14
Titulo
titulo
descriptivo
historia
usuario
Criterio
validación
pruebas
aceptación
consensuadas
cliente
usuario
criterios
transformados
pruebas
código
superar
finalizada
implementación
historia
usuario
Valor
valor
normalmente
numérico
aporta
historia
usuario
cliente
usuario
objetivo
equipo
maximizar
valor
satisfacción
percibida
cliente
iteración
campo
servirá
estimación
determinar
prioridad
historias
usuario
implementadas
Dependencias
historia
usuario
debería
dependiente
historia
ocasiones
necesario
mantener
relación
campo
indicarían
identificadores
historias
depende
Persona
asignada
casos
queramos
sugerir
persona
implementar
historia
usuario
Recordar
scrum
término
equipo
autogestionado
distribuye
asigna
tareas
Criterio
finalización
definición
finalizada
incluye
criterios
actividades
necesarias
ter
minada
historia
usuario
desarrollada
probada
documentada
convenidas
equipo
propietario
producto
Sprint
útil
organizació
propietario
producto
incluir
número
sprint
previsiblemente
historia
Riesgo
riesgo
técnico
funcional
asociado
implementación
historia
usuario
Módulo
módulo
sistema
producto
pertenece
Observaciones
enriquecer
aclarar
información
útil
Ilustración
Ejemplo
historia
usuario
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
15
Ilustración
Ejemplo
historia
usuario
Mike
Cohn
comenta
historias
usuario
suficientemente
flexibles
describir
funcionalidad
mayoría
sistemas
apropiadas
razón
necesita
expresar
necesidad
historia
usuario
recomienda
haga
ejemplo
maquetación
pantallas
suele
describir
pantallazos
transmitir
diseño
queramos
darle
aplicación
Ingeniería
requisitos
ágil
16
Descripción
pensamiento
personas
estructura
siguiendo
narrativa
historia
entendemos
mundo
capacitados
comprender
personajes
deseos
motivaciones
forma
facilidad
adquirir
retener
conocimiento
historias
metemos
protagonistas
forma
vivimos
tales
historia
cuentan
empatizamos
niveles
toman
decisiones
nivel
desarrollador
tomamos
decisiones
acertadas
técnica
viene
Experiencia
Usuario
UX
acerca
usuarios
User-Persona
técnica
permite
ponernos
lugar
usuarios
vivir
historia
técnica
basa
idea
usuarios
producto
construir
arquetipos
descritos
personajes
ficción
ejemplo
representación
realista
audiencia
clave
nu
estra
web
aplicación
User-Personas
roles
usuario
patrón
historias
usuario
rol
usuario
construyendo
cargo
rol
profesional
persona
necesidad
descrita
persona
describimos
User
-Persona
permite
equipo
entendimiento
compartido
entender
trabaja
piensa
siente
definitiva
empatía
quiero
objetivo
describiendo
intención
funcionalidad
usará
realmente
tratando
lograr
beneficio
encaja
necesidad
inmediata
rodea
beneficio
general
tratando
lograr
problema
necesita
resolver
beneficio
relacionado
visión
producto
técnica
centramos
usuarios
mantenemos
conversaciones
centradas
Dándoles
nombre
asignándoles
personalidad
empatizamos
grupo
usuarios
representan
usuarios
objetivos
web
terminado
tipo
persona
User
-Persona
referirnos
mote
permite
ponernos
lugar
imaginar
interactuarán
sistema
ayudando
equipo
entenderlos
tomar
decisiones
acertadas
ofrecer
soluciones
adecuadas
necesidades
técnica
representa
usuarios
ficha
tipo
tríptico
ejemplo
Nombre
apodo
rápida
identificar
reconocer
personaje
Datos
demográficos
ayudan
clasificar
personaje
segmento
mercado
Descripción
párrafo
ayude
personaje
Objetivos
buscamos
necesidades
usuario
distinguen
comportamiento
resto
Ilustración
Ejemplo
User-Persona
rol
usuario
quiero
objetivo
beneficio
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
17
Valor
negocio
información
valor
representa
valor
negocio
aporta
historia
usuario
realizada
información
profunda
razón
historia
íntimamente
ligada
lógica
negocio
qu
mide
información
Podríamos
representa
dinero
dispuesto
pagar
cliente
funcionalidad
esté
dispuesto
pagar
valor
negocio
funcionan
scrum
agilidad
entregar
valor
signific
focalizarnos
resolver
problemas
alguien
beneficios
alguien
valor
negocio
importante
priorizar
correctamente
focaliza
equipo
desarrollo
momento
prioritario
construir
maximiza
valor
satisfacción
percibida
cliente
sprint
único
dependencias
factores
determinar
prioridad
valor
prioridad
informaciones
independientes
valor
mide
escala
arbitraria
normalmente
valores
numéricos
aporta
historia
usuario
epic
cliente
usuario
escala
propietario
producto
usuarios
sientan
cómodos
ejemplo
serie
Fibonacci
series
números
naturales
10
100
1.000.000
forma
estimulante
repartir
billetes
Monopolio
valor
proyecto
usuarios
negocio
involucrados
repartan
dinero
función
valor
atribuyen
historia
usuario
ejercicio
acerca
realidad
toca
directamente
bolsillo
simula
Finalmente
valor
sum
billetes
opcionalmente
dividir
resultado
100
1000
número
manejable
Benoît
Pointet
Thomas
Botton
proponen
estimar
valor
equipo
estima
esfuerzo
cartas
planning
poker
serie
Fibonacci
valor
esfuerzo
sumativo
relativo
historias
idea
propietario
producto
expertos
negocio
jueguen
planning
poker
crea
base
onocimiento
reuniones
equipo
reuniones
estimación
valor
crearán
base
conocimiento
compartida
usuarios
gente
negocio
propuesta
efectos
colaterales
interesantes
trae
respeto
comprensión
equipo
propietario
producto
comprenderá
fácilmente
porqué
equipo
necesita
ocasiones
reestimar
historias
usuario
Ingeniería
requisitos
ágil
18
Estimación
visto
estimación
información
necesaria
historias
usuario
Ayuda
priorización
propietario
producto
Permite
equipo
corte
pila
producto
historias
caben
sprint
estimación
ágil
basa
estimación
relativa
serie
estimación
historias
usuario
serie
Fibonacci
historias
usuario
pequeñas
incertidumbre
estimación
menor
historias
tamaño
histori
as
crece
linealmente
incertidumbre
crece
exponencialmente
serie
Fibonacci
compuesta
números
suma
anteriores
distancia
números
serie
refleja
incertidumbre
inherente
estimación
crece
proporcionalmente
tamaño
historia
usuario
diferencias
puntos
historia
probablemente
comprendidas
diferencias
13
21
42
razones
derivan
naturaleza
humana
utilizar
serie
personas
fácil
estimar
forma
relativa
fácil
determinar
cuán
to
menor
cosa
tendencia
pensar
múltiplos
ejemplo
historia
usuario
comparamos
puntos
vemos
automáticamente
pensamos
16
serie
Fibonacci
obliga
romper
buscar
estimación
adecuada
estimaciones
basan
serie
Fibonacci
bajaras
cartas
variaciones
incluye
historias
requieren
esfuerzo
nulo
/2
historias
pequeñas
barajas
sustituyen
21
20
historia
tamaño
21
falsa
sensación
precisión
21
barajas
suelen
pasar
infinito
siguen
incluyen
valores
redondos
40
100
Ilustración
Cartas
planning
poker
serie
Fibonacci
Recordemos
objetivo
planning
poker
obtener
estimaciones
puedan
confirmadas
ofrecer
proceso
estimación
aproximación
rápido
ágil
obtener
valores
útiles
equipo
estimar
pila
producto
planificar
sprint
importante
crear
entendimiento
compartido
elemento
estimado
generar
base
conocimiento
común
13
21
34
55
89
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
19
participantes
estiman
valores
dispares
Recordemos
equipos
especialistas
áreas
optimistas
pesimistas
vean
soluciones
qu
ven
discusión
soluciones
disparidad
estimación
alineará
conocimiento
equipo
estimación
elementos
epics
temas
serie
Fibonacci
adecuada
us
números
darían
idea
precisión
inexistente
solución
elementos
lejanos
pila
producto
técnica
basada
tallas
camisa
Realmente
elementos
pila
producto
vagos
estimar
utilizar
tallas
camisa
intuición
estimación
grado
incertidumbre
amplio
acorde
epics
temas
técnica
ventaja
puramente
relativa
traducir
valores
tiempo
jornadas
horas
ambas
técnicas
estimar
pila
producto
completo
forma
coherente
agilidad
elementos
prioritaria
pila
detallados
incluida
estimación
elementos
lejanos
granulados
estimación
vaga
amplia
Ilustración
Cartas
estimación
tallas
camisa
propietario
producto
basa
resultado
ambas
técnica
priorizar
pila
producto
valores
detallados
frente
necesita
perfilado
valores
on
detalle
suficiente
elementos
lejanos
prioritarios
XS
XL
Ingeniería
requisitos
ágil
20
Prioridad
historias
usuario
puedan
importantes
focalizarnos
trabajo
forma
eficiente
necesario
destacar
den
valor
sistema
historias
usuario
priorizadas
asignadas
valor
intervenga
sistema
priorización
valor
asignado
propietario
producto
basará
básicamente
siguientes
variables
Beneficios
implementar
funcionalidad
Pérdida
coste
demande
posponer
implementación
funcionalidad
Riesgos
implementarla
Coherencia
intereses
negocio
Valor
diferencial
productos
competencia
aspectos
definición
valor
variar
clientes
allá
sistema
clasificación
tipo
prioridad
alta
media
baja
recomendable
utilizar
tipo
escala
cualitativa
significado
intrínseco
caso
técnica
MoSCoW
usuario
responsable
asignar
prioridad
consciente
efecto
re
producirá
elección
técnica
definida
año
2004
Dai
Clegg
Oracle
UK
Consulting
libro
Case
Method
Fast
-Track
RAD
Approach
finalidad
obtener
entendimiento
común
cliente
equipo
pr
oyecto
concreto
importancia
historia
usuario
clasificación
MUST
HAVE
necesario
funcionalidad
implementada
solución
fallará
solución
considerada
éxito
SHOULD
HAVE
recomendable
debería
funcionalidad
implementada
solución
funcionalidad
alta
prioridad
solución
prescindible
fallará
debería
causa
justificadas
implementarla
COULD
HAVE
implementarse
deseable
conveniente
funcionalidad
implementada
solución
dependerá
posibilidades
tiempos
presupuesto
proyecto
WON'T
HAVE
futuro
funcionalidad
baja
prioridad
descartada
momento
futuro
relevante
Posteriormente
cobre
importancia
pasar
anteriores
importante
distinguir
prioridad
valor
cliente
historia
usuario
valor
cliente
usuario
absolutamente
necesaria
alta
prioridad
ejemplo
infraestructura
necesaria
implementación
software
aporta
valor
cliente
desarrollar
ejecutar
solución
desarrollada
herramienta
ayuda
propietario
producto
priorizar
ila
producto
forma
adecuada
cálculo
ROI
Return
of
Investment
retorno
inversión
Valor
negocio
valor
relativo
elemento
negocio
cliente
Tamaño
estimación
puntos
historia
esfuerzo
necesario
teniendo
complejidad
tamaño
ROI
Valor
negocio
Tamaño
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
21
ROI
aplicado
forma
descendente
resulta
excelente
guía
priorizar
pila
alto
retorno
inversión
alta
prioridad
elemento
técnica
priorización
lean
recomendable
completitud
WSJF
Weighted
Shortest
Job
First
Don
Reinersten
descrita
2009
libro
The
Principles
of
Product
Development
Flow
Second
Generation
Lean
Product
Development
técnica
basada
economía
flujo
desarrollo
productos
calcula
dividiendo
coste
demora
duración
interesante
coste
demora
historias
técnicas
intrínsecamente
valor
negocio
coste
demora
representa
valor
obtenemos
construir
determinada
historia
caso
histo
ria
técnica
obtener
valor
negocio
historias
usuario
consumen
duración
imposible
estimar
coste
demora
utiliza
tamaño
elemento
sustituto
coste
demora
contribuyen
siguientes
elementos
Valor
negocio
Criticidad
tiempo
medida
ocupa
necesidad
entrega
elemento
escala
tiempo
viene
asociado
caída
valor
tiempo
necesidad
entrega
alto
valor
Reducción
riesgo
valor
oportunidad
medida
valor
relativo
eliminación
riesgos
valor
potencial
oportunidades
negocio
aportar
elemento
técnica
priorización
WSJF
consiste
aplicar
siguientes
pasos
pila
producto
técnica
estima
funcionalidades
historias
usuario
epics
forma
relativa
escala
unidades
serie
Fibonacci
13
21
rellena
lista
columna
columna
pone
elemento
valor
pequeño
columna
rellena
resto
elementos
columna
estimación
relativa
respect
Hecha
columna
calcula
WSJF
ordena
menor
elemento
prioridad
WSJF
alto
Ilustración
10
Ejemplo
priorización
WSJF
WSJF
Coste
demora
Tamaño
Coste
demora
Valor
negocio
Criticidad
tiempo
Reducción
riesgo
valor
oportunidad
Ingeniería
requisitos
ágil
22
Criterios
validación
50
años
historia
ingeniería
software
llegado
conclusión
criterios
validación
traducen
pruebas
excelente
lenguaje
detallar
requerimientos
funcionales
toman
importancia
historias
usuario
medir
calidad
criterio
aceptación
utiliza
método
SMART
cumplir
máximo
siguientes
criterios
Specific
Específicos
Measurable
Medibles
Achievable
Alcanzables
Relevant
Relevantes
Time-boxed
Limitados
tiempo
suelen
escribir
forma
checklist
descripción
flujo
obtengan
historias
usuar
io
susceptibles
entrar
sprint
acaban
refinar
planificación
sprint
criterios
validación
ayudan
equipo
desarrollo
entender
funcionamiento
producto
estimarán
tamaño
historia
subya
cente
equipo
encuentre
fase
desarrollo
servirá
guía
desarrollador
tomar
decisión
tomará
acertada
Finalmente
propietario
producto
comprueba
revisión
sprint
criterios
validación
definición
historias
usuarios
hecha
finalizada
criterios
validación
escribirse
lenguaje
natural
propietario
producto
expresa
formatos
escribirlos
opción
excelente
escribirlos
técnica
comportamiento
escenarios
BDD
Behavior
Driven
Development
gherkin
lenguaje
específico
creado
especialmente
descripciones
comportamiento
software
sintaxis
gherkin
Scenario
Escenario
Número
escenario
Titulo
escenario
Given
Contexto
adicionalmente
Contexto
When
Evento
Then
Resultado
Comportamiento
esperado
Comprobar
Criterios
Demostrar
Comportamiento
esperado
Verificar
Rol
Acción
Resultado
Comportamiento
esperado
Contexto
adicionalmente
Contexto
Evento
Resultado
Comportamiento
esperado
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
23
Derivado
sintaxis
elementos
criterios
aceptación
Número
escenario
Número
ejemplo
identifica
escenario
asociado
historia
Título
escenario
Describe
contexto
escenario
define
comportamiento
Contexto
Proporciona
descripción
condiciones
desencadenan
escenario
Evento
Representa
acción
usuario
ejecuta
contexto
definido
escenario
Resultado
Comportamiento
esperado
contexto
acción
ejecutada
usuario
consecuencia
comportamiento
sistema
situación
Ilustración
11
Ejemplo
gherkin
Ejemplo
historia
usuario
criterios
validación
escritos
gherkin
cliente
Quiero
retirar
dinero
cajero
automático
evitar
banco
cola
Escenario
crédito
crédito
tarjeta
válida
cajero
dinero
disponible
cliente
pide
dinero
debitada
dinero
entregado
cliente
cliente
recupera
tarjeta
Escenario
excede
límite
negativo
acordado
banco
excede
límite
negativo
acordado
banco
tarjeta
válida
cliente
pide
dinero
cajero
muestra
mensaje
negando
pedido
dinero
entregado
cliente
cliente
recupera
tarjeta
Ingeniería
requisitos
ágil
24
Calidad
historias
usuario
2003
Bill
Wake
desarrolló
método
llamado
INVEST
asegurar
calidad
escritura
historias
usuario
método
sirve
comprobar
calidad
historia
usuario
revisando
cumpla
serie
características
Independent
independiente
Negotiable
negociable
Valuable
valiosa
Estimable
estimable
Small
pequeña
Testable
comprobable
Independent
independiente
ventajoso
historia
usuario
planificada
implementada
orden
historias
deberían
totalmente
independientes
facilita
trabajo
posterior
equipo
Resaltar
dependencias
historias
usuario
reducirse
combinándolas
dividiéndolas
Negotiable
negociable
historia
usuario
descripción
corta
necesidad
incluye
detalles
historias
negociables
detalles
acordados
cl
iente
usuario
fase
conversación
evitar
historias
usuario
demasiados
detalles
limitaría
conversación
acerca
Valuable
valiosa
historia
usu
ario
valiosa
cliente
usuario
historia
valiosa
escriba
Estimable
estimable
historia
usuario
estimada
precisión
suficiente
ayudar
cliente
usuario
propietario
producto
priorizar
planificar
implementación
estimación
generalmente
realizará
equipo
trabajo
directamente
relacionada
tamaño
historia
usuario
historia
usuario
tamaño
difícil
estimar
conocimiento
equipo
necesidad
expresada
caso
falta
conocimiento
necesarias
fases
conversación
acerca
Small
pequeña
historias
usuario
deberían
englobar
semanas
persona
trabajo
equipos
restringen
persona
descripción
corta
ayuda
disminuir
tamaño
historia
usuario
facilitando
estimación
Testable
comprobable
historia
usuario
debería
capaz
probada
fase
confirmación
historia
usuario
cliente
usuario
probar
historia
usuario
significa
clara
valiosa
equipo
probar
historia
usuario
sabrá
terminado
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
25
empresas
diseñado
tarjetas
Braintrust
ar
look
profesional
completas
información
coherentes
espacio
campos
Ilustración
12
Ejemplo
tarjetas
diseñadas
Braintrust
Consejos
prácticas
escribir
historias
evitar
escribir
descripción
exhaustiva
justo
Escribir
criterio
validación
suficientemente
explícito
Estimar
historias
crear
falsas
expectativas
fiar
información
tarjetas
idea
documentación
externa
wiki
ejemplo
historia
finalizada
prácticamente
hecha
Ingeniería
requisitos
ágil
26
División
historias
usuario
flujo
continuo
toma
requisitos
historias
usuario
reunión
refinamiento
mantener
actualizada
pila
producto
reunión
propietario
producto
equipo
trabaja
refinamiento
pila
producto
reunión
ve
imagen
derecha
añaden
repriorizan
eliminan
dividen
elementos
pila
objetivo
garantizar
historias
usuario
susceptibles
desarrolladas
corto
plazo
tengan
nivel
detalle
estimación
esfuerzo
suficiente
equipo
comprometerse
experiencia
muestra
historias
usuario
pequeñas
mejoran
flujo
historias
usuario
implican
incertidumbre
funcional
dificultad
estimadas
Ilustración
13
Refinamiento
pila
producto
Dividir
historias
redunda
mejorar
entendimiento
incrementar
exactitud
estimaciones
fáciles
priorizar
dividir
historias
usuario
forma
horizontal
vertical
Horizontal
significa
división
tipo
trabajo
tecnologías
ejemplo
típico
metodologías
tradicionales
forma
dividir
horizontal
genera
historias
valor
negocio
forma
individ
ual
conjunto
valor
división
horizontal
propicia
pensar
silos
miembro
equipo
focaliza
especialidad
situación
tiende
producir
cuellos
botella
ingeniería
re
quisitos
ágil
evita
tipo
problemas
multifuncionalidad
miembros
miembro
participa
menor
media
tipos
tarea
historias
provenientes
divisiones
horizontales
priorizar
aportan
valor
negocio
forma
individual
diferencia
división
horizontal
vertical
útil
historia
dividida
vertical
genera
historias
valor
negocio
funcionalidad
dividida
capas
técnicas
capas
funcionales
semejanza
incrementos
resultantes
sprint
historias
resultantes
porción
tarta
incluye
capas
técnicas
necesarias
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
27
Christiaan
Verwijs
describe
10
estrategias
dividir
historias
usuario
forma
vertical
Ilustración
14
Esquema
10
estrategias
división
historias
usuario
Estrategia
División
pasos
flujo
trabajo
historias
usuario
incluyen
tipo
flujo
trabajo
dividir
pasos
individuales
flujo
Estrategia
División
reglas
negocio
historias
usuario
conll
evan
implícita
explícitamente
reglas
negocio
dividir
reglas
Frecuentemente
casos
test
implican
importantes
reglas
negocio
división
basarnos
pruebas
Estrategia
División
happy
unhappy
flow
funcionalidades
usualmente
describen
flujo
flujos
tratan
desviaciones
excepciones
problemas
flujos
forma
dividir
historias
Estrategia
División
opciones
plataformas
entrada
caso
productos
rodar
plataformas
portátiles
tablets
móviles
dividirse
historias
usuario
plataforma
entrada
Estrategia
División
tipos
datos
parámetros
historias
usuario
dividir
parámetros
entrada
salida
ejemplo
opciones
búsqueda
Estrategia
División
operaciones
historias
involucran
típicas
operaciones
ta
lectura
modificación
baja
CRUD
create
read
update
delete
operaciones
forma
división
Estrategia
División
casos
escenarios
test
historias
difíciles
dividir
funcionalmente
cas
ayudar
preguntarse
escenarios
test
historia
dividir
escenarios
combinación
reglas
negocio
flujos
excepciones
plataformas
entrada
etc.
Estrategia
División
roles
historias
usuario
cubren
roles
dividir
funcionalidades
rol
Estrategia
División
optimizar
historias
usuario
implementadas
grados
perfección
optimización
funcionalidad
descrita
Estrategia
10
División
compatibilidad
navegador
historias
usuario
aplicaciones
web
trabajar
amplia
variedad
navegadores
modernos
tienden
compatibles
estándares
antiguos
suelen
necesitar
personalizaciones
funcione
correctamente
estrategias
división
reduce
incertidumbre
permite
desarrollar
historias
resultantes
importantes
dejar
historias
importantes
desarrollos
futuros
Ingeniería
requisitos
ágil
28
Comparativa
formas
toma
requisitos
Historias
usuario
versus
casos
menciona
casos
historias
usuario
produce
confusión
logrado
incluir
casos
proceso
ágil
historias
usuario
equivalentes
casos
caso
técn
ica
capturar
funcionalidad
deseada
perspectiva
usuarios
actores
interactúan
sistema
utiliza
UML
Unified
Modeling
Language
diagramas
casos
lenguaje
modelado
utiliza
describir
sistema
perspectivas
estática
dinámica
resulta
lenguaje
descriptivo
pensado
inicialmente
sencillez
comunicación
cercano
comunicación
humana
cambio
historia
usuario
escrita
len
guaje
coloquial
funciona
recordatorio
conversación
cliente
comenta
Alistair
Cockburn
2001
libro
Agile
software
development
realmente
historias
usuario
cerca
captura
requisito
fase
sirve
extraer
necesidades
usuario
especificación
requisitos
casos
Podríamos
historia
usuario
cliente
usuario
caso
entra
criterio
validación
diferencias
concepto
diferencia
casos
requieren
matrices
seguimiento
requisitos
porcentajes
terminado
historias
usuario
incluyen
criterio
validación
incluyen
terminado
forma
binaria
vale
vale
agilidad
patente
historias
usuario
vivas
análisis
funcional
técnico
sarrollo
reunión
inicio
sprint
caso
scrum
desglose
tareas
equipo
nivel
detalle
previsión
supera
único
arquitecto
analista
funcional
casos
Ilustración
15
Historias
usuario
parecidas
casos
proyecto
comienza
seguir
método
ágil
deberían
olvidar
completamente
casos
equipo
debería
centrarse
realización
historias
usuario
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
29
Historias
usuario
versus
requisitos
funcionales
general
asocia
historias
usuario
requisitos
funcionales
artefactos
métodos
ágiles
metodologías
tradicionales
historias
usuario
aspectos
diferencian
diferencias
desconocidas
llevan
confusiones
comunes
conscientes
aunq
ue
historias
usuario
describen
funcionalidades
útiles
cliente
usuario
suelen
escribir
tarjetas
post
-its
implican
conversación
posterior
equipo
detalla
usuar
io
cliente
funcionalidad
desarrollar
requisitos
funcionales
historias
usuario
desarrollará
funcionalidad
historias
usuario
nivel
detalle
especificación
requisito
funcional
Ilustración
16
Historias
usuario
parecidas
requisitos
funcionales
Ingeniería
requisitos
ágil
30
Historias
técnicas
pila
producto
contiene
qués
construir
elementos
historias
usuario
epics
temas
realidad
planificaciones
sprint
release
contener
trabajo
elementos
funcionales
necesidades
carácter
técnico
aporten
valor
negocio
consumidas
elementos
funcionales
interesante
negocio
propietari
producto
tengan
contacto
aspectos
técnicos
forja
lenguaje
común
ambas
direcciones
consciencia
importancia
elementos
llama
historias
técnicas
cosas
preparar
webserver
implementar
conjunto
tablas
base
datos
consumida
funcionalidades
elementos
seguridad
escalabilidad
rendimiento
etc.
tipos
historias
técnicas
centran
resolver
deuda
técnica
refactorizaciones
historias
exploración
análisis
técnico
funcional
sirve
despejar
incertidumbre
historia
usuario
historias
técnicas
escriben
directamente
texto
técnico
preciso
patrón
ocurre
historias
usuario
criterios
validación
asociados
comprueban
revisión
sprint
audiencia
técnica
correspondiente
propietario
producto
responsable
pila
elementos
caso
historias
técnicas
verdaderos
propietarios
perfiles
carácter
técnico
equipo
arquitecto
responsables
definición
responder
dudas
preguntas
aclaraciones
planificación
entrega
historias
identificar
tipos
historias
técnicas
Arquitectura
construyen
elementos
API's
crean
estructura
funcionamiento
interacción
distintas
partes
software
Ejemplo
Implementar
sistema
login
seguro
Infraestructura
producto
historias
consumidas
directamente
historias
usuario
incluir
infraestructura
modificada
oportunidades
refactorización
originada
necesidad
funcional
Ejemplo
Preparar
servidores
base
datos
web
Infraestructura
equipo
historias
respaldan
equipo
capacidad
entregar
software
Suelen
historias
herramientas
marcos
pruebas
métricas
diseño
planificación
implicar
equipo
desarrolle
compre
instale
Ejemplo
Preparar
sistema
integración
continua
Refactorización
historias
representan
candidatos
refactorizar
ejemplo
deuda
técnica
código
necesita
refactorización
incluir
diseños
automatización
herramientas
documentación
proceso
Ejemplo
Homogeneizar
código
función
cálculo
préstamos
Spikes
historias
exploración
limitadas
tiempo
respuesta
cuestión
reúnen
información
toma
decisión
posterior
diseño
solución
Ejemplo
Evaluar
Oracle
versus
SQL
Server
Spike
técnico
seguros
desarrollar
punto
vista
técnico
creamos
tipo
spike
actividad
centra
encontrar
enfoque
desarrollo
determinar
factibilidad
impacto
estrategias
diseño
Spike
funcional
sirven
equipos
descubrir
detalles
funcionalidades
diseños
travé
creación
prototipos
llegar
entender
exactamente
necesita
cliente
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
31
User
Story
Mapping
User
Story
Mapping
técnica
Jeff
Patton
describe
2014
libro
User
Story
Mapping
Discover
the
Whole
Story
Build
the
Right
Product
útil
construir
pila
producto
allá
lista
unidimensional
historias
usuario
epics
técnica
permite
obt
ener
siguientes
beneficios
Visión
compartida
participación
elaboración
User
Story
Map
involucrados
construirán
visión
compartida
producto
obtener
facilitará
mantener
foco
solución
construcción
Alineación
miembros
equipo
negocio
propietario
producto
interesados
clientes
alineados
construir
sabiendo
razones
subyacentes
entendimiento
quieren
clientes
modelado
clientes
producto
alcanzar
alto
nivel
entendimiento
verdaderas
necesidades
clientes
entendimiento
problemas
enfrentan
clientes
aplica
ndo
técnica
lograr
alto
nivel
empatía
clientes
participar
dinámica
oportunidad
ponerse
lugar
cliente
hora
modelar
hará
producto
hará
pudiendo
pensar
problemas
solucionarlos
producto
construir
mapa
historias
usuario
ordenado
versión
modelar
backbone
flujo
cliente
producto
definir
conjunto
historias
conformarán
Mínimo
Producto
Viable
MVP
sacar
mercado
permita
usuarios
lle
var
cabo
flujo
básica
funcionalidad
actividad
obligatoria
flujo
idea
inicial
siguientes
versiones
prevé
sacar
posteriormente
cambiar
función
feedback
elementos
mercado
obtenidos
salga
producción
MVP
versiones
siguientes
Ilustración
17
Pila
producto
plana
pila
producto
construida
técnica
User
Story
Mapping
técnica
colaborativa
construcción
pila
producto
reúnen
involucrados
definición
construcción
producto
interesados
clientes
usuarios
finales
propietari
producto
equipo
moderador
mayoría
casos
scrum
master
agile
coach
objetivo
conjunta
definan
descubran
prioricen
estimen
historias
usuarios
épicas
prevén
producto
construir
Ingeniería
requisitos
ágil
32
emplear
técnica
User
Story
Mapping
definiendo
siguientes
elementos
Backbone
User
Story
Map
backbone
espina
dorsal
User
Story
Map
captura
actividades
alto
nivel
usuario
use
producto
construir
ejemplo
backbone
proceso
compra
libro
formato
digital
web
venta
libros
on-line
Ilustración
18
Ejemplo
Backbone
User
Story
Mapping
Historias
usuario
asociadas
actividad
proceso
ordenadas
valor
valiosas
superior
actividad
usuario
producto
definen
historias
usuario
permitir
actividad
ordenarlas
abajo
colocando
valiosas
prioritarias
ejemplo
compra
libro
formato
digital
web
vent
libros
conjunto
historias
usuario
asociado
actividad
priorizadas
valor
abajo
Ilustración
19
Backbone
historias
usuario
User
Story
Mapping
Mínimo
producto
viable
1.0
siguientes
versiones
prevé
liberar
producto
determinan
historias
usuario
compondrán
mínimo
producto
viable
1.0
siguientes
versiones
reflejando
User
Story
Map
ejemplo
Ilustración
20
Backbone
historias
usuario
versiones
User
Story
Mapping
Ingeniería
requisitos
ágil
2005-2018
ScrumManager
http://www.scrummanager.net
33
llegado
equipo
estimación
inicial
esfuerzo
necesario
historia
usuario
propietario
producto
estimación
esfuerzo
requerido
desarrollar
MVP
versiones
definidas
User
Story
Map
conoce
velocidad
equipo
puntos
historia
equipo
sprint
duración
sprints
gráfico
producto
obtener
estimación
inicial
probable
entreguen
versio
nes
definidas
momento
estimación
inicial
irá
ajustando
cambiando
medida
tengan
estimaciones
precisas
hagan
entregas
software
funcionando
proporcionen
feedback
producto
funcionalidades
Ilustración
21
Previsión
lanzamiento
versiones
gráfico
producto
visto
técnica
User
Story
Mapping
forma
colaborativa
poderosa
efectiva
definir
visión
producto
pila
historias
usuario
epics
MVP
siguientes
versiones
RoadMap
producto
permite
flexible
puedan
reflejando
cambios
surjan
proceso
desarrollo
entregas
Ingeniería
requisitos
ágil
34
Apéndice
Historias
usuario
ámbitos
agilidad
propagando
ámbitos
compañía
área
especialmente
pr
opicia
marketing
microcampañas
feedback
rápido
forma
sprints
scrum
forma
idónea
trabajo
Jim
Ewel
experto
Agile
Marketing
compara
historias
usuario
marketing
poniendo
foco
diferencias
Historias
usuario
Historias
usuario
marketing
nivel
Alto
nivel
Número
elevado
pila
Relativamente
pila
Hemisferio
izquierdo
cerebro
Hemisferio
derecho
cerebro
Focalizadas
funcionalidades
Focalizadas
resultados
historias
usuario
detalladas
granularidad
fina
marketing
cosas
amplias
pila
producto
marketing
suele
corta
interesante
focalizan
historias
hablar
fun
cionalidades
orientadas
racional
personas
marketing
emocional
gente
marketing
ejemplo
anuncios
impresionado
sentir
acerca
cambió
dí
reír
histéricamente
solución
apunta
historia
marketing
centrar
clientes
quieren
lograr
resolver
problema
aliviar
dolor
aspirar
producto
pregunta
marketing
responder
What’s
In
It
For
WIIFM
patrón
utilizado
historias
usuario
marketing
varía
Ilustración
22
Ejemplo
historia
usuario
marketing
cliente
ideal
quiero
solución
problemas
desaparezcan
35
Bibliografía
Alistair
Cockburn
2001
Agile
software
development
Boston
Addison-Wesley
Professional
Bill
Wake
2003
INVEST
in
good
stories
and
smart
tasks
http://xp123.com/articles/invest-in-good-stories-
and-smart-tasks/
Christiaan
Verwijs
2015
10
useful
strategies
for
breaking
down
large
User
Stories
and
cheatsheet
http://blog.agilistic.nl/10-useful-strategies-for-breaking-down-large-user-stories-and-a-cheatsheet/
Dai
Clegg
2004
Case
Method
Fast-Track
RAD
Approach
Boston
Addison-Wesley
Longman
Don
Reinersten
2009
The
Principles
of
Product
Development
Flow
Second
Generation
Lean
Product
Development
Celeritas
Pub
Gertrudis
López
2016
Esquema
10
estrategias
división
historias
usuario
https://mm.tt/682181724?t=LjoGABkbaF
Heather
Krebsbach
2016
Know
thy
customer
agile’s
essential
guide
to
user
story
maps
https://www.atlassian.com/blog/2016/05/guide-to-agile-user-story-maps
Javier
Garzás
2014
Agilidad
Lean
Gestionando
proyectos
negocios
s.
XXI
https://www.miriadax.net/
Jeff
Patton
2014
User
Story
Mapping
Discover
the
Whole
Story
Build
the
Right
Product
O'Reilly
Media
Inc
Jim
Ewel
2011
Agile
Marketing
http://www.agilemarketing.net/
Kent
Beck
1999
eXtreme
Programming
Explained
Boston
Addison-Wesley
Professional
Mike
Cohn
2004
User
Stories
Applied
for
Agile
Software
Development
Boston
Pearson
Education
Inc
Ron
Jeffries
Ann
Anderson
Chet
Hendrickson
2001
Extreme
Programming
Installed
Boston
Addison-
Wesley
37
Tabla
ilustraciones
Ilustración
Gráfico
fases
fórmula
C’s
Ilustración
Gráfico
niveles
tamaño
requisitos
gestión
ágil
11
Ilustración
Granularidad
pila
producto
12
Ilustración
Ejemplo
tarjeta
historia
usuario
13
Ilustración
Ejemplo
historia
usuario
14
Ilustración
Ejemplo
historia
usuario
15
Ilustración
Ejemplo
User-Persona
16
Ilustración
Cartas
planning
poker
serie
Fibonacci
18
Ilustración
Cartas
estimación
tallas
camisa
19
Ilustración
10
Ejemplo
priorización
WSJF
21
Ilustración
11
Ejemplo
gherkin
23
Ilustración
12
Ejemplo
tarjetas
diseñadas
Braintrust
25
Ilustración
13
Refinamiento
pila
producto
26
Ilustración
14
Esquema
10
estrategias
división
historias
usuario
27
Ilustración
15
Historias
usuario
parecidas
casos
28
Ilustración
16
Historias
usuario
parecidas
requisitos
funciona
29
Ilustración
17
Pila
producto
plana
pila
producto
construida
técnica
User
Story
Mapping
31
Ilustración
18
Ejemplo
Backbone
User
Story
Mapping
32
Ilustración
19
Backbone
historias
usuario
User
Story
Mapping
32
Ilustración
20
Backbone
historias
usuario
versiones
User
Story
Mapping
32
Ilustración
21
Previsión
lanzamiento
versiones
gráfico
producto
33
Ilustración
22
Ejemplo
historia
usuario
marketing
34
38
Índice
Asignación
14
prácticas
27
Campos
13
Caso
30
31
Cómos
11
30
31
Comprobable
26
Coste
demora
22
Criterio
finalización
14
Criterio
validación
14
23
27
30
32
Dependencia
14
Descripción
13
División
horizontal
28
División
vertical
28
Epic
11
33
Equipo
11
13
14
26
30
31
32
33
Esfuerzo
13
Estimable
26
Estimación
13
14
19
26
27
35
Fórmula
C’s
26
31
Funcionalidad
13
21
31
Gherkin
23
Gráfico
producto
35
Granularidad
11
12
Historia
usuario
12
13
14
16
18
21
23
26
28
30
31
32
33
34
35
36
Historia
técnica
32
ID
14
Independiente
26
Información
13
Marketing
36
Método
INVEST
26
Mínimo
Producto
Viable
33
34
35
Módulo
11
14
Negociable
26
Observación
14
Pequeña
26
Pila
producto
12
32
33
Planning
poker
19
20
Prioridad
12
13
14
18
21
Propietario
producto
14
21
26
33
Pruebas
14
23
26
Punto
historia
13
Qués
11
30
31
32
Refinamiento
28
Requisito
31
Riesgo
14
ROI
21
Scrum
10
12
13
14
30
Serie
Fibonacci
19
SMART
23
Sprint
14
Tallas
camisa
20
Tarea
11
Tarjeta
13
15
27
Técnica
MoSCoW
21
Tema
11
Titulo
14
UML
30
User
Story
Mapping
33
User-Persona
16
Usuario
16
UX
16
Valiosa
26
Valor
14
18
21
26
28
Visión
11
WSJF
22
XP
10

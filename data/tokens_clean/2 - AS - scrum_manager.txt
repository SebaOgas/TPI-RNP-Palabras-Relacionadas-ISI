Scrum
Manager
v.
2.6
Scrum
Manager
Guía
formación
Versión
2.6
Julio
2016
EXENCIÓN
RESPONSABILIDAD
AUTORES
LIBRO
MIEMBROS
COLABORADORES
COMUNIDAD
PROFESIONAL
SCRUM
MANAGER
EXPERTOS
GESTIÓN
ÁGIL
PROYECTOS
REALIZAN
TRABAJO
COMPARTIR
CONOCIMIENTO
PROFESIONAL
PERSONAS
ORGANIZACIONES
CONSIDEREN
ÚTIL
TRABAJO
OFRE
CE
GARANTÍA
TIPO
EXPRESA
IMPLÍCITA
INCLUYENDO
GARANTÍAS
IDONEIDAD
PROPÓSITO
PARTICULAR
CASO
AUTORES
TITULARES
DERECHOS
RESPONSABLES
RECLAMACIÓN
DAÑOS
RESPONSABILIDADES
Diseño
cubierta
Scrum
Manager
Imagen
original
The
Albert
Bridge
04
Belfast
William
Murphy
http://www.streetsofdublin.com/
Obra
colectiva
creada
coordinada
Iubaris
Info
Media
SL
Autores
versión
Alexander
Menzinsky
Gertrudis
López
Juan
Palacio
Iubaris
Info
Media
SL
propietaria
derechos
libera
condiciones
licencia
Creative
Commons
by
nd
nc
4.0
Derechos
regitrados
Safe
Creative
nº
registro
1607208414838
Contenido
2005-2016
ScrumManager
http://www.scrummanager.net
Contenido
Contenido
Prefacio
Propósito
libro
Audiencia
Organización
libro
Mejora
continua
control
calidad
Scrum
Manager
Información
recursos
comunidad
profesional
INTRODUCCIÓN
Agilidad
Manifiesto
Ágil
12
principios
manifiesto
ágil
11
Origen
scrum
12
entendemos
scrum
12
1.-
Rugby
12
2.-
Métodos
trabajo
13
14
Scrum
técnico
scrum
avanzado
15
Introducción
marco
técnico
16
Gestión
evolución
proyecto
16
Revisión
Iteraciones
16
Desarrollo
incremental
16
Autoorganización
17
Colaboración
17
Scrum
técnico
19
Scrum
técnico
20
Artefactos
21
Pila
producto
pila
sprint
requisitos
desarrollo
ágil
21
Pila
producto
requisitos
cliente
22
Pila
Sprint
24
Incremento
25
Eventos
26
Sprint
26
Planificación
sprint
27
Scrum
diario
29
Revisión
sprint
30
Retrospectiva
31
Roles
31
Propietario
producto
32
Equipo
desarrollo
33
Scrum
Master
33
Contenido
Valores
principios
scrum
34
Medición
estimación
ágil
35
medir
35
Flexibilidad
sentido
común
35
Criterios
diseño
aplicación
métricas
36
Velocidad
trabajo
tiempo
37
Medición
usos
herramientas
41
Gráfico
producto
41
Gráfico
avance
monitorización
sprint
45
Estimación
póquer
47
49
1.-
Conocimiento
continua
evolución
50
2.-
Empresa
sistema
52
3.-
Flexibilidad
53
Scrum
avanzado
54
Responsabilidades
54
Metodologías
57
Mapa
metodologías
57
Conceptos
57
Patrones
gestión
proyecto
58
Personas
Procesos
Tecnología
59
Procesos
59
Personas
60
Gestión
visual
kanban
obtener
incremento
continuo
60
Kanban
Origen
definición
60
Tableros
kanban
conceptos
62
Kanban
Operativa
63
Casos
prácticos
tableros
kanban
67
Consejos
ajustar
flujo
Muda
Mura
Muri
71
AMPLIACIONES
73
Ingeniería
requisitos
ágil
74
Historias
Usuario
74
Epics
temas
tareas
75
Información
historia
usuario
76
Informaciones
necesarias
opcionales
76
Criterios
validación
79
Calidad
historias
usuario
81
Priorización
historias
usuario
83
División
historias
usuario
84
Comparativa
formas
toma
requisitos
87
Historias
usuario
versus
casos
87
Historias
usuario
versus
requisitos
funcionales
88
Bibliografía
89
Tabla
ilustraciones
91
Índice
93
Prefacio
Propósito
libro
Texto
formación
implantación
mejora
scrum
gestión
ágil
proye
ctos
equipos
organizaciones
partes
II
comprenden
temario
certificación
oficial
Scrum
Manager
niveles
ténico
experto
respectivamente
Audiencia
audiencia
libro
incluye
personas
interesadas
conocimiento
modelo
gestión
ágil
denominado
scrum
Organización
libro
Introducción
Puesta
contexto
scrum
Situación
razón
surgimiento
scrum
finales
siglo
alternativa
desarrollo
secuencial
basado
procesos
Scrum
estándar
información
necesaria
empezar
trabajar
scrum
roles
eventos
artefactos
forman
marco
técnicas
estándar
crum
pautas
implementación
funcionamiento
II
Scrum
Avanzado
claves
potenciar
fluidez
resultados
scrum
mantener
ritmo
producción
sostenible
constante
empleando
indistintamente
entregas
pautadas
sprints
siguiendo
flujo
desarrollo
continuo
Adaptación
prácticas
roles
organización
autoorganización
basada
principios
scrum
aplicación
prácticas
estándar
III
Ampliaciones
apartado
incluido
versión
libro
complemento
temario
troncal
Scrum
Manager
información
especialización
ampliación
determinados
temas
versión
incluye
Ingeniería
requisitos
ágil
Epics
temas
Historias
usuario
tareas
Prefacio
Mejora
continua
control
calidad
Scrum
Manager
Gracias
elegir
formación
Scrum
Manager
valoración
criterio
control
calidad
Scrum
Manager
ayuda
mejorar
decidir
validez
evolución
materiales
cursos
centros
profesores
participado
actividad
formación
audita
Scrum
Manager
rogamos
agradecemos
valore
calidad
material
pr
ofesor
temario
etc.
us
comentarios
sugerencias
Scrum
Manager
anonimiza
información
recibida
forma
comparte
profesores
centros
autorizados
valoraciones
aspectos
mejora
caso
nombres
alumnos
valoración
ÁREA
MIEMBROS
Scrum
Manager
http://scrummanager.net
Prefacio
2005-2016
ScrumManager
http://www.scrummanager.net
Información
recursos
comunidad
profesional
RECURSOS
versión
libro
http://www.scrummanager.net/bok/
Open
Knowledge
Scrum
http://www.scrummanager.net/oks/
Blog
http://www.scrummanager.net/blog/
Acerca
certificación
Scrum
Manager
http://www.scrummanager.net/certificacion
Preguntas
frecuentes
cursos
exámenes
Scrum
Manager
http://www.scrummanager.net/faq-formacion-scrum-manager
REDES
SOCIALES
Twitter
https://twitter.com/scrummanager
Facebook
https://www.facebook.com/Scrum-Manager-144889095527292/
Google+
https://google.com/+ScrummanagerNet/
Pinterest
https://es.pinterest.com/scrummanager/pins/
REDES
PROFESIONALES
Grupo
profesional
LinkedIn
http://www.linkedin.com/e/gis/855957
Comunidades
Google
https://plus.google.com/communities/116174698722878580028
http://www.scrummanager.net
INTRODUCCIÓN
Introducción
2005-2016
ScrumManager
http://www.scrummanager.net
Agilidad
entorno
trabajo
empresas
conocimiento
originó
gestión
proyectos
predictiva
necesitan
estrategias
lanzamiento
productos
orientadas
entrega
temprana
resultados
tangibles
respuesta
ágil
flexible
necesaria
trabajar
mercados
evolución
rápida
construye
producto
tiempo
modifican
introducen
requisitos
cliente
visión
medianamente
clara
nivel
innovación
requiere
velocidad
mueve
entorno
negocio
permiten
prever
detalle
resultado
productos
finales
productos
continua
evolución
mejora
gestión
proyectos
predictiva
única
criterios
determinar
éxito
cumplimiento
fechas
cost
proyectos
cuya
gestión
busque
rabajo
previamente
plani
ficado
presupuesto
tiempo
previamente
calculado
directores
producto
necesitan
200
funcionalidades
producto
terminado
12
16
meses
clientes
necesitan
disponer
versión
funcionalidades
mínimas
cuestión
semanas
producto
completo
años
Clientes
cuyo
interés
mercado
rápidamente
concepto
desarrollar
forma
continua
valor
proyectos
necesitan
gestionar
seguimiento
plan
cuyo
fracaso
consecuencia
modelo
gestión
inapropiado
mayoría
fiascos
producen
aplicar
ingeniería
secuencial
gest
ión
predictiva
proceso
adquisición
requisitos
contratación
seguimiento
entrega
gestión
proyecto
productos
necesitan
garantías
previsibilid
ad
ejecución
respuesta
rápida
flexibilidad
funcionar
entornos
negocio
cambian
evolucionan
rápidamente
Manifiesto
Ágil
marzo
2001
17
profesionales
software
críticos
modelos
producción
basados
procesos
convocados
Kent
Beck
publicado
par
años
libro
explicaba
metodología
Extreme
Programming
Beck
2000
reunieron
Salt
Lake
City
discutir
procesos
empleados
equipos
programación
reunión
acuñó
término
Métodos
Ágiles
definir
surgiendo
alternativa
metodologías
forma
CMM
-SW
precursor
CMMI
PMI
SPICE
proyecto
inicial
ISO
15504
consideraban
excesivamente
pesados
rígidos
carácter
normativo
fuerte
dependencia
planificaciones
detalladas
previas
desarrollo
integrantes
reunión
resumieron
postulados
quedado
denominado
Manifiesto
Ágil
valores
asientan
métodos
2005
defensores
modelos
procesos
modelos
ágiles
frecuentes
posturas
radicales
ocupadas
descalificar
métodos
gestión
proyectos
ágil
formula
necesidad
anticipación
adaptación
continua
Introducción
10
Valoramos
individuos
interacción
procesos
herramientas
postulado
importante
manifiesto
procesos
ayudan
trabajo
guía
operación
herramienta
mejoran
eficiencia
tareas
requieren
talento
necesitan
personas
aporten
trabajen
actitud
adecuada
producción
ba
sada
procesos
persigue
calidad
resultado
consecuencia
know-how
explicitado
procesos
conocimiento
aportado
personas
ejecutan
desarrollo
ágil
procesos
ayuda
soporte
guiar
trabajo
defensa
ultranza
procesos
afirmar
resultados
extraordinarios
personas
mediocres
principio
necesita
creatividad
innovación
Valoramos
software
funciona
documentación
exhaustiva
anticipar
funcionamiento
producto
observando
prototipos
previos
partes
elaboradas
ofrece
feedback
estimulante
enriquecedor
genera
idea
imposibles
concebir
momento
difícilmente
incluir
redactar
documento
requisitos
detallado
comienzo
proyecto
manifiesto
ágil
inútil
documentación
innecesaria
documentos
soporte
hechos
permiten
transferencia
conocimiento
registran
información
histórica
cuestiones
legales
normativas
obligatorios
relevancia
menor
producto
comunicación
documentos
falta
riqueza
producción
valor
logra
comunicación
directa
personas
interacción
prototipos
producto
reducir
mínimo
indispensable
documentación
consume
trabajo
aportar
valor
directo
producto
organización
equipos
comunican
documentos
ad
emás
ocultar
riqueza
interacción
producto
forman
barreras
burocracia
departamentos
personas
Valoramos
colaboración
cliente
negociación
contractual
prácticas
ágiles
indi
cadas
productos
evolución
continua
tipo
productos
definir
documento
requisitos
cerrado
debería
producto
resulta
apropiado
tomar
feedback
forma
continua
paralelo
Manifiesto
Ágil
poniendo
descubierto
mejores
métodos
desarrollar
software
haciéndolo
ayudando
hagan
trabajo
llegado
valorar
individuos
interacción
procesos
herramientas
software
funciona
documentación
exhaustiva
colaboración
cliente
negociación
contractual
respuesta
cambio
seguimiento
plan
valor
elementos
derecha
valoramos
izquierda
Introducción
2005-2016
ScrumManager
http://www.scrummanager.net
11
desarrollo
producto
redefinir
mejorar
consecuencia
requisitos
partes
desarrolladas
objetivo
proyecto
ágil
controlar
ejecución
garantizar
cumplimiento
planificación
proporcionar
forma
continua
valor
producto
Resulta
adecuada
relación
implicación
colaborac
ión
continua
cliente
contractual
delimitación
responsabilidades
Valoramos
respuesta
cambio
seguimiento
plan
desarrollar
productos
requisitos
inestables
inherente
cambio
evolución
rápida
continua
resulta
valiosa
capacidad
respuest
seguimiento
asegu
ramiento
planes
principales
alores
gestión
ágil
anticipación
adaptación
gestión
proyectos
ortodoxa
planificación
control
garantizar
cumplimiento
plan
12
principios
manifiesto
ágil
manifiesto
ágil
postulados
valores
fundamenta
establece
12
principios
principal
prioridad
satisfacer
cliente
entrega
temprana
continua
software
valor
bienvenidos
requisitos
cambiantes
lleg
an
desarrollo
procesos
ágiles
doblegan
cambio
ventaja
competitiva
cliente
Entregar
frecuencia
software
funcione
periodos
par
semanas
par
meses
preferencia
periodos
breves
personas
negocio
desarrolladores
trabajar
juntos
forma
cotidiana
proyecto
Construcción
proyectos
torno
individuos
motivados
dándoles
oportunidad
respaldo
necesitan
procurándoles
confianza
realicen
tarea
forma
eficiente
efectiva
comunicar
información
ida
vuelta
equipo
desarrollo
conversación
cara
cara
software
funciona
principal
medida
progreso
procesos
ágiles
promueven
desarrollo
sostenido
patrocinadores
desarrolladores
usuarios
mantener
ritmo
constante
forma
indefinida
atención
continua
excelencia
técnica
enaltece
agilidad
10
simplicidad
arte
maximizar
cantidad
trabajo
esencial
11
mejores
arquitecturas
requisitos
diseños
emergen
equipos
autoorganizan
12
intervalos
regulares
equipo
reflexiona
forma
efectivo
ajusta
conducta
consecuencia
Introducción
12
Origen
scrum
Scrum
modelo
desarrollo
ágil
caracterizado
Adoptar
estra
tegia
desarrollo
incremental
lugar
planificación
ejecución
completa
producto
Basar
calidad
resultado
conocimiento
tác
ito
personas
equipos
autoorganizados
calidad
procesos
empleados
Solapamiento
fases
desarrollo
lugar
realizarlas
ciclo
secuencial
cascada
modelo
identificado
defi
nido
Ikujiro
Nonaka
Hirotaka
Takeuchi
principios
80
analizar
desarrollaban
productos
principales
empresas
manufactura
tecnológica
Fuji-Xerox
Canon
Honda
Nec
Epson
Brother
Hewlett
-Packard
Nonaka
Takeuchi
The
New
New
Product
Development
Game
1986
estudio
Nonaka
Takeuchi
compararon
forma
trabajo
equipo
identificando
avance
formación
scrum
jugadores
Rugby
razón
denominaron
scrum
forma
trabajo
surgió
empresas
productos
tecnológicos
apropiada
proyectos
requisitos
inestables
requieren
rapidez
flexibilidad
situaciones
frecuentes
desarrollo
determinados
sistemas
software
1995
Ken
Schwaber
presentó
Scrum
Development
Process
OOPSLA
95
Object-Oriented
Programming
Systems
Applications
conference
SCRUM
Development
Process
marco
reglas
desarrollo
software
basado
principios
scrum
empleado
desarrollo
Delphi
Jeff
Sutherland
empresa
Easel
Corporation
compañía
macrojuegos
compras
fusiones
integraría
VMARK
Informix
finalmente
Ascential
Software
Corporation
entendemos
scrum
1.-
Rugby
Formación
rugby
Scrum
término
define
formación
reconocible
rugby
equipos
agazapados
atenazados
empujan
obtener
balón
sacarlo
formación
tocarlo
mano
Figura
Formación
rugby
scrum
Introducción
2005-2016
ScrumManager
http://www.scrummanager.net
13
2.-
Métodos
trabajo
Ambiente
trabajo
ágil
autoorganizado
1986
investigadores
Nonaka
Takeuchi
dimensión
polisémica
término
originalmente
deportivo
scrum
mplearlo
bautizar
principios
desarrollo
descubrieron
empresas
ecnológicas
innovadoras
Takeuchi
Nonaka
1986
Scrum
concepción
original
Nonaka
Takeuchi
caracteriza
protagonismo
equipos
brillantes
utoorganizados
motivados
abordan
desarrollo
sistemas
complejos
partiendo
visión
general
solapando
fases
desarrollo
Metodología
desarrollo
software
1995
Ken
Schwaber
presentó
OOPSLA
Conferencia
anual
Object
-Oriented
Programming
Systems
Language
Applications
Schwaber
SCRUM
Development
Process
1995
metodología
desarrollo
software
basada
ambiente
scrum
término
definir
proceso
Marco
desarrollo
software
basado
metodología
scrum
Ken
Schwaber
2005
Mike
Cohn
Esther
Derby
Ken
Schwaber
constituyeron
organización
Scrum
Alliance
difundir
marco
trabajo
específico
desarrollo
softwa
re
basado
metodología
denominaron
scrum
Scrum
Manager
término
significado
original
Nonaka
Takeuchi
ambiente
trabajo
caracterizado
composición
equipos
autoorganizados
trabajan
forma
ágil
autonomía
solapamiento
fases
desarrollo
compartiendo
conocimiento
aprendizaje
forma
abierta
Figura
Scrum
marco
trabajo
1986
Hirotaka
Takeuchi
Ikujiro
Nonaka
The
New
New
Product
Development
Game
Figura
Ken
Schwaber
Scrum
Development
Process
Figura
Marco
scrum
reglas
scrum
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
15
Scrum
técnico
scrum
avanzado
empezar
scrum
recomendable
adoptar
marco
estándar
explica
roles
artefactos
eventos
configuran
v.
diagrama
pág.
18
conseguido
flujo
avance
ontinuo
iterativo
objetivo
allá
mo
delo
ingeniería
concurrente
adoptar
prácticas
scrum
puedan
resultar
adecuadas
características
proyecto
equipo
llega
momento
desaprender
prácticas
estándar
apoyarnos
valores
scrum
lugar
técnica
libro
muestra
técnicas
básicas
scrum
reglas
aplicación
roles
eventos
artefactos
emplean
Scrum
técnico
Reglas
Scrum
avanzado
Valores
Marco
reglas
desarrollo
software
Autores
Ken
Schwaber
Jeff
Sutherland
Scrum
Development
Process
OOPSLA’95
1995
Concepto
original
scrum
Autores
Hirotaka
Takeuchi
Ikujiro
Nonaka
The
New
New
Product
Development
Game
1986
Aplicación
reglas
definidas
Aplicación
valores
ágiles
Roles
Dueño
producto
Equipo
desarrollo
Scrum
Master
Eventos
Sprint
Reunión
planificación
Scrum
diario
Revisión
sprint
Retrospectiva
sprint
Artefactos
Pila
product
Pila
sprint
Incremento
Personas
procesos
Resultado
documentación
Colaboración
negociación
Cambio
planificación
avanzar
scrum
Incertidumbre
Autoorganización
Fases
desarrollo
solapadas
Multiaprendizaje
Control
sutil
Difusion
conocimiento
Aprender
reglas
scrum
Aprender
avanzar
scrum
reglas
reglas
scrum
Introducci
16
Introducción
marco
técnico
marco
técnico
scrum
formado
conjunto
prácticas
reglas
respuesta
siguientes
principios
desarrollo
ágil
Gestión
evolutiva
producto
lugar
tradicional
predictiva
Calidad
resultado
basado
conocimiento
tácito
personas
explícito
procesos
tecnología
empleada
Estrategia
desarrollo
incremental
iteraciones
sprints
comienza
visión
general
resultado
desea
especifica
detalle
funcionalidades
desean
obtener
lugar
ciclo
desarrollo
iteración
sprint
finaliza
entrega
operativa
producto
incremento
duración
sprint
semanas
recomienda
exceda
mes
scrum
equipo
monitoriza
evolución
sprint
reuniones
breves
diarias
revisa
conjunto
trabajo
miembro
previsto
actual
reuniones
diarias
tiempo
cerrado
minutos
máximo
realiza
pie
tablero
pizarra
información
tareas
sprint
trabajo
pendiente
reunión
denomina
reunion
pie
scrum
diario
emplea
terminología
inglesa
stand-up
meeting
daily
scrum
morning
rollcall
Gestión
evolución
proyecto
Scrum
maneja
forma
empírica
evolución
proyecto
siguientes
tácticas
Revisión
Iteraciones
inalizar
sprint
revisa
funcionalmente
resultado
implicados
proyecto
duración
sprint
período
tiempo
máximo
descubrir
planteamientos
erróneos
mejorables
malinterpretaciones
funcionalidades
producto
Desarrollo
incremental
trabaja
diseños
abstracciones
desarrollo
incremental
ofrece
iteración
producto
operativa
inspeccionar
evaluar
Scrum
resulta
adecuado
proyectos
requisitos
inciertos
inestables
predecir
versión
definitiva
evolucionando
forma
continua
Scrum
inestabilidad
premisa
adopta
técnicas
trabajo
facilitar
evolución
degradar
calidad
arquitectura
permitir
evolucione
desarrollo
construcción
depura
diseño
arquitectura
cierran
fase
proyecto
as
distintas
fases
desarr
ollo
cascada
realiza
forma
secuencial
scrum
solapan
realizan
forma
continua
simultánea
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
17
Autoorganización
factores
impredecib
proyecto
gest
ión
predictiva
asigna
rol
gestor
proyecto
responsabilidad
gestión
resolución
scrum
equipos
autoorganizados
ámbito
decisión
suficiente
adoptarlas
resoluciones
consideren
oportunas
Colaboración
componente
importa
nte
necesario
autoorganización
gestionar
solvencia
labor
forma
realizaría
gestor
proyectos
miembros
equipo
colaboran
forma
abierta
capacidades
rol
puesto
Scrum
2005-2016
ScrumManager
http://www.scrummanager.net
18
Ilustración
Marco
scrum
técnico
Scrum
técnico
reglas
scrum
20
Scrum
técnico
marco
técnico
scrum
formado
Roles
equipo
scrum
dueño
producto
Scrum
Master
Artefactos
Pila
producto
Pila
sprint
incremento
Eventos
Sprint
Reunión
planificación
sprint
Scrum
diario
Revisión
sprint
Retrospectiva
sprint
pieza
clave
sprint
denomina
sprint
ciclo
iteración
trabajo
produce
producto
terminada
funcionalmente
operativa
incremento
verá
tratar
scrum
avanzado
implementaciones
flexibles
scrum
adoptar
tácticas
mantener
avance
continuo
proyecto
Incremento
iterativo
basado
pulsos
tiempo
prefijado
timeboxing
Incremento
continuo
basado
mantenimiento
flujo
continuo
marcado
pulsos
sprints
Ilustración
Incremento
iterativo
continuo
Scrum
técnico
trabaja
pulsos
tiempo
prefijado
denominan
sprints
Emplea
incremento
iterativo
mantener
ritmo
avance
constante
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
21
Artefactos
Pila
producto
product
backlog
lista
requisitos
usuario
visión
inicial
producto
crece
evoluciona
desarrollo
Pila
sprint
sprint
backlog
lista
trabajos
equipo
sprint
generar
incremento
previsto
Incremento
resultado
sprint
Ilustración
Diagrama
ciclo
iterativo
scrum
artefacto
modelo
estándar
scrum
gráfico
avance
gráfico
burn
down
equipo
actualiza
diario
comprobar
avance
elemento
práctica
estimación
póquer
gráfico
producto
burn
up
incluido
capítulo
Métricas
Ágiles
pág.
45
Pila
producto
pila
sprint
requisitos
desarrollo
ágil
ingeniería
software
tradicional
requisitos
sistema
forman
proceso
adquisición
responsabilidad
cliente
definición
problema
funcionalidades
aportar
solución
importa
gestión
tradicional
ágil
pila
producto
responsabilidad
cliente
aborda
forma
caso
Ilustración
Requisitos
completos
evolutivos
reglas
scrum
22
proyectos
predictivos
requisitos
sistema
suelen
especificarse
documentos
formales
proyectos
ágiles
toman
forma
pila
producto
lista
historias
usuario
requisitos
sistema
formales
especifican
forma
comp
leta
cerrada
inicio
proyecto
pila
producto
documento
vivo
evoluciona
desarrollo
requisitos
sistema
desarrolla
persona
equipo
especializado
ingeniería
requisitos
proce
so
obtención
licitación
cliente
crum
cliente
propietario
producto
comparte
visión
equipo
pila
producto
realiza
evoluciona
forma
continua
aportes
Scrum
emplea
formatos
registrar
requisitos
Pila
producto
Product
Backlog
Pila
sprint
Sprint
Backlog
pila
producto
registra
requisitos
vistos
punto
vista
cliente
enfoque
similar
requisitos
sistema
ConOps
ingeniería
software
tradicional
formada
lista
funcionalidades
historias
usuario
desea
obtene
cliente
ordenadas
prioridad
pila
sprint
refleja
requisitos
vistos
punto
vista
equipo
desarrollo
formada
lista
tareas
descomponen
historias
usuario
cabo
sprint
desarrollo
mantenimiento
pila
producto
relevante
formato
historias
usuario
incluye
den
forma
visión
producto
definida
conocida
equipo
historias
usuario
estén
individualmente
definidas
priorizadas
preestimadas
Esté
realizada
gestionada
cliente
propietario
producto
Pila
producto
requisitos
cliente
pila
producto
lista
ordenada
propietario
producto
cree
necesita
producto
inventario
fun
cionalidades
mejoras
tecnología
corrección
errores
incorporarse
producto
sucesivos
sprints
Representa
esperan
cliente
usuarios
general
interesados
suponga
trabajo
equipo
reflejado
pila
ejemplos
posibles
entradas
pila
producto
Ofrecer
usuarios
consulta
obras
publicadas
determinado
autor
Reducir
tiempo
instalación
programa
Ofrecer
consulta
obra
API
web
pila
producto
completada
continuo
crecimi
ento
evolución
comenzar
proyecto
incluye
requisitos
inicialmente
conocidos
entendido
evoluciona
conforme
avanza
desarrollo
Gracias
carácter
dinámico
refleja
producto
necesita
incorporar
adecuarse
circunstancias
momento
empezar
iterar
producto
necesario
propietario
producto
visión
objetivo
negocio
comparta
equipo
pila
producto
historias
usuario
suficientes
sprint
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
23
Habitualmente
empieza
elaborar
pila
producto
resultado
reunión
tormenta
ideas
fertilización
cr
uzada
proceso
Exploración
eXtreme
Programming
colabora
equipo
comprende
comparte
visión
propietario
producto
propietario
producto
mantiene
pila
ordenada
prioridad
elementos
prioritarios
confieren
valor
producto
razón
resultan
necesarios
determinan
actividades
desarrollo
inmediatas
grado
concreción
historias
usuario
pila
producto
proporcional
prioridad
prioridad
tene
nivel
detalle
suficiente
descomponerse
tareas
pasar
sprint
elementos
pila
producto
incorporados
sprint
denominan
preparados
accionables
seleccionarse
reunión
planificación
sprint
Preparación
pila
producto
denomina
preparación
grooming
pila
prod
ucto
actividades
priorización
detalle
estimación
elementos
componen
proceso
realizan
forma
puntual
momento
continua
colaborativa
propietario
producto
equipo
desarrollo
consumir
10%
capacidad
trabajo
equipo
responsabilidad
estimar
esfuerzo
previsible
elemento
personas
equipo
previsiblemente
harán
trabajo
Formato
pila
producto
Scrum
prefiere
comunicación
verbal
visualización
directa
escrita
pila
producto
documento
requisitos
herramienta
información
equipo
emplea
formato
lista
información
mínima
suele
incluir
historia
usuario
Descripción
funcionalidad
requisito
denominado
historia
usuario
Prioridad
Preestimación
esfuerzo
necesario
código
identificador
único
historia
características
proyecto
equipo
incluir
pila
producto
información
adicional
Observaciones
Criterio
validación
Persona
asignada
Nº
Sprint
realiza
Módulo
sistema
pertenece
reglas
scrum
24
ejemplo
formato
pila
producto
Id
Prioridad
Descripción
Est
alta
Plataforma
tecnológica
30
Alta
Interfaz
usuario
40
Alta
usuario
registra
sistema
40
Alta
operador
define
flujo
textos
expediente
60
Alta
xxx
999
Ilustración
Ejemplo
pila
producto
Pila
Sprint
pila
sprint
sprint
Backlog
lista
tareas
necesarias
construir
historias
usuario
sprint
confecciona
equipo
reunión
planificación
sprint
indicando
tarea
esfuerzo
previsto
realizarla
calcular
esfuerzo
tarea
puntos
tiempo
ideal
v.
pág
38
habitual
emplear
técnicas
estimación
póquer.(pág
47
pila
sprint
descompone
historias
usuario
unidades
tamaño
adecuado
monitorizar
avance
diario
identificar
riesgos
problemas
necesidad
procesos
gestión
complejos
herramienta
comunicación
visual
directa
equipo
Condiciones
Realizada
forma
conjunta
miembros
equipo
Cubre
tareas
identificadas
equipo
objetivo
sprint
equipo
modificar
sprint
tareas
descomponerse
péquelas
caso
tarea
tamaño
necesite
trabajo
visible
equipo
Ide
almente
tablero
pared
espacio
físico
trabaja
equipo
Formato
soporte
soportes
habituales
Tablero
físico
pared
Hoja
cálculo
Herramienta
colaborativa
gestión
proyectos
adecuado
características
proyecto
oficina
equipo
apropiado
diseñar
formato
cómodo
teniendo
siguientes
criterios
Incluir
siguie
nte
información
Pila
sprint
persona
responsable
tarea
tiempo
trabajo
queda
completarla
Incluir
información
estrictamente
necesaria
servir
registrar
reunión
diaria
sprint
tiempo
queda
tarea
Facilitar
consulta
comunicación
diaria
directa
equipo
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
25
Ejemplo
Ilustración
10
Ejemplo
pila
sprint
hoja
cálculo
sprint
equipo
ac
tualiza
diario
tiempos
pendientes
tarea
tiempo
datos
traza
gráfico
avance
trabajo
consumido
burn
-down
describe
capítulo
métricas
ágiles
Incremento
incremento
producto
producida
spri
nt
característica
completamente
terminada
operativa
condiciones
entregada
cliente
considerar
Incremento
prototipos
módulos
sub
-módulos
partes
pendientes
pruebas
integración
Idealmente
scrum
elemento
pila
producto
refiere
funcionalidades
entregables
trabajos
internos
tipo
diseño
base
datos
produce
incremento
iteración
excepción
frecuente
sprint
suele
denominar
sprint
.cuando
objetivos
tipo
contrastar
plataforma
diseño
resultan
necesarios
comenzar
proyectos
implican
trabajos
diseño
desarrollo
prototipos
contrastar
expectativas
plataforma
tecnología
emplear
Teniendo
excepción
habitual
proy
ecto
sistema
requiere
docu
mentación
procesos
validación
verificación
documentados
niveles
independencia
implican
procesos
terceros
realizados
considerar
incremento
Incremento
producto
realizada
sprint
potencialmente
entregable
terminada
probada
reglas
scrum
26
Eventos
Sprint
nombre
recibe
iteración
desarrollo
núcleo
central
genera
pulso
avance
ritmo
tiempos
prefijados
time
boxing
Reunión
Planificación
sprint
reunión
trabajo
marca
inicio
sprint
determina
objetivo
sprint
tareas
necesarias
conseguirlo
Scrum
diario
reunión
diaria
equipo
miembro
responde
cuestiones
1.-
trabajo
2.-
previsto
3.-
Cosas
necesitar
impedimentos
eliminarse
trabajo
persona
actualiza
pila
sprint
tiempo
esfuerzo
pendiente
tareas
información
actualiza
gráfico
equipo
monitoriza
avance
sprint
v.
pág.
45)(burn-down
Revisión
sprint
análisis
inspección
incremento
generado
adaptación
pila
producto
resulta
necesario
cuarta
reunión
incorporó
marco
estándar
scrum
década
2.000
Retrospectiva
sprint
revisión
sucedido
Sprint
Reunión
equipo
analiza
aspectos
operativos
forma
trabajo
crea
plan
mejoras
aplicar
sprint
Sprint
evento
clave
scrum
mantener
ritmo
avance
continuo
sprint
periodo
tiempo
acotado
time
-box
duración
máxima
semanas
construye
incremento
producto
incremento
sprint
be
terminado
completamente
operativo
útil
cliente
condiciones
desplegado
distribuido
Ámbito
sprint
comenzar
trabajar
sc
rum
recomendable
considerar
sprint
evento
contenedor
eve
ntos
reunión
planificación
sprint
scrum
diario
revisión
sprint
retrospectiva
forma
marcar
ritm
diario
avance
visibilidad
tareas
scrum
diario
marca
ritmo
fijo
comprob
ar
av
ance
visibilidad
producto
planificación
revisión
sprint
visibilidad
punto
reflexión
mejora
trabajo
retrospectiva
implementaciones
avanzadas
scrum
considerar
ámbito
sprint
construcción
incremento
dejando
reuniones
planificación
revisión
sprint
retrospectiva
implicaciones
reducir
ámbito
interesar
equipo
calcular
velocidad
sprint
considerando
tiempo
trabajo
incluir
reuniones
inicio
cierre
retrospectiva
lexibilidad
sprints
duraciones
independizar
frecuencia
retrospectivas
sprints
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
27
Planificación
sprint
Descripción
reunión
toman
base
prioridades
necesidades
negocio
cliente
determinan
funcionalidades
incorporarán
producto
sprint
reunión
conducida
responsable
funcionamiento
marco
scrum
Scrum
Master
scrum
técnico
miembro
equipo
scrum
avanzado
asistir
propietario
producto
equipo
completo
asistir
implicados
proyecto
reunión
durar
jornada
trabajo
completa
volumen
complejidad
historias
usuario
desean
incluir
incremento
reunión
respuesta
cuestiones
entregará
terminar
sprint
trabajo
necesario
incremento
previsto
llevará
cabo
equipo
reunión
articula
partes
duración
similar
respuesta
cuestiones
Precondiciones
organización
determinados
asignados
recursos
disponibles
cabo
sprint
preparadas
historias
usuario
prioridad
pila
producto
forma
nivel
concreción
suficiente
estimación
previa
trabajo
requieren
equipo
conocimiento
tecnologías
empleadas
negocio
product
suficiente
esti
maciones
basadas
juicio
exper
tos
comprender
conceptos
negocio
expone
propietario
producto
Entradas
pila
producto
producto
desarrollado
incrementos
anteriores
sprint
Dato
velocidad
rendimiento
equipo
sprint
emplea
criterio
estimar
cantidad
trabajo
razonable
suponer
sprint
Circunstancias
condiciones
negocio
cliente
escenario
tec
nológico
empleado
Resultados
Pila
sprint
Duración
sprint
fecha
reunión
revisión
Objetivo
sprint
Formato
reunión
reunión
marca
inicio
sprint
Duración
máxima
Asistentes
Propietario
producto
equipo
desarrollo
Scrum
Master
asistir
aporten
información
útil
reunión
abierta
Consta
partes
separadas
pausa
café
comida
duración
reglas
scrum
28
entregará
terminar
sprint
propietario
producto
presenta
pila
producto
exponiendo
historias
usuario
prioridad
necesita
prevé
desarrollar
sprint
pila
producto
cambios
significativos
reunión
explica
causas
ocasionado
objetivo
equipo
conozca
razones
detal
nivel
suficiente
comprender
trabajo
sprint
Propietario
producto
Presenta
historias
usuario
pila
producto
prioridad
estima
sprint
presentación
nivel
detalle
suficiente
transmitir
equipo
información
necesaria
construir
incremento
equipo
Realiza
preguntas
solicita
aclaraciones
necesarias
Propone
sugerencias
modificaciones
soluciones
alternativas
aportes
equipo
suponer
modificaciones
pila
eunión
punto
caliente
scrum
favorecer
fertilización
cruzada
ideas
equipo
añadir
valor
visión
producto
reordenar
replantear
historias
pila
producto
equipo
define
objetivo
sprint
frase
sintetiza
valor
entregar
cliente
Exceptuando
sprint
dedicados
colecciones
tareas
desordenadas
elaboración
lema
forma
conjunta
reunión
garantía
equipo
comprende
comparte
finalidad
trabajo
sprint
sirve
criterio
referencia
decisiones
autogestiona
equipo
conseguirá
incremento
equipo
desglosa
funcionalidad
tareas
estima
esfuerzo
componiendo
tareas
forman
pila
sprint
desglose
equipo
elementos
diseño
arquitectura
deberá
incorporar
sistema
miembros
equipo
establecen
tareas
sprint
autoasignan
tomando
criterios
co
nocimientos
intereses
distribución
homogénea
trabajo
considerarse
reunión
equipo
miembros
descompongan
estimen
asignen
trabajo
papel
propietario
producto
atender
dudas
comprobar
equipo
comprende
comparte
objetivo
Scrum
Master
actúa
moderador
reunión
Funciones
Scrum
Master
Scrum
Master
moderador
reunión
responsable
garante
1.-
reunión
sprint
2.-
Asegurar
pila
producto
preparada
propietario
producto
3.-
Ayudar
mantener
diálogo
propietario
producto
equipo
4.-
Asegurar
llegue
propietario
producto
equipo
incluirá
incremento
5.-
Ayudar
equipo
comprender
visión
necesidades
negocio
cliente
6.-
Asegurar
equipo
descomposición
estimación
trabajo
realistas
considerado
posibles
tareas
necesarias
análisis
investigación
apoyo
7.-
Asegurar
reunión
objetivamente
determinados
elementos
pila
producto
ejecutar
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
29
objetivo
sprint
pila
sprint
tareas
estimadas
duración
sprint
fecha
reunión
revisión
Ejemplo
tablero
operativo
reunión
recomendable
propietario
prod
ucto
emplee
hoja
cálculo
herramienta
similar
guardar
formato
digital
pila
producto
aconsejable
usarla
base
trabajar
reunión
reunión
preferible
pizarra
tablero
fichas
etiquetas
removibles
tablero
facilita
comunicación
trabajo
reunión
Ilustración
11
Ejemplo
pizarra
trabajo
soportes
habituales
Pizarra
blanca
notas
adhesivas
tipo
Post-it
Tablero
corcho
laminado
chinchetas
sujetar
notas
Tablero
acero
vitrificado
soportes
magnéticos
sujetar
notas
cinta
adhesiva
removible
marcan
líneas
delimitar
área
superior
equipo
anota
unidades
trabajo
velocidad
media
equipo
sprints
semanas
Duración
finalmente
sprin
objetivo
establecido
duración
hora
fijada
ara
reuniones
diarias
fecha
prevista
reunión
revisión
sprint
B.-
franja
ordenar
elementos
pila
producto
menor
prioridad
C.-Una
franja
paralela
descomponer
elemento
pila
producto
correspondientes
tareas
pila
sprint
Scrum
diario
Descripción
Reunión
diaria
15
minutos
equipo
sincroniza
trabajo
establece
plan
24
horas
siguientes
Entradas
Pila
sprint
gráfico
avance
burn-down
actualizados
información
reunión
Información
avance
miembro
equipo
reglas
scrum
30
Resultados
Pila
sprint
gráfico
avance
burn-down
actualizados
Identificación
posibles
necesidades
impedimentos
Formato
reunión
recomienda
realizarla
pie
tablero
pila
sprint
gráfico
avance
sprint
puedan
compartir
información
anotar
reunión
presente
equipo
asistir
personas
rela
cionadas
proyecto
organización
intervenir
reunión
miembro
equipo
desarrollo
explica
logrado
scrum
diario
scrum
diario
teniendo
problema
prevé
encontrar
impedimento
actualiza
pila
sprint
esfurezo
estima
pendiente
tareas
asignadas
marca
finalizadas
completadas
reunión
equipo
refresca
gráfico
avance
sprint
estimaciones
actualizadas
Scrum
Master
realiza
gestiones
adecuadas
resolver
necesidades
impedimentos
identificados
equipo
responsable
reunión
Scrum
Master
reunión
inspección
control
comunicación
equipo
compartir
trabajo
chequear
ritmo
avance
colaborar
posibles
dificultades
impedimentos
Revisión
sprint
Descripción
Reunión
realizada
sprint
comprobar
incremento
durar
horas
caso
revisar
sprints
largos
habitual
horas
duración
suele
suficiente
Objetivos
propietario
producto
comprueba
progreso
sistema
reunión
marca
intervalos
regulares
rit
mo
construcción
trayectoria
tomando
visión
producto
propietario
producto
identifica
historias
usuario
considerar
hechas
probar
incremento
propietario
producto
equipo
general
obtienen
feedback
relevante
revisar
pila
producto
ingenieros
programadores
empresa
asistir
trabaja
tecnología
empleada
Precondiciones
concluido
sprint
Asiste
equipo
desarrollo
propietario
producto
Scrum
Master
personas
implicadas
proyecto
deseen
Entradas
Incremento
terminado
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
31
Resultados
Feedback
propietario
producto
hito
seguimiento
construcción
sistema
información
mejorar
valor
visión
producto
Convocatoria
reunión
sprint
Formato
reunión
reunión
informal
objetivo
incremento
prohibidas
presentaciones
gráficas
powerpoints
equipo
in
vertir
hora
desarrollar
reunión
muestra
resultado
terminado
probado
operando
entorno
cliente
incremento
características
proyecto
incluir
documentación
usuario
técnica
reunión
informativa
misión
toma
decisiones
crítica
incremento
infor
mación
obtenida
posteriormente
ropietario
producto
tratará
posibles
modificaciones
visión
producto
Protocolo
recomendado
1.-
equipo
expone
objetivo
sprint
lista
funcionalidades
incluían
desarrollado
2.-
equipo
introducción
general
sprint
demuestra
funcionamiento
partes
construidas
3.-
abre
tur
preguntas
sugerencias
genera
información
valiosa
propietario
producto
equipo
general
puedan
mejorar
visión
producto
4.-
Scrum
Master
agendas
propietario
producto
equipo
cierra
fecha
reunión
preparación
sprint
Retrospectiva
Reunión
realiza
revisión
sprint
reunión
planificación
duración
recomendada
horas
duración
sprint
terminado
equipo
realiza
autoanálisis
for
ma
trabajar
identifica
fortalezas
puntos
débiles
objetivo
consolidar
afianzar
primeras
planificar
acciones
mejora
segundos
realice
normalmente
sprint
considerarlas
erróneamente
reuniones
revisión
sprint
aconsejable
tratarlas
separado
objetivos
objetivo
revisión
sprint
analizar
construyendo
reunión
retrospectiva
centra
construyendo
trabajando
objetivo
analizar
problemas
aspectos
mejorables
reuniones
retrospectivas
realizadas
forma
periód
ica
equipo
mejorar
forma
trabajo
consideran
componente
marco
técnico
scrum
reunión
seguimiento
evolución
producto
mejora
marco
trabajo
Roles
personas
intervienen
relación
directa
indirecta
proyecto
clasifican
grupos
comprometidos
implicados
círculos
scrum
frecuente
llamar
connotación
peyorativa
cerdos
segundos
gallinas
origen
nombres
metáfora
ilustra
forma
gráfica
diferencia
compromiso
implicación
proyecto
gallina
cerdo
paseaban
carretera
gallina
preguntó
cerdo
Quieres
abrir
restaurante
cerdo
propuesta
respondió
gustaría
llamaríamos
gallina
respondió
huevos
jamón
reglas
scrum
32
cerdo
detuvo
pausa
contestó
Pensándolo
abrir
restaurante
estaría
realmente
comprometido
estarías
implicada
COMPROMETIDOS
CERDOS
IMPLICADOS
GALLINAS
Propietario
producto
interesados
dirección
gerencias
comerciales
marketing
etc.
Miembros
equipo
Ilustración
12
Roles
estándar
scrum
Propietario
producto
persona
respo
nsable
lograr
valor
producto
clientes
usuarios
resto
implicados
Equipo
desarrollo
grupo
grupos
trabajo
desarrollan
producto
observación
punto
ol
Scrum
Master
ocasiones
frecuente
duda
considerar
rol
comprome
tido
implicado
Partiendo
división
personas
comprometidas
personas
implicadas
ceptual
relevante
trabaja
rol
presente
responsabil
idad
funcionamiento
marco
scrum
técnico
organización
responsabilidad
directa
misión
forma
trabajo
quedando
producto
elaborado
objetivo
nivel
indirecto
razón
cuadro
ol
Scrum
Master
caso
cuestión
especialmente
relevante
hubiera
forzar
respuesta
criterio
comprometido
royecto
mejora
forma
trabajo
debería
considerar
rol
implicado
Propietario
producto
propietario
producto
product
owner
toma
decisiones
cliente
responsabilidad
valor
producto
simplificar
comunicación
toma
decisiones
necesario
rol
recaiga
única
persona
cliente
organización
departamentos
adoptar
forma
comunicación
interna
consideren
oportuna
equipo
desarrollo
integra
persona
representación
cliente
conocimiento
suficiente
producto
atribuciones
necesarias
tomar
decisiones
corresponden
resumen
propietario
producto
Decide
instancia
resultado
orden
construyendo
sucesivos
incrementos
pone
quita
pila
producto
prioridad
historias
usuario
Conoce
plan
producto
posibilidades
plan
inversión
retorno
esperado
inversión
realizada
responsabiliza
fechas
funcionalidades
versiones
desarrollos
internos
empresa
suele
asumir
rol
product
manager
responsable
marketing
des
arrollos
clientes
externos
responsable
proceso
adquisición
cliente
circunstancias
proyecto
delegue
equipo
desarrollo
alguien
confianza
responsabilidad
ejercer
rol
necesario
perfectamente
entorno
negocio
cliente
necesidades
objetivo
persigue
sistema
construyendo
visión
producto
necesidades
concretas
proyecto
priorizar
eficientemente
trabajo
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
33
Disponer
atribuciones
conocimiento
plan
producto
suficiente
tomar
decisiones
necesarias
proyecto
incluidas
cubrir
expectativas
previstas
retorno
Inversión
proyecto
Recibir
analizar
forma
continua
retroinformación
entorno
negocio
evolución
mercado
competencia
alternativas
proyecto
sugerencias
equipo
alternativas
técnicas
pruebas
evaluación
incremento
recomendable
propietario
producto
Conozca
scrum
solvencia
tareas
corresponden
Desarrollo
administración
pila
producto
Exposición
visión
historias
usuario
participación
reunión
planificación
sprint
Conozca
trabajado
previamente
equipo
organización
respetar
decisiones
modificar
prioridades
elementos
pila
producto
Equipo
desarrollo
forman
grupo
profesionales
realizan
incremento
sprint
recomienda
equipo
scrum
personas
allá
resulta
difícil
mantener
comunicación
directa
manifiestan
intensidad
roces
habituales
dinámica
grupos
comienzan
aparecer
personas
cómputo
número
miembros
equipo
desarrollo
consideran
Scrum
Master
propietario
producto
grupo
trabajo
formado
arquitecto
diseñador
analista
programadores
testers
equipo
multifuncional
miembros
trabajan
forma
solidaria
responsabilidad
compartida
miembros
especialis
tas
áreas
concretas
responsabilidad
incremento
sprint
recae
equipo
desarrollo
conjunto
principales
responsab
ilidades
allá
auto
organización
tecnologías
ágiles
marcan
diferencia
grupo
trabajo
equipo
grupo
trabajo
conjunto
personas
realizan
trabajo
asignación
específica
tare
as
responsabilidades
siguien
do
proceso
pautas
ejecución
operarios
cadena
forman
grupo
trabajo
jefe
común
trabajan
organización
responde
trabajo
equipo
espíritu
colaboración
propósito
común
valor
visión
cliente
equipo
scrum
responde
conjunto
Trabaja
forma
cohesionada
autoorganizada
gestor
delimitar
asignar
coordinar
tareas
miembros
realizan
equipo
conocen
comprenden
visión
propietario
producto
Aportan
colaboran
propietario
producto
desarrollo
pila
producto
Comparten
forma
conjunta
objetivo
sprint
responsabilidad
logro
miembros
participan
decisiones
respetan
opiniones
aportes
conocen
scrum
Scrum
Master
responsable
cumplimiento
reglas
marco
crum
técnico
asegurando
entienden
organización
trabaja
conforme
Proporciona
asesoría
formación
necesaria
propietario
producto
equipo
Realiza
trabajo
modelo
liderazgo
servil
servicio
ayuda
equipo
propietario
producto
Proporciona
reglas
scrum
34
Asesoría
formación
equipo
trabajar
forma
autoorganizada
responsabilidad
equipo
Revisión
validación
pila
producto
Moderación
reuniones
Resolución
impedimentos
sprint
entorpecer
ejecución
tareas
Gestión
dificultades
dinámica
grupo
puedan
general
equipo
Configuración
diseño
continua
prácticas
crum
organización
Respeto
organización
implicados
pautas
tiempos
formas
scrum
crecer
fluidez
organización
evolucionar
marco
scrum
avanzado
necesario
rol
Scrum
Master
responsabilidades
estén
institucionalizadas
organización
Valores
principios
scrum
Scrum
técnico
define
marco
ayuda
organizar
personas
flujo
trabajo
carrocería
interfaz
visible
motor
agilidad
valores
ágiles
principios
rigen
forma
trabajo
reglas
equipo
crum
marco
técnico
agilidad
proporciona
cumplimiento
prácticas
valores
Respeto
personas
miembros
equipo
confiar
respetar
conocimientos
capacidades
Responsabilidad
autodisciplina
disciplina
impuesta
Trabajo
enfocado
orientado
valor
cliente
Compromiso
principios
rigen
forma
trabajo
Delegación
atribuciones
empowerment
equipo
autoorganizarse
tomar
decisiones
desarrollo
Información
transparencia
visibilidad
desarrollo
proyecto
Inspección
adaptación
frecuente
detectar
posibles
desviaciones
ajustes
necesarios
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
35
Medición
estimación
ágil
medir
información
materia
prima
toma
decisiones
cuantificada
proporciona
criterios
objetivos
gestión
seguimiento
nivel
concreto
programación
generales
gestión
global
organización
fondos
escala
niveles
zoom
medir
trabajo
Desarrollo
gestión
solución
técnica
Gestión
proyecto
Gestión
organización
medir
ejemplo
proporción
polimorfismo
código
programa
porcentaje
plan
proyecto
nivel
satisfacción
laboral
Ilustración
13
Ámbitos
medición
texto
cubre
medición
ágil
ámbito
proyecto
consideraciones
generales
introducción
comunes
Flexibilidad
sentido
común
incorporar
procedimiento
medición
cuestionar
conveniencia
forma
aplicará
implantar
procesos
medición
simplemente
medir
Medir
Medir
costoso
reglas
scrum
36
Criterios
diseño
aplicación
métricas
Medir
costoso
Medir
añade
burocracia
objetivo
equipo
scrum
ofrecer
relación
valor
coste
Aspectos
cuestionarse
monitorizar
medir
indicador
valor
proporciona
medición
valor
pierde
omite
objetivo
scrum
producir
valor
forma
continua
cuestión
clave
incorporación
indicadores
gestión
proyectos
contribuye
indicador
valor
proyecto
proporciona
cliente
indicador
apropiado
Medir
debería
Cumplir
agendas
mejorar
eficiencia
equipo
previsiones
crítico
analizarlo
convenc
prefiere
incorporar
indicador
cambiarlo
gestor
Determinar
medir
difícil
casos
decisiones
erróneas
supondrán
coste
gestión
evitab
empeorar
intenta
mejorar
Ejemplo
Medición
eficiencia
trabajos
programación
organización
XYZ
adoptado
métricas
estándar
eficiencia
Ingeniería
Software
LOC
Hour
Número
líneas
código
modificadas
hora
aumentar
productividad
vinculado
resultados
métrica
retribución
desempeño
programadores
forma
logrado
producir
líneas
código
incrementar
plantilla
evitar
trate
incremento
hueco
lí
neas
código
aumente
número
errores
programar
métrica
incorpora
Test
Defects
KLOC
Compile
Defects
KLOC
Defects
KLOC
controlar
crezca
número
errores
deslizados
código
indicadores
appraisal
time
medir
tiempo
costes
diseño
ejecución
revisiones
código
temor
sistema
medición
resultar
exce
sivamente
costoso
incluyen
indicadores
coste
calidad
COQ
miden
tiempos
revis
ión
contrastan
mejoras
tiempos
eliminados
reducción
fallos
medir
indicador
válido
tareas
programación
relativamente
mecánicas
orientadas
integración
configuración
desarrollo
sistemas
resultar
medianamente
acertado
considerar
eficiencia
volumen
trabajo
unidad
tiempo
segundas
apropiado
pensar
cantidad
valor
integrado
unidad
desarrollo
expresadas
horas
iteraciones
puntos
función
cantidad
líneas
valor
entregado
cliente
relacionado
medir
objetivamente
valor
entregado
cliente
trabajo
parámetros
medir
criterios
objetivos
cuantificables
tiempo
tarea
tiempos
delta
interrupciones
nº
puntos
función
inestabilidad
requisitos
proporción
acoplamiento
nº
errores
línea
código
estaremos
midiendo
simplemente
cuantificable
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
37
estaremos
midiendo
nº
líneas
desarrollan
personas
realidad
valor
trabajo
pasando
pretendemos
medir
facilidad
facilidad
mantenimiento
flexibilidad
transportabillidad
complejidad
etc.
Velocidad
trabajo
tiempo
Velocidad
trabajo
tiempo
magnitudes
componen
fórmula
velocidad
gestión
proyectos
ágil
defin
iéndola
cantidad
trabajo
realizada
unidad
tiempo
Velocidad
Trabajo
Tiempo
ejemplo
velocidad
equipo
miembros
20
puntos
semana
80
puntos
sprint
Tiempo
mantener
ritmo
avance
continuo
desarrollo
ágil
emplea
tácticas
posibles
incremento
iterativo
incremento
continuo
Ilustración
14
Agilidad
incremento
iterativo
continuo
avance
incrementos
itera
tivos
mantiene
ritmo
apoyándose
pulsos
sprints
razón
emplea
normalmente
sprint
omo
unidad
tiempo
expresa
velocidad
trabajo
tareas
realizadas
sprint
Nota
scrum
técnico
incremento
iterativo
define
velocidad
cantidad
trabajo
sprint
avance
incremento
continuo
mantiene
flujo
avance
constante
puntos
muertos
cuellos
botella
sprints
unidades
tiempo
semanas
meses
forma
velocidad
expresa
puntos
cantidad
trabajo
semana
mes
reglas
scrum
38
Tiempo
real
tiempo
ideal
observación
importante
diferencia
tiempo
real
tiempo
ideal
Tiempo
real
tiempo
trabajo
Equivale
jornada
laboral
equipo
personas
jornada
laboral
horas
tiempo
real
semana
laborables
160
horas
Ilustración
15
Tiempo
ideal
tiempo
real
Tiempo
ideal
refiere
embar
go
tiempo
trabajo
condiciones
ideales
eliminando
estrictamente
trabajo
suponiendo
pausa
interrupción
atención
cuestiones
ajenas
tarea
persona
condiciones
concentración
disponibilidad
tiempo
ideal
emplea
normalmente
estimaciones
unidad
trabajo
esfuerzo
necesario
Ej
tarea
tamaño
horas
ideales
concepto
similar
PSP
denomina
Delta
Time
tiempo
laboral
realmente
tiempo
efectivo
trabajo
Trabajo
Medir
trabajo
necesario
razones
registrar
estimar
anticipadamente
casos
necesita
unidad
criterio
objetivo
cuantificación
Trabajo
Medir
trabajo
entraña
especial
dificultad
unidades
relativas
producto
p.
ej.
líneas
código
recursos
empleados
coste
tiempo
trabajo
medirlo
basta
contabilizar
unidad
empleada
líneas
código
puntos
función
horas
trabajadas
etc.
gestión
proyectos
ágil
mide
trabajo
calcular
avance
trabajo
restándolo
tiempo
previsto
procesos
organización
necesiten
registrar
esfuerzo
invertido
necesario
registro
emplearse
calcular
avance
proyecto
Personal
Software
Process
gestión
ágil
determina
grado
avance
proyecto
trabajo
pendiente
Tiempo
ideal
unidad
tiempo
trabajo
esfuerzo
necesario
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
39
Trabajo
pendiente
Scrum
mide
trabajo
pendiente
Estimar
esfuerzo
iempo
previsto
trabajo
tareas
historias
usuario
epics
Determinar
grado
avance
proyecto
especial
sprint
Determinar
precisión
forma
cuantitativa
objetiva
trabajo
necesitará
construcción
requisito
empeño
cuestionable
Ilustración
16
Medición
trabajo
pendiente
trabajo
necesario
requisito
historia
usuario
prever
forma
absoluta
funcionalidades
realidades
solución
única
caso
pudie
ra
complejidad
medición
haría
métrica
dem
asiado
pesada
gestión
ágil
resulta
estimar
precisión
cantidad
trabajo
requisito
cuánt
tiempo
necesitará
incertidumbre
trabajo
suman
inherentes
tiempo
realista
hablar
cantidad
calidad
trabajo
realiza
persona
unidad
tiempo
diferencias
personas
tarea
ealizada
personar
requerirá
iempos
situaciones
distintas
premisas
posi
ble
estimar
precisión
cantidad
trabajo
requisito
tie
mpo
necesario
llevarla
cabo
complejidad
técnicas
estimación
crece
exponencialmente
medida
Intentan
incrementar
fiabilidad
precisión
resultados
Aumenta
tamaño
trabajo
estimado
estrategia
empleada
gestión
ágil
Trabajar
estimaciones
aproximadas
Estimar
técnica
juicio
expertos
Descomponer
tareas
subtareas
pequeñas
estimaciones
superan
rangos
tiempo
real
reglas
scrum
40
Unidades
trabajo
trabajo
dimensionarse
midiendo
producto
construye
tradicionales
puntos
función
COCOMO
tiempo
cuesta
realizarlo
Ilustración
17
Velocidad
gestión
ágil
suele
emplear
puntos
unidad
trabajo
empleando
denominaciones
puntos
historia
simplemente
puntos
puntos
unidad
Story
Point
eXtreme
Programming
define
cantidad
trabajo
realiza
ideal
organización
circ
unstancias
criterio
institucionaliza
métrica
trabajo
definiendo
nombre
unidades
forma
definir
unidad
punto
tamaño
relativo
tareas
conocidas
normalmente
emplea
Ej
equipo
sistema
venta
internet
determinar
punto
representara
tamaño
listado
facturas
usuario
base
tiempo
ideal
necesario
trabajo
Ej
equipo
determinar
punto
trabajo
horas
ideales
importante
métrica
empleada
significado
forma
aplicación
consistente
mediciones
organización
conocida
personas
trate
procedimiento
trabajo
institucionalizado
Velocidad
Velocidad
magnitud
determinada
cantidad
trabajo
realizada
periodo
tiempo
Velocidad
scrum
técnico
cantidad
trabajo
realizada
equipo
sprint
ejemplo
velocidad
150
puntos
indica
equipo
realiza
150
puntos
trabajo
sprint
trabajar
implantaciones
scrum
avanzado
sprints
duraciones
número
miem
bros
equipo
velocidad
expresa
indicando
unidad
tiempo
caso
refiere
equipo
media
persona
ejemplo
velocidad
media
equipo
100
puntos
semana
velocidad
media
persona
equipo
puntos
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
41
Medición
usos
herramientas
Gráfico
producto
gráfico
producto
gráfico
burn
up
herramienta
planificación
propietario
producto
muestra
visualmente
evolución
previsible
producto
Proyecta
tiempo
construcción
base
velocidad
equipo
proyección
realiza
diagrama
cartesiano
representa
eje
ordenadas
esfuerzo
estimado
construir
historias
pila
producto
abscisas
tiempo
medido
sprints
tiempo
real
Ilustración
18
Gráfico
producto
Ejemplo
Convenciones
empleadas
equipo
Unidad
estimar
trabajo
puntos
scrum
previsto
trabajar
sprints
duración
fija
mensual
20
laborables
equipo
formado
personas
desarrolla
velocidad
media
400
puntos
sprint
Ilustración
19
Gráfico
producto
plan
producto
reglas
scrum
42
traza
gráfico
línea
representa
ritmo
avance
previsto
velocidad
media
equipo
ejemplo
400
puntos
sprint
Ilustración
20
Gráfico
producto
velocidad
prevista
recomendable
trazar
ritmos
avance
previsión
pesimista
optimista
dibujan
basándose
velocidad
obtenida
sprints
anteriores
peores
mejores
resultados
defecto
estableciendo
margen
criterio
equipo
ej.
20%
Ilustración
21
Gráfico
producto
velocidad
optimista
pesimista
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
43
continuación
toma
pila
producto
figura
representa
emplead
ejemplo
Ilustración
22
Ejemplo
pila
producto
caso
propietario
producto
previsto
lanzar
versión
1.0
disponga
historias
qu
esfuerzo
estimad
950
puntos
150
250
250
300
esbozadas
previsiones
versiones
posteriores
1.1
1.2
muestra
figura
Ilustración
23
Versiones
producto
previstas
trazar
previsión
sitúa
versión
eje
vertical
posición
correspondiente
esfuerzo
calculado
construir
historias
incluye
Siguiendo
ejemplo
posición
versión
1.0
situaría
valor
950
eje
ordenadas
Ilustración
24
Representación
versión
gráfico
producto
reglas
scrum
44
puntos
corte
marca
posición
líneas
velocidad
equipo
pesimista
realista
optimista
proyectan
eje
horizontal
fecha
sprint
espera
completar
versión
Ilustración
25
Previsión
fechas
gráfico
producto
forma
proyectar
estimaciones
tempranas
futuras
versiones
previstas
Ilustración
26
previsión
lanzamiento
versiones
gráfico
producto
herramienta
royecta
previsión
pila
producto
documento
vivo
cuya
evolución
prevé
producto
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
45
Gráfico
avance
monitorización
sprint
suele
llamar
gráfico
nombre
inglés
burn-down
actualiza
equipo
scrum
diario
comprobar
ritmo
avance
previsto
comprometida
entrega
sprint
estrategia
ágil
seguimiento
proyecto
basa
Medir
trabajo
falta
Seguimiento
cercano
avance
diario
gráfico
trabaja
principios
Registra
eje
trabajo
pendiente
actualiza
diario
Ilustración
27
Gráfico
avance
equipo
dispone
pila
sprint
lista
tareas
registra
esfuerzo
pendiente
pila
tareas
figura
tarea
esfuerzo
estimado
puesto
trabajado
miembro
equipo
ctualiza
pila
sprint
tiempo
queda
tareas
desarrollando
terminan
queda
tiempo
pendiente
figura
muestra
ejemplo
pila
sexto
sprint
tareas
terminadas
sfuerzo
pendiente
esfuerzo
previsto
sprint
276
puntos
momento
actual
quedan
110
Ilustración
28
Pila
sprint
información
pila
sprint
actualiza
gráfico
poniendo
esfuerzo
pendiente
tareas
terminado
reglas
scrum
46
Ilustración
29
pila
sprint
gráfico
avance
avance
ideal
sprint
estaría
representado
diagonal
reduce
esfuerzo
pendiente
forma
continua
gradual
completarlo
termina
sprint
Ilustración
30
Gráfica
avance
previsto
gráficas
diag
onal
perfecta
habituales
image
ejemplo
patrón
avance
normal
Ilustración
31
Gráfica
avance
real
aspecto
gráfica
sprint
subestimado
Ilustración
32
Gráfica
avance
sprint
subestimado
reglas
scrum
2005-2016
ScrumManager
http://www.scrummanager.net
47
estimación
equipo
reunión
inicio
sprint
inferior
esfuerzo
real
requiriendo
tareas
patrón
gráfica
sprint
sobreestimado
Ilustración
33
Gráfica
avance
sprint
sobreestimado
Estimación
póquer
práctica
ágil
conducir
reuniones
estima
esfuerzo
duración
tareas
James
Gren
ning
ideó
juego
planificación
evitar
discusiones
dilatadas
terminan
conclusiones
concretas
modelo
inicial
Gren
ning
consta
cartas
números
1,2,3,5,7,10
infinito
Grenning
2002
funcionamiento
simple
participante
dispone
juego
cartas
estimación
tarea
vuelven
boca
combinación
qu
suma
esfuerzo
estimado
horas
ideales
tamaño
máximo
considerado
equipo
historia
levanta
carta
areas
exceden
tamaño
máximo
descomponerse
subtareas
menor
tamaño
equipo
organización
utilizar
juego
cartas
numeraciones
adecuadas
unidad
esfuerzo
trabajan
tamaño
máximo
tarea
historia
estimar
Variante
sucesión
Fibonacci
Basado
aumentar
tamaño
tareas
aumenta
incertidumbre
margen
error
desarrollado
variante
consiste
emplear
números
sucesión
Fibonacci
forma
juego
cartas
compuesto
números
sucesión
Fibonacci
estimación
realiza
levantando
cartas
componer
cifra
exacta
versión
original
Grenning
poniendo
boca
carta
cifra
aproximada
estimación
ejemplo
persona
cree
tamaño
adecuado
tarea
ve
obligado
reconsiderar
aceptar
tamaño
aceptar
estimación
conservadora
levantar
estimar
tareas
válido
juego
cartas
reglas
scrum
48
Ilustración
34
Cartas
estimación
póquer
Fibonacci
frecuente
emplear
carta
símbolo
duda
interrogación
indicar
razones
precisar
estimación
incluir
carta
imagen
alusiva
indicar
necesita
descanso
Operativa
participante
reunión
juego
cartas
tarea
historia
usuario
fun
cionalidad
nivel
requisitos
estimar
cliente
moderador
propietario
producto
expone
descripción
empleando
tiempo
máximo
establecido
tiempo
cliente
propietario
producto
atienda
posibles
preguntas
equipo
participarte
selecciona
carta
cartas
representan
estimación
separa
resto
boca
abajo
selección
muestran
boca
estimación
resulta
infinito
sobrepasa
límite
máximo
establecido
tarea
dividirse
subtareas
menor
tamaño
estimaciones
resultan
dispares
asume
responsabilidad
gestionar
reunión
criterio
gestión
basándose
características
pro
yecto
equipo
reunión
nº
elementos
pendientes
evaluar
optar
Preguntar
personas
estimaciones
extremas
crees
necesario
tiempo
crees
necesario
tiempo
escuchar
razones
repetir
estimación
Dejar
estimación
tarea
retomar
momento
hayan
quedado
pendientes
Pedir
cliente
propietario
producto
descomponga
funcionalidad
valorar
funcionalidades
resultantes
Tomar
estimación
menor
media
protocolo
moderación
evita
reunión
atascos
análisis
circulares
diversas
opciones
implementación
participar
asistentes
reduce
cuarto
hora
media
hora
tiempo
estimación
funcionalidad
escasos
minutos
alcanzar
consensos
discusiones
resulta
divertido
dinamiza
reunión
Scrum
Avanzado
1.-
Conocimiento
continua
evolución
marcos
rácticas
ágiles
llegan
proyectos
TIC
tesis
conocimiento
antítesis
Ingeniería
Software
venía
desarrollando
analizar
sto
significa
tomamos
distancia
necesaria
perspectiva
razones
proyectos
TIC
abrazaron
agilidad
finales
siglo
diferencias
ingeniería
procesos
prácticas
concretas
principios
basan
comprender
fortalezas
debilidades
agilidad
Alcanzar
visión
razones
principios
metodología
allá
concreción
modelo
clave
salto
gestión
técnica
gestión
experta
gestión
basada
aplicación
prácticas
gestión
basada
aplicación
conocimiento
patrón
dialéctico
cuestionar
conocimiento
inicia
evolución
patrón
dialéc
tico
tesis
antítesis
síntesis
esquemática
patrón
dialéctico
uede
definirse
flujo
avance
contrapone
antítesis
concepción
previa
entendida
tesis
antítesis
muestra
problemas
contradicciones
tesis
confrontación
surge
tercer
momento
llamado
síntesis
resolución
comprensión
problema
Ilustración
35
Patrón
dialéctico
forma
estrategia
abordar
ingeniería
procesos
retos
proyectos
software
supuso
tesis
respuesta
crisis
software
problemas
contradicciones
puestos
manifiesto
antítesis
agilidad
1968
conferencia
desarrollo
software
celebrada
organización
OTAN
analizaron
problemas
programación
software
acuñó
término
crisis
software
referirse
conclusión
conferencia
Bauer
Bolliet
Helms
1969
necesidad
crear
disciplina
científica
ocurría
áreas
permitiera
aplicar
enfoque
sistemático
disciplinado
cuantificable
desarrollo
operación
mantenimiento
sistemas
software
aplicación
ingeniería
procesos
software
nacimiento
Ingeniería
Software
estrategia
Ingeniería
software
tesis
basado
pilares
Ingeniería
procesos
Gestión
predictiva
aplicar
principio
básico
calidad
contrastado
éxito
entornos
producción
industrial
calidad
resultado
depende
calidad
procesos
empleados
garantizar
cumplimiento
agendas
presupuestos
disciplina
evolucionaba
perfeccionaba
difere
ntes
modelos
procesos
cuerpos
conocimiento
gestión
proyectos
MIL-Q9858
ISO9000
ISO9000-3
Gestión
técnica
Gestión
basada
aplicación
modelos
prácticas
procesos
Gestión
experta
Gestión
basada
conocimiento
tácito
gestor
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
51
ISO
12207
SPICE
SW-CMM
industria
software
surgían
dudas
cuestionaba
estrategia
planificación
predictiva
apropiada
ara
proyecto
criterios
éxito
cumplimiento
fechas
costes
funcionalidades
preestablecidas
Aparece
tipo
proyecto
cuya
finalidad
construir
sistema
previamente
definido
planificado
totalidad
tipo
proyecto
realista
trazar
plan
cerrado
inicio
royectos
interesa
sistema
20
200
funcionalidades
detalle
interés
novedad
mercado
momento
evolucionar
visi
ón
valor
forma
continua
cuestiona
software
producir
patrones
procesos
industriales
empieza
aceptar
calidad
resultado
importante
conocimiento
tácito
persona
realiza
know-how
aportado
proceso
tecnología
empleada
Ilustración
36
Evolución
modelos
mejora
orígenes
agilidad
mediados
90
2005-2010
habituales
posturas
radicales
defensores
modelos
procesos
tesis
marcos
ágiles
antítesis
posiblemente
enfocados
descalificar
revisar
depurar
métodos
ejemplos
tensión
diferencia
atracador
bancos
teórico
CMM
atracador
negociar
evaluación
CMM
depende
bu
ena
presentación
papel
calidad
real
producto
software
seguimiento
ciegas
metodología
desarrollo
puesta
producción
sistema
panorama
tecnológico
Orr
2003
pregunta
ingeniero
software
típico
cree
CMM
aplicar
métodos
ágiles
responderá
mirada
sorpresa
carcajada
histérica
Turner
Jain
2002
Espiral
dialéctica
conocimiento
conocimiento
profesional
evoluciona
forma
continua
realidad
aplica
permanente
movimiento
mejora
Scrum
Avanzado
52
puesta
funcionamiento
técnicas
procesos
modelos
genera
antítesis
revelarse
debilidades
contradicciones
puntos
mejora
enfrentamiento
conduce
síntesis
pasará
nue
tesis
cuyo
posterior
producirá
antítesis
desarrollando
patrón
dialéctico
espiral
evolución
continua
conocimiento
Nonaka
Takeuchi
2004
Ilustración
37
Espiral
dialéctica
conocimiento
disciplinas
técnicas
generaciones
anteriores
ritmo
avance
espiral
dialéctica
permitía
profesionales
desempeñarse
conocimientos
adquiridos
licenciatura
carrera
profesional
especial
sector
TIC
métodos
prácticas
modelos
trabajo
guíen
solvencia
tiempo
conocimiento
evolución
consideración
clave
bas
conocimiento
Scrum
Manager
razón
define
modelo
fijo
conocimiento
actualizado
base
gestión
experta
técnica
basada
criterio
documentado
experto
gestor
aplicación
prácticas
procesos
2.-
Empresa
sistema
empresas
formadas
departamentos
áreas
independientes
realidades
sistémicas
eficiencia
proporcional
armonía
modos
trabajo
departamentos
consideración
scrum
marco
reglas
trabajo
ámbito
gestión
proyectos
cuyas
prácticas
adoptar
implicaciones
resto
organización
produce
resultados
limitados
contraproducentes
Ilustración
38
empresa
sistema
ejemplo
organi
zación
cuya
gerencia
dirige
basándose
modelos
producción
industrial
área
ingenie
ría
consecuencia
trabaja
modelos
basados
procesos
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
53
ciclos
vida
secuenciales
cascada
adopción
prácticas
ágiles
área
gestión
proyectos
generará
fricciones
3.-
Flexibilidad
objetivo
implanta
marco
scrum
basado
reglas
objetivo
alcanzar
organización
ágil
conjunto
capaz
avanzar
scrum
Capaz
responder
escenarios
trabajo
evolucionan
rápidamente
tien
dosis
altas
incertidumbre
requisitos
estables
concebir
productos
servicios
clientes
necesitan
empezar
producto
mejorarlo
forma
continua
productos
innovación
valor
clave
principio
bás
ico
implantación
pragmática
scrum
flexibilidad
consiste
adaptar
prácticas
scrum
organización
revés
definitiva
gestión
experta
gestión
técnica
gestión
dirigida
conocimiento
experiencia
criterio
gestor
gestión
orientada
búsqueda
implantación
modelo
gestión
basada
persona
modelo
conocimiento
di
stintas
técnicas
metodologías
amplí
criterio
fondo
recursos
gestor
seguir
evolución
conocimiento
profesional
ampliar
mejorar
forma
continua
criterio
inventario
recursos
profesionales
aconsejable
Vencer
resistencia
cambio
evitar
actitudes
adopción
defensa
dogmática
modelo
Espíritu
crítico
-constructivo
Cuestionar
continuamente
forma
antitética
modos
actuales
conocimiento
criterio
profesional
adecuar
sistema
trabajo
características
proyecto
equipo
organización
Scrum
Avanzado
54
Scrum
avanzado
Adaptar
prácticas
scrum
circunstancias
organización
permite
emplear
técnicas
incremento
continuo
iterativo
tableros
kanban
formato
adecuado
proyecto
general
prácticas
reglas
encajan
as
circunstancias
caso
forma
abandonando
renglones
guía
reglas
definidas
aplicando
directamente
valores
scrum
Scrum
técnico
Reglas
Scrum
avanzado
Valores
Marco
reglas
desarrollo
software
Autores
Ken
Schwaber
Jeff
Sutherland
Scrum
Development
Process
OOPSLA’95
1995
Concepto
original
Scrum
Autores
Hirotaka
Takeuchi
Ikujiro
Nonaka
The
New
New
Product
Development
Game
1986
Aplicación
reglas
definidas
Aplicación
valores
ágiles
Roles
Dueño
producto
Equipo
desarrollo
Scrum
Master
Eventos
Sprint
Reunión
planificación
Scrum
diario
Revisión
sprint
Retrospectiva
sprint
Artefactos
Pila
product
Pila
sprint
Incremento
Personas
procesos
Resultado
documentación
Colaboración
negociación
Cambio
planificación
avanzar
scrum
Incertidumbre
Autoorganización
Fases
desarrollo
solapadas
Multiaprendizaje
Control
sutil
Difusion
conocimiento
Aprender
reglas
scrum
Aprender
avanzar
scrum
reglas
Responsabilidades
pasar
scrum
técnico
basado
reglas
scrum
avanzado
aplicar
directamente
principios
gestión
ágil
conocimiento
experiencia
equipos
ámbito
responsabilidades
cubrir
allá
roles
proyecto
organización
realidad
sistémica
respuesta
forma
coordinada
alineada
visión
responsabilidades
áreas
Gerencia
procesos
producción
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
55
Ilustración
39
Áreas
responsabilidad
Scrum
Manager
gerencia
Equilibrio
sistémico
organización
Coherencia
modelo
Medios
formación
procesos
Configuración
flexible
scrum
Mejora
continua
Garantía
funcionamiento
scrum
proyecto
scrum
técnico
asignada
rol
Scrum
Master
producción
Producto(en
scrum
técnico
asignada
rol
Propietario
producto
Auto-organización
scrum
técnico
asignada
equipo
Tecnología
ágil
scrum
técnico
asignada
equipo
prácticas
tecnologías
ági
trabajo
equipos
auto
organizados
disponer
visión
producto
definida
gestionada
proyecto
garantizar
funcionamiento
scrum
ejecución
responsabilidades
pertenecen
ámbito
proyecto
áreas
empresa
encuentren
comunicadas
alineadas
visión
común
coherente
modelo
trabajo
ágil
disponga
medios
diseño
implantación
implantación
ágil
adecuada
empresa
mejora
continua
modelo
formación
personas
responsabilidades
ámbito
organización
Ilustración
40
Ámbitos
responsabilidad
Scrum
Manager
Scrum
Avanzado
56
scrum
técnico
responsabilidades
ámbito
proyecto
asumen
roles
definidos
responsabilidad
funcionamiento
scrum
asigna
rol
gestor
específico
funcionamiento
scrum
Scrum
Master
responsabilidad
visión
gestión
producto
rol
specífico
propietario
producto
product
owner
responsabilidad
autoorganización
prácticas
tecnologías
ágiles
equipo
aconsejable
fases
implantación
equipos
familiarizados
desarrollo
ágil
adopción
modelo
roles
scrum
técnico
evolución
nivel
maduro
global
agilidad
organización
aconsejable
adaptar
marco
scrum
realidad
organización
forma
relevante
presencia
determinados
roles
reglas
cubrir
adecuadamente
responsabilidades
necesarias
nivel
organización
ejemplo
asignación
flexible
responsabilidades
ámbito
proyecto
esquema
puestos
existente
organización
Garantía
funcionamiento
scrum
Calidad
procesos
Garantía
gestión
producto
Product
manager
Autoorganización
tecnología
ágil
Equipo
implantación
agilidad
responsabilidades
necesarias
asignan
roles
estructura
empresa
crean
puestos
Propietario
producto
Scrum
Master
importante
personas
desempeñan
tengan
experiencia
conocimiento
profesional
necesario
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
57
Metodologías
Mapa
metodologías
80
desarrollado
tantos
modelos
procesos
marcos
prácticas
trabajo
mejorar
calidad
eficiencia
proyectos
software
resulta
útil
trascender
etiquetas
llegar
base
principios
subyacen
estrategias
desarrollan
for
ma
usando
coordenadas
conceptos
desarrollo
trabajo
conocimiento
modelos
gestión
predictiva
evolutiva
despeja
simplifica
aparente
laberinto
modelos
procesos
marcos
prácticas
trabajo
referimos
CMM-SW
CMMI
PMBOK
DSDM
Crystal
ISO
15504
RUP
XP
crum
ITIL
ASD
PRINCE
LEAN
KANBAN
TDD
etc
Ilustración
41
Diagrama
conceptos
gestión
proyectos
Conceptos
1.-
Desarrollo
Completo
descripción
desea
obtener
disponible
inicio
proyecto
completa
detallada
sirve
base
estimar
plan
proyecto
tareas
recursos
agenda
trabajo
ejecución
gestiona
cumplimiento
Incremental
descripción
dese
obtener
disponible
forma
completa
detallada
inicio
complementa
evoluciona
paralelo
desarrollo
genera
resultado
forma
incremental
gestionar
tácticas
Desarrollo
incremental
continuo
Empleando
técnicas
lograr
flujo
continuo
desarrollo
funcionalidades
partes
producto
entregan
forma
continua
cliente
Desarrollo
iterativo
Empleando
técnicas
tiempo
prefijado
timeboxing
mantener
producción
incrementos
producto
forma
cíclica
continua
marco
producción
empleado
aplicar
marco
estándar
scrum
define
sprint
iteración
desarrollo
produce
incremento
producto
prácticas
metodologías
responden
combinaciones
conceptos
patrones
gestión
proyectos
Scrum
Avanzado
58
2.-
Trabajo
Secuencial
cascada
Divide
trabajo
fases
comienzan
terminar
ejemplo
habitual
ciclo
casca
definido
Ingeniería
software
fases
requisitos
análisis
diseño
codificación
pruebas
implementación
Concurrente
Solapa
tiempo
fases
Siguiendo
ejemplo
ingeniería
software
defin
ición
requisitos
análisis
codificación
despliegue
resultado
realiza
revisa
forma
simultánea
continua
3.-
Conocimiento
rincipal
conocimiento
empleado
correcta
ejecuc
ión
proceso
persona
realiza
Producción
basada
rocesos
conocimiento
know
-how
responsable
calidad
resultado
medida
pro
cesos
tecnología
empleada
calidad
resultado
depende
calidad
procesos
empleados
Producción
basada
personas
cono
cimiento
know
-how
responsable
calidad
resultado
medida
tácito
personas
construyen
Patrones
gestión
proyecto
Gestión
predictiva
Modelo
gestión
cuyo
objetivo
ofrecer
resultados
predecibles
desarrollo
producto
previsto
tiempo
previsto
invirtiendo
recursos
previstos
Emplea
estrategia
desarrollo
completo
práctica
planificación
tradicional
principales
referentes
desarrollo
conocimiento
tipo
gestión
PMI
IPMA
modelos
procesos
CMMI
ISO
15504
SPICE
emplean
ingeniería
secuencial
producción
basada
procesos
Gestión
evolutiva
Modelo
gest
ión
cuyo
objetivo
entregar
producto
mínimo
viable
incrementar
valor
forma
continua
Emplea
estrateg
ia
solapamiento
fases
trabajo
desarrollo
incremental
obtener
manteniendo
ritmo
iteraciones
breves
cícilicas
flujo
desarrollo
constante
llevarse
cabo
producción
basada
procesos
ingeniería
concurrente
producción
basada
personas
agilidad
importante
distinción
generan
situaciones
confusas
llegan
considerar
agilidad
simple
aplicación
reglas
estándar
scr
um
ciclo
incremento
iterativo
roles
artefactos
definidos
simple
técnicas
gestión
visual
kanban
mantener
flujo
continuo
tareas
Agilidad
gestión
evolutiva
gestión
evolutiva
empleando
agilidad
empleando
ingeniería
concurrente
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
59
Personas
Procesos
Tecnología
cuerpo
conocimiento
Scrum
Manager
reconsidera
vértices
triángulo
clásico
factores
producción
Personas
Procesos
Tecnología
procesos
personas
Procesos
diferenciar
procesos
procedimientos
tipos
posibles
personas
ayudan
proceso
procesos
prácticas
ayudan
personas
caso
proceso
protagonista
trabajo
persona
integra
sistema
instrumento
operario
supervisor
artífice
pers
ona
proceso
práctica
ayuda
herramienta
simplifica
aspectos
mecánicos
rutinarios
llamamos
procesos
segundos
prácticas
principal
diferencia
tipo
conocimiento
trabajan
conocimiento
Explícito
contenido
procesos
tecnología
Tácito
aplicado
persona
base
conocimiento
práctica
experiencia
habilidad
Scrum
Manag
er
aporta
consideración
triángulo
tradicional
personas
-procesos-
tecnología
considerando
procedimientos
trabajo
Procesos
ejecución
aporta
conocimiento
clave
lograr
resultado
contenedores
conocimiento
explicitado
proceso
tecnología
emplea
Prácticas
procedimiento
ayuda
persona
aporta
conocimiento
tácito
clave
lograr
resultado
cir
persona
ayuda
procedimiento
segundos
procedimiento
ayuda
persona
Ilustración
42
Personas
procedimientos
tecnología
modelos
ingeniería
procesos
consideran
binomio
proceso
-tecnología
principal
responsable
calidad
resultado
antítesis
agilidad
protagonismo
resultado
personas
punto
vista
Scrum
Manager
ambas
opciones
válidas
tipos
trabajos
distintos
entornos
producción
industrial
personas
aportan
trabajo
ejecutar
supervisar
procesos
empresas
conocimiento
trabajan
llamaremos
procesos
procedimientos
dejando
nombre
proceso
procedimiento
explicitado
principal
conocimiento
obtención
resultado
Scrum
Avanzado
60
escenarios
rápidos
innovadores
personas
aportan
talento
know-how
valor
resultado
Personas
organizaciones
necesitan
imprimir
continuamente
componente
innovador
mueven
sectores
innovación
rápido
obtienen
mejores
resultados
responsables
innovación
talento
personas
ejecución
procesos
tipo
organizaciones
importante
asegurar
nivel
creatividad
equipo
capacidad
aprehender
modelo
conversión
ocimiento
definido
Nonaka
Takeuchi
Nonaka
Takeuchi
The
Knowledge
-Creating
Company
1995
define
fases
proceso
adquisición
personas
conocimiento
tácito
compartir
experiencias
comunicación
directa
documentos
manuales
tradiciones
añade
conocimiento
novedoso
base
colectiva
organización
Gestión
visual
kanban
obtener
incremento
continuo
imagen
muestra
sitúa
scrum
técnico
descrito
capítulo
Ilustración
43
Agilidad
desarrollo
incremental
iterativo
caracte
rística
principal
pulsos
sprint
emplear
tiempo
prefijado
timeboxing
motor
avance
ritmo
marcado
secuencia
sprints
táctica
timeboxing
ayuda
equipo
avanzar
tiempo
mitiga
tendencia
habitual
dilatar
tiempos
entrega
previstos
equipos
originales
crum
observados
descritos
Nonaka
Takeuchi
Nonaka
Takeuchi
The
New
New
Product
Development
Game
1986
principios
agilidad
prescriben
determinada
táctica
lograr
desarrollo
inc
remental
trabajar
avance
constante
tareas
empaquetar
incrementos
Lograr
flujo
continuo
tareas
sprints
fá
cil
suelen
formarse
cuellos
botella
bloquean
avance
áreas
equipo
producen
tiempos
muertos
tareas
gestión
visual
kanban
técnica
empleada
actualmente
regular
flujo
avance
continuo
proyectos
TIC
servicios
conocimiento
gestionados
evolutivamente
sprints
Kanban
Origen
definición
término
japonés
Kanban
empleado
Taiichi
Onho
Toyota
referirse
sistema
visualización
empleado
proce
sos
producción
coordinan
cadena
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
61
montaje
entrega
tiempo
mome
nto
necesita
evitando
sobreproducción
almacenamiento
innecesario
producto
traducir
tablero
tarjeta
señal
ización
rigen
remonta
finales
cuarenta
principio
cincuenta
Kanban
sector
TIC
tableros
kanban
muestra
gestiona
flujo
avance
entrega
ayuda
evitar
problemas
importantes
cuellos
botella
tiempos
muertos
desarrollo
ágil
software
emplea
prácticas
gestión
visual
sirven
principios
comunicación
directa
simplicidad
documentación
gestión
2005
frecuente
reemplazar
formatos
lista
pilas
producto
sprint
notas
adhesivas
tableros
resultan
versátiles
pod
er
cambiar
posición
re
ordenar
prioridades
historias
pila
producto
reflejar
posición
programando
probando
encuentran
terminadas
prácticas
kanban
válidas
gestión
evolutiva
entrega
continua
emplearse
criterios
flexibilidad
considerar
prescripciones
excepciones
método
trabajo
lograr
implementación
personalizada
dé
respuesta
principios
ágiles
ingeniería
concurrente
síntesis
trabaje
organización
Gestión
técnica
vs
gestión
experta
autores
consideran
scrum
kanban
marcos
reglas
prácticas
Kniberg
Skarin
considerarlos
dibujarían
siguientes
diferencias
ellos(Kniberg
Skarin
2009
Scrum
prescribe
roles
kanban
Scrum
trabaja
iteraciones
tiempo
fijo
kanban
cadencias
simples
múltiples
dirigidas
eventos
Scrum
limita
wip
iteración
kanban
limita
wip
flujo
trabajo
equipos
scrum
multidisciplinares
kanban
especialistas
Scrum
permite
cambiar
tareas
sprint
kanban
tarea
alterarse
entrar
flujo
scrum
pila
producto
tene
longitud
sprint
kanban
atender
ritmo
arrastre
tareas
scrum
estimar
historias
tareas
calcular
velocidad
kanban
mide
tareas
velocidad
Scrum
necesita
pila
producto
priorizada
kanban
historia
tarea
arrastrada
cliente
Scrum
prescribe
reuniones
diarias
kanban
Scrum
emplea
diagramas
burndown
kanban
tableros
scrum
resetean
sprint
evolucionar
modelo
scrum
avanzado
basado
aplicación
valores
agilidad
experiencia
conocimientos
abandonar
modelos
basados
reglas
aprende
romper
flexibilizar
prácticas
quedando
triviales
cuestiones
técnico-
metodológicas
forma
distorsionan
realidad
foco
gestión
Situación
desea
kanban
estimar
tareas
ejemplo
registrar
velocidad
razones
organizativas
empresa
Situación
empresa
gestiona
proyectos
simultáneos
organización
oficina
proyectos
encaja
establecimiento
roles
trabajar
término
kanban
aplicado
gestión
ágil
proyectos
refiere
técnicas
representación
visual
información
mejorar
eficiencia
ejecución
tareas
proyecto
Scrum
Avanzado
62
kanban
lugar
scrum
Debería
scrumban
Scrumbut
solución
gestor
Tableros
kanban
conceptos
prácticas
gestión
visual
kanban
útiles
Gestionar
flujo
trabajo
Radiar
información
tablero
kanban
emplearse
radiador
información
herramienta
visual
gestión
flujo
trabajo
1.-
Características
kanban
gestionar
flujo
trabajo
tablero
kanban
establecer
pautas
regular
flujo
avance
tareas
posición
tarjeta
tablero
refleja
trabajo
representa
mínimos
habituales
tablero
kanban
pendiente
curso
terminado
Ilustración
44
Estructura
básica
tablero
kanban
casos
conveniente
incluir
adicionales
ejemplo
testeado
validado
orden
trabajos
área
pendient
refleja
secuencia
tareas
prevista
prioridades
trabajos
monitorizados
tareas
historias
usuario
epics
dedique
tablero
Kanban
saca
superficie
información
problemas
conflictos
priorización
trabajos
problemas
flujo
impedimentos
cargas
trabajo
incidencias
desarrollo
etc.
pone
manifiesto
forma
inmediata
actualizar
tablero
trabajos
Kanban
Facilita
ritmo
sostenido
evita
ley
Parkinson
Genera
avance
continuo
trabajo
cuyo
ritmo
predestinado
planificación
temporal
Gantt
Sprint
incremento
iterativo
ausencia
hitos
temporales
evita
tendencia
habitual
alargar
tiempo
trabajo
completar
tiempo
estimado
ley
Parkinson
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
63
ausencia
hitos
temporales
técnicas
kanban
monitorizar
gestionar
avance
generaría
alargamiento
tiempos
retrasos
aplazamiento
perfeccionismo
2.-
Radiador
información
Kanban
radiador
información
Favorece
comunicación
directa
Facilita
comunicación
directa
equipo
actualizar
información
reuniones
tablero
kanban
Comparte
visibilidad
evolución
proyecto
implicados
Facilita
detección
temprana
problemas
Kanban
monitoriza
continuamente
evolución
proyecto
actualización
información
just-in-time
ayuda
identificar
momento
posibles
impedimentos
problemas
riesgos
forma
pasan
desapercibidos
empiezan
producir
retrasos
repercusiones
inevitables
Favorece
cultura
colaboración
resolución
co
municación
ab
ierto
transpa
rente
equipo
participantes
Kanban
Operativa
Secuencia
polivalencia
factores
combinan
escenario
trabajo
determinan
forma
operativa
tablero
kanban
empleado
Secuencia
tareas
tareas
orden
determinado
hacerse
orden
Polivalencia
personas
personas
equipo
indistintamente
tipo
tarea
Secuencia
trabajos
reflejados
notas
adhesivas
tablero
ejecutarse
orden
determinado
realizarse
orden
diseñar
tablero
equipo
programadores
sistema
mantenimiento
sistemas
informáticos
empresa
tareas
orden
determinado
ejemplo
realiz
ar
tarea
pruebas
programación
siguientes
tareas
procesos
ágiles
promueven
desarrollo
sostenible
promotores
desarrolladores
usuarios
debemos
capaces
mantener
ritmo
constante
forma
indefinida
Principio
Manifiesto
Ágil
trabajo
expande
llenar
tiempo
previsto
Ley
Parkinson
Scrum
Avanzado
64
equipo
mantenimiento
instalación
impresora
equipo
dirección
actualización
sistema
operativo
servid
or
web
etc.
tipo
tareas
orden
relación
dependencia
forma
completado
Polivalencia
equipo
polivalente
especialistas
miembro
tarea
Siguiendo
ejemplos
anteriores
equipo
mantenimiento
persona
indistintamente
instalar
impresora
sistema
operativo
técnicos
hardware
técnicos
software
forma
similar
proyecto
programación
incluir
tarea
específicas
diseño
gráfico
programación
integración
testing
etc
determinados
miembros
equipo
imagen
refleja
valor
clave
kanban
gestión
flu
jo
continuo
avance
factores
considerar
configurar
tablero
estructura
adecuada
trabajo
equipo
Ilustración
45
Fortaleza
variables
clave
tableros
kanban
patrones
posibles
combinen
tipo
trabajo
secuencial
libre
equipo
polivalente
especialistas
1.-
Equipo
polivalente
realiza
tareas
secuenciales
entorno
fácil
gestionar
persona
equipo
tarea
tareas
tomar
orden
situación
producen
embotellamientos
tiempos
muertos
medidas
mejora
enfocar
optimizar
dimensión
equipo
demanda
medida
distribución
tipos
tiempos
2.-
Equipo
especialistas
realiza
tareas
secuenciales
especialización
equipo
aporta
factor
dificultad
solucionar
cuellos
botella
tiempos
muertos
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
65
producen
cuellos
botella
estrategia
tipo
tareas
provocan
ambas
siguientes
líneas
Dimensionamiento
número
personas
capacitadas
tipo
tareas
número
tareas
tipo
comprometer
tiempo
respuesta
cliente
Optimización
proceso
ejecución
tipo
tareas
presencia
tiempos
muertos
cuestionar
dimensionamiento
demanda
distribución
homogénea
Ilustración
46
Áreas
información
mejora
reveladas
tableros
kanban
3.-
Equipo
polivalente
realiza
tareas
secuenciales
caso
dependencia
tareas
principal
causa
tensiones
flujo
práctica
habitual
tableros
kanban
gestionan
tareas
secuenciales
limitar
número
tareas
máximo
encontrar
determinada
fase
denomina
ajustar
WIP
WIP
término
inglés
campo
manufactura
lean
proviene
emplea
indicar
cantidad
productos
proceso
fabricación
terminados
tableros
kanban
analogía
emplea
término
indicar
tareas
encuentran
fase
proceso
pendientes
pasar
completarse
entorno
término
WIP
indica
límite
número
máximo
tareas
acumular
área
determinada
ejemplo
tablero
kanban
programación
software
área
testing
pruebas
WIP
tareas
simultáneamente
fase
Scrum
Avanzado
66
4.-
Equipo
especialistas
trabajo
requiere
orden
secuenciado
entorno
resulta
difícil
ajustar
flujo
trabajo
continuo
requiere
analizar
afi
nar
líneas
mejora
dimensión
equilibrio
especialistas
equipo
dimensión
equilibrio
tiempos
respuesta
compromiso
ajuste
límites
WIP
fase
situaciones
posibles
tablero
saca
superficie
problemas
equipo
gestor
ajustes
líneas
trabajo
posibles
caso
función
criterio
circunstancias
organización
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
67
Casos
prácticos
tableros
kanban
continuación
muestran
ejemplos
tipos
tableros
Tablero
ofrecer
información
desarrollo
producto
Ejemplo
tablero
encontrarse
oficina
responsable
producto
mostrando
construcción
producto
caso
emplea
herramienta
gest
ión
visual
radiador
información
Tablero
mostrar
información
relativa
desarrollo
producto
Historias
usuario
sugeridas
encuentran
evaluación
determinar
incorporarán
producto
Historias
usuario
aprobadas
incorporarán
producto
Historias
usuario
preparadas
valoradas
prior
izadas
previstas
programadas
Historias
usuario
programando
actualmente
Historias
usuario
programadas
evaluar
servidor
pruebas
Historias
usuario
evaluadas
pendientes
desplegar
Historias
usuario
desplegadas
versiones
Ilustración
47
Ejemplo
tablero
kanban
monitorizar
producto
Scrum
Avanzado
68
Tableros
desarrollo
evolutivo
incremento
continuo
incremento
iterativo
Ilustración
48
Tableros
incremento
continuo
incremento
iterativo
Kanban
ofrecer
información
visual
permite
aplicar
técnicas
limitación
wip
muestra
áreas
mejorar
mantener
flujo
desarrollo
continuo
Resulta
útil
trabajar
incremento
continuo
emplear
kanban
equipo
haga
scrum
incremento
iterativo
representar
visualmente
avance
ta
reas
tarjetas
adhesivas
lugar
gráfico
avance
Caso
Incremento
continuo
siguientes
imágenes
representan
posibles
tableros
guiar
gestión
trabajo
equipo
stá
desarrollando
producto
incremento
continuo
muestra
información
Pila
tareas
Tareas
preparadas
Tareas
análisis
Tareas
codificación
Tareas
terminadas
Tareas
integradas
servidor
desarrollo
labs
Tareas
integradas
producción
Ilustración
49
Ejemplo
tablero
kanban
monitorizar
gestionar
incremento
continuo
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
69
Ilustración
50
Ejemplo
tablero
kanban
monitorizar
gestionar
incremento
continuo
Ilustración
51
Ejemplo
tablero
kanban
monitorizar
gestionar
incremento
continuo
Caso
Incremento
iterativo
Tablero
guiar
gestión
trabajo
equipo
trabaja
incrementos
iterativo
sprints
muestra
Pila
tareas
Tareas
preparadas
Tareas
análisis
Tareas
codificación
Tareas
terminadas
Tareas
integradas
servidor
desarrollo
labs
Tareas
integradas
producción
Scrum
Avanzado
70
Ilustración
52
Ejemplo
tablero
kanban
monitorizar
gestionar
incremento
iterativo
Tablero
equipo
operación
mantenimiento
Tablero
guía
gestión
equipo
operación
mantenimiento
refleja
tareas
programadas
semana
persona
trabajando
incidencias
previstas
urgentes
personas
tra
bajando
Ilustración
53
Ejemplo
tablero
kanban
monitorizar
gestionar
tareas
mantenimiento
Scrum
Avanzado
2005-2016
ScrumManager
http://www.scrummanager.net
71
Consejos
ajustar
flujo
Muda
Mura
Muri
Muda
Mura
Muri
conceptos
clave
mejora
continua
Kaizen
producción
Lean
incorpora
variables
protagonistas
incrementar
eficiencia
Muda
Desperdicio
Mura
Discrepancia
Variabilidad
flujo
trabajo
Interrupci
ones
flujo
trabajo
Tiempo
muerto
Muri
Tensión
Sobrecarga
trabajo
produce
cuellos
botella
Mudas
mudas
desperdicios
habituales
proyectos
TIC
Burocracia
Procedimientos
documentación
papeleo
innecesario
aportan
valor
resultado
Sobreproducción
Desarrollar
características
necesarias
Multiproyecto
Alternar
tiempo
trabajo
proyectos
interrupciones
flujo
trabajo
Esperas
Tiempos
espera
falta
cadencia
flujo
trabajo
Encargar
trabajo
avanzando
definido
paradas
personas
Desajustes
capacidad
Personas
talento
asignadas
tareas
rutinarias
viceversa
Errores
Retrabajo
bugs
tableros
kanban
detectan
ayudan
gestionar
variables
kaizen
Mura
Muri
Factores
determinantes
Mura
Muri
organización
tipo
proyecto
características
Secuencia
tareas
realizarse
secuencialmente
Polivalencia
especialización
miembros
equipo
factores
caso
determinan
menor
dificultad
mantener
flujo
continuo
desarrollo
visto
equipos
miembros
polivalentes
trabajan
tareas
secuenciales
fácilmente
flujo
avance
constante
surgen
dificultades
variables
combinar
posibilidades
caso
Volumen
demanda
Orden
backlog
pila
historias
usuario
producir
cuello
botella
fase
procurar
próxima
historia
entrar
tablero
requiera
esfuerzo
fase
WIP
límite
tareas
determinada
fase
Staffing
Tamaño
equipo
especialización
polivalencia
Muri
WIP
variable
importante
ajustar
cuellos
botella
Muri
emplear
kanban
mantener
incremento
continuo
desaparece
concepto
sprint
incremento
resultado
sprint
historia
suario
termina
entrega
cliente
mantener
flujo
continuo
entregas
incrementan
producto
forma
sostenida
evitar
cuellos
botella
Muri
acumulación
tareas
determinada
fase
proceso
forma
conseguirlo
limit
ar
cantidad
trabajo
acumularse
fase
Scrum
Avanzado
72
parámetro
indica
número
máximo
tareas
área
tablero
kanban
denomina
WIP
Work
In
Process
in-process
inventory
inventario
proceso
confundir
Work
in
progress
trabajo
progreso
término
designa
trabajo
comenzado
terminado
valor
WIP
producir
atascos
fases
especial
sistema
rígido
tareas
secuenciales
equipo
especialistas
experiencia
enseña
ajuste
lograr
flujo
continuo
experiencia
previa
considerando
tareas
deberían
tamaños
mayores
horas
ideales
equipo
estab
lecer
criterio
inicio
ajustando
ntido
recomendación
general
mente
útil
equipos
miembros
polivalentes
empezar
WIP
miembros
equipo
1.5
redondeando
resultado
exceso
aconsejable
trabajar
tareas
tamaño
prevea
superior
trabajo
ocurre
aconsejable
dividirlas
menor
tamaño
Ejemplo
figura
presenta
tablero
kanban
límite
trabajo
Producto
analizado
curso
Ilustración
54
WIP
ejemplo
propietario
producto
zona
ordenar
backlog
área
responsable
producto
añade
modifica
prioriza
regularmente
historias
usuario
historias
analizado
pasar
producción
previsto
analizar
revisar
estimación
equipo
forma
área
curso
límite
historias
pasa
entrar
producción
forma
zona
ANALIZADO
decide
próxima
historia
backlog
fuerza
flujo
trabajo
atascos
continuo
enfocado
Mura
principales
factores
responsables
variabilidad
flujo
aparición
Mura
tiempos
muertos
Grado
multifuncionalidad
miembros
equipo
Flexibilidad
orden
fases
tarea
Flexibilidad
alterar
orden
entrada
historias
usuario
pila
producto
mayores
aspectos
fácil
resulta
evitar
aparición
tiempos
muertos
AMPLIACIONES
Ingeniería
requisitos
ágil
Historias
Usuario
historias
usuario
utilizadas
métodos
ágiles
especificación
requisitos
descripción
funcionalidad
software
percibe
usuario
Mike
Cohn
2004
Describen
cliente
usuario
implemente
escriben
frases
utilizando
lenguaje
común
usuario
pensamiento
personas
estructura
siguiendo
narrativa
historia
entendemos
mun
do
capacitados
comprender
personajes
deseos
motivaciones
forma
facilidad
adquirir
retener
conocimiento
historias
metemos
protagonistas
forma
vivimos
tales
historia
cuentan
empatizamos
niveles
toman
decisiones
nivel
desarrollador
tomamos
decisiones
acertadas
historia
usuario
limitada
debería
poderse
memorizar
fácilmente
escribir
tarjeta
post
-it
card
implementadas
acompañadas
conversaciones
usuarios
definición
criterios
validación
asociados
cambios
bienvenidos
agilidad
vale
pena
profundizar
momento
implementación
cambiado
escritas
criterios
validaación
permiten
propietario
producto
usuario
negocio
confirmar
equipo
recogido
correctamente
requisitos
equipo
pruebas
adecuadas
desarrollar
guiados
pruebas
TDD
finalmente
comprobar
historia
completada
historias
usuario
forman
fórmula
captura
funcionalidades
definida
2001
Ron
Jeffries
C's
forma
ágil
administrar
requisitos
usuarios
elaborar
cantidad
documentos
formales
requerir
tiempo
administrarlos
Ventajas
aportan
historias
usuario
cortas
representan
requisitos
modelo
negocio
implementarse
rápidamente
semanas
Necesitan
mantenimiento
Mantienen
relación
cercana
cliente
Permiten
dividir
proyectos
pequeñas
entregas
Permiten
estimar
fácilmente
esfuerzo
desarrollo
ideales
proyectos
requisitos
volátiles
claros
origen
historias
usuario
viene
XP
eXtremeProgramming
programación
extrema
historias
usuario
escritas
clientes
metodología
creada
Kent
Beck
descrita
1999
libro
eXtreme
Programming
Explained
historias
usuario
aplican
mayoría
metodologías
ágiles
herramienta
importante
scrum
Card
Conversation
Confirmation
Tema
ampliado
Ingeniería
requisitos
ágil
2005-2016
ScrumManager
http://www.scrummanager.net
75
Epics
temas
tareas
denomina
epic
superhistoria
usuario
distingue
tamaño
diferencia
historias
usuario
baja
granularidad
epics
alta
granularidad
etiqueta
aplicamos
historia
cuyo
esfuerzo
completarla
sprint
epics
suelen
flujo
asociado
dividir
historias
usuario
palabras
historias
usuario
resultantes
descomposición
epic
íntimamente
relacionadas
medida
aumenta
prioridad
acerca
momento
implementación
equipo
descompone
historias
usuario
tamaño
adecuado
gestionada
principios
técnicas
ágiles
estimación
seguimiento
cercano
normalmente
diario
epics
encuentran
temas
representan
colección
epics
historias
usuario
relacionados
describir
sistema
subsistema
totalidad
ejemplo
sistema
software
gestión
contable
conjunto
epics
Altas
bajas
mantenimiento
clientes
Facturaciones
puntuales
recurrentes
Consultas
navegación
acciones
fidelización
Pedidos
Devoluciones
denominar
tema
gestión
clientes
historias
usuario
encuentran
tareas
resultado
descomposición
equipo
historias
usuario
unidades
trabajo
adecuadas
gestionar
seguir
avance
ejecución
Ilustración
55
Gráfico
niveles
tamaño
requisitos
gestión
ágil
scrum
metodologías
ágiles
general
pila
producto
contener
historias
usuario
epics
pila
producto
ordenada
prioridad
nivel
detalle
elemento
relación
posición
pila
lista
larga
prioritario
sentido
tenerlo
detalle
probablemente
cambiará
proyecto
in
cluso
desarrolle
mitad
lista
prioritario
lugar
epics
medida
acercamos
elementos
prioritarios
detalle
aumentar
his
torias
usuario
elementos
encabezar
lista
76
Información
historia
usuario
Informaciones
necesarias
opcionales
decidir
información
incluir
historia
usuario
preferible
adoptar
formatos
rígidos
resultados
scrum
agilidad
dependen
formas
institucionalización
principios
implemen
tación
adecuada
características
empresa
proyecto
aparte
campos
consideran
necesarios
incluir
campo
proporcione
información
útil
proyecto
Ilustración
56
Ejemplo
tarjeta
historia
usuario
campos
consideran
necesarios
describir
adecuada
historias
usuario
ID
identificador
historia
usuario
único
funcionalidad
trabajo
Descripción
descripción
sintetizada
historia
usuario
estilo
libre
funcione
responder
preguntas
ben
eficia
beneficio
Mike
Cohn
recomienda
seguir
patrón
garantiza
funcionalidad
est
descrita
alto
nivel
extensa
Estimación
estimación
esfuerzo
necesario
tiempo
ideal
implementación
historia
usuario
convenga
equipo
utilizar
unidades
desarrollo
conocidas
puntos
historia
unidades
representan
tiempo
teórico
desarrollo
persona
estipule
comienzo
proyecto
Prioridad
sistema
priorización
permite
determinar
orden
historias
usuario
implementadas
Dependiendo
tipo
proyecto
funcionamiento
equipo
organización
aconsejables
campos
Titulo
titulo
descriptivo
historia
usuario
Criterio
validación
pruebas
aceptación
consensuadas
co
cliente
usuario
pruebas
código
superar
finalizada
implementación
historia
usuario
rol
usuario
quiero
objetivo
beneficio
Tema
ampliado
Ingeniería
requisitos
ágil
2005-2016
ScrumManager
http://www.scrummanager.net
77
Valor
valor
normalmente
numérico
aporta
historia
usuario
cliente
usuario
objetivo
equipo
maximizar
valor
satisfacción
percibida
cliente
iteración
campo
servirá
estimación
determinar
prioridad
historias
usuario
implementadas
Dependencias
historia
usuario
debería
dependiente
historia
ocasiones
necesario
mantener
relación
campo
indicarían
identificadores
historias
depende
Persona
asignada
casos
queramos
sugerir
persona
implementar
historia
usuario
Recordar
scrum
término
equipo
autogestionado
distribuye
asigna
tareas
Criterio
finalización
definición
finalizada
incluye
criterios
actividades
necesarias
terminada
historia
usuario
desarrollada
probada
documentada
convenidas
equipo
propietario
producto
Sprint
útil
organización
propietario
producto
incluir
número
sprint
previsiblemente
historia
Riesgo
riesgo
técnico
funcional
asociado
implementación
historia
usuario
Módulo
módulo
sistema
producto
pertenece
Observaciones
enriquecer
aclarar
información
útil
Ilustración
57
Ejemplo
historia
usuario
78
Ilustración
58
Ejemplo
historia
usuario
Mike
Cohn
comenta
historias
usuario
suficientemente
flexibles
describir
funcionalidad
mayoría
sistemas
apropiadas
razón
necesita
expresar
necesidad
historia
usuario
recomienda
haga
ejemplo
maquetación
pantallas
suele
describir
pantallazos
transmitir
diseño
queramos
darle
aplicación
Tema
ampliado
Ingeniería
requisitos
ágil
2005-2016
ScrumManager
http://www.scrummanager.net
79
Criterios
validación
50
años
historia
ingeniería
software
llegado
conclusión
criterios
validación
traducen
pruebas
excelente
lenguaje
detallar
requerimientos
funcionales
toman
importancia
historias
usuario
medir
calidad
criterio
aceptación
utiliza
método
SMART
cumplir
máximo
siguientes
criterios
Specific
Específicos
Measurable
Medibles
Achievable
Alcanzables
Relevant
Relevantes
Time-boxed
Limitados
tiempo
escriben
obtengan
historias
usuario
susceptibles
entrar
sprint
refinan
planificación
sprint
criterios
aceptación
ayudan
equipo
desarrollo
entender
funcionamiento
producto
estimarán
tamaño
historia
subyacente
equipo
encuentre
fase
desarrollo
desarrollador
tomar
decisión
tomará
acertada
Finalmente
propietario
producto
comprueba
revisión
sprint
criterios
aceptación
historias
usuarios
hecha
finalizada
criterios
aceptación
escribirse
lenguaje
natural
propietario
producto
expresa
opción
escribirlos
técnica
comportamiento
escenari
BDD
Behavior
Driven
Development
gherkin
lenguaje
específico
creado
especialmente
descripciones
comportamiento
software
sintaxis
gherkin
Derivado
sintaxis
elementos
criterios
aceptación
Número
escenario
Número
ejemplo
identifica
escenario
asociado
historia
Título
escenario
Describe
contexto
escenario
define
comportamiento
Contexto
Proporciona
descripción
condiciones
desencadenan
escenario
Evento
Representa
acción
usuario
ejecuta
contexto
definido
escenario
Resultado
Comportamiento
esperado
contex
to
acción
ejecutada
usuario
consecuencia
comportamiento
sistema
situación
Scenario
Escenario
Número
escenario
Titulo
escenario
Given
caso
Contexto
adicionalmente
Contexto
When
Evento
Then
sistema
Resultado
Comportamiento
esperado
80
Ilustración
59
Ejemplo
gherkin
Tema
ampliado
Ingeniería
requisitos
ágil
2005-2016
ScrumManager
http://www.scrummanager.net
81
Calidad
historias
usuario
2003
Bill
Wake
desarrolló
método
llamado
INVEST
asegurar
calidad
escritura
historias
usuario
método
sirve
comprobar
calidad
historia
usuario
revisando
cumpla
serie
características
Independent
independiente
Negotiable
negociable
Valuable
valiosa
Estimable
estimable
Small
pequeña
Testable
comprobable
Independent
independiente
ventajoso
historia
usuario
planificada
implementada
orden
historias
deberían
totalmente
independientes
facilita
trabajo
posterior
equipo
Resaltar
dependencias
historias
usuario
reducirse
combinándolas
dividiéndolas
Negotiable
negociable
historia
usuario
descripción
corta
necesidad
incluye
detalles
historias
negociables
detalles
acordados
cliente
usuario
fase
conversación
evitar
historias
usuario
demasiados
detalles
limitaría
conversación
acerca
Valuable
valiosa
historia
usuario
valiosa
cliente
usuario
historia
valiosa
escriba
Estimable
estimable
historia
usuario
estimada
precisión
suficiente
ayudar
cliente
usuario
propietario
producto
priorizar
planificar
implementación
estimación
generalmente
realizará
equipo
trabajo
directamente
relacionada
tamaño
historia
usuario
historia
usuario
tamaño
difícil
estimar
conocimiento
equipo
necesidad
expresada
caso
falta
conocimiento
necesarias
fases
conversación
acerca
Small
pequeña
historias
usuario
deberían
englobar
semanas
persona
trabajo
equipos
restringen
persona
descripción
corta
ayuda
disminuir
tamaño
historia
usuario
facilitando
estimación
Testable
comprobable
historia
usuario
debería
capaz
probada
fase
confirmación
historia
usuario
cliente
usuario
probar
historia
usuario
significa
clara
valiosa
equipo
probar
historia
usuario
sabrá
terminado
82
empresas
diseñado
tarjetas
Braintrust
aparte
look
profesional
completas
información
coherentes
espacio
campos
Ilustración
60
Ejemplo
tarjetas
diseñadas
Braintrust
Consejos
prácticas
escribir
historias
evitar
escribir
descripción
exhaustiva
justo
Escribir
criterio
validación
suficientemente
explícito
Estimar
historias
crear
falsas
expectativas
fiar
información
tarjetas
idea
documentación
externa
wiki
ejemplo
historia
finalizada
prácticamente
hecha
Tema
ampliado
Ingeniería
requisitos
ágil
2005-2016
ScrumManager
http://www.scrummanager.net
83
Priorización
historias
usuario
historias
usuario
puedan
importantes
focalizarnos
trabajo
forma
eficiente
necesario
destacar
den
valor
sistema
historias
usuar
io
priorizadas
asignadas
valor
intervenga
sistema
priorización
valor
asignado
propietario
producto
basará
básicamente
siguientes
variables
Beneficios
implementar
funcionalidad
Pérdida
coste
demande
posponer
implementación
funcionalidad
Riesgos
implementarla
Coherencia
intereses
negocio
Valor
diferencial
productos
competencia
aspectos
definición
valor
variar
clientes
allá
sistema
clasificación
tipo
prioridad
alta
media
baja
recome
ndable
utilizar
tipo
escala
cualitativa
significado
intrínseco
caso
técnica
MoSCoW
usuario
responsable
asignar
prioridad
consciente
efecto
real
producirá
elección
técnica
definida
año
2004
Dai
Clegg
Oracle
UK
Consulting
libro
Case
Method
Fast-
Track
RAD
Approach
finalidad
obtener
entendimiento
común
cliente
equipo
proyecto
concreto
importancia
historia
usuario
clasificación
MUST
HAVE
necesario
funcionalidad
implementada
solución
fallará
solución
considerada
éxito
SHOULD
HAVE
recomendable
debería
funcionalidad
implementada
solución
funcionalidad
alta
prioridad
solución
prescindible
fallará
debería
causas
justificadas
implementarla
COULD
HAVE
implementarse
deseable
conveniente
funcionalidad
implement
ada
solución
dependerá
posibilidades
tiempos
presupuesto
proyecto
WON'T
HAVE
futuro
funcionalidad
baja
prioridad
descartada
momento
futuro
pued
relevante
Posteriormente
cobre
importancia
pasar
anteriores
importante
distinguir
prioridad
valor
cliente
historia
usuario
valor
cliente
usua
rio
absolutamente
necesaria
alta
prioridad
ejemplo
infraestructura
necesaria
implementación
software
aporta
valor
cliente
desarrollar
ejecutar
solución
desarrollada
84
División
historias
usuario
flujo
continuo
toma
requisitos
historias
usuario
reunión
refinamiento
mantener
actualizada
pila
producto
reunión
propietario
producto
equipo
trabaja
refinamiento
pila
producto
reunión
ve
imagen
derecha
añaden
repriorizan
eliminan
dividen
elementos
pila
objetivo
garantizar
historias
usuario
susceptibles
desarrolladas
corto
plazo
tengan
nivel
detalle
estimación
esfuerzo
suficiente
equipo
comprometerse
Ilustración
61
Refinamiento
pila
producto
experiencia
muestra
historias
usuario
pequeñas
mejoran
flujo
historias
usuario
implican
incertidumbre
funcional
dificultad
estimadas
Dividir
historias
redunda
mejorar
entendimiento
incrementar
exactitud
estimaciones
fáciles
priorizar
dividir
historias
usuari
forma
horizontal
vertical
Horizontal
significa
división
tipo
trabajo
tecnologías
ejemplo
típico
metodologías
tradicionales
forma
dividir
horizontal
genera
historias
valor
negocio
forma
in
dividual
conjunto
valor
división
horizontal
propicia
pensar
silos
miembro
equipo
focaliza
especialidad
situación
tiende
producir
cuellos
botella
ingeniería
requisitos
ágil
evita
tipo
problemas
multifuncionalidad
miembros
miembro
participa
menor
media
tipos
tarea
historias
provenientes
divisiones
horizontales
priorizar
aportan
valor
negocio
forma
individual
diferencia
división
horizontal
vertical
útil
historia
dividida
vertical
genera
historias
ez
valor
negocio
funcionalidad
dividida
capas
técnicas
capas
funcionales
semejanza
incrementos
resultantes
sprint
historias
resultantes
porción
tarta
incluye
capas
técnicas
necesarias
Tema
ampliado
Ingeniería
requisitos
ágil
2005-2016
ScrumManager
http://www.scrummanager.net
85
Christiaan
Verwijs
describe
10
estrategias
dividir
historias
usuario
forma
vertical
Ilustración
62
Esquema
10
estrategias
división
historias
usuario
Estrategia
División
pasos
flujo
trabajo
historias
usuario
incluyen
tipo
flujo
trabajo
dividir
pasos
individuales
flujo
Estrategia
División
reglas
negocio
historias
usuario
conllevan
implícita
explícitamente
reglas
negocio
dividir
reglas
Frecuentemente
casos
test
implican
importantes
reglas
negocio
división
basarnos
pruebas
Estrategia
División
happy
unhappy
flow
funcionalidades
usualmente
describen
flujo
flujos
tratan
desviaciones
excepciones
problemas
flujos
forma
dividir
historias
Estrategia
División
opciones
plataformas
entrada
caso
productos
rodar
plataformas
portátiles
tablets
móviles
dividirse
historias
usuario
plataforma
entrada
Estrategia
División
tipos
datos
parámetros
historias
usuario
dividir
parámetros
entrada
salida
ejemplo
opciones
búsqueda
Estrategia
División
operaciones
historias
involucran
típicas
operaciones
alta
lectura
modificación
baja
CRUD
create
read
update
delete
operaciones
forma
división
Estrategia
División
casos
escenarios
test
historias
difíciles
dividir
funcionalmente
aso
ayudar
preguntarse
escenarios
test
historia
dividir
escenarios
combinación
reglas
negocio
flujos
excepciones
plataformas
entrada
etc.
86
Estrategia
División
roles
historias
usuario
cubren
roles
dividir
funcionalidades
rol
Estrategia
División
optimizar
historias
usuario
implementadas
diferent
grados
perfección
optimización
funcionalidad
descrita
Estrategia
10
División
compatibilidad
navegador
historias
usuario
aplicaciones
web
trabajar
amplia
variedad
navegadores
modernos
tienden
compatibles
estándares
antiguos
suelen
necesitar
personalizaciones
funcione
correctamente
estrategias
división
reduce
incertidumbre
permite
desarrollar
historias
resultantes
importantes
dejar
historias
importantes
desarrollos
futuros
Tema
ampliado
Ingeniería
requisitos
ágil
2005-2016
ScrumManager
http://www.scrummanager.net
87
Comparativa
formas
toma
requisitos
Historias
usuario
versus
casos
menciona
casos
historias
usuario
produce
co
nfusión
logrado
incluir
casos
proceso
ágil
historias
usuario
equivalentes
casos
caso
basa
UML
lenguaje
descriptivo
pensado
inicialmente
sencillez
comunicación
cercana
comunicación
humana
cambio
historia
usuario
escrita
lenguaje
coloquial
funciona
recordatorio
conversación
cliente
comenta
Alistair
Cockburn
2001
libro
Agile
software
development
realmente
historias
usuario
cerca
captura
requisitos
fase
sirve
extraer
necesidades
usuario
especificación
requisitos
casos
Podríamos
historia
usuario
cliente
usuario
caso
criterio
validación
diferencias
concepto
diferencia
ca
sos
requieren
matrices
seguimiento
requisitos
porcentajes
terminado
historias
usuario
incluyen
criterio
validación
incluyen
terminado
forma
binaria
vale
vale
gilidad
patente
historias
usuario
vivas
análisis
funcional
técnico
desarrollo
reunión
inicio
sprint
caso
scrum
desglose
tareas
equipo
nivel
detalle
previsión
supera
único
arquitecto
analista
funcional
casos
Ilustración
63
Historias
usuario
parecidas
casos
proyecto
comienza
seguir
metodología
ágil
deberían
olvidar
completamente
casos
equipo
debería
centrarse
realización
historias
usuario
estén
interesados
complementar
historias
usuario
casos
invito
leer
libro
Cockburn
describe
problemas
surgir
solución
sobrellevarlo
88
Historias
usuario
versus
requisitos
funcionales
general
asocia
historias
usuari
requisitos
funcionales
artefactos
metodologías
ágiles
metodologías
tradicionales
historias
usuario
aspectos
diferencian
diferencias
desconocidas
llevan
confusiones
comunes
conscientes
historias
usuario
describen
funcionalidades
útiles
cliente
usuario
suelen
escribir
tarjetas
post
-its
implican
conversación
posterior
equipo
detalla
usuario
cliente
funcionalidad
desarrollar
requisitos
funcionales
historias
usuario
desarrollará
funcionalidad
historias
usuario
nivel
detalle
especificación
requisito
funcional
Ilustración
64
Historias
usuario
parecidas
requisitos
funcionales
Bibliografía
Bauer
F.
Bolliet
L.
Helms
H.
1969
Software
Engineering
Report
on
conference
sponsored
by
the
NATO
SCIENCE
COMITEE
Software
Engineering
pág.
136
Garmisch
Peter
Naur
Brian
Randell
Beck
K.
2000
Extreme
Programming
Explained
Addison-Wesley
Grenning
J.
2002
Planning
Poker
or
How
to
avoid
paralysis
while
release
planning
Hino
S.
2006
Inside
the
Mind
of
Toyota
Management
Principles
for
Enduring
Growth
Productivity
Press
Kniberg
H.
Skarin
M.
2009
Kanban
and
Scrum
making
the
most
of
both
crisp
Nonaka
I.
Takeuchi
H.
1995
The
Knowledge-Creating
Company
University
Press
Nonaka
I.
Takeuchi
H.
1986
The
New
New
Product
Development
Game
Harvard
Business
Review
Nonaka
I.
Takeuchi
I.
2004
Hitotsubashi
on
Knowledge
Management
Singapore
John
Wiley
Sons
Ohno
T.
1988
The
Toyota
Production
System
Beyond
Large-scale
Production
Productivity
Press
Orr
K.
2003
CMM
versus
Agile
Development
Religious
wars
and
software
development
Cutter
Consortium
Executive
Reports
3(7
Poppendieck
M.
Poppendieck
T.
2003
Lean
Software
Development
An
Agile
Toolkit
for
Software
Development
Managers
Addison
Wesley
Schwaber
K.
1995
SCRUM
Development
Process
Burlington
OOPSLA
95
Schwaber
K.
1995
SCRUM
Development
Process
OOPSLA
95
17
Smith
A.
1776
An
Inquiry
into
the
Nature
and
Causes
of
the
Wealth
of
Nations
Londres
W.
Strahan
T.
Cadell
Takeuchi
H.
Nonaka
I.
1986
The
New
New
Product
Development
Game
Cambridge
Harvard
Business
Review
Taylor
F.
W.
1911
The
Principles
of
Scientific
Management
New
York
Harper
Brothers
Turner
R.
Jain
A.
2002
Agile
Meets
CMMI
Culture
Clash
or
Common
Cause
XP
Agile
Universe
2002
153-165
Tabla
ilustraciones
Figura
Formación
rugby
scrum
12
Figura
Scrum
ma
rco
trabajo
1986
Hirotaka
Takeuchi
Ikujiro
Nonaka
The
New
New
Product
Development
Game
13
Figura
Ken
Schwaber
Scrum
Development
Process
13
Figura
Marco
scrum
13
Ilustración
Marco
scrum
técnico
18
Ilustración
Incremento
iterativo
continuo
20
Ilustración
Diagrama
ciclo
iterativo
scrum
21
Ilustración
Requisitos
completos
evolutivos
21
Ilustración
Ejemplo
pila
producto
24
Ilustración
10
Ejemplo
pila
sprint
hoja
cálculo
25
Ilustración
11
Ejemplo
pizarra
trabajo
29
Ilustración
12
Roles
estándar
scrum
32
Ilustración
13
Ámbitos
medición
35
Ilustración
14
Agilidad
incremento
iterativo
continuo
37
Ilustración
15
Tiempo
ideal
tiempo
real
38
Ilustración
16
Medición
trabajo
pendiente
39
Ilustración
17
Velocidad
40
Ilustración
18
Gráfico
producto
41
Ilustración
19
Gráfico
producto
plan
producto
41
Ilustración
20
Gráfico
producto
velocidad
prevista
42
Ilustración
21
Gráfico
producto
velocidad
optimista
pesimista
42
Ilustración
22
Ejemplo
pila
producto
43
Ilustración
23
Versiones
producto
previstas
43
Ilustración
24
Representación
versión
gráfico
producto
43
Ilustración
25
Previsión
fechas
gráfico
producto
44
Ilustración
26
previsión
lanzamiento
versiones
gráfico
producto
44
Ilustración
27
Gráfico
avance
45
Ilustración
28
Pila
sprint
45
Ilustración
29
pila
sprint
gráfico
avance
46
Ilustración
30
Gráfica
avance
previsto
46
Ilustración
31
Gráfica
avance
real
46
Ilustración
32
Gráfica
avance
sprint
subestimado
46
Ilustración
33
Gráfica
avance
sprint
sobreestimado
47
Ilustración
34
Cartas
estimación
póquer
Fibonacci
48
Ilustración
35
Patrón
dialéctico
50
Ilustración
36
Evolución
modelos
mejora
51
Ilustración
37
Espiral
dialéctica
conocimiento
52
Ilustración
38
empresa
sistema
52
Ilustración
39
Áreas
responsabilidad
Scrum
Manager
55
Ilustración
40
Ámbitos
responsabilidad
Scrum
Manager
55
Ilustración
41
Diagrama
conceptos
gestión
proyectos
57
Ilustración
42
Personas
procedimientos
tecnología
59
Ilustración
43
Agilidad
desarrollo
incremental
iterativo
60
Ilustración
44
Estructura
básica
tablero
kanban
62
Ilustración
45
Fortaleza
variables
clave
tableros
kanban
64
Ilustración
46
Áreas
información
mejora
reveladas
tableros
kanban
65
Ilustración
47
Ejemplo
tablero
kanban
monitorizar
producto
67
Ilustración
48
Tableros
incremento
continuo
incremento
iterativo
68
Ilustración
49
Ejemplo
tablero
kanban
monitorizar
gestionar
incremento
continuo
68
Ilustración
50
Ejemplo
tablero
kanban
monitorizar
gestionar
incremento
continuo
69
Ilustración
51
Ejemplo
tablero
kanban
monitorizar
gestionar
incremento
continuo
69
Tabla
ilustraciones
92
Ilustración
52
Ejemplo
tablero
kanban
monitorizar
gestionar
incremento
iterativo
70
Ilustración
53
Ejemplo
tablero
kanban
monitorizar
gestionar
tareas
mantenimiento
70
Ilustración
54
WIP
72
Ilustración
55
Gráfico
niveles
tamaño
requisitos
gestión
ágil
75
Ilustración
56
Ejemplo
tarjeta
historia
usuario
76
Ilustración
57
Ejemplo
historia
usuario
77
Ilustración
58
Ejemplo
historia
usuario
78
Ilustración
59
Ejemplo
gherkin
80
Ilustración
60
Ejemplo
tarjetas
diseñadas
Braintrust
82
Ilustración
61
Refinamiento
pila
producto
84
Ilustración
62
Esquema
10
estrategias
división
historias
usuario
85
Ilustración
63
Historias
usuario
parecidas
casos
87
Ilustración
64
Historias
usuario
parecidas
requisitos
funcionales
88
Índice
Accionable
25
Agilidad
11
manifiesto
11
12
principios
13
Asignación
79
Autoorganización
19
prácticas
84
Burn-down
28
47
Campos
78
Cascada
60
Caso
89
90
Cerdo
33
Colaboración
19
Comprobable
83
Conocimiento
explícito
61
tácito
60
61
Crisis
software
52
Criterio
finalización
79
Criterio
validación
76
78
81
84
89
Dependencia
79
Desarrollo
completo
59
Desarrollo
incremental
18
59
Desarrollo
incremental
continuo
59
Desarrollo
incremental
iterativo
59
Descripción
78
División
horizontal
86
División
vertical
86
Empresa
sistema
54
Epic
41
77
Equipo
35
77
78
79
83
89
90
Esfuerzo
78
Espiral
dialéctica
conocimiento
53
Estimable
83
Estimación
78
79
83
84
Estimación
póquer
49
Fibonacci
49
Exploración
25
Flexibilidad
55
63
Fórmula
C’s
76
83
90
Funcionalidad
76
78
85
90
Gallina
33
Gestión
evolutiva
60
Gestión
experta
52
54
55
Gestión
predictiva
52
60
Gestión
técnica
52
54
55
Gherkin
81
Gráfico
avance
28
31
47
Gráfico
producto
43
Granularidad
77
27
Historia
usuario
41
76
77
78
79
81
83
85
86
89
90
ID
78
Incremento
22
23
27
Incremento
continuo
22
39
Incremento
iterativo
22
39
62
Independiente
83
Información
78
Ingeniería
concurrente
17
60
Ingeniería
procesos
52
Ingeniería
software
52
James
Grenning
49
Jeff
Sutherland
14
Kaizen
73
Kanban
Aplicación
sector
TIC
63
Definición
63
Origen
definición
62
Ley
Parkinson
64
Método
INVEST
83
Métricas
38
Estrategia
gestión
ágil
41
Módulo
77
79
Muda
73
Mura
73
74
Muri
73
Negociable
83
Nonaka
15
Objetivo
sprint
30
Observación
79
OOPSLA
15
Patrón
dialéctico
52
Pequeña
83
Pila
producto
77
Pila
product
preparación
25
Pila
producto
23
24
Pila
sprint
26
28
Plan
producto
46
Planificación
sprint
28
29
Polivalencia
66
Prioridad
77
78
79
85
Procesos
61
Producto
Plan
46
Propietario
producto
34
79
83
85
Pruebas
76
78
81
83
Punto
historia
78
Puntos
historia
42
Refinamiento
86
Requisito
funcional
90
Requisitos
sprint
24
Responsabilidades
Scrum
Manager
56
Retrospectiva
28
33
Reunión
pie
18
Revisión
sprint
32
33
Riesgo
79
Roles
33
Rugby
14
Scrum
14
76
77
78
79
89
avanzado
17
36
56
63
elementos
22
eventos
22
origen
14
roles
22
técnico
17
22
62
Scrum
Alliance
15
Scrum
diario
18
28
32
Scrum
Master
35
Secuencia
65
Índice
94
SMART
81
Sprint
18
22
79
sobreestimado
49
subestimado
48
Sprint
27
Stand-up
meeting
18
Story
Point
42
Tablero
kanban
conceptos
64
estructura
básica
64
líneas
información
mejora
67
operativa
66
incremento
continuo
70
incremento
iterativo
71
ofrecer
información
69
operación
mantenimiento
72
Takeuchi
15
Tarea
77
Tarjeta
78
80
84
Técnica
MoSCoW
85
Tema
77
Tiempo
39
Tiempo
ideal
40
Tiempo
real
40
Titulo
78
Trabajo
40
UML
89
Valiosa
83
Valor
79
83
85
86
Valores
36
Velocidad
39
42
WIP
67
73
74
XP
76

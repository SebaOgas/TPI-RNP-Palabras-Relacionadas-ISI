jjj!cXTefbaXWhVTV\ba!Vb
XW
ATSTbSTR^\_dcPS^aPb
Kurose
Ross
Redes
computadoras
principal
libro
texto
aprendizaje
aspectos
b√°sicos
redes
profesores
Jim
Kurose
Keith
Ross
presentaci√≥n
atrac-
tiva
temas
utilizando
enfoque
abajo
tratamiento
redes
Internet
edici√≥n
conserva
√©nfasis
original
para-
digmas
capa
aplicaci√≥n
programaci√≥n
aplicacio-
nes
protocolos
capa
superior
fomentando
trans-
misi√≥n
experiencia
conceptos
protocolos
redes
libro
incluye
suscripci√≥n
meses
si-
tio
web
complementa
libro
suscripci√≥n
gratuita
proporciona
complementos
apoyo
estudiante
inclu-
yendo
U√ä
¬òVi√ä¬´√Ä?V√å¬àV
√É√ä`i√ä¬è>L¬ú√Ä
√å¬ú√Ä¬à¬ú√äV¬ú¬ò√ä7¬à√Äi√É
√Ä¬é
U√ä
√ïi√õi√ä¬´√Ä?V√å¬àV
√É√ä`i√ä¬´√Ä¬ú}√Ä>¬ì>V¬à¬ù¬ò
U√ä
¬´¬´¬èi√å√É√äi¬ò√ä>√õ
√ä¬µ√ïi√ä¬à¬è√ï√É√å√Ä>¬ò√ä`¬à√õi√Ä√É¬ú√É√äV¬ú¬òVi¬´√å¬ú√É√äV¬è>√õi√ä√ä
redes
U√ä
√ïi√É√å¬à¬ú¬ò>√Ä¬à¬ú√É√ä¬à¬ò√åi√Ä
V√å¬à√õ¬ú√É√ä¬µ√ïi√ä¬èi√ä
√û√ï`>√Ä?¬ò√ä
√äi√õ>¬è√ï
√Ä√ä√ä
grado
comprensi√≥n
temas
estudiados
U√ä
¬ò√åi√Äi√É>¬ò√åi√É√äi¬ò¬è>Vi√É√ä
√ä¬ú√å√Ä¬ú√É√ä√ÄiV√ï√Ä√É¬ú√É
James
Kurose
i¬à√å
√ä7
√ä,¬ú√É√É
ATSTbSTR^\_dcPS^aPb
D]T]U^`dTSTbRT]ST]cT
XW\V\¬âa
ca^b[XQa^bSTX]cTa{b
Fred
Halsall
Redes
computadores
Internet
,-
√ä
-
√ä7
-
√ä¬ô√án¬án{¬á√án√ì¬ô¬á√§n√é¬á√é
¬àV¬ú¬è?√É√ä
√ÄV¬à>√ä6?√¢¬µ√ïi√¢
Redes
computadores
arquitecturas
comunicaciones
Supuestos
pr√°cticos
,-
/
√ä
-
√ä¬ô√án¬án{¬á√ì√§x¬á{√à√§√á¬á√§
redes.indd
26/3/10
08:21:18ACCESO
L√çNEA
Redes
computadoras
enfoque
descendente
5.¬™
edici√≥n
Gracias
comprar
copia
Redes
computadoras
enfoque
descendente
¬ß√äi`¬àV¬à¬ù¬ò
-√ï√ä¬è¬àL√Ä¬ú√ä¬à¬òV¬è√ï√ûi√ä√Éi¬à√É√ä¬ìi√Éi√É√ä`i√ä
VVi√É¬ú√ä¬´√Äi¬´>}>`¬ú√ä>¬è√ä√É¬à√å¬à¬ú√ä√úiL√äi¬ò√ä¬à¬ò}¬èj√É√ä¬µ√ïi√äV¬ú¬ì¬´¬èi¬ìi¬ò√å
√ä>¬è√ä¬è¬àL√Ä¬ú
√É√å
suscripci√≥n
gratuita
proporciona
acceso
completo
√°reas
apoyo
estudiante
incluyendo
U√ä
¬òVi√ä¬´√Ä?V√å¬àV
√É√ä`i√ä¬è>L¬ú√Ä
√å¬ú√Ä¬à¬ú√äV¬ú¬ò√ä7¬à√Äi√É
√Ä¬é
U√ä
√ïi√õi√ä¬´√Ä?V√å¬àV
√É√ä`i√ä¬´√Ä¬ú}√Ä>¬ì>V¬à¬ù¬ò
U√ä
¬´¬´¬èi√å√É√äi¬ò√ä>√õ
√ä¬µ√ïi√ä¬à¬è√ï√É√å√Ä>¬ò√ä`¬à√õi√Ä√É¬ú√É√äV¬ú¬òVi¬´√å¬ú√É√äV¬è>√õi√ä`i√ä¬è>√É√ä√Äi`i√É
U√ä
√ïi√É√å¬à¬ú¬ò>√Ä¬à¬ú√É√ä¬à¬ò√åi√Ä
V√å¬à√õ¬ú√É√ä¬µ√ïi√ä¬èi√ä
√û√ï`>√Ä?¬ò√ä
√äi√õ>¬è√ï
√Ä√ä√É√ï√ä}√Ä>`¬ú√ä`i√äV¬ú¬ì¬´√Äi¬ò√É¬à¬ù¬ò√ä`i√ä¬è¬ú√É√ä√åi¬ì>√É√äi√É√å√ï`¬à>`¬ú√É
U√ä
¬ò√åi√Äi√É>¬ò√åi√É√äi¬ò¬è>Vi√É√ä
√ä¬ú√å√Ä¬ú√É√ä√ÄiV√ï√Ä√É¬ú√É
favor
lea
continuaci√≥n
instrucciones
registro
acceder
sitio
web
acompa√±amiento
Redes
computadoras
enfoque
descen-
dente
¬ß√äi`¬àV¬à¬ù¬ò
/i¬ò`√Ä?√ä¬µ√ïi√ä√Äi}¬à√É√å√Ä
√Ä√Éi√äi¬ò√ä¬è¬â¬òi
√ä¬ìi`¬à>¬ò√åi√ä√ï¬ò>√äV¬ú¬ì¬´√ï√å>`¬ú√Ä
√ä¬µ√ïi√ä`¬à√É¬´¬ú¬ò}>√ä`i√äV¬ú¬òi√ù¬à¬ù¬ò√ä
√ä¬ò√åi√Ä¬òi√å√ä√û√ä¬µ√ïi√ä√åi¬ò-
ga
instalado
explorador
web
proceso
llevar√°
par
minutos
VVi`>√ä
√ähttp://www.aw.com
kurose_ross
>}>√äV¬è¬àV√äi¬ò√äStudent
Resources
>}>√äV¬è¬àV√äi¬ò√äi¬è√äL¬ú√å¬ù¬ò√äRegister
¬ò√ä¬è>√ä¬´?}¬à¬ò>√ä`i√ä√Äi}¬à√É√å√Ä¬ú]√ä¬à¬ò√å√Ä¬ú`√ï√¢V
√ä√É√ï√äV¬ù`¬à}¬ú√ä`i√ä
VVi√É¬ú√ä`i√äi√É√å√ï`¬à>¬ò√åiI√ä¬µ√ïi√äi¬òV¬ú¬ò√å√Ä
√Ä?√ä`iL>¬ç¬ú√ä`i√ä¬è>√ä√ä
v√Ä>¬ò¬ç>√ä`i√ä√å¬à¬ò√å
√ä√Äi¬ì¬ú√õ¬àL¬èi
¬ú√äi√ÉV√Ä¬àL
√ä¬è¬ú√É√ä}√ï¬à¬ú¬òi√É
√ä*√ïi`i√ä√ï√å¬à¬è¬à√¢
√Ä√ä¬èi√å√Ä
√É√ä¬ì¬à¬ò√ñ√ÉV√ï¬è>√É√ä¬ú√ä¬ì>√û√ñ√ÉV√ï¬è>√É
-¬à}>√ä¬è>√É√ä¬à¬ò√É√å√Ä√ïVV¬à¬ú¬òi√É√ä¬à¬ò`¬àV>`>√É√äi¬ò√ä¬´>¬ò√å>¬è¬è>
√ä-¬à√ä¬òiVi√É¬à√å
√û√ï`>√äi¬ò√äV√ï>¬è¬µ√ï¬ài√Ä√ä¬ì¬ú¬ìi¬ò√å¬ú√ä`√ï√Ä>¬ò√åi√äi¬è√ä¬´√Ä¬úVi√É¬ú√ä
registro
simplemente
haga
clic
icono
Need
Help
1¬ò>√ä√õi√¢√ä¬µ√ïi√ä√É√ï√ä¬ò¬ú¬ìL√Äi√ä`i√ä√ï√É√ï
√Ä¬à¬ú√ä¬≠login
name
√ä√û√ä√É√ï√äV¬ú¬ò√å√Ä
√Éi¬ö>√ä¬≠password
est√©n
conÔ¨Årmados
comenzar
utilizar
sitio
web
acompa√±amiento
Redes
computadoras
enfoque
descendente
¬ß√äi`¬àV¬à¬ù¬ò
salir
haberse
registrado
-¬ù¬è¬ú√äi√É√ä¬òiVi√É
√Ä¬à¬ú√ä√Äi}¬à√É√å√Ä
√Ä√Éi√ä√ï¬ò>√ä√õi√¢√äi¬ò√äi√É√åi√ä√É¬à√å¬à¬ú√ä√úiL
1¬ò>√ä√õi√¢√ä¬µ√ïi√ä√Éi√ä
√ä√Äi}¬à√É√å√Ä>`¬ú]√ä¬´¬ú`√Ä?√ä¬à¬ò¬àV¬à>√Ä√ä√ï¬ò>√ä√Éi√É¬à¬ù¬ò√ä√É¬ài¬ì¬´√Äi√ä¬µ√ïi√ä¬è¬ú√ä`i√Éii√ä
VVi`¬ài¬ò`¬ú√ä
http://www.aw.com/kurose_ross
proporcionando
nombre
usuario
contrase√±a
soliciten
I¬ì¬´¬ú√Ä√å>¬ò√åi\√äi¬è√äV¬ù`¬à}¬ú√ä`i√ä
VVi√É¬ú√ä√É¬ù¬è¬ú√ä√Éi√ä¬´√ïi`i√ä√ï√å¬à¬è¬à√¢
√Ä√ä√ï¬ò>√ä√õi√¢
√É√å
√ä√É√ï√ÉV√Ä¬à¬´V¬à¬ù¬ò√äi√É√ä√õ?¬è¬à`>√ä¬´>√Ä
√ä√ï¬ò√ä¬´i√Ä¬à¬ú`¬ú√ä
i√ä√Éi¬à√É√ä¬ìi√Éi√É√ä`i√É`i√äi¬è√ä¬ì¬ú¬ìi¬ò√å¬ú√ä`i√ä√É√ï√ä
V√å¬à√õ
V¬à¬ù¬ò√ä√û√ä¬ò¬ú√äi√É√ä√å√Ä>¬ò√Évi√Ä¬àL¬èi
√ä-¬à√äi√É√åi√äV¬ù`¬à}¬ú√ä`i√ä
VVi√É¬ú√ä√û
√ä√É¬à`¬ú√ä
√ï√å¬à¬è¬à√¢>`¬ú]√äi√É√ä¬´¬ú√É¬àL¬èi√ä¬µ√ïi√ä√û
√ä¬ò¬ú√ä√Éi
√ä√õ?¬è¬à`¬ú
√ä-¬à√ä√Éi√äi¬òV√ïi¬ò√å√Ä
√äi¬ò√äi√É√åi√äV
√É¬ú]√ä¬´√ïi`i√ä>`¬µ√ï¬à√Ä¬à√Ä√ä√ï¬ò>√ä√É√ï√ÉV√Ä¬à¬´V¬à¬ù¬ò√ä
VVi-
diendo
http://www.aw.com/kurose_ross
siguiendo
instrucciones
mostradas
pantalla
redes.indd
26/3/10
08:21:18ACCESO
L√çNEA
Redes
computadoras
enfoque
descendente
5.¬™
edici√≥n
Gracias
comprar
copia
Redes
computadoras
enfoque
descendente
¬ß√äi`¬àV¬à¬ù¬ò
-√ï√ä¬è¬àL√Ä¬ú√ä¬à¬òV¬è√ï√ûi√ä√Éi¬à√É√ä¬ìi√Éi√É√ä`i√ä
VVi√É¬ú√ä¬´√Äi¬´>}>`¬ú√ä>¬è√ä√É¬à√å¬à¬ú√ä√úiL√äi¬ò√ä¬à¬ò}¬èj√É√ä¬µ√ïi√äV¬ú¬ì¬´¬èi¬ìi¬ò√å
√ä>¬è√ä¬è¬àL√Ä¬ú
√É√å
suscripci√≥n
gratuita
proporciona
acceso
completo
√°reas
apoyo
estudiante
incluyendo
U√ä
¬òVi√ä¬´√Ä?V√å¬àV
√É√ä`i√ä¬è>L¬ú√Ä
√å¬ú√Ä¬à¬ú√äV¬ú¬ò√ä7¬à√Äi√É
√Ä¬é
U√ä
√ïi√õi√ä¬´√Ä?V√å¬àV
√É√ä`i√ä¬´√Ä¬ú}√Ä>¬ì>V¬à¬ù¬ò
U√ä
¬´¬´¬èi√å√É√äi¬ò√ä>√õ
√ä¬µ√ïi√ä¬à¬è√ï√É√å√Ä>¬ò√ä`¬à√õi√Ä√É¬ú√É√äV¬ú¬òVi¬´√å¬ú√É√äV¬è>√õi√ä`i√ä¬è>√É√ä√Äi`i√É
U√ä
√ïi√É√å¬à¬ú¬ò>√Ä¬à¬ú√É√ä¬à¬ò√åi√Ä
V√å¬à√õ¬ú√É√ä¬µ√ïi√ä¬èi√ä
√û√ï`>√Ä?¬ò√ä
√äi√õ>¬è√ï
√Ä√ä√É√ï√ä}√Ä>`¬ú√ä`i√äV¬ú¬ì¬´√Äi¬ò√É¬à¬ù¬ò√ä`i√ä¬è¬ú√É√ä√åi¬ì>√É√äi√É√å√ï`¬à>`¬ú√É
U√ä
¬ò√åi√Äi√É>¬ò√åi√É√äi¬ò¬è>Vi√É√ä
√ä¬ú√å√Ä¬ú√É√ä√ÄiV√ï√Ä√É¬ú√É
favor
lea
continuaci√≥n
instrucciones
registro
acceder
sitio
web
acompa√±amiento
Redes
computadoras
enfoque
descen-
dente
¬ß√äi`¬àV¬à¬ù¬ò
/i¬ò`√Ä?√ä¬µ√ïi√ä√Äi}¬à√É√å√Ä
√Ä√Éi√äi¬ò√ä¬è¬â¬òi
√ä¬ìi`¬à>¬ò√åi√ä√ï¬ò>√äV¬ú¬ì¬´√ï√å>`¬ú√Ä
√ä¬µ√ïi√ä`¬à√É¬´¬ú¬ò}>√ä`i√äV¬ú¬òi√ù¬à¬ù¬ò√ä
√ä¬ò√åi√Ä¬òi√å√ä√û√ä¬µ√ïi√ä√åi¬ò-
ga
instalado
explorador
web
proceso
llevar√°
par
minutos
VVi`>√ä
√ähttp://www.aw.com
kurose_ross
>}>√äV¬è¬àV√äi¬ò√äStudent
Resources
>}>√äV¬è¬àV√äi¬ò√äi¬è√äL¬ú√å¬ù¬ò√äRegister
¬ò√ä¬è>√ä¬´?}¬à¬ò>√ä`i√ä√Äi}¬à√É√å√Ä¬ú]√ä¬à¬ò√å√Ä¬ú`√ï√¢V
√ä√É√ï√äV¬ù`¬à}¬ú√ä`i√ä
VVi√É¬ú√ä`i√äi√É√å√ï`¬à>¬ò√åiI√ä¬µ√ïi√äi¬òV¬ú¬ò√å√Ä
√Ä?√ä`iL>¬ç¬ú√ä`i√ä¬è>√ä√ä
v√Ä>¬ò¬ç>√ä`i√ä√å¬à¬ò√å
√ä√Äi¬ì¬ú√õ¬àL¬èi
¬ú√äi√ÉV√Ä¬àL
√ä¬è¬ú√É√ä}√ï¬à¬ú¬òi√É
√ä*√ïi`i√ä√ï√å¬à¬è¬à√¢
√Ä√ä¬èi√å√Ä
√É√ä¬ì¬à¬ò√ñ√ÉV√ï¬è>√É√ä¬ú√ä¬ì>√û√ñ√ÉV√ï¬è>√É
-¬à}>√ä¬è>√É√ä¬à¬ò√É√å√Ä√ïVV¬à¬ú¬òi√É√ä¬à¬ò`¬àV>`>√É√äi¬ò√ä¬´>¬ò√å>¬è¬è>
√ä-¬à√ä¬òiVi√É¬à√å
√û√ï`>√äi¬ò√äV√ï>¬è¬µ√ï¬ài√Ä√ä¬ì¬ú¬ìi¬ò√å¬ú√ä`√ï√Ä>¬ò√åi√äi¬è√ä¬´√Ä¬úVi√É¬ú√ä
registro
simplemente
haga
clic
icono
Need
Help
1¬ò>√ä√õi√¢√ä¬µ√ïi√ä√É√ï√ä¬ò¬ú¬ìL√Äi√ä`i√ä√ï√É√ï
√Ä¬à¬ú√ä¬≠login
name
√ä√û√ä√É√ï√äV¬ú¬ò√å√Ä
√Éi¬ö>√ä¬≠password
est√©n
conÔ¨Årmados
comenzar
utilizar
sitio
web
acompa√±amiento
Redes
computadoras
enfoque
descendente
¬ß√äi`¬àV¬à¬ù¬ò
salir
haberse
registrado
-¬ù¬è¬ú√äi√É√ä¬òiVi√É
√Ä¬à¬ú√ä√Äi}¬à√É√å√Ä
√Ä√Éi√ä√ï¬ò>√ä√õi√¢√äi¬ò√äi√É√åi√ä√É¬à√å¬à¬ú√ä√úiL
1¬ò>√ä√õi√¢√ä¬µ√ïi√ä√Éi√ä
√ä√Äi}¬à√É√å√Ä>`¬ú]√ä¬´¬ú`√Ä?√ä¬à¬ò¬àV¬à>√Ä√ä√ï¬ò>√ä√Éi√É¬à¬ù¬ò√ä√É¬ài¬ì¬´√Äi√ä¬µ√ïi√ä¬è¬ú√ä`i√Éii√ä
VVi`¬ài¬ò`¬ú√ä
http://www.aw.com/kurose_ross
proporcionando
nombre
usuario
contrase√±a
soliciten
I¬ì¬´¬ú√Ä√å>¬ò√åi\√äi¬è√äV¬ù`¬à}¬ú√ä`i√ä
VVi√É¬ú√ä√É¬ù¬è¬ú√ä√Éi√ä¬´√ïi`i√ä√ï√å¬à¬è¬à√¢
√Ä√ä√ï¬ò>√ä√õi√¢
√É√å
√ä√É√ï√ÉV√Ä¬à¬´V¬à¬ù¬ò√äi√É√ä√õ?¬è¬à`>√ä¬´>√Ä
√ä√ï¬ò√ä¬´i√Ä¬à¬ú`¬ú√ä
i√ä√Éi¬à√É√ä¬ìi√Éi√É√ä`i√É`i√äi¬è√ä¬ì¬ú¬ìi¬ò√å¬ú√ä`i√ä√É√ï√ä
V√å¬à√õ
V¬à¬ù¬ò√ä√û√ä¬ò¬ú√äi√É√ä√å√Ä>¬ò√Évi√Ä¬àL¬èi
√ä-¬à√äi√É√åi√äV¬ù`¬à}¬ú√ä`i√ä
VVi√É¬ú√ä√û
√ä√É¬à`¬ú√ä
√ï√å¬à¬è¬à√¢>`¬ú]√äi√É√ä¬´¬ú√É¬àL¬èi√ä¬µ√ïi√ä√û
√ä¬ò¬ú√ä√Éi
√ä√õ?¬è¬à`¬ú
√ä-¬à√ä√Éi√äi¬òV√ïi¬ò√å√Ä
√äi¬ò√äi√É√åi√äV
√É¬ú]√ä¬´√ïi`i√ä>`¬µ√ï¬à√Ä¬à√Ä√ä√ï¬ò>√ä√É√ï√ÉV√Ä¬à¬´V¬à¬ù¬ò√ä
VVi-
diendo
http://www.aw.com/kurose_ross
siguiendo
instrucciones
mostradas
pantalla
redes.indd
26/3/10
08:21:18REDES
COMPUTADORAS
enfoque
descendente
QUINTA
EDICI√ìN
A01_KUROSE_ROMANOS.qxd
23/3/10
11:25
P√°gina
iA01_KUROSE_ROMANOS.qxd
23/3/10
11:25
P√°gina
iiREDES
COMPUTADORAS
enfoque
descendente
QUINTA
EDICI√ìN
James
F.
Kurose
University
of
Massachusetts
Amherst
Keith
W.
Ross
Politechnic
Institute
of
NYU
REVISI√ìN
T√âCNICA
Carolina
Ma√±oso
Hierro
√Ångel
P√©rez
Madrid
Pablo
Profesora
Titular
Universidad
Profesor
Titular
Universidad
Dpto
Sistemas
Comunicaci√≥n
Control
Dpto
Sistemas
Comunicaci√≥n
Control
Escuela
T√©cnica
Superior
Ingenier√≠a
Inform√°tica
Escuela
T√©cnica
Superior
Ingenier√≠a
Inform√°tica
Universidad
Nacional
Educaci√≥n
Distancia
Universidad
Nacional
Educaci√≥n
Distancia
REVISI√ìN
T√âCNICA
LATINOAM√âRICA
Luis
Marrone
Ingeniero
Rubin
Ayma
Alejo
Fedor
Ingeniero
Electromec√°nico
Profesor
Titular
Director
Dpto
Tecnolog√≠a
Inform√°tica
Fac
Inform√°tica
Universidad
Nacional
Fac
Ingenier√≠a
Universidad
Argentina
Plata
Aires
Argentina
Empresa
Aires
Argentina
Paula
Venosa
Ingeniero
Carlos
Alberto
Binker
Licenciada
Inform√°tica
Profesora
Adjunta
Coordinador
especialidad
Redes
Fac
Inform√°tica
Universidad
Nacional
Ingenier√≠a
Inform√°tica
Plata
Aires
Argentina
Universidad
Nacional
Matanza
San
Justo
Aires
Argentina
Ingeniero
Mario
Groppo
Coordinador
Laboratorio
Redes
Departamento
Sistemas
Universidad
Tecnol√≥gica
Regional
C√≥rdoba
C√≥rdoba
Argentina
Addison
Wesley
sello
editorial
Harlow
England
London
New
York
Boston
San
Francisco
Toronto
Sydney
Singapore
Hong
Kong
Tokyo
Seoul
Taipei
New
Delhi
Cape
Town
Madrid
Mexico
City
Amsterdam
Munich
Paris
Milan
A01_KUROSE_ROMANOS.qxd
23/3/10
11:25
P√°gina
iiiCualquier
forma
reproducci√≥n
distribuci√≥n
comunicaci√≥n
p√∫blica
transformaci√≥n
obra
realizada
autorizaci√≥n
titulares
excepci√≥n
prevista
ley
infracci√≥n
derechos
mencionados
constitutiva
delito
propiedad
intelectual
arts
270
sgts
C√≥digo
penal
Dir√≠jase
CEDRO
Centro
Espa√±ol
Derechos
Reprogr√°ficos
www.cedro.org
necesita
fotocopiar
escanear
fragmento
obra
DERECHOS
RESERV
ADOS
2010
PEARSON
EDUCACI√ìN
S.
A.
Ribera
Loira
28
28042
Madrid
Espa√±a
ISBN
978-84-7829-119-9
Authorized
translation
from
the
English
language
edition
entitled
COMPUTER
NETWORKING
TOP-DOWN
APPROACH
5th
Edition
by
JAMES
KUROSE
KEITH
ROSS
published
by
Pearson
Education
Inc
publishing
as
Addison-Wesley
Copyright
2010
All
rights
reserved
part
of
this
book
may
be
reproduced
or
transmitted
in
any
form
or
by
any
means
electronic
or
mechanical
including
photocopying
recording
or
by
any
information
storage
retrieval
system
without
permission
from
Pearson
Education
Inc
SPANISH
language
edition
published
by
PEARSON
EDUCACION
S.A.
Copyright
2010
Dep√≥sito
Legal
Traducci√≥n
Maquetaci√≥n
Vuelapluma
S.L.U.
Equipo
editorial
Editor
Miguel
Mart√≠n-Romo
T√©cnico
Editorial
Esther
Mart√≠n
Equipo
producci√≥n
Director
Jos√©
A.
Clares
T√©cnico
Isabel
Mu√±oz
Dise√±o
cubierta
Equipo
dise√±o
Pearson
Educaci√≥n
S.
A.
Impreso
IMPRESO
ESPA√ëA
PRINTED
IN
SPAIN
libro
impreso
papel
tintas
ecol√≥gicos
Nota
enlaces
p√°ginas
web
ajenas
libro
incluir
enlaces
sitios
web
gestionados
terceros
ajenos
PEARSON
EDUCACI√ìN
S.
A.
incluyen
finalidad
informativa
PEARSON
EDUCACI√ìN
S.
A.
asume
tipo
responsabilidad
da√±os
perjuicios
derivados
datos
personales
encargado
mantenimiento
p√°ginas
web
ajenas
PEARSON
EDUCACI√ìN
S.
funcionamiento
accesibilidad
mantenimiento
sitios
web
gestio-
nados
PEARSON
EDUCACI√ìN
S.
A.
referencias
proporcionan
encuentran
momento
publicaci√≥n
garant√≠as
expresas
impl√≠citas
informaci√≥n
proporcione
REDES
COMPUTADORAS
ENFOQUE
DESCENDENTE
James
F.
Kurose
Keith
W.
Ross
PEARSON
EDUCACI√ìN
S.
A.
2010
ISBN
978-84-7829-119-9
Materia
004
Computadores
Formato
195x250
mm
P√°ginas
844
A01_KUROSE_ROMANOS.qxd
23/3/10
11:25
P√°gina
ivAJ
preciosidades
Chris
Charlie
Nina
JFK
Am
hijas
C√©cile
Claire
Katie
KWR
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
vA01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
viAcerca
autores
Jim
Kurose
Jim
Kurose
profesor
Ciencias
Computaci√≥n
Universidad
Massachusetts
Amherst
Kurose
recibido
numerosos
reconocimientos
actividades
campo
educaci√≥n
incluyen
premio
excelencia
labor
pedag√≥gica
Universidad
Tecnol√≥gica
Nacional
Universidad
Massachusetts
asociaci√≥n
Northeast
Association
of
Graduate
Schools
recibido
Medalla
Taylor
Booth
IEEE
Educaci√≥n
conocido
liderado
iniciativa
Commonwealth
Information
Technology
Massachusetts
obtenido
beca
investigaci√≥n
GE
Fellowship
premio
IBM
desarrollo
profesorado
beca
Lilly
ense√±anza
Dr.
Kurose
editor
jefe
revistas
IEEE
Transactions
on
Communications
IEEE
ACM
Transactions
on
Networking
participado
a√±os
comit√©s
programa
conferencias
IEEE
Infocom
ACM
SIG-
COMM
ACM
Internet
Measurement
Conference
ACM
SIGMETRICS
Co-director
T√©cnico
Programa
dichas
conferencias
miembro
IEEE
ACM
intereses
investigaci√≥n
incluyen
arquitecturas
protocolos
red
medidas
red
redes
sensores
comunicaci√≥n
multimedia
modelado
evaluaci√≥n
rendimiento
doctor
Ciencias
Computaci√≥n
Universidad
Columbia
Keith
Ross
Keith
Ross
Jefe
Departamento
Ciencias
Computaci√≥n
Instituto
Polit√©cnico
Universidad
York
Brooklyn
distinci√≥n
pedag√≥gica
Leonard
J.
Shustek
departamento
1985
1998
profesor
Departamento
Ingenier√≠a
Sistemas
Universidad
Pennsylvania
1998
2003
trabaj√≥
profesor
Departamento
Comunicaciones
Multimedia
Instituto
Eurecom
Francia
Keith
Ross
fundador
principal
consejero
delegado
Wimba
desarrolla
tecnolog√≠as
Voz
IP
transmisi√≥n
flujos
multimedia
mercado
ense√±anza
electr√≥nica
intereses
investigaci√≥n
encuentran
redes
P2P
medidas
Internet
tecnolog√≠a
flujos
v√≠deo
cach√©s
web
redes
distribuci√≥n
contenido
seguridad
red
Voz
IP
modelado
estoc√°stico
miembro
IEEE
actualmente
trabaja
editor
asociado
revista
IEEE
ACM
Transactions
on
Networking
actuado
asesor
Comisi√≥n
Federal
Comercio
compartici√≥n
archivos
P2P
formado
comit√©s
programa
conferencias
IEEE
Infocom
ACM
SIGCOMM
ACM
CoNext
IPTPS
ACM
Multimedia
ACM
Internet
Measurement
Conference
ACM
SIGMETRICS
doctor
Ingenier√≠a
computaci√≥n
informaci√≥n
control
Universidad
Michigan
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
viiA01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
viiiPrefacio
Bienvenido
quinta
edici√≥n
Redes
computadoras
enfoque
descendente
publicaci√≥n
edici√≥n
a√±os
libro
adoptado
centenares
universidades
traducido
docena
idiomas
utilizado
cien
mil
estudiantes
usuarios
mundo
noticias
lectores
abrumados
positiva
respuesta
Novedades
quinta
edici√≥n
Creemos
raz√≥n
importante
√©xito
libro
contin√∫a
ofreciendo
enfoque
novedoso
oportuno
formaci√≥n
campo
redes
computadoras
cambios
quinta
edici√≥n
dejado
creemos
constituyen
coinciden
estudiantes
profesores
utili-
zado
libro
aspectos
importantes
libro
enfoque
descendente
centrado
Internet
tratamiento
moderno
redes
computadoras
atenci√≥n
principios
pr√°ctica
estilo
enfoque
pedag√≥gico
accesibles
respecta
aprendizaje
redes
computadoras
modos
serie
cambios
importantes
quinta
edici√≥n
Cap√≠tulo
actualizado
introducci√≥n
tema
redes
actualizado
ampliado
tratamiento
redes
acceso
particular
redes
cable
DSL
redes
fibra
redes
acceso
Internet
p√∫blica
Cap√≠-
tulo
eliminado
material
b√∫squedas
pares
quedado
obsoleto
dejar
espacio
secci√≥n
tablas
hash
distribuidas
eliminado
material
libro
estando
disponible
sitio
web
acompa√±amiento
v√©ase
presentaci√≥n
sistemas
con-
trol
congesti√≥n
TCP
Cap√≠tulo
basada
representaci√≥n
gr√°fica
m√°quina
finitos
TCP
a√±ade
estructura
claridad
expo-
sici√≥n
Cap√≠tulo
ampliado
significativamente
secciones
dedicadas
redes
√°rea
local
virtuales
VLAN
an√°lisis
detallado
proceso
solici-
tud
web
secci√≥n
realiza
seguimiento
actividad
red
protocolos
implicados
proceso
satisfacer
aparentemente
simple
solicitud
extrac-
ci√≥n
visualizaci√≥n
p√°gina
web
almacenada
servidor
remoto
ayuda
ilustrar
sintetizar
material
cubierto
cap√≠tulos
Cap√≠tulo
eliminado
sopa
letras
est√°ndares
protocolos
telefo-
n√≠a
celular
a√±adido
secci√≥n
arquitectura
redes
celulares
interoperan
redes
celulares
Internet
proporcionar
servicios
Internet
dis-
positivos
m√≥viles
tales
tel√©fono
Blackberry
iPhone
tratamiento
segu-
ridad
redes
Cap√≠tulo
sufrido
importante
revisi√≥n
revisado
material
dedicado
autenticaci√≥n
punto
terminal
encadenamiento
sistemas
cifrado
bloque
criptograf√≠a
clave
p√∫blica
material
IPsec
rees-
crito
ampliado
incluir
tema
redes
privadas
virtuales
VPN
libro
incluido
ejemplos
avanzados
referencias
actualizadas
mate-
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
ixrial
incluido
cap√≠tulo
a√±adido
problemas
solicitado
profesores
portado
pr√°cticas
laboratorio
Ethereal
Wireshark
a√±adido
pr√°cticas
laboratorio
Wireshark
pr√°ctica
laboratorio
IPsec
Audiencia
libro
texto
curso
redes
computadoras
utilizar
departamentos
inform√°tica
ingenier√≠a
el√©ctrica
relaci√≥n
len-
guajes
programaci√≥n
supone
estudiante
experiencia
C++
Java
suposici√≥n
lugares
libro
preciso
anal√≠tico
textos
introductorios
redes
computadoras
rara
utiliza
conceptos
matem√°ticos
hayan
aprendido
bachillerato
esfuerzo
deliberado
evitar
concepto
c√°lculo
avanzado
probabilidad
procesos
estoc√°sticos
incluido
problemas
estudiantes
dominen
conceptos
libro
apropiado
cursos
pri-
mer
ciclo
a√±o
cursos
ciclo
adecuado
trabajadores
sector
telecomunicaciones
especial
libro
texto
tema
redes
computadoras
enormemente
complejo
implicando
con-
ceptos
protocolos
tecnolog√≠as
entrelazados
intrincada
abar-
car
alcance
complejidad
textos
redes
organizado
capas
arquitectura
red
organizaci√≥n
capas
estudiantes
pue-
den
complejidad
redes
computadoras
aprender
distintos
con-
ceptos
protocolos
arquitectura
ven
esquema
partes
ajustan
perspectiva
pedag√≥gica
experiencia
personal
enfoque
capas
efectivamente
deseable
comprobado
enfoque
tradicional
ense√±anza
ascendente
capa
f√≠sica
capa
aplicaci√≥n
enfoque
curso
moderno
redes
computadoras
enfoque
descendente
libro
rompi√≥
moldes
a√±os
abordar
tema
redes
abajo
comenzando
capa
aplicaci√≥n
descendiendo
capa
f√≠sica
comentarios
recibidos
profesores
estudiantes
confir-
man
enfoque
descendente
ventajas
resulta
pedag√≥gicamente
ade-
cuado
lugar
√©nfasis
capa
aplicaci√≥n
√°rea
elevado
crecimiento
redes
revoluciones
recientes
redes
compu-
tadoras
incluyendo
Web
compartici√≥n
archivos
P2P
flujos
audio
v√≠deo
lugar
capa
aplicaci√≥n
√©nfasis
inicial
capa
aplicaci√≥n
difiere
m√©todos
considerados
textos
incluyen
peque√±a
cantidad
material
aplicaciones
red
requisitos
paradigmas
ejemplo
cliente-servidor
P2P
interfaces
programaci√≥n
aplicaciones
Prefacio
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xPrefacio
xi
lugar
experiencia
profesores
profesores
utili-
zado
texto
ense√±ar
aplicaciones
redes
principio
curso
potente
herramienta
motivaci√≥n
estudiantes
emocionan
aprender
funcio-
nan
aplicaciones
red
aplicaciones
tales
correo
electr√≥nico
Web
mayor√≠a
estudiantes
utilizan
diariamente
estudiantes
comprenden
aplicaciones
entender
servicios
red
necesarios
proporcionarles
soporte
estudiante
examinar
distintas
formas
tales
servicios
suministrados
implementados
capas
inferiores
tratar
aplicaciones
inicialmente
proporciona
motivaci√≥n
abordar
resto
texto
tercer
lugar
enfoque
descendente
permite
profesores
introducir
desarro-
llo
aplicaciones
red
etapa
temprana
estudiantes
ven
fun-
ciona
serie
populares
aplicaciones
protocolos
aprenden
f√°cil
crear
aplicaciones
red
protocolos
nivel
aplicaci√≥n
enfoque
descendente
estudiantes
descubren
nociones
acerca
interfaces
programaci√≥n
aplicaciones
API
modelos
servicio
protocolos
concep-
tos
importantes
vuelven
serlo
capas
subsiguientes
proporcionar
ejemplos
programaci√≥n
sockets
Java
destacamos
ideas
centrales
confundir
estudiantes
fragmentos
complejos
c√≥digo
estudiantes
ciclo
Ingenier√≠a
El√©ctrica
Ciencias
Computaci√≥n
dificultades
com-
prender
c√≥digo
Java
enfoque
Internet
cuarta
edici√≥n
libro
eliminamos
t√≠tulo
frase
Caracterizaci√≥n
Internet
hayamos
eliminado
enfoque
Internet
lejos
realidad
lugar
Internet
vuelto
ubicua
pensamos
libro
texto
redes
centrarse
significativamente
Internet
frase
t√≠tulo
punto
innecesaria
texto
continuamos
utilizando
arquitectura
protocolos
Internet
veh√≠culo
principal
estudiar
conceptos
fundamentales
redes
computadoras
incluimos
conceptos
protocolos
arquitecturas
red
foco
centrado
claramente
Internet
reflejado
organizaci√≥n
libro
centrada
arquitectura
capas
Internet
capas
aplicaci√≥n
transporte
red
enlace
f√≠sica
beneficios
centrar
atenci√≥n
Internet
mayor√≠a
estu-
diantes
Ciencias
Computaci√≥n
Ingenier√≠a
El√©ctrica
deseosos
aprender
cosas
Internet
protocolos
Internet
tecnolog√≠a
revolucio-
naria
conflictiva
cambiando
profundamente
mundo
Dada
enorme
rele-
vancia
Internet
estudiantes
sienten
natural
curiosidad
bastidores
f√°cil
profesor
estudiantes
interesen
principios
b√°sicos
utiliza
Internet
foco
gu√≠a
ense√±ar
principios
redes
caracter√≠sticas
√∫nicas
libro
enfoque
descendente
foco
puesto
Inter-
net
utilizado
t√≠tulo
sucesivas
ediciones
hubi√©ramos
podido
introducir
frase
subt√≠tulo
habr√≠a
contenido
palabra
principios
campo
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xiredes
suficientemente
maduro
puedan
identificar
serie
temas
fundamentalmente
importantes
ejemplo
capa
transporte
temas
fundamentales
comunicaci√≥n
fiable
capa
red
fiable
establecimiento
cierre
conexi√≥n
proceso
control
congesti√≥n
flujo
multi-
plexaci√≥n
temas
enormemente
importantes
capa
red
determinaci√≥n
rutas
entres
routers
interconexi√≥n
n√∫mero
redes
heterog√©neas
capa
enlace
datos
problema
fundamental
compartici√≥n
canal
acceso
m√∫ltiple
campo
seguridad
red
t√©cnicas
permiten
proporcionar
confidencialidad
autenticaci√≥n
integridad
mensajes
basadas
principios
criptograf√≠a
texto
identifica
temas
fundamentales
acerca
redes
estudia
m√©todos
abordarlos
estudiante
aprenda
principios
adquirir√°
serie
conocimientos
larga
vida
√∫til
est√°ndares
protocolos
red
actuales
hayan
quedado
obsoletos
principios
basan
continuar√°n
teniendo
importancia
relevantes
Pensamos
combinaci√≥n
Internet
atis-
bar
posibilidades
√©nfasis
posterior
temas
fundamentales
soluciones
permi-
tir√°n
estudiante
comprender
r√°pidamente
tecnolog√≠a
redes
sitio
web
adquirir
libro
texto
lector
acceder
meses
sitio
web
acompa√±amiento
direcci√≥n
http://www.aw.com/kurose-ross
sitio
incluye
Material
aprendizaje
interactivo
sitio
web
contiene
applets
Java
interacti-
vos
ilustran
conceptos
clave
redes
sitio
ofrece
pregun-
tas
test
interactivas
permiten
estudiantes
comprobar
conocimiento
b√°sico
tema
cuesti√≥n
profesores
integrar
caracter√≠sticas
interactivas
clases
utilizarlas
mini
pr√°cticas
laboratorio
Material
t√©cnico
adicional
Am
edici√≥n
libro
eliminar
tratamiento
temas
existentes
libro
tuviera
longitud
aceptable
ejemplo
sitio
material
incluido
edici√≥n
eliminado
diversos
materiales
redes
ATM
b√∫squedas
P2P.
material
incluido
ediciones
anteriores
libro
inter√©s
encontrarse
sitio
web
acompa√±amiento
Tareas
programaci√≥n
sitio
web
proporciona
serie
tareas
pro-
gramaci√≥n
detalladas
incluyen
construcci√≥n
servidor
web
multihebra
construcci√≥n
cliente
correo
electr√≥nico
interfaz
gr√°-
fica
usuario
GUI
programaci√≥n
lados
emisor
receptor
protocolo
transporte
datos
fiable
programaci√≥n
algoritmo
enrutamiento
distri-
buido
Pr√°cticas
laboratorio
Wireshark
comprensi√≥n
protocolos
red
verse
ampliada
significativamente
viendo
protocolos
acci√≥n
sitio
web
propor-
ciona
numerosas
pr√°cticas
Wireshark
permiten
estudiantes
observar
secuencia
mensajes
intercambiados
entidades
protocolo
sitio
web
incluye
pr√°cticas
laboratorio
Wireshark
independientes
HTTP
DNS
TCP
UDP
IP
ICMP
Ethernet
ARP
WiFi
SSL
traza
protocolos
implicados
satisfacer
solicitud
extracci√≥n
p√°gina
web
Con-
tinuaremos
a√±adiendo
pr√°cticas
laboratorio
futuro
xii
Prefacio
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xiiPrefacio
xiii
Caracter√≠sticas
pedag√≥gicas
ense√±ando
redes
computadoras
20
a√±os
Proporcionamos
texto
experiencia
combinada
ense√±ar
durate
45
a√±os
miles
estudiantes
investigadores
activos
redes
computadoras
tiempo
Jim
Keith
conocieron
estudiantes
m√°ster
curso
redes
computadoras
impartido
Mischa
Sch-
wartz
1979
Universidad
Columbia
Pensamos
proporciona
perspectiva
evoluci√≥n
redes
probable
vayan
futuro
resistido
tentaci√≥n
dirigir
material
libro
preferencias
proyectos
investigaci√≥n
Consideramos
lector
visitar
sitios
web
personales
interesado
investigaciones
libro
ocupa
redes
computadoras
modernas
protocolos
tecnolog√≠as
contempor√°neos
principios
subyacentes
dichos
protocolos
tecnolog√≠as
creemos
aprender
ense√±ar
redes
divertido
Esperamos
sentido
humor
analog√≠as
ejemplos
mundo
real
contenidos
libro
hagan
material
divertido
Notas
historia
pr√°ctica
seguridad
campo
redes
computadoras
rica
fascinante
historia
esfuerzo
especial
contar
historia
redes
computadoras
incluido
secci√≥n
hist√≥rica
especial
Cap√≠tulo
docena
notas
hist√≥ricas
distribuidas
resto
cap√≠tulos
historias
hablado
invenci√≥n
conmuta-
ci√≥n
paquetes
evoluci√≥n
Internet
nacimiento
principales
gigantes
redes
Cisco
3Com
hechos
importantes
estudiantes
sentir√°n
estimulados
historias
incluido
asimismo
notas
especiales
des-
tacan
principios
importantes
redes
computadoras
notas
ayudar√°n
estudiantes
apreciar
conceptos
fundamentales
aplican
redes
modernas
tratamiento
temas
seguridad
redes
ampliado
incluyendo
ejemplo
notas
especiales
Seguridad
cap√≠tulos
fundamentales
libro
Entrevistas
incluido
caracter√≠stica
original
lectores
resulta
particularmente
interesante
inspiradora
entrevistas
innovadores
renom-
bre
campo
redes
entrevistado
Len
Kleinrock
Bram
Cohen
Sally
Floyd
Vint
Cerf
Simon
Lam
Charlie
Perkins
Henning
Schulzrinne
Steven
Bellovin
Jeff
Case
Suplementos
profesores
Proporcionamos
paquete
suplementos
completo
ayudar
profesores
hora
impartir
curso
acceder
material
Centro
recursos
formaci√≥n
Addison-Wesley
http://www.pearsonhighered.com/irc
Visite
centro
env√≠e
correo
electr√≥nico
computing@aw.com
obtener
informaci√≥n
acceder
suple-
mentos
profesores
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xiii‚Ä¢
Diapositivas
PowerPoint
Proporcionamos
diapositivas
cap√≠tulos
diapositivas
quinta
edici√≥n
actualizado
forma
significativa
pre-
sentaciones
diapositivas
cubren
cap√≠tulo
detalle
utilizan
gr√°ficos
anima-
ciones
lugar
emplear
√∫nicamente
mon√≥tonas
listas
vi√±etas
diapositivas
interesantes
visualmente
atractivas
Proporcionamos
diapositivas
originales
PowerPoint
personalizarlas
adaptarlas
necesidades
hora
impartir
curso
diapositivas
aportadas
profesores
ense√±ado
libro
Soluciones
problemas
Proporcionamos
manual
soluciones
proble-
incluidos
texto
tareas
programaci√≥n
pr√°cticas
laboratorio
Wireshark
anteriormente
a√±adido
problemas
cap√≠tulos
libro
Dependencias
cap√≠tulos
cap√≠tulo
texto
presenta
panor√°mica
general
autocontenida
redes
computadoras
introduci√©ndose
conceptos
clave
terminolog√≠a
cap√≠tulo
define
escenario
resto
libro
cap√≠tulos
restantes
dependen
pri-
mer
cap√≠tulo
Recomendamos
profesores
completar
Cap√≠tulo
aborden
Cap√≠tulos
orden
siguiendo
filosof√≠a
enfoque
descendente
cap√≠tulos
apoya
material
cap√≠tulos
anteriores
completados
cap√≠tulos
profesor
flexibilidad
interdependencias
cap√≠tulos
abordar
orden
profesores
explicar
cap√≠tulo
introducci√≥n
saltan
Cap√≠tulo
atr√°s
enfoque
ascendente
pro-
fesor
comienza
mitad
Cap√≠tulo
progresando
ambas
direcciones
cap√≠tulos
depende
material
profesores
explican
cap√≠tulos
postre
nota
agradecemos
comentario
Animamos
estudiantes
profesores
enviarnos
correo
electr√≥nico
comentario
tengan
libro
maravilloso
escuchar
opi-
niones
profesores
estudiantes
mundo
primeras
ediciones
sugerencias
incorporado
ediciones
posteriores
libro
animamos
profesores
enviarnos
problemas
soluciones
comple-
menten
problemas
actualmente
incluidos
a√±adiremos
√∫nicamente
acceso
exclusivo
profesores
sitio
web
Animamos
profesores
estu-
diantes
crear
applets
Java
ilustren
conceptos
protocolos
libro
applet
piensa
adecuado
texto
favor
envienoslo
applet
incluyendo
notaci√≥n
terminolog√≠a
apropiado
estaremos
encantados
incluirlo
sitio
web
libro
apropiada
referencia
autores
Si√©ntase
libre
enviarnos
URL
interesantes
ind√≠quenos
errores
tipogr√°ficos
disienta
afirmaciones
d√≠ganos
cree
funciona
D√≠ga-
xiv
Prefacio
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xivPrefacio
xv
piensa
deber√≠a
deber√≠a
incluido
edici√≥n
Env√≠enos
correo
electr√≥nico
kurose@cs.umass.edu
ross@poly.edu
Agradecimientos
comenzamos
escribir
libro
1996
personas
proporcio-
nado
ayuda
inestimable
influido
dando
forma
ideas
orga-
nizar
impartir
curso
redes
GRACIAS
ayudado
borrador
libro
quinta
edici√≥n
agradecidos
cientos
lectores
mundo
estudiantes
profesores
usuarios
enviado
ideas
comentarios
ediciones
anteriores
libro
sugerencias
futuras
ediciones
Gracias
especiales
Aho
Universidad
Columbia
Hisham
Al-Mubaid
Universidad
Houston-Clear
Lake
Pratima
Akkunoor
Universidad
Arizona
Paul
Amer
Universidad
Delaware
Shamiul
Azom
Universidad
Arizona
Lichun
Bao
Universidad
California
Irvine
Paul
Barford
Universidad
Wisconsin
Bobby
Bhattacharjee
Universidad
Maryland
Steven
Bellovin
Universidad
Columbia
Pravin
Bhagwat
Wibhu
Supratik
Bhattacharyya
anteriormente
Sprint
Ernst
Biersack
Instituto
Eur√©com
Shahid
Bokhari
Universidad
Ingenier√≠a
Tecnolog√≠a
Lahore
Jean
Bolot
Sprint
Daniel
Brushteyn
antigua
Universidad
Pensilvania
Ken
Calvert
Universidad
Kentucky
Evandro
Cantu
Universidad
Federal
Santa
Catarina
Jeff
Case
SNMP
Research
International
Jeff
Chaltas
Sprint
Vinton
Cerf
Google
Byung
Kyu
Choi
Universidad
Tenol√≥gica
Michigan
Bram
Cohen
BitTorrent
Inc
Constantine
Coutras
Pace
University
John
Daigle
Universidad
Mississippi
Edmundo
A.
Souza
Silva
Universidad
Federal
R√≠o
Janiero
Philippe
Decuetos
Instituto
Eur√©com
Christophe
Diot
Thomson
Research
Prithula
Dhunghel
Instituto
Polit√©cnico
NYU
Michalis
Faloutsos
Universidad
California
Riverside
Wu-chi
Feng
Oregon
Graduate
Institute
Sally
Floyd
ICIR
Universidad
California
Berkeley
Paul
Francis
Instituto
Max
Planck
Lixin
Gao
Universidad
Massachusetts
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xvJJ
Garcia-Luna-Aceves
Universidad
California
Santa
Cruz
Mario
Gerla
Universidad
California
Angeles
David
Goodman
Universidad
Polit√©cnica
Tim
Griffin
Universidad
Cambridge
Max
Hailperin
Gustavus
Adolphus
College
Bruce
Harvey
Florida
A&M
University
Florida
State
University
Carl
Hauser
Universidad
Washington
Rachelle
Heller
George
Washington
University
Phillipp
Hoschka
INRIA
W3C
Wen
Hsin
Park
University
Albert
Huang
former
University
of
Pennsylvania
student
Esther
A.
Hughes
Virginia
Commonwealth
University
Jobin
James
Universidad
California
Riverside
Sugih
Jamin
Universidad
Michigan
Shivkumar
Kalyanaraman
Rensselaer
Polytechnic
Institute
Jussi
Kangasharju
Universidad
Darmstadt
Sneha
Kasera
Universidad
Utah
Hyojin
Kim
former
Universidad
Pennsylvania
student
Leonard
Kleinrock
Universidad
California
Angeles
David
Kotz
Dartmouth
College
Beshan
Kulapala
Universidad
Arizona
Rakesh
Kumar
Bloomberg
Miguel
A.
Labrador
Universidad
South
Florida
Simon
Lam
Universidad
Texas
Steve
Lai
Universidad
Ohio
Tom
LaPorta
Universidad
Penn
State
Tim-Berners
Lee
World
Wide
Web
Consortium
Lee
Leitner
Universidad
Drexel
Brian
Levine
Universidad
Massachusetts
William
Liang
antigua
Universidad
Pensilvania
Willis
Marti
Universidad
Texas
A&M
Nick
McKeown
Universidad
Stanford
Josh
McKinzie
Universidad
Park
Deep
Medhi
Universidad
Missouri
Kansas
City
Bob
Metcalfe
International
Data
Group
Sue
Moon
KAIST
Erich
Nahum
IBM
Research
Christos
Papadopoulos
Universidad
Colorado
Craig
Partridge
Tecnolog√≠as
BBN
Radia
Perlman
Sun
Microsystems
Jitendra
Padhye
Microsoft
Research
Vern
Paxson
Universidad
California
Berkeley
Kevin
Phillips
Sprint
George
Polyzos
Universidad
Atenas
of
Economics
and
Business
Sriram
Rajagopalan
Universidad
Arizona
Ramachandran
Ramjee
Microsoft
Research
Ken
Reek
Instituto
Tecnolog√≠a
Rochester
xvi
Prefacio
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xviPrefacio
xvii
Martin
Reisslein
Universidad
Arizona
Jennifer
Rexford
Universidad
Princeton
Leon
Reznik
Instituto
Tecnolog√≠a
Rochester
Sumit
Roy
Universidad
Washington
Avi
Rubin
Universidad
Johns
Hopkins
Rubenstein
Universidad
Columbia
Douglas
Salane
John
Jay
College
Despina
Saparilla
Cisco
Systems
Henning
Schulzrinne
Universidad
Columbia
Mischa
Schwartz
Universidad
Columbia
Harish
Sethu
Universidad
Drexel
K.
Sam
Shanmugan
Universidad
Kansas
Prashant
Shenoy
Universidad
Massachusetts
Clay
Shields
Universidad
Georgetown
Subin
Shrestra
Universidad
Pensilvania
Mihail
L.
Sichitiu
Universidad
NC
State
Peter
Steenkiste
Universidad
Carnegie
Mellon
Tatsuya
Suda
Universidad
California
Irvine
Kin
Sun
Tam
Universidad
York
Albany
Don
Towsley
Universidad
Massachusetts
David
Turner
Universidad
California
San
Bernardino
Nitin
Vaidya
Universidad
Illinois
Michele
Weigle
Universidad
Clemson
David
Wetherall
Universidad
Washington
Ira
Winston
Universidad
Pensilvania
Di
Wu
Instituto
Polit√©cnico
NYU
Raj
Yavatkar
Intel
Yechiam
Yemini
Universidad
Columbia
Ming
Yu
Universidad
York
Binghamton
Ellen
Zegura
Instituto
Tecnolog√≠a
Georgia
Honggang
Zhang
Universidad
Suffolk
Hui
Zhang
Universidad
Carnegie
Mellon
Lixia
Zhang
Universidad
California
Angeles
Shuchun
Zhang
former
Universidad
Pennsylvania
student
Xiaodong
Zhang
Universidad
Ohio
ZhiLi
Zhang
Universidad
Minnesota
Phil
Zimmermann
consultor
independiente
Cliff
C.
Zou
Universidad
Central
Florida
gracias
profesor
Honggang
Zhang
Universidad
Suffolk
tra-
bajar
revisi√≥n
mejora
conjuntos
problemas
edi-
ci√≥n
deseamos
gracias
equipo
completo
Addison-Wesley
particular
Michael
Hirsch
Marilyn
Lloyd
Stephanie
Sellinger
trabajo
absolutamente
excelente
quinta
edici√≥n
sabido
autores
parecen
cong√©nitamente
incapaces
cumplir
plazos
Gracias
artistas
Janet
Theurer
Patrice
Rossi
Calkin
trabajo
bonitas
figuras
libro
Nesbitt
Graphics
Harry
Druding
Rose
Kernan
maravilloso
trabajo
pro-
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xviiducci√≥n
edici√≥n
gratitud
especial
Michael
Hirsch
edi-
tor
Addison-Wesley
Susan
Hartman
editora
Addison-Wesley
libro
hubiera
llegado
apropiada
gesti√≥n
proyecto
apoyo
constante
paciencia
infinita
humor
per-
severancia
xviii
Prefacio
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xviiiContenido
Cap√≠tulo
Redes
computadoras
Internet
1.1
Internet
1.1.1
Descripci√≥n
componentes
esenciales
1.1.2
Descripci√≥n
servicios
1.1.3
protocolo
1.2
frontera
red
1.2.1
Programas
cliente
servidor
1.2.2
Redes
acceso
12
1.2.3
Medios
f√≠sicos
20
1.3
n√∫cleo
red
23
1.3.1
Conmutaci√≥n
circuitos
conmutaci√≥n
paquetes
23
1.3.2
atraviesan
paquetes
redes
conmutaci√≥n
paquetes
31
1.3.3
Redes
troncales
Internet
proveedores
ISP
32
1.4
Retardos
p√©rdidas
tasa
transferencia
redes
conmutaci√≥n
34
paquetes
1.4.1
Retardo
redes
conmutaci√≥n
paquetes
35
1.4.2
Retardo
cola
p√©rdida
paquetes
38
1.4.3
Retardo
terminal
terminal
40
1.4.4
Tasa
transferencia
redes
computadoras
42
1.5
Capas
protocolos
modelos
servicio
46
1.5.1
Arquitectura
capas
46
1.5.2
Mensajes
segmentos
datagramas
tramas
52
1.6
Ataques
redes
53
1.7
Historia
Internet
redes
computadoras
58
1.7.1
desarrollo
conmutaci√≥n
paquetes
1961‚Äì1972
58
1.7.2
Redes
propietarias
interredes
1972‚Äì1980
60
1.7.3
Proliferaci√≥n
redes
1980‚Äì1990
62
1.7.4
explosi√≥n
Internet
d√©cada
1990
63
1.7.5
Desarrollos
recientes
64
1.8
Resumen
65
Mapa
libro
65
Problemas
cuestiones
repaso
66
Problemas
69
Preguntas
discusi√≥n
76
Pr√°cticas
laboratorio
Wireshark
77
Entrevista
Leonard
Kleinrock
79
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xixCap√≠tulo
capa
aplicaci√≥n
81
2.1
Principios
aplicaciones
red
82
2.1.1
Arquitecturas
aplicaciones
red
82
2.1.2
Procesos
comunicaci√≥n
86
2.1.3
Servicios
transporte
disponibles
aplicaciones
88
2.1.4
Servicios
transporte
proporcionados
Internet
90
2.1.5
Protocolos
capa
aplicaci√≥n
94
2.1.6
Aplicaciones
red
libro
95
2.2
Web
HTTP
95
2.2.1
Introducci√≥n
HTTP
96
2.2.2
Conexiones
persistentes
persistentes
98
2.2.3
Formato
mensajes
HTTP
101
2.2.4
Interacci√≥n
usuario-servidor
cookies
105
2.2.5
Almacenamiento
cach√©
web
107
2.2.6
GET
condicional
111
2.3
Transferencia
archivos
FTP
112
2.3.1
Comandos
respuestas
FTP
114
2.4
Correo
electr√≥nico
Internet
115
2.4.1
SMTP
116
2.4.2
Comparaci√≥n
HTTP
120
2.4.3
Formatos
mensajes
correo
120
2.4.4
Protocolos
acceso
correo
electr√≥nico
121
2.5
DNS
servicio
directorio
Internet
125
2.5.1
Servicios
proporcionados
DNS
126
2.5.2
funciona
DNS
128
2.5.3
Registros
mensajes
DNS
134
2.6
Aplicaciones
P2P
139
2.6.1
Distribuci√≥n
archivos
P2P
139
2.6.2
Tablas
hash
distribuidas
DHT
145
2.6.3
Caso
estudio
telefon√≠a
Internet
P2P
Skype
150
2.7
Programaci√≥n
sockets
TCP
151
2.7.1
Programaci√≥n
sockets
TCP
153
2.7.2
Ejemplo
aplicaci√≥n
cliente-servidor
Java
154
2.8
Programaci√≥n
sockets
UDP
161
2.9
Resumen
168
Problemas
cuestiones
repaso
168
Problemas
171
Preguntas
discusi√≥n
179
Tareas
programaci√≥n
sockets
180
Pr√°cticas
laboratorio
Wireshark
181
Entrevista
Bram
Cohen
183
Cap√≠tulo
capa
transporte
185
3.1
capa
transporte
servicios
186
3.1.1
Relaciones
capas
transporte
red
186
3.1.2
capa
transporte
Internet
189
3.2
Multiplexaci√≥n
demultiplexaci√≥n
190
xx
Contenido
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xxContenido
xxi
3.3
Transporte
conexi√≥n
UDP
198
3.3.1
Estructura
segmentos
UDP
201
3.3.2
Suma
comprobaci√≥n
UDP
201
3.4
Principios
servicio
transferencia
datos
fiable
203
3.4.1
Construcci√≥n
protocolo
transferencia
datos
fiable
205
3.4.2
Protocolo
transferencia
datos
fiable
procesamiento
cadena
215
3.4.3
Retroceder
GBN
218
3.4.4
Repetici√≥n
selectiva
SR
222
3.5
Transporte
orientado
conexi√≥n
TCP
228
3.5.1
conexi√≥n
TCP
229
3.5.2
Estructura
segmento
TCP
231
3.5.3
Estimaci√≥n
tiempo
ida
vuelta
temporizaci√≥n
236
3.5.4
Transferencia
datos
fiable
239
3.5.5
Control
flujo
246
3.5.6
Gesti√≥n
conexi√≥n
TCP
249
3.6
Principios
control
congesti√≥n
255
3.6.1
causas
costes
congesti√≥n
256
3.6.2
M√©todos
controlar
congesti√≥n
262
3.6.3
Ejemplo
control
congesti√≥n
asistido
red
control
congesti√≥n
servicio
ABR
redes
ATM
263
3.7
Mecanismo
control
congesti√≥n
TCP
265
3.7.1
Equidad
274
3.8
Resumen
277
Problemas
cuestiones
repaso
280
Problemas
282
Preguntas
discusi√≥n
294
Tareas
programaci√≥n
295
Pr√°cticas
laboratorio
Wireshark
295
Entrevista
Sally
Floyd
297
Cap√≠tulo
capa
red
299
4.1
Introducci√≥n
300
4.1.1
Reenv√≠o
enrutamiento
300
4.1.2
Modelos
servicio
red
304
4.2
Redes
circuitos
virtuales
datagramas
306
4.2.1
Redes
circuitos
virtuales
307
4.2.2
Redes
datagramas
310
4.2.3
Or√≠genes
redes
circuitos
virtuales
datagramas
312
4.3
interior
router
312
4.3.1
Puertos
entrada
314
4.3.2
Entramado
conmutaci√≥n
317
4.3.3
Puertos
salida
319
4.3.4
crean
colas
319
4.4
Protocolo
Internet
IP
reenv√≠o
direccionamiento
Internet
323
4.4.1
Formato
datagramas
323
4.4.2
Direccionamiento
IPv4
329
4.4.3
Protocolo
mensajes
control
Internet
ICMP
343
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xxi4.4.4
IPv6
345
4.4.5
incursi√≥n
seguridad
IP
352
4.5
Algoritmos
enrutamiento
353
4.5.1
Algoritmo
enrutamiento
enlaces
LS
356
4.5.2
Algoritmo
enrutamiento
vector
distancias
DV
360
4.5.3
Enrutamiento
jer√°rquico
367
4.6
Enrutamiento
Internet
371
4.6.1
Enrutamiento
interno
sistema
aut√≥nomo
Internet
RIP
371
4.6.2
Enrutamiento
interno
AS
Internet
OSPF
375
4.6.3
Enrutamiento
sistemas
aut√≥nomos
BGP
377
4.7
Enrutamiento
difusi√≥n
multidifusi√≥n
384
4.7.1
Algoritmos
enrutamiento
difusi√≥n
385
4.7.2
Multidifusi√≥n
390
4.8
Resumen
397
Problemas
cuestiones
repaso
398
Problemas
401
Preguntas
discusi√≥n
412
Tareas
programaci√≥n
413
Pr√°cticas
laboratorio
Wireshark
414
Entrevista
Vinton
G.
Cerf
415
Cap√≠tulo
capa
enlace
redes
√°rea
local
417
5.1
Capa
enlace
introducci√≥n
servicios
419
5.1.1
Servicios
proporcionados
capa
enlace
419
5.1.2
implementa
capa
enlace
422
5.2
T√©cnicas
detecci√≥n
correcci√≥n
errores
424
5.2.1
Comprobaciones
paridad
425
5.2.2
M√©todos
basados
suma
comprobaci√≥n
427
5.2.3
Comprobaci√≥n
redundancia
c√≠clica
CRC
428
5.3
Protocolos
acceso
m√∫ltiple
430
5.3.1
Protocolos
particionamiento
canal
433
5.3.2
Protocolos
acceso
aleatorio
434
5.3.3
Protocolos
toma
turnos
441
5.3.4
Redes
√°rea
local
LAN
442
5.4
Direccionamiento
capa
enlace
444
5.4.1
Direcciones
MAC
444
5.4.2
Protocolo
resoluci√≥n
direcciones
ARP
445
5.5
Ethernet
450
5.5.1
Estructura
trama
Ethernet
452
5.5.2
CSMA
CD
protocolo
acceso
m√∫ltiple
Ethernet
454
5.5.3
Tecnolog√≠as
Ethernet
458
5.6
Conmutadores
capa
enlace
460
5.6.1
Reenv√≠o
filtrado
460
5.6.2
Auto-aprendizaje
462
5.6.3
Propiedades
conmutaci√≥n
capa
enlace
463
5.6.4
Conmutadores
frente
routers
464
5.6.5
Redes
√°rea
local
virtuales
VLAN
466
xxii
Contenido
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xxiiContenido
xxiii
5.7
PPP
Protocolo
punto
punto
470
5.7.1
Trama
datos
PPP
472
5.8
Virtualizaci√≥n
enlaces
red
capa
enlace
474
5.9
vida
solicitud
p√°gina
web
477
5.10
Resumen
483
Problemas
cuestiones
repaso
484
Problemas
486
Preguntas
discusi√≥n
493
Pr√°cticas
laboratorio
Wireshark
494
Entrevista
Simon
S.
Lam
495
Cap√≠tulo
Redes
inal√°mbricas
m√≥viles
497
6.1
Introducci√≥n
498
6.2
Caracter√≠sticas
redes
enlaces
inal√°mbricos
503
6.2.1
CDMA
506
6.3
WiFi
redes
LAN
inal√°mbricas
802.11
508
6.3.1
arquitectura
802.11
510
6.3.2
protocolo
MAC
802.11
514
6.3.3
trama
IEEE
802.11
520
6.3.4
Movilidad
subred
IP
523
6.3.5
Caracter√≠sticas
avanzadas
802.11
524
6.3.6
all√°
802.11
Bluetooth
WiMAX
526
6.4
Acceso
celular
Internet
529
6.4.1
Panor√°mica
arquitectura
redes
celulares
530
6.5
Gesti√≥n
movilidad
principios
535
6.5.1
Direccionamiento
538
6.5.2
Enrutamiento
nodo
m√≥vil
539
6.6
IP
m√≥vil
545
6.7
Gesti√≥n
movilidad
redes
celulares
549
6.7.1
Enrutamiento
llamadas
usuario
m√≥vil
550
6.7.2
Transferencia
llamadas
GSM
551
6.8
Tecnolog√≠a
inal√°mbrica
movilidad
impacto
protocolos
capas
superiores
555
6.9
Resumen
557
Problemas
cuestiones
repaso
557
Problemas
559
Preguntas
discusi√≥n
562
Pr√°cticas
laboratorio
Wireshark
563
Entrevista
Charlie
Perkins
564
Cap√≠tulo
Redes
multimedia
567
7.1
Aplicaciones
redes
multimedia
568
7.1.1
Ejemplos
aplicaciones
multimedia
568
7.1.2
Obst√°culos
informaci√≥n
multimedia
Internet
571
7.1.3
deber√≠a
evolucionar
Internet
soporte
aplicaciones
multimedia
572
7.1.4
Compresi√≥n
audio
v√≠deo
574
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xxiii7.2
Flujos
audio
v√≠deo
almacenado
576
7.2.1
Acceso
audio
v√≠deo
servidor
web
578
7.2.2
Env√≠o
informaci√≥n
multimedia
servidor
flujos
aplicaci√≥n
ayuda
579
7.2.3
Protocolo
transmisi√≥n
flujos
tiempo
real
RTSP
582
7.3
Utilizaci√≥n
√≥ptima
servicio
entrega
esfuerzo
585
7.3.1
Limitaciones
servicio
entrega
esfuerzo
586
7.3.2
Eliminaci√≥n
fluctuaciones
reproducir
audio
receptor
588
7.3.3
Recuperaci√≥n
frente
p√©rdidas
paquetes
592
7.3.4
Distribuci√≥n
multimedia
red
Internet
actual
redes
distribuci√≥n
contenido
595
7.3.5
Dimensionamiento
redes
servicio
entrega
esfuerzo
proporcionar
calidad
servicio
598
7.4
Protocolos
aplicaciones
interactivas
tiempo
real
600
7.4.1
RTP
600
7.4.2
Protocolo
control
RTP
RTCP
605
7.4.3
SIP
607
7.4.4
H.323
613
7.5
M√∫ltiples
clases
servicios
615
7.5.1
Escenarios
616
7.5.2
Mecanismos
planificaci√≥n
vigilancia
620
7.5.3
Diffserv
627
7.6
Garant√≠as
calidad
servicio
632
7.6.1
Ejemplo
explicativo
632
7.6.2
Reserva
recursos
admisi√≥n
llamadas
establecimiento
llamadas
633
7.7
Resumen
638
Problemas
cuestiones
repaso
640
Problemas
641
Preguntas
discusi√≥n
647
Tareas
programaci√≥n
648
Entrevista
Henning
Schulzrinne
650
Cap√≠tulo
Seguridad
redes
computadoras
653
8.1
seguridad
red
654
8.2
Principios
criptograf√≠a
656
8.2.1
Criptograf√≠a
clave
sim√©trica
658
8.2.2
Cifrado
clave
p√∫blica
664
8.3
Integridad
mensajes
autenticaci√≥n
puntos
terminales
669
8.3.1
Funciones
hash
criptogr√°ficas
670
8.3.2
C√≥digo
autenticaci√≥n
mensaje
672
8.3.3
Firmas
digitales
673
8.4
Correo
electr√≥nico
seguro
684
8.4.1
Correo
electr√≥nico
seguro
686
8.4.2
PGP
689
8.5
Conexiones
TCP
seguras
SSL
691
8.5.1
Panor√°mica
general
693
xxiv
Contenido
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xxivContenido
xxv
8.5.2
panor√°mica
completa
695
8.6
Seguridad
capa
red
IPsec
redes
privadas
virtuales
697
8.6.1
IPsec
redes
privadas
virtuales
VPN
698
8.6.2
protocolos
AH
ESP
699
8.6.3
Asociaciones
seguridad
700
8.6.4
datagrama
IPsec
701
8.6.5
IKE
gesti√≥n
claves
IPsec
704
8.7
Seguridad
redes
LAN
inal√°mbricas
705
8.7.1
WEP
Wired
Equivalent
Privacy
706
8.7.2
IEEE
802.11i
708
8.8
Seguridad
operacional
cortafuegos
sistemas
detecci√≥n
intrusiones
710
8.8.1
Cortafuegos
711
8.8.2
Sistemas
detecci√≥n
intrusiones
718
8.9
Resumen
721
Problemas
cuestiones
repaso
723
Problemas
725
Preguntas
discusi√≥n
731
Pr√°cticas
laboratorio
Wireshark
731
Pr√°cticas
laboratorio
IPsec
732
Entrevista
Steven
M.
Bellovin
733
Cap√≠tulo
Gesti√≥n
redes
735
9.1
gesti√≥n
redes
735
9.2
Infraestructura
gesti√≥n
red
739
9.3
entorno
gesti√≥n
est√°ndar
Internet
742
9.3.1
Estructura
informaci√≥n
gesti√≥n
SMI
745
9.3.2
Base
informaci√≥n
gesti√≥n
MIB
749
9.3.3
Operaciones
protocolo
SNMP
correspondencias
transporte
751
9.3.4
Seguridad
administraci√≥n
754
9.4
ASN.1
757
9.5
Conclusi√≥n
760
Problemas
cuestiones
repaso
762
Problemas
763
Preguntas
discusi√≥n
763
Entrevista
Jeff
Case
764
Referencias
767
√çndice
793
A01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xxvA01_KURO9675_05_SE_FM.qxd
22/3/10
08:14
P√°gina
xxviCAP√çTULO
Redes
computadoras
Internet
Internet
indiscutiblemente
sistema
ingenier√≠a
creado
mano
hombre
cientos
millones
computadoras
conectadas
enlaces
comuni-
caciones
switches
cientos
millones
usuarios
conectan
forma
intermitente
tel√©fonos
m√≥viles
PDA
dispositivos
tales
sensores
c√°maras
web
consolas
juegos
marcos
fotograf√≠as
lavadoras
conectan
Inter-
net
Internet
red
enorme
incluye
tantos
componentes
distintos
tantos
usos
esperanza
comprender
funciona
concreta-
mente
funcionan
redes
computadoras
principios
estruc-
tura
b√°sicos
puedan
proporcionar
base
comprender
sistema
asombrosamente
complejo
caso
afirmativo
resultar
interesante
divertido
dedicarse
estudiar
redes
computadoras
Afor-
tunadamente
respuesta
preguntas
rotundo
Ciertamente
objetivo
libro
iniciar
lector
din√°mico
campo
redes
computadoras
proporcion√°ndole
principios
conocimientos
pr√°cticos
necesitar√°
entender
redes
actuales
futuro
cap√≠tulo
amplia
introducci√≥n
mundo
redes
compu-
tadoras
Internet
objetivo
proporcionar
visi√≥n
general
establecer
contexto
resto
libro
bosque
√°rboles
cap√≠tulo
introducci√≥n
abordan
fundamentos
componentes
forman
red
computadoras
perder
vista
pano-
r√°mica
general
estructurar
introducci√≥n
redes
computadoras
forma
exponer
conceptos
t√©rminos
fundamentales
examinaremos
componentes
esenciales
forman
red
computadoras
Comenzaremos
fron-
tera
red
echaremos
vistazo
sistemas
terminales
aplicaciones
ejecu-
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
1tan
red
continuaci√≥n
exploraremos
n√∫cleo
red
computadoras
exami-
nando
enlaces
switches
transportan
datos
redes
acceso
medios
f√≠sicos
conectan
sistemas
terminales
n√∫cleo
red
Aprendere-
mos
Internet
red
redes
redes
conectan
completada
introducci√≥n
frontera
n√∫cleo
red
compu-
tadoras
mitad
cap√≠tulo
adoptaremos
punto
vista
amplio
abs-
tracto
Examinaremos
retardos
p√©rdidas
tasa
transferencia
datos
red
computadoras
proporcionaremos
modelos
cuantitativos
simples
retardos
tasas
transferencia
terminal
terminal
modelos
retardos
transmisi√≥n
propagaci√≥n
cola
continuaci√≥n
presentaremos
princi-
pios
b√°sicos
arquitecturas
red
concreto
capas
protocolos
mode-
servicios
veremos
redes
vulnerables
tipos
distintos
ataques
revisaremos
ataques
veremos
redes
seguras
concluiremos
cap√≠tulo
historia
redes
comunicaciones
1.1
Internet
libro
emplear
red
p√∫blica
Internet
red
computadoras
espec√≠fica
principal
veh√≠culo
explicar
redes
computadoras
protocolos
Internet
formas
responder
pregunta
describiendo
tuercas
tornillos
forman
red
componentes
hardware
software
b√°sicos
forman
Internet
describi√©ndola
t√©rminos
infra-
estructura
red
proporciona
servicios
aplicaciones
distribuidas
Comenzaremos
descripci√≥n
componentes
esenciales
utilizando
Figura
1.1
ilustrar
expo-
sici√≥n
1.1.1
Descripci√≥n
componentes
esenciales
Internet
red
computadoras
interconecta
cientos
millones
dispositivos
inform√°ticos
mundo
tiempo
dispositivos
fundamentalmente
computadoras
PC
escritorio
tradicionales
estaciones
trabajo
Linux
llamados
servidores
almacenaban
transmit√≠an
informaci√≥n
p√°ginas
web
mensajes
correo
electr√≥nico
sistemas
terminales
tradi-
cionales
televisiones
computadoras
port√°tiles
consolas
juegos
tel√©fonos
m√≥viles
c√°maras
web
sistemas
detecci√≥n
medioambientales
autom√≥viles
dispositivos
seguridad
electrodom√©sticos
conectados
Internet
t√©rmino
red
com-
putadoras
comenzando
quedar
desactualizado
causa
cantidad
dis-
positivos
tradicionales
conectados
Internet
jerga
Internet
dispositivos
denominan
hosts
sistemas
terminales
julio
2008
600
millones
sistemas
terminales
conectados
Internet
ISC
2009
contar
tel√©fo-
m√≥viles
computadoras
port√°tiles
dispositivos
conectan
forma
inter-
mitente
Internet
sistemas
terminales
conectan
red
enlaces
comunica-
ciones
dispositivos
conmutaci√≥n
paquetes
Secci√≥n
1.2
veremos
tipos
enlaces
comunicaciones
compuestos
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
21.1
INTERNET
Clave
Host
sistema
terminal
Servidor
Dispositivo
m√≥vil
Conmutador
paquetes
M√≥dem
Estaci√≥n
base
Tel√©fono
m√≥vil
Torre
telefon√≠a
m√≥vil
ISP
nacional
globalRed
m√≥vil
ISP
local
regional
Red
empresarial
Red
dom√©stica
Figura
1.1
componentes
esenciales
Internet
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
3tipos
medios
f√≠sicos
incluyen
cable
coaxial
hilo
cobre
fibra
√≥ptica
espectro
radio
distintos
enlaces
transmitir
datos
distintas
velocidades
velocidad
transmisi√≥n
enlace
mide
bits
sistema
terminal
enviar
datos
sistema
terminal
emisor
segmenta
datos
a√±ade
bits
cabecera
segmento
paquetes
informaci√≥n
resultantes
conocidos
paquetes
jerga
inform√°tica
env√≠an
red
sistema
terminal
receptor
vuelven
ensamblados
obtener
datos
origi-
nales
conmutador
paquetes
toma
paquete
llega
enlaces
comu-
nicaciones
entrada
reenv√≠a
enlaces
comunicaciones
salida
dispositivos
conmutaci√≥n
paquetes
suministran
formas
modelos
tipos
utilizados
actualmente
Internet
routers
switches
capa
enlace
tipos
reenv√≠an
paquetes
destinos
finales
switches
capa
enlace
normalmente
emplean
redes
acceso
rou-
ters
suelen
utilizarse
n√∫cleo
red
secuencia
enlaces
comunicaciones
conmutadores
paquetes
atraviesa
paquete
sistema
terminal
emisor
sistema
terminal
receptor
conoce
ruta
red
dif√≠cil
estimar
can-
tidad
exacta
tr√°fico
transporta
Internet
Odylsko
2003
Pri-Metrica
PriMetrica
2009
estima
2008
proveedores
Internet
emplearon
10
terabits
capacidad
internacional
dicha
capacidad
duplica
a√±os
redes
conmutaci√≥n
paquetes
transportan
paquetes
similares
aspectos
redes
transporte
formadas
autopistas
carreteras
interseccio-
nes
transportan
veh√≠culos
ejemplo
imagine
f√°brica
necesita
trasladar
enorme
cargamento
almac√©n
destino
miles
kil√≥metros
f√°brica
cargamento
reparte
carga
flota
camiones
cami√≥n
viaje
almac√©n
destino
forma
independiente
red
auto-
pistas
carreteras
intersecciones
almac√©n
destino
carga
cami√≥n
des-
carga
agrupa
resto
cargamento
medida
llegando
sentido
paquetes
camiones
enlaces
comunicaciones
auto-
pistas
carreteras
dispositivos
conmutaci√≥n
paquetes
intersecciones
sistemas
terminales
edificios
f√°brica
almac√©n
cami√≥n
ruta
red
transporte
carretera
paquete
ruta
red
computadoras
sistemas
terminales
acceden
Internet
ISP
Internet
Service
Provi-
der
Proveedor
servicios
Internet
incluyendo
ISP
residenciales
compa√±√≠as
telef√≥nicas
cable
locales
ISP
corporativos
ISP
universitarios
ISP
proporcionan
acceso
inal√°mbrico
WiFi
aeropuertos
hoteles
caf√©s
luga-
res
p√∫blicos
ISP
red
conmutadores
paquetes
enlaces
comunicaciones
ISP
proporcionan
amplia
variedad
tipos
acceso
red
sistemas
terminales
incluyen
acceso
m√≥dem
acceso
telef√≥-
nico
56
kbps
acceso
banda
ancha
residencial
m√≥dem
cable
DSL
acceso
LAN
Local
Area
Network
Red
√°rea
local
alta
velocidad
acceso
inal√°m-
brico
ISP
proporcionan
acceso
Internet
proveedores
contenido
conectando
sitios
web
directamente
Internet
Internet
conecta
sistemas
terminales
ISP
proporcionan
acceso
sistemas
terminales
interconectados
ISP
nivel
inferior
interco-
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
4nectan
ISP
nivel
superior
nacionales
internacionales
AT&T
Sprint
ISP
nivel
superior
consiste
routers
alta
velocidad
interconectados
tra-
v√©s
enlaces
fibra
√≥ptica
alta
velocidad
red
ISP
nivel
inferior
superior
administra
forma
independiente
ejecuta
protocolo
IP
v√©ase
ajusta
determinados
convenios
denominaci√≥n
asignaci√≥n
direcciones
Secci√≥n
1.3
examinaremos
detalladamente
ISP
interconexiones
sistemas
terminales
conmutadores
paquetes
dispositivos
Internet
ejecutan
protocolos
controlan
env√≠o
recepci√≥n
informaci√≥n
Inter-
net
protocolo
TCP
Transmission
Control
Protocol
Protocolo
control
transmi-
si√≥n
protocolo
IP
Internet
Protocol
Protocolo
Internet
protocolos
importantes
Internet
protocolo
IP
especifica
formato
paquetes
env√≠an
reciben
routers
sistemas
terminales
principales
protocolos
Internet
conocen
colectivamente
protocolos
TCP
IP
cap√≠tulo
introduc-
ci√≥n
comenzaremos
estudiar
protocolos
principio
libro
dedica
protocolos
empleados
redes
computadoras
importancia
protocolos
Internet
importante
mundo
est√©
entran
juego
est√°ndares
est√°ndares
Internet
desarrollados
IETF
Internet
Engine-
ering
Task
Force
IETF
2009
documentos
asociados
est√°ndares
IETF
cono-
cen
documentos
RFC
Request
For
Comments
Solicitud
comentarios
RFC
nacieron
solicitudes
comentarios
car√°cter
general
nombre
solu-
cionar
problemas
dise√±o
red
protocolos
enfrent√≥
precur-
sor
Internet
contenido
documentos
suele
t√©cnico
detallado
Definen
protocolos
tales
TCP
IP
HTTP
Web
SMTP
correo
elec-
tr√≥nico
Actualmente
5.000
documentos
RFC
orga-
nismos
dedicados
especificar
est√°ndares
componentes
red
espec√≠ficamente
enlaces
red
comit√©
est√°ndares
IEEE
802
LAN
MAN
IEEE
802
2009
ejemplo
especifica
est√°ndares
redes
Ethernet
WiFi
1.1.2
Descripci√≥n
servicios
momento
identificado
componentes
forman
Internet
describir
Internet
punto
vista
completamente
concreto
infraestructura
proporciona
servicios
aplicaciones
aplicaciones
incluyen
correo
electr√≥nico
navegaci√≥n
web
mensajer√≠a
instant√°nea
Vo
Vo
compartici√≥n
archivos
redes
iguales
pares
P2P
Peer-to-peer
televi-
si√≥n
Internet
sesiones
remotas
aplicaciones
aplicaciones
distribuidas
bian
datos
importante
aplicaciones
Internet
ejecutan
sistemas
terminales
conmutadores
paquetes
disponibles
n√∫cleo
red
dispositivos
conmutaci√≥n
paquetes
facilitan
intercambio
datos
sistemas
terminales
preocupan
aplicaci√≥n
est√©
actuando
origen
des-
tino
datos
ahondar
infraestructura
proporciona
servicios
aplicaciones
supongamos
excitante
1.1
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
5nueva
idea
aplicaci√≥n
distribuida
Internet
beneficiar
enormemente
humanidad
simplemente
hacernos
ricos
famosos
podr√≠amos
transformar
idea
aplicaci√≥n
real
Internet
Puesto
aplicaciones
eje-
cutan
sistemas
terminales
tendremos
escribir
programas
software
ejecu-
ten
dichos
sistemas
ejemplo
podr√≠amos
escribir
programas
Java
Python
desarrollando
aplicaci√≥n
Internet
distribuida
pro-
gramas
ejecuten
distintos
sistemas
terminales
enviarse
datos
llegamos
meollo
cuesti√≥n
forma
alter-
nativa
describir
Internet
plataforma
aplicaciones
aplicaci√≥n
ejecuta
sistema
terminal
instruye
Internet
entregar
datos
pro-
grama
ejecuta
sistema
terminal
sistemas
terminales
conectados
Internet
proporcionan
API
Application
Pro-
gramming
Interface
Interfaz
programaci√≥n
aplicaciones
especifica
programa
software
ejecuta
sistema
terminal
pide
infraestructura
Inter-
net
suministre
datos
programa
software
destino
espec√≠fico
ejecuta
sistema
terminal
API
Internet
consta
conjunto
reglas
programa
transmite
datos
cumplir
Internet
entregar
datos
programa
destino
Cap√≠tulo
aborda
detalle
API
Internet
momento
veamos
sencilla
analog√≠a
emplearemos
frecuencia
libro
Suponga-
mos
Alicia
desea
enviar
carta
Benito
utilizando
servicio
postal
Alicia
escribir
carta
datos
lanzar
carta
ventana
lugar
necesario
Alicia
introduzca
carta
escriba
nombre
completo
Benito
direcci√≥n
c√≥digo
postal
cierre
pegue
sello
esquina
supe-
rior
derecha
introducir
buz√≥n
servicio
postal
servicio
postal
correos
API
servicio
postal
conjunto
reglas
Alicia
seguir
servicio
correos
entregue
carta
Benito
forma
similar
Internet
API
programa
env√≠a
datos
seguir
Internet
entregue
datos
software
recibir√°
servicio
correos
proporciona
servicio
clientes
correo
urgente
acuse
recibo
correo
ordinario
Internet
proporciona
m√∫ltiples
servicios
aplicaciones
desarrolle
aplicaci√≥n
Internet
seleccionar
servicios
Internet
aplicaci√≥n
Cap√≠tulo
describiremos
servicios
Internet
descripci√≥n
Internet
infraestructura
permite
proporcionar
ser-
vicios
aplicaciones
distribuidas
importante
necesidades
aplicaciones
dirigiendo
avances
componentes
esenciales
Internet
importante
presente
Internet
infraestructura
inventando
implementando
constantemente
aplicaciones
descripciones
Internet
t√©rminos
componen-
tes
esenciales
infraestructura
permite
proporcionar
servicios
aplicaciones
distribuidas
Internet
conmuta-
ci√≥n
paquetes
TCP
IP
API
routers
tipos
enlaces
comu-
nicaciones
Internet
aplicaci√≥n
distribuida
tostadora
sensor
temperatura
conectarse
Internet
siente
abrumado
preguntas
preocupe
prop√≥sito
libro
presentarle
componentes
hardware
software
Internet
principios
regulan
funciona
siguientes
secciones
cap√≠tulos
explicaremos
t√©rmi-
daremos
respuesta
cuestiones
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
61.1.3
protocolo
visto
sirve
Internet
ocuparnos
t√©rmino
importante
mundo
redes
computadoras
protocolo
proto-
colo
protocolo
Analog√≠a
humana
Probablemente
sencillo
comprender
concepto
protocolo
red
considerando
lugar
analog√≠as
humanas
personas
llevamos
cabo
protocolos
constantemente
Piense
necesita
preguntar
alguien
hora
Figura
1.2
muestra
cabo
intercambio
tipo
protocolo
personas
maneras
dicta
iniciar
proceso
comuni-
caci√≥n
alguien
saludar
Hola
mostrado
Figura
1.2
respuesta
t√≠pica
saludo
Hola
Impl√≠citamente
saludo
respuesta
toma
indicaci√≥n
continuar
proceso
comunicaci√≥n
pre-
guntar
hora
respuesta
hola
inicial
ejemplo
moleste
hablo
idioma
respuesta
impublicable
debemos
escribir
indi-
car√°
indisposici√≥n
incapacidad
comunicarse
caso
protocolo
rela-
ciones
personas
establece
preguntarse
hora
ocasiones
obtiene
respuesta
cuyo
caso
renunciar
preguntar
persona
hora
protocolo
personas
mensajes
espec√≠ficos
1.1
INTERNET
GET
http://www.awl.com/kurose-ross
Solicitud
conexi√≥n
TCP
Tiempo
Tiempo
Respuesta
conexi√≥n
TCP
archivo
Hola
hora
Tiempo
Tiempo
Hola
2:00
Figura
1.2
protocolo
humano
protocolo
red
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
7enviamos
acciones
espec√≠ficas
tomamos
respuesta
mensajes
contesta-
ci√≥n
recibidos
sucesos
ejemplo
recibir
respuesta
periodo
tiempo
determinado
Evidentemente
mensajes
transmitidos
recibidos
accio-
nes
tomadas
enviar
recibir
mensajes
sucesos
desempe√±an
papel
princi-
pa
protocolo
humano
personas
adoptan
protocolos
ejemplo
persona
guarda
formas
comprende
concepto
tiempo
protocolos
interoperar√°n
comunicaci√≥n
lugar
idea
aplicable
redes
necesario
entidades
deseen
comunicarse
ejecuten
protocolo
cabo
tarea
Consideremos
analog√≠a
humana
Suponga
asistiendo
clase
ejemplo
redes
profesor
hablando
acerca
protocolos
comprende
profesor
detiene
explicaci√≥n
pregunta
men-
saje
dirigido
estudiantes
dormidos
reciben
levanta
mano
transmitiendo
mensaje
impl√≠cito
profesor
profesor
dirige
sonrisa
mensaje
anima
plantear
pregunta
pro-
fesores
adoran
planteen
cuestiones
continuaci√≥n
pregunta
transmite
mensaje
profesor
profesor
escucha
pregunta
recibe
mensaje
responde
transmite
respuesta
vemos
transmisi√≥n
recep-
ci√≥n
mensajes
conjunto
acciones
convencionales
tomadas
env√≠an
reci-
ben
mensajes
constituyen
n√∫cleo
protocolo
pregunta-respuesta
Protocolos
red
protocolo
red
similar
protocolo
humano
entidades
intercambian
mensajes
llevan
cabo
acciones
componentes
hardware
soft-
ware
dispositivo
ejemplo
computadora
PDA
tel√©fono
m√≥vil
router
dispositivo
red
actividad
Internet
implique
entidades
remotas
comunican
gobernada
protocolo
ejemplo
pro-
tocolos
implementados
hardware
tarjetas
interfaz
red
computadoras
conectadas
f√≠sicamente
controlan
flujo
bits
cable
conectado
tarjetas
interfaz
red
protocolos
control
congesti√≥n
sistemas
terminales
controlan
velocidad
transmiten
paquetes
emisor
receptor
protocolos
routers
determinan
ruta
seguir√°
paquete
origen
des-
tino
protocolos
ejecutan
partes
Internet
consecuencia
libro
dedicada
protocolos
redes
computadoras
Bas√°ndonos
protocolo
red
probablemente
familiarizado
ocurre
solicitud
servidor
web
escribe
URL
p√°gina
web
navegador
escenario
ilustra
mitad
derecha
Figura
1.2
lugar
computadora
enviar√°
mensaje
soli-
citud
conexi√≥n
servidor
web
esperar√°
respuesta
servidor
web
recibir√°
men-
saje
solicitud
devolver√°
mensaje
respuesta
conexi√≥n
Sabiendo
solicitar
documento
web
computadora
env√≠a
nombre
p√°gina
web
desea
extraer
servidor
web
mensaje
GET
servidor
web
env√≠a
p√°gina
web
archivo
computadora
Bas√°ndonos
ejemplos
anteriores
protocolos
humanos
red
intercambio
mensajes
acciones
tomadas
env√≠an
reciben
mensajes
constituyen
elementos
claves
definici√≥n
protocolo
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
8Un
protocolo
define
formato
orden
mensajes
intercambiados
entidades
comunican
acciones
tomadas
transmisi√≥n
recepci√≥n
mensaje
suceso
Internet
redes
computadoras
general
extensivo
proto-
colos
distintos
protocolos
utilizan
cabo
distintas
tareas
comuni-
caci√≥n
leer
libro
ver√°
protocolos
simples
directos
complejos
intelectualmente
profundos
Dominar
campo
redes
computadoras
equivalente
entender
protocolos
red
1.2
frontera
red
secci√≥n
presentado
introducci√≥n
car√°cter
general
Internet
protocolos
red
profundizar
componentes
red
computadoras
Internet
concreto
Comenzaremos
secci√≥n
frontera
red
fijaremos
componentes
familiarizados
computadoras
PDA
tel√©fonos
m√≥viles
dispositivos
utilizamos
diario
secci√≥n
desplazaremos
frontera
red
n√∫cleo
examinaremos
procesos
conmutaci√≥n
enrutamiento
tie-
nen
lugar
redes
Recuerde
secci√≥n
jerga
redes
inform√°ticas
computa-
doras
resto
dispositivos
conectados
Internet
designan
siste-
terminales
sit√∫an
frontera
Internet
muestra
Figura
1.3
sistemas
terminales
Internet
incluyen
computadoras
escritorio
ejemplo
PC
escritorio
computadoras
Mac
equipos
Linux
servidores
ejemplo
servidores
web
correo
electr√≥nico
equipos
m√≥viles
ejemplo
computadoras
por-
t√°tiles
dispositivos
PDA
tel√©fonos
conexiones
Internet
inal√°mbricas
cantidad
creciente
dispositivos
alternativos
actualmente
conect√°ndose
Internet
sistemas
terminales
v√©ase
recuadro
p√°gina
sistemas
terminales
conocen
hosts
albergan
ejecutan
programas
aplicaci√≥n
tales
navegadores
web
servidores
web
progra-
lectura
mensajes
correo
electr√≥nico
servidores
correo
electr√≥nico
libro
utilizaremos
indistintamente
t√©rminos
host
sistema
terminal
host
sistema
terminal
ocasiones
hosts
clasifican
categor√≠as
clientes
servidores
general
podr√≠amos
clientes
suelen
computa-
doras
escritorio
port√°tiles
PDA
etc.
servidores
suelen
equi-
pos
potentes
almacenan
distribuyen
p√°ginas
web
flujos
v√≠deo
correo
electr√≥nico
etc.
1.2.1
Programas
cliente
servidor
contexto
software
red
definici√≥n
t√©rminos
cliente
servi-
dor
definici√≥n
haremos
referencia
libro
programa
cliente
programa
ejecuta
sistema
terminal
solicita
recibe
servicio
pro-
grama
servidor
ejecuta
sistema
terminal
Web
correo
electr√≥nico
1.2
FRONTERA
RED
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
9transferencia
archivos
sesiones
remotas
grupos
noticias
apli-
caciones
populares
adoptan
modelo
cliente-servidor
Puesto
programa
cliente
normalmente
ejecuta
computadora
programa
servidor
aplicacio-
nes
Internet
cliente-servidor
definici√≥n
aplicaciones
distribuidas
programa
cliente
programa
servidor
interact√∫an
envi√°ndose
mensajes
Inter-
net
nivel
abstracci√≥n
routers
enlaces
restantes
componentes
Internet
sirven
forma
colectiva
caja
negra
transfiere
mensajes
componentes
distribuidos
establece
comunicaci√≥n
aplicaci√≥n
Internet
nivel
abstracci√≥n
ilustra
Figura
1.3
aplicaciones
Internet
actuales
constituidas
programas
cliente
puros
interact√∫an
programas
servidor
puros
aplicaciones
aplica-
10
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
ASOMBROSA
COLECCI√ìN
SISTEMAS
TERMINALES
INTERNET
tiempo
sistemas
terminales
conectados
Internet
fundamental-
mente
computadoras
tradicionales
equipos
escritorio
potentes
servidores
finales
d√©cada
1990
momento
actual
amplio
rango
intere-
santes
dispositivos
diversos
conect√°ndose
Internet
dispositivos
comparten
caracter√≠stica
com√∫n
necesitar
enviar
recibir
datos
digitales
dispositivos
Dada
omnipresencia
Internet
protocolos
definidos
estandariza-
disponibilidad
productos
hardware
preparados
Internet
l√≥gico
utilizar
tecnolog√≠a
Internet
conectar
dispositivos
dispositivos
parecen
creados
exclusivamente
entreteni-
miento
marco
fotograf√≠as
IP
escritorio
Ceiva
2009
descarga
fotograf√≠as
digitales
servidor
remoto
muestra
dispositivo
marco
fotograf√≠as
tradi-
cional
tostadora
Internet
descarga
informaci√≥n
metereol√≥gica
servidor
graba
imagen
previsi√≥n
ejemplo
nubes
claros
tostada
matutina
BBC
2001
dispositivos
proporcionan
informaci√≥n
√∫til
ejemplo
c√°maras
web
mues-
tran
tr√°fico
condiciones
meteorol√≥gicas
vigilan
lugar
inter√©s
electrodom√©sticos
conectados
Internet
incluyen
lavadoras
frigor√≠ficos
hor-
incorporan
interfaces
tipo
navegador
web
permiten
monitorizaci√≥n
control
remotos
telef√≥nos
m√≥viles
IP
capacidades
GPS
iPhone
Apple
ponen
alcance
mano
navegaci√≥n
Web
correo
electr√≥nico
servicios
dependientes
ubicaci√≥n
clase
sistemas
sensores
red
promete
revolu-
cionar
forma
observaremos
interactuaremos
entorno
sensores
red
integrados
entorno
f√≠sico
permiten
vigilancia
edificios
puentes
activi-
dad
s√≠smica
h√°bitats
fauna
flora
estuarios
capas
inferiores
atm√≥sfera
CENS
2009
CASA
2009
dispositivos
biom√©dicos
integrados
conectados
red
dando
lugar
numerosos
problemas
seguridad
intimidad
Halperin
2008
transpondedor
RFID
identificaci√≥n
radiofrecuencia
peque√±o
sensor
inte-
grado
objeto
informaci√≥n
acerca
objeto
est√©
disponible
Internet
permitir√°
disfrutar
Internet
objetos
ITU
2005
HISTORIA
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
10ciones
iguales
pares
P2P
Peer-to-Peer
sistemas
terminales
interact√∫an
ejecutan
programas
realizan
funciones
cliente
servidor
ejemplo
aplicaciones
compartici√≥n
archivos
P2P
BitTorrent
eMule
programa
disponible
sistema
terminal
usuario
act√∫a
cliente
solicita
archivo
par
servidor
env√≠a
archivo
par
tele-
fon√≠a
Internet
partes
intervienen
comunicaci√≥n
interact√∫an
igua-
sesi√≥n
sim√©trica
enviando
recibiendo
ambas
partes
datos
Cap√≠tulo
compararemos
contrastaremos
detalle
arquitecturas
cliente-servidor
P2P.
1.2
FRONTERA
RED
11
ISP
nacional
globalRed
m√≥vil
ISP
local
regional
Red
empresarial
Red
dom√©stica
Figura
1.3
Interacci√≥n
sistemas
terminales
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
1112
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
1.2.2
Redes
acceso
vistas
aplicaciones
sistemas
terminales
existentes
frontera
red
pasar
redes
acceso
enlaces
f√≠sicos
conectan
sistema
termi-
nal
router
conocido
router
frontera
ruta
sistema
terminal
sistema
terminal
distante
Figura
1.4
muestra
tipos
enlaces
acceso
sistema
terminal
router
frontera
enlaces
acceso
resaltados
l√≠neas
gruesas
secci√≥n
repasan
Figura
1.4
Redes
acceso
ISP
nacional
globalRed
m√≥vil
ISP
local
regional
Red
empresarial
Red
dom√©stica
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
121.2
FRONTERA
RED
13
tecnolog√≠as
comunes
redes
acceso
baja
velocidad
alta
velocidad
veremos
tecnolog√≠as
acceso
emplean
distintos
grados
partes
infraestructura
telefon√≠a
cableada
tradicional
local
pro-
porcionada
compa√±√≠a
telefon√≠a
local
haremos
referencia
simplemente
telco
local
ejemplos
compa√±√≠as
ser√≠an
Verizon
Unidos
France
Telecom
Francia
residencia
chalet
piso
dispone
enlace
directo
cobre
par
trenzado
switch
compa√±√≠a
telef√≥nica
edi-
ficio
denominado
central
telef√≥nica
jerga
campo
telefon√≠a
secci√≥n
explicaremos
cable
cobre
par
trenzado
Normalmente
compa√±√≠a
telef√≥nica
local
posee
cientos
centrales
telef√≥nicas
enlaza
clientes
central
pr√≥xima
Acceso
telef√≥nico
d√©cada
1990
usuarios
residenciales
acced√≠an
Internet
l√≠neas
telef√≥nicas
anal√≥gicas
normales
utilizando
m√≥dem
acceso
telef√≥nico
Actualmente
usuarios
pa√≠ses
subdesarrollados
√°reas
rurales
pa√≠ses
desa-
rrollados
acceso
banda
ancha
disponible
acceder
Internet
conexi√≥n
acceso
telef√≥nico
estima
10%
usuarios
residenciales
Unidos
utilizaban
2008
conexiones
acceso
telef√≥-
nico
Pew
2008
utiliza
t√©rmino
acceso
telef√≥nico
dial-up
software
usuario
real-
mente
llama
n√∫mero
tel√©fono
ISP
establece
conexi√≥n
telef√≥nica
tradicional
ejemplo
AOL
muestra
Figura
1.5
PC
conec-
tado
m√≥dem
acceso
telef√≥nico
conectado
l√≠nea
telef√≥nica
ana-
l√≥gica
domicilio
l√≠nea
telef√≥nica
anal√≥gica
hecha
hilo
cobre
paz
trenzado
l√≠nea
tel√©fono
emplea
llamadas
telef√≥nicas
ordina-
rias
m√≥dem
convierte
salida
digital
PC
se√±al
anal√≥gica
apropiada
transmitida
l√≠nea
telef√≥nica
anal√≥gica
extremo
conexi√≥n
m√≥dem
ISP
convierte
se√±al
anal√≥gica
recibe
se√±al
digital
se√±al
entrada
router
ISP
Figura
1.5
Acceso
telef√≥nico
Internet
Conmutador
circuitos
PC
dom√©stico
Red
telef√≥nicaCentral
telef√≥nica
M√≥dem
acceso
telef√≥nico
dom√©stico
M√≥dem
ISP
ejmplo
AOL
Internet
Clave
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
1314
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
acceso
telef√≥nico
Internet
presenta
inconvenientes
importantes
destacable
extremadamente
lento
proporcionando
velocidad
m√°xima
56
kbps
velocidad
tardan
minutos
descargar
archivo
MP3
canci√≥n
minutos
necesitar√≠an
descargar
pel√≠cula
Gbyte
m√≥dem
acceso
telef√≥nico
ocupa
l√≠nea
telef√≥-
nica
usuario
miembro
familia
utiliza
m√≥dem
acceso
telef√≥nico
navegar
Web
resto
familia
recibir
llama-
das
telef√≥nicas
normales
l√≠nea
tel√©fono
DSL
tipos
acceso
residencial
banda
ancha
predominantes
l√≠neas
DSL
Digital
Subscriber
Line
L√≠nea
abonado
digital
cable
mayor√≠a
pa√≠ses
desarrollados
50%
domicilios
particulares
disponen
acceso
banda
ancha
Corea
Sur
Islandia
Holanda
Dinamarca
Suiza
cabeza
penetraci√≥n
74%
hogares
2008
ITIF
2008
Uni-
l√≠neas
DSL
cable
cuota
mercado
acceso
banda
ancha
Pew
2008
Unidos
Canad√°
domina
tecnolo-
g√≠a
DSL
especialmente
Europa
pa√≠ses
90%
conexiones
banda
ancha
DSL
regla
general
domicilios
particulares
contratan
servicio
DSL
acceso
Internet
empresa
proporciona
acceso
telef√≥nico
local
compa√±√≠a
telef√≥nica
utiliza
acceso
DSL
compa√±√≠a
tele-
f√≥nica
cliente
act√∫a
ISP
muestra
Figura
1.6
m√≥dem
DSL
cliente
utiliza
l√≠nea
telef√≥nica
existente
hilo
cobre
par
trenzado
intercambiar
datos
multiplexor
acceso
DSL
DSLAM
normalmente
central
compa√±√≠a
telef√≥nica
l√≠nea
telef√≥nica
transporta
simult√°nea-
mente
datos
se√±ales
telef√≥nicas
codifican
frecuencias
distintas
canal
descarga
alta
velocidad
opera
banda
50
kHz
MHz
canal
carga
velocidad
media
opera
banda
kHz
50
kHz
canal
telef√≥nico
ordinario
bidireccional
opera
banda
kHz
Figura
1.6
Acceso
DSL
Internet
PC
dom√©stico
Tel√©fono
domicilio
M√≥dem
DSL
Internet
Red
telef√≥nica
Circuito
separador
L√≠nea
telef√≥nica
existente
telefon√≠a
0-4
kHz
4-50
kHz
carga
datos
50
kHz
MHz
descarga
datos
Central
telef√≥nica
DSLAM
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
14Este
m√©todo
√∫nico
enlace
DSL
comporte
enlaces
separados
llamada
tel√©fono
conexi√≥n
Internet
compartir
enlace
DSL
tiempo
Secci√≥n
1.3.1
describiremos
t√©cnica
multiplexaci√≥n
divisi√≥n
frecuencia
cliente
se√±ales
llegan
domicilio
separadas
se√±ales
datos
telef√≥nicas
circuito
separador
splitter
reenv√≠a
se√±al
datos
m√≥dem
DSL
compa√±√≠a
telef√≥nica
central
multiplexor
DSLAM
separa
se√±ales
datos
telefon√≠a
env√≠a
datos
Internet
Cientos
miles
viviendas
conectan
DSLAM
Cha
2009
Dischin-
ger
2007
DSL
presenta
ventajas
principales
comparaci√≥n
m√©todo
acceso
telef√≥-
nico
Internet
lugar
transmitir
recibir
datos
velocidades
altas
T√≠picamente
cliente
DSL
presentar√°
velocidad
transmisi√≥n
rango
com-
prendido
Mbps
descargas
comunicaciones
central
domicilio
usuario
128
kbps
Mbps
cargas
comunicaciones
domici-
lio
central
Puesto
velocidades
descarga
carga
acceso
asim√©trico
ventaja
importante
usuarios
hablar
tel√©fono
acceder
Internet
simult√°neamente
diferencia
m√©todo
acceso
telef√≥nico
usuario
llamar
n√∫mero
tel√©fono
ISP
acceso
Internet
lugar
dispone
conexi√≥n
permanente
activa
DSLAM
ISP
Internet
velocidades
transmisi√≥n
reales
descarga
carga
disponibles
domicilio
usuario
funci√≥n
distancia
casa
central
telef√≥nica
calibre
l√≠nea
par
trenzado
grado
interferencia
el√©ctrica
ingenieros
dise√±ado
expre-
samente
sistemas
DSL
distancias
cortas
domicilio
central
permi-
tido
velocidades
transmisi√≥n
sustancialmente
mayores
incrementar
velocidad
transmisi√≥n
datos
sistema
DSL
basa
algoritmos
avanzados
procesamiento
se√±ales
correcci√≥n
errores
conducir
importantes
retardos
paquetes
domicilio
radio
16
kil√≥metros
central
tecnolog√≠a
DSL
procesamiento
se√±ales
efectiva
usuario
deber√°
recurrir
forma
alternativa
acceso
Internet
Actualmente
amplia
variedad
tecnolog√≠as
DSL
alta
velocidad
gozan
aceptaci√≥n
pa√≠ses
ejemplo
tecnolog√≠a
VDSL
Very-high
speed
DSL
m√°xima
penetraci√≥n
Corea
Sur
Jap√≥n
proporciona
velo-
cidades
12
55
Mbps
descargas
velocidades
carga
comprendidas
1,6
20
Mbps
DSL
2009
Cable
domicilios
Am√©rica
Norte
lugares
reciben
cientos
cana-
televisi√≥n
redes
cable
coaxial
veremos
secci√≥n
cable
coaxial
sistema
televisi√≥n
cable
tradicional
terminal
cabecera
cable
difunde
canales
televisi√≥n
red
distribuci√≥n
cable
coa-
xial
amplificadores
domicilios
usuarios
DSL
acceso
telef√≥nico
emplean
infraestructura
telefon√≠a
local
existente
acceso
cable
Internet
utiliza
infraestructura
televisi√≥n
cable
existente
casas
obtienen
acceso
cable
Internet
compa√±√≠a
proporciona
televisi√≥n
cable
ilustra
Figura
1.7
fibra
√≥ptica
conecta
terminal
cabecera
cable
serie
nodos
√°rea
situados
vecindario
1.2
FRONTERA
RED
15
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
15Figura
1.7
Red
acceso
h√≠brida
fibra
√≥ptica
cable
coaxial
utiliza
cable
coaxial
tradicional
llegar
domicilios
nodo
√°rea
suele
soporte
500
5.000
viviendas
Puesto
sis-
tema
emplea
cable
coaxial
fibra
denomina
sistema
HFC
Hybrid
Fiber
Coax
H√≠brido
fibra
coaxial
acceso
cable
Internet
requiere
modems
especiales
conocen
modems
cable
m√≥dem
DSL
normalmente
m√≥dem
cable
dispositivo
externo
conecta
PC
puerto
Ethernet
Cap√≠-
tulo
veremos
detalles
acerca
Ethernet
modems
cable
dividen
red
HFC
canales
canal
descarga
canal
carga
caso
DSL
acceso
suele
asim√©trico
teniendo
normalmente
canal
descarga
asignada
velocidad
transmisi√≥n
canal
carga
caracter√≠stica
importante
acceso
Internet
cable
difusi√≥n
compartido
paquetes
enviados
terminal
cabe-
cera
descargan
enlace
vivienda
paquetes
enviados
viviendas
viajan
canal
carga
terminal
cabecera
usuarios
descargan
simult√°neamente
archivo
v√≠deo
canal
descarga
velocidad
real
usuario
recibe
archivo
v√≠deo
significativamente
menor
velocidad
acumulada
descarga
cable
contrario
usuarios
activos
navegando
Web
recibir√°
p√°gi-
nas
web
velocidad
descarga
m√°xima
cable
usuarios
rara
solicita-
r√°n
p√°gina
web
tiempo
Puesto
canal
carga
compartido
necesita
protocolo
distribuido
acceso
m√∫ltiple
coordinar
transmisiones
evitar
colisiones
veremos
problema
colisiones
detalle
Cap√≠tulo
abordar
tecnolog√≠a
Ethernet
favor
tecnolog√≠a
DSL
debemos
apuntar
conexi√≥n
punto
punto
vivienda
ISP
capacidad
transmisi√≥n
enlace
DSL
domicilio
ISP
dedicada
lugar
compartida
favor
transmisi√≥n
cable
red
HFC
correctamente
dimen-
sionada
proporciona
velocidades
transmisi√≥n
altas
DSL
batalla
Cable
fibra
Cable
coaxial
Cientos
viviendas
Terminal
cabecera
cable
Cientos
viviendas
Nodo
fibra
Nodo
fibra
16
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
16feroz
tecnolog√≠as
DSL
HFC
acceso
residencial
alta
velocidad
espe-
cialmente
Am√©rica
Norte
√°reas
rurales
disponible
tecnolog√≠as
utilizar
enlace
v√≠a
sat√©lite
conectar
vivienda
Internet
velocidades
superiores
Mbps
StarBand
HughesNet
proveedores
acceso
v√≠a
sat√©lite
Tecnolog√≠a
FTTH
Fiber-To-The-Home
Fibra
hogar
fibra
√≥ptica
veremos
Secci√≥n
1.2.3
ofrecer
velocidades
transmisi√≥n
significativamente
altas
cable
cobre
par
trenzado
cable
coaxial
pa√≠ses
compa√±√≠as
telef√≥nicas
tendido
recientemente
conexiones
fibra
√≥ptica
centrales
viviendas
proporcionando
acceso
Internet
alta
velocidad
servicios
telefon√≠a
televisi√≥n
fibra
√≥ptica
Unidos
Verizon
especialmente
agresiva
mercado
tecnolog√≠a
FTTH
servicio
FIOS
Verizon
FIOS
2009
tecnolog√≠as
compiten
distribuci√≥n
fibra
√≥ptica
centrales
hogares
red
distribuci√≥n
√≥ptica
simple
denomina
fibra
directa
fibra
sale
central
domicilio
tipo
distribuci√≥n
proporcionar
ancho
banda
cliente
dispone
fibra
dedicada
camino
central
habitual
fibra
saliente
central
compartida
viviendas
divida
fibras
individuales
espec√≠ficas
cliente
llegar
punto
viviendas
disponibles
arquitecturas
distribu-
ci√≥n
fibra
√≥ptica
llevan
cabo
separaci√≥n
redes
√≥pticas
activas
AON
Active
Optical
Network
redes
√≥pticas
pasivas
PON
Passive
Optical
Network
redes
AON
fundamentalmente
redes
Ethernet
conmutadas
abordare-
mos
Cap√≠tulo
brevemente
redes
√≥pticas
pasivas
uti-
lizan
servicio
FIOS
Verizon
Figura
1.8
muestra
tecnolog√≠a
FTTH
utilizando
arquitectura
distribuci√≥n
PON
vivienda
dispone
ter-
minaci√≥n
red
√≥ptica
ONT
Optical
Network
Terminator
conecta
distri-
buidor
vecindario
cable
fibra
√≥ptica
dedicado
distribuidor
combina
cantidad
viviendas
normalmente
100
√∫nico
cable
fibra
√≥ptica
compartido
conecta
terminaci√≥n
l√≠nea
√≥ptica
OLT
Figura
1.8
Acceso
Internet
FTTH
Internet
Central
Distribuidor
√≥ptico
ONT
ONT
ONT
OLT
Cables
fibra
√≥ptica
1.2
FRONTERA
RED
17
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
17Optical
Line
Terminator
central
compa√±√≠a
telef√≥nica
OLT
realiza
conversi√≥n
se√±ales
√≥pticas
el√©ctricas
conecta
Internet
router
compa√±√≠a
telef√≥nica
domicilios
usuarios
conectan
router
dom√©stico
normalmente
router
inal√°mbrico
ONT
acceden
Internet
tra-
v√©s
router
arquitectura
PON
paquetes
enviados
OLT
distribuidor
replican
distribuidor
forma
similar
terminal
cabecera
cable
teor√≠a
tecnolog√≠a
FTTH
proporcionar
velocidades
acceso
Internet
orden
gigabits
mayor√≠a
ISP
FTTH
ofrecen
velocidades
l√≥gicamente
caras
altas
mayor√≠a
clientes
actuales
tecnolog√≠a
FTTH
disfrutan
velocidades
descarga
compren-
didas
10
20
Mbps
velocidades
carga
10
Mbps
acceso
Internet
fibra
√≥ptica
permite
proporcionar
servicios
televisi√≥n
servicio
telefon√≠a
tradicional
Ethernet
campus
universitarios
corporativos
normalmente
utiliza
red
√°rea
local
LAN
Local
Area
Network
conectar
sistema
terminal
router
frontera
tipos
tecnolog√≠as
LAN
Ethernet
tecnolog√≠a
acceso
predominante
redes
corporativas
universitarias
ilustra
Figura
1.9
usuarios
Ethernet
utilizan
cable
cobre
par
trenzado
conectarse
switch
Ethernet
tecnolog√≠a
ver√°
detalle
Cap√≠tulo
acceso
Ethernet
normal-
mente
usuarios
disponen
velocidades
acceso
100
Mbps
servidores
alcanzar
velocidades
Gbps
10
Gbps
WiFi
habitual
usuarios
accedan
Internet
conexiones
ina-
l√°mbricas
computadora
port√°til
dispositivo
m√≥vil
iPhone
Blackberry
tel√©fono
Google
v√©ase
recuadro
asombrosa
colecci√≥n
sistemas
terminales
Internet
Actualmente
tipos
acceso
inal√°mbrico
Internet
LAN
inal√°mbrica
usuarios
inal√°mbricos
Figura
1.9
Acceso
Internet
utilizando
tecnolog√≠a
Ethernet
Switch
Ethernet
Router
institucional
100
Mbps
100
Mbps
100
Mbps
Servidor
ISP
instituci√≥n
18
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
18transmiten
paquetes
reciben
paquetes
punto
acceso
conectado
red
Internet
cableada
Habitualmente
usuarios
LAN
inal√°mbrica
encontrarse
decenas
metros
punto
acceso
redes
ina-
l√°mbricas
√°rea
extensa
paquetes
transmiten
estaci√≥n
base
infraestructura
inal√°mbrica
utilizada
telefon√≠a
m√≥vil
caso
provee-
dor
red
m√≥vil
gestiona
estaci√≥n
base
normalmente
usuario
decenas
kil√≥metros
estaci√≥n
base
Actualmente
acceso
LAN
inal√°mbrica
basada
tecnolog√≠a
IEEE
802.11
WiFi
encontrarlo
partes
universidades
oficinas
caf√©s
aeropuertos
domicilios
aviones
universidades
instalado
estaciones
base
IEEE
802.11
campus
permite
estudiantes
enviar
recibir
mensajes
correo
electr√≥nico
navegar
Web
estando
lugar
campus
ciudades
alguien
parado
esquina
calle
encontrarse
alcance
veinte
estaciones
base
mapa
global
navegable
estaciones
base
802.11
descubiertas
registradas
sitio
web
personas
disfrutan
tipo
cosas
consulte
wigle.net
2009
explica
Cap√≠tulo
actualmente
tecnolog√≠a
802.11
proporciona
velocidad
transmisi√≥n
compartida
54
Mbps
viviendas
combinan
acceso
residencial
banda
ancha
modems
cable
DSL
tecnolog√≠a
LAN
inal√°mbrica
barata
crear
redes
dom√©sticas
poten-
tes
Figura
1.10
muestra
esquema
red
dom√©stica
t√≠pica
red
dom√©stica
formada
port√°til
funci√≥n
itinerancia
roaming
PC
sobremesa
estaci√≥n
base
punto
acceso
inal√°mbrico
comunica
port√°til
ina-
l√°mbrico
m√≥dem
cable
proporciona
acceso
banda
ancha
Internet
router
interconecta
estaci√≥n
base
PC
sobremesa
m√≥dem
cable
red
permite
usuarios
red
dom√©stica
acceso
banda
ancha
Inter-
net
dispositivo
m√≥vil
cocina
dormitorios
jard√≠n
Figura
1.10
Esquema
red
dom√©stica
t√≠pica
Terminal
cabecera
cable
Vivienda
Internet
1.2
FRONTERA
RED
19
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
19Acceso
inal√°mbrico
√°rea
extensa
accede
Internet
red
LAN
inal√°mbrica
normalmente
necesa-
rio
decenas
metros
punto
acceso
viable
viviendas
caf√©s
forma
general
interior
alrededores
edificio
ocu-
rre
necesita
acceso
Internet
playa
autob√∫s
coche
tipo
acceso
√°rea
extensa
usuarios
itinerantes
Internet
utilizan
infraestructura
telefon√≠a
m√≥vil
acceder
estaciones
base
separadas
decenas
kil√≥metros
empresas
telecomunicaciones
inversiones
conoce
redes
inal√°mbricas
generaci√≥n
proporcionan
acceso
inal√°mbrico
Internet
red
√°rea
extensa
conmutaci√≥n
paquetes
velocidades
Mbps
Actualmente
millones
usuarios
emplean
redes
leer
enviar
mensajes
correo
electr√≥nico
navegar
Web
descargar
m√∫sica
despla-
zan
lugar
WiMAX
tecnolog√≠a
definitiva
espera
destronar
est√°n-
dares
WiMAX
Intel
WiMAX
2009
WiMAX
Forum
2009
conocido
IEEE
802.16
primo
lejano
protocolo
WiFi
802.11
citado
anteriormente
WiMAX
opera
independientemente
red
telefon√≠a
m√≥vil
promete
velocidades
comprendidas
10
Mbps
superiores
distancias
decenas
kil√≥metros
Sprint-Nextel
inver-
tido
miles
millones
d√≥lares
implantaci√≥n
WiMAX
a√±o
2007
Cap√≠tulo
abordan
detalle
tecnolog√≠as
WiFi
WiMAX
3G.
1.2.3
Medios
f√≠sicos
subsecci√≥n
proporcionado
panor√°mica
tecnolo-
g√≠as
acceso
red
importantes
disponibles
Internet
ido
descri-
biendo
tecnolog√≠as
indicado
medios
f√≠sicos
utilizados
ejemplo
tecnolog√≠a
HFC
emplea
combinaci√≥n
cable
fibra
√≥ptica
cable
coaxial
se√±alado
modems
acceso
telef√≥nico
56
kbps
DSL
utilizan
cable
cobre
par
trenzado
Asimismo
comentado
redes
acceso
m√≥vil
espectro
radio
subsecci√≥n
introducci√≥n
medios
transmisi√≥n
emplean
habitualmente
Inter-
net
definir
entiende
f√≠sico
reflexionemos
vida
bit
Imagine
bit
viaja
sistema
terminal
atravesando
serie
enla-
ces
routers
sistema
terminal
pobre
bit
desplaza
descanso
lugar
sistema
terminal
origen
transmite
bit
tiempo
router
serie
recibe
bit
router
transmite
bit
recibe
router
sucesivamente
bit
viajar
origen
destino
atraviesa
serie
parejas
transmisores
receptores
par
transmisor-receptor
bit
env√≠a
ondas
electromagn√©-
ticas
pulsos
√≥pticos
f√≠sico
f√≠sico
formas
tipo
par
transmisor-receptor
existente
ruta
ejemplos
medios
f√≠sicos
incluyen
cable
cobre
par
20
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
20trenzado
cable
coaxial
cable
fibra
√≥ptica
multimodo
espectro
radio
terrestre
espectro
radio
sat√©lite
medios
f√≠sicos
clasificar
categor√≠as
medios
guiados
medios
guiados
medios
guiados
ondas
transportan
s√≥lido
ejemplo
cable
fibra
√≥ptica
cable
cobre
par
trenzado
cable
coaxial
medios
guiados
ondas
propagan
atm√≥sfera
espacio
exterior
ocurre
redes
LAN
inal√°m-
bricas
canal
sat√©lite
digital
abordar
caracter√≠sticas
distintos
tipos
medios
veamos
algu-
detalles
acerca
costes
coste
real
enlace
f√≠sico
cable
cobre
fibra
√≥ptica
coaxial
etc.
suele
relativamente
peque√±o
compara
restantes
costes
red
particular
coste
mano
obra
asociado
instalaci√≥n
enlace
f√≠sico
√≥rdenes
magnitud
coste
material
constructores
instalan
cables
par
trenzado
fibra
√≥ptica
coaxial
habitaciones
edificios
inicialmente
utilice
medios
posibilidades
emplee
f√≠sico
futuro
ahorre
dinero
tirar
cables
adicionales
Cable
cobre
par
trenzado
transmisi√≥n
guiado
barato
com√∫nmente
utilizado
cable
cobre
par
trenzado
utilizado
siglo
redes
telef√≥nicas
99
ciento
conexiones
cableadas
utilizan
cable
cobre
par
trenzado
tel√©fono
conmutador
telef√≥nico
local
mayor√≠a
dispone-
mos
cable
par
trenzado
hogares
entornos
trabajo
cable
consta
hilos
cobre
aislados
mil√≠metro
espesor
siguen
patr√≥n
regular
espiral
hilos
trenzan
reducir
interferencias
el√©ctricas
pro-
cedentes
pares
similares
Normalmente
serie
pares
meten
cable
envolviendo
pares
pantalla
protectora
par
hilos
constituyen
√∫nico
enlace
comunicaciones
par
trenzado
apantallado
UTP
Unshielded
Twisted
Pair
utiliza
habitualmente
redes
computadoras
ubicadas
edificio
redes
LAN
velocidad
transmisi√≥n
datos
LAN
actuales
emplean
cables
par
trenzado
var√≠an
10
Mbps
Gbps
velocidades
transmisi√≥n
datos
alcanzar
dependen
espesor
cable
distancia
existente
transmisor
receptor
d√©cada
1980
surgi√≥
tecnolog√≠a
fibra
√≥ptica
personas
despreciaron
cable
par
trenzado
causa
relativamente
bajas
velocidades
transmisi√≥n
pensaron
fibra
√≥ptica
desplazar√≠a
completo
cable
par
trenzado
cable
par
trenzado
dar√≠a
vencido
f√°cilmente
tec-
nolog√≠a
moderna
par
trenzado
ejemplo
cables
UTP
categor√≠a
alcanzar
velocidades
datos
Gbps
distancias
100
metros
cables
par
trenzado
establecido
soluci√≥n
dominante
redes
LAN
alta
velocidad
mencionado
anteriormente
cables
par
trenzado
suelen
uti-
lizarse
acceso
Internet
tipo
residencial
modems
acceso
telef√≥nico
permiten
establecer
conexiones
velocidades
56
kbps
utilizando
cables
par
trenzado
comentado
tecnolog√≠a
DSL
Digital
Subscriber
Line
permitido
usuarios
residenciales
acceder
Internet
velocidades
superiores
1.2
FRONTERA
RED
21
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
2122
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
Mbps
empleando
cables
par
trenzado
usuarios
vivan
pro-
ximidades
m√≥dem
ISP
Cable
coaxial
par
trenzado
cable
coaxial
consta
conductores
cobre
dis-
puestos
forma
conc√©ntrica
lugar
paralelo
construcci√≥n
aisla-
miento
apantallamiento
especiales
cable
coaxial
proporcionar
velocidades
transmisi√≥n
bit
altas
cable
coaxial
com√∫n
sistemas
tele-
visi√≥n
cable
mencionado
anteriormente
recientemente
sistemas
televisi√≥n
cable
comenzado
incorporar
modems
cable
proporcio-
nar
usuarios
residenciales
acceso
Internet
velocidades
Mbps
superiores
televisi√≥n
cable
acceso
Internet
cable
transmisor
desplaza
se√±al
digital
banda
frecuencia
espec√≠fica
se√±al
anal√≥gica
resultante
env√≠a
transmisor
receptores
cable
coaxial
utilizarse
com-
partido
guiado
serie
sistemas
terminales
conectados
directa-
mente
cable
recibiendo
env√≠en
sistemas
terminales
Fibra
√≥ptica
fibra
√≥ptica
flexible
espesor
conduce
pulsos
luz
repre-
sentando
pulso
bit
√∫nico
cable
fibra
√≥ptica
soportar
velocidades
bit
tremendamente
altas
decenas
centenas
gigabits
fibra
√≥ptica
inmune
interferencias
electromagn√©ticas
presenta
ate-
nuaci√≥n
se√±al
baja
distancia
100
kil√≥metros
dif√≠cil
alguien
cabo
pinchazo
l√≠neas
caracter√≠sticas
fibra
√≥ptica
transmisi√≥n
guiado
larga
distancia
preferido
espe-
cialmente
enlaces
transoce√°nicos
redes
telef√≥nicas
larga
dis-
tancia
Unidos
pa√≠ses
utilizan
exclusivamente
fibra
√≥ptica
fibra
√≥ptica
predominante
redes
troncales
Internet
alto
coste
dispositivos
√≥pticos
transmisores
receptores
conmutadores
entorpeciendo
implantaci√≥n
transporte
corta
distancia
ejemplo
caso
LAN
domicilio
red
acceso
residen-
cial
velocidades
enlace
est√°ndar
portadora
√≥ptica
OC
Optical
Carrier
comprendidas
rango
51,8
Mbps
39,8
Gbps
suele
hacerse
referencia
espe-
cificaciones
OC-n
velocidad
enlace
51,8
Mbps
est√°ndares
actuales
encuentran
OC-1
OC-3
OC-12
OC-24
OC-48
OC-96
OC-192
OC-768
IEC
Optical
2009
Goralski
2001
Ramaswami
1998
Mukherjee
1997
proporcionan
informaci√≥n
acerca
diversos
aspectos
redes
√≥pticas
Canales
radio
terrestres
canales
radio
transportan
se√±ales
espectro
electromagn√©tico
Constituyen
atractivo
requieren
instalaci√≥n
cables
f√≠sicos
atravesar
paredes
proporcionan
conectividad
usuarios
m√≥viles
potencialmete
trans-
portar
se√±al
distancias
caracter√≠sticas
canal
radio
dependen
forma
significativa
entorno
propagaci√≥n
distancia
se√±al
transportada
consideraciones
ambientales
determinan
p√©rdida
camino
ate-
nuaci√≥n
sombra
disminuye
intensidad
se√±al
medida
recorre
dis-
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
221.3
N√öCLEO
RED
23
tancia
rodea
atraviesa
objetos
obstruyen
camino
atenuaci√≥n
multicamino
debida
reflexi√≥n
se√±al
objetos
interfieren
interferencias
debidas
transmisiones
se√±ales
electromagn√©ticas
canales
radio
terrestre
clasificarse
amplios
grupos
operan
√°reas
locales
normalmente
alcance
cientos
metros
operan
√°rea
extensa
alcances
decenas
kil√≥metros
redes
LAN
inal√°mbricas
descritas
Secci√≥n
1.2.2
emplean
canales
radio
√°rea
local
tecnolog√≠as
celulares
utilizan
canales
radio
√°rea
extensa
Cap√≠tulo
estudian
detalle
canales
radio
Canales
radio
v√≠a
sat√©lite
comunicaciones
sat√©lite
enlazan
transmisores
receptores
microondas
base
Tierra
conocen
estaciones
terrestres
sat√©lite
recibe
trans-
misiones
banda
frecuencia
regenera
se√±al
utilizando
repetidor
v√©ase
transmite
se√±al
frecuencia
tipo
comunicaciones
emplean
tipos
sat√©lites
sat√©lites
geoestacionarios
sat√©lites
√≥rbita
baja
terres-
tre
LEO
Low-Earth
Orbiting
sat√©lites
geoestacionarios
permanentemente
situados
punto
Tierra
presencia
estacionaria
poniendo
sat√©lite
√≥rbita
distancia
36.000
kil√≥metros
superficie
Tierra
distancia
estaci√≥n
terrestre
sat√©lite
distancia
vuelta
sat√©lite
estaci√≥n
terrestre
introduce
retardo
propagaci√≥n
se√±al
280
milisegundos
obstante
enlaces
v√≠a
sat√©lite
operar
velocidades
cientos
Mbps
emplean
√°reas
disponible
acceso
Internet
DSL
cable
sat√©lites
LEO
colocan
cerca
Tierra
encuentran
perma-
nentemente
posici√≥n
giran
Tierra
Luna
comunicarse
estaciones
terrestres
proporcio-
nar
cobertura
continua
√°rea
preciso
√≥rbita
sat√©lites
Actual-
mente
desarrollando
sistemas
comunicaciones
baja
altitud
p√°gina
web
Lloyd‚Äôs
satellite
constellations
Wood
2009
proporciona
recopila
informaci√≥n
acerca
sistemas
constelaciones
sat√©lites
comunicaciones
tecnolog√≠a
sat√©lites
√≥rbita
baja
terrestre
LEO
utilizarse
momento
futuro
acceder
Internet
1.3
n√∫cleo
red
examinado
frontera
Internet
adentrarnos
n√∫cleo
red
malla
conmutadores
paquetes
enlaces
interconectan
sistemas
termina-
Internet
Figura
1.11
resaltado
n√∫cleo
red
l√≠neas
gruesas
1.3.1
Conmutaci√≥n
circuitos
conmutaci√≥n
paquetes
m√©todos
fundamentales
permiten
transportar
datos
red
enlaces
conmutadores
conmutaci√≥n
circuitos
conmutaci√≥n
paquetes
redes
conmutaci√≥n
circuitos
recursos
necesarios
ruta
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
2324
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
Figura
1.11
n√∫cleo
red
buffers
velocidad
transmisi√≥n
enlace
permiten
establecer
comunicaci√≥n
sistemas
terminales
reservados
tiempo
dura
sesi√≥n
dichos
sistemas
terminales
redes
conmutaci√≥n
paquetes
recursos
reservados
mensajes
sesi√≥n
utilizan
recursos
petici√≥n
con-
ISP
nacional
globalRed
m√≥vil
ISP
local
regional
Red
empresarial
Red
dom√©stica
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
241.3
N√öCLEO
RED
25
secuencia
esperar
ponerse
cola
acceder
enlace
comunicaciones
Veamos
sencilla
analog√≠a
Piense
restaurantes
necesario
reserva
requiere
reserva
admiten
comer
restaurante
precisa
reserva
molestarnos
llamar
tel√©fono
salir
casa
llegar
principio
podremos
sentar-
pedir
men√∫
camarero
inmediata
restaurante
admite
reservas
molestarnos
reservar
mesa
llegar
posi-
ble
tengamos
esperar
mesa
hablar
camarero
omnipresentes
redes
telef√≥nicas
ejemplos
redes
conmutaci√≥n
circui-
tos
Considere
ocurre
persona
desea
enviar
informaci√≥n
voz
fax-
s√≠mil
red
telef√≥nica
emisor
transmitir
informaci√≥n
red
establecer
conexi√≥n
emisor
receptor
conexi√≥n
fe
conmutadores
existentes
ruta
emisor
receptor
mantienen
conexi√≥n
dicha
comunicaci√≥n
jerga
campo
telefon√≠a
conexi√≥n
denomina
circuito
red
establece
cir-
cuito
reserva
velocidad
transmisi√≥n
constante
enlaces
red
tiempo
dure
conexi√≥n
ancho
banda
conexi√≥n
emisor-
receptor
reservado
emisor
transferir
datos
receptor
velocidad
constante
garantizada
red
Internet
quinta
esencia
redes
conmutaci√≥n
paquetes
Veamos
ocurre
host
desea
enviar
paquete
host
Internet
conmutaci√≥n
circuitos
paquete
transmite
serie
enlaces
comunicaciones
t√©cnica
conmutaci√≥n
paquetes
paquete
env√≠a
red
reservado
ancho
banda
enlaces
congestio-
nado
paquetes
transmitidos
tiempo
paquete
esperar
buffer
emisor
enlace
transmisi√≥n
sufrir√°
retardo
Internet
realiza
m√°ximo
esfuerzo
sumi-
nistrar
paquetes
tiempo
garant√≠a
redes
telecomunicaciones
clasificarse
redes
puras
con-
mutaci√≥n
circuitos
redes
puras
conmutaci√≥n
paquetes
obstante
clasifica-
ci√≥n
excelente
punto
partida
comprender
tecnolog√≠a
redes
telecomunicaciones
Conmutaci√≥n
circuitos
libro
dedicado
redes
computadoras
Internet
conmutaci√≥n
paquetes
redes
telef√≥nicas
conmutaci√≥n
circuitos
obstante
importante
com-
prender
Internet
redes
computadoras
utilizan
tecnolog√≠a
conmuta-
ci√≥n
paquetes
lugar
tecnolog√≠a
tradicional
conmutaci√≥n
circuitos
redes
telef√≥nicas
raz√≥n
continuaci√≥n
ofrecer
introducci√≥n
conmutaci√≥n
circuitos
Figura
1.12
ilustra
red
conmutaci√≥n
circuitos
red
con-
mutadores
circuitos
interconectados
enlaces
enla-
ces
circuitos
enlace
soporte
conexiones
simult√°neas
hosts
ejemplo
PC
estaciones
trabajo
conectado
directa-
mente
conmutadores
hosts
desean
comunicarse
red
establece
conexi√≥n
terminal
terminal
dedicada
llamadas
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
2526
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
Figura
1.12
Red
conmutaci√≥n
circuitos
simple
formada
dispositivos
conmutaci√≥n
enlaces
dispositivos
posibles
lector
comprenda
concepto
suponer
momento
intervienen
hosts
cone-
xi√≥n
host
env√≠e
mensajes
host
red
reservar
pri-
mer
lugar
circuito
enlaces
enlace
circuitos
enlace
utilizado
conexi√≥n
terminal
terminal
conexi√≥n
obtiene
frac-
ci√≥n
ancho
banda
enlace
tiempo
duraci√≥n
conexi√≥n
Multiplexaci√≥n
redes
conmutaci√≥n
circuitos
circuito
enlace
implementa
multiplexaci√≥n
divisi√≥n
frecuencia
FDM
Frequency-Division
Multiplexing
multiplexaci√≥n
divisi√≥n
tiempo
TDM
Time-Division
Multiplexing
FDM
espectro
fre-
cuencia
enlace
reparte
conexiones
establecidas
enlace
Espec√≠ficamente
enlace
dedica
banda
frecuencias
conexi√≥n
tiempo
dure
redes
telef√≥nicas
banda
frecuencias
normalmente
ancho
kHz
4.000
hercios
4.000
ciclos
ancho
banda
denomina
l√≥gicamente
ancho
banda
estaciones
radio
FM
tam-
bi√©n
emplean
multiplexaci√≥n
FDM
compartir
espectro
frecuencias
88
MHz
108
MHz
teniendo
estaci√≥n
asignada
banda
frecuencias
espec√≠fica
enlace
TDM
tiempo
divide
marcos
duraci√≥n
fija
marco
divide
n√∫mero
fijo
particiones
red
establece
conexi√≥n
enlace
red
dedica
partici√≥n
marco
dicha
conexi√≥n
particiones
dedicadas
exclusivo
dicha
conexi√≥n
partici√≥n
disponible
uti-
lizar
marco
transmitir
datos
conexi√≥n
Figura
1.13
ilustra
multiplexaciones
FDM
TDM
enlace
red
espec√≠-
fico
soporte
circuitos
caso
multiplexaci√≥n
divisi√≥n
Conexi√≥n
terminal
terminal
hosts
utilizando
circuito
enlaces
Host
Host
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
26Figura
1.13
FDM
circuito
obtiene
forma
continua
fracci√≥n
ancho
banda
TDM
circuito
dispone
ancho
banda
peri√≥dicamente
breves
intervalos
tiempo
particiones
frecuencia
dominio
frecuencia
segmenta
bandas
ancho
banda
kHz
caso
multiplexaci√≥n
TDM
dominio
tiempo
divide
marcos
conteniendo
particiones
circuito
asigna
partici√≥n
dedicada
marcos
forma
c√≠clica
multiplexaci√≥n
TDM
velocidad
transmisi√≥n
circuito
velocidad
marco
multiplicada
n√∫mero
bits
existentes
partici√≥n
ejemplo
enlace
transmite
8.000
marcos
partici√≥n
consta
bits
velocidad
transmisi√≥n
circuito
64
kbps
partidarios
tecnolog√≠a
conmutaci√≥n
paquetes
argumentado
conmutaci√≥n
circuitos
derrochadora
circuitos
dedicados
quedan
inu-
tilizados
durantes
periodos
inactividad
ejemplo
persona
deja
hablar
llamada
telef√≥nica
recursos
red
inactivos
bandas
frecuencia
particiones
temporales
enlace
ruta
conexi√≥n
emplea-
conexiones
curso
ejemplo
recursos
infrauti-
lizados
radi√≥logo
empleara
red
conmutaci√≥n
circuitos
acceder
remotamente
serie
radiograf√≠as
rayos
X.
radi√≥logo
establece
conexi√≥n
solicita
imagen
contempla
solicita
imagen
recursos
red
asignados
conexi√≥n
utilizan
desperdician
tiempo
radi√≥logo
contempla
im√°genes
partidarios
conmutaci√≥n
paquetes
tam-
bi√©n
disfrutan
apuntando
establecimiento
circuitos
terminal
terminal
reserva
ancho
banda
terminal
terminal
procesos
complicados
requieren
software
se√±alizaci√≥n
complejo
coordinar
funcionamiento
switches
ruta
terminal
terminal
terminar
exposici√≥n
acerca
conmutaci√≥n
circuitos
ejemplo
num√©rico
deber√≠a
arrojar
luz
tema
Consideremos
kHz
TDM
Enlace
Frecuencia
kHz
Partici√≥n
Clave
particiones
etiquetadas
dedicadas
par
emisor-receptor
espec√≠fico
Marco
234
1234
12341234
Tiempo
1.3
N√öCLEO
RED
27
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
2728
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
tiempo
tarda
enviar
archivo
640.000
bits
host
host
red
conmutaci√≥n
circuitos
Supongamos
enlaces
red
utilizan
multiplexaci√≥n
TDM
24
particiones
velocidad
bit
1,536
Mbps
Supongamos
tardan
500
milisegundos
establecer
circuito
terminal
ter-
minal
host
comenzar
transmitir
archivo
tiempo
tarda
transmitir
archivo
velocidad
transmisi√≥n
circuito
1,536
Mbps)/24
64
kbps
precisan
640.000
bits)/(64
kbps
10
segundos
transmitir
archivo
10
segundos
sumarles
tiempo
establecimiento
cir-
cuito
resultado
10,5
segundos
tiempo
transmisi√≥n
archivo
Observe
tiempo
transmisi√≥n
independiente
n√∫mero
enlaces
tiempo
transmisi√≥n
10
segundos
independientemente
circuito
terminal
terminal
pase
enlace
cien
enlaces
retardo
real
terminal
terminal
incluye
retardo
propagaci√≥n
v√©ase
Secci√≥n
1.4
Conmutaci√≥n
paquetes
aplicaciones
distribuidas
intercambian
mensajes
cabo
tareas
men-
sajes
contener
cosa
dise√±ador
protocolo
desee
mensajes
funci√≥n
control
ejemplo
mensajes
saludo
Hola
ejemplo
establecimiento
comunicaci√≥n
contener
datos
ejemplo
mensaje
correo
electr√≥nico
imagen
JPEG
archivo
audio
MP3
redes
computadoras
modernas
origen
divide
mensajes
largos
frag-
mentos
datos
peque√±os
conocen
paquetes
origen
destino
paquetes
viaja
enlaces
comunicaciones
conmutadores
paquetes
tipos
predominantes
routers
switches
capa
enlace
paquetes
transmiten
enlace
comu-
nicaciones
velocidad
velocidad
transmisi√≥n
m√°xima
enlace
mayor√≠a
conmutadores
paquetes
emplean
m√©todo
transmisi√≥n
almacenamiento
reenv√≠o
entradas
enlaces
Transmisi√≥n
almacenamiento
reenv√≠o
significa
conmutador
recibir
paquete
completo
comenzar
transmitir
bit
paquete
enlace
salida
conmuta-
dores
paquetes
almacenamiento
reenv√≠o
a√±aden
retardo
almacenamiento
reenv√≠o
entrada
enlace
existente
ruta
seguir
paquete
Veamos
tiempo
tarda
enviar
paquete
bits
host
host
red
conmutaci√≥n
paquetes
Supongamos
enlaces
hosts
velocidad
bps
Suponemos
√∫nico
paquete
presente
red
lugar
paquete
enviarse
enlace
sale
host
consume
tiempo
segundos
continua-
ci√≥n
transmitido
enlaces
restantes
almacenar
reenviar
a√±adi√©ndose
retardo
almacenamiento
reenv√≠o
R.
retardo
QL
R.
conmutador
paquetes
enlaces
conectados
enlace
conectado
conmutador
paquetes
dispone
buffer
salida
denominado
cola
salida
almacena
paquetes
router
enviar√°
enlace
buffer
salida
desempe√±a
papel
clave
conmutaci√≥n
paquetes
paquete
entrante
transmitido
enlace
enlace
ocupado
transmitiendo
paquete
paquete
entrante
esperar
buffer
salida
retardos
almacenamiento
reenv√≠o
paquetes
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
28ven
afectados
retardos
cola
buffer
salida
retardos
variables
dependen
nivel
congesti√≥n
red
Puesto
cantidad
espacio
buffer
finita
paquete
entrante
encontrarse
buffer
completamente
lleno
paquetes
esperan
transmitidos
caso
producir√°
p√©rdida
paquetes
paquete
acaba
llegar
cola
des-
cartado
volvemos
analog√≠a
restaurantes
vista
anteriormente
secci√≥n
retardo
cola
an√°logo
cantidad
tiempo
pierde
bar
restaurante
esperando
mesa
quede
libre
p√©rdida
paquetes
an√°loga
cama-
rero
comunique
restaurante
demasiadas
per-
sonas
esperando
bar
mesa
Figura
1.14
ilustra
red
conmutaci√≥n
paquetes
simple
figura
siguientes
paquetes
representado
bloques
tridimensionales
ancho
bloque
representa
n√∫mero
bits
contiene
paquete
figura
paquetes
ancho
longitud
Suponga
hosts
enviando
paquetes
host
E.
lugar
hosts
env√≠an
paque-
tes
enlaces
Ethernet
10
Mbps
conmutador
paquetes
continuaci√≥n
dirige
paquetes
enlace
1,5
Mbps
velocidad
llegada
paquetes
conmutador
excede
velocidad
conmutador
reenviar
paquetes
enlace
salida
1,5
Mbps
producir√°
congesti√≥n
medida
paquetes
pongan
cola
buffer
salida
enlace
transmiti-
Secci√≥n
1.4
examinaremos
detalladamente
retardo
cola
Conmutaci√≥n
paquetes
frente
conmutaci√≥n
circuitos
multiplexaci√≥n
estad√≠stica
descrito
tecnolog√≠as
conmutaci√≥n
circuitos
paquetes
pasar
compararlas
detractores
tecnolog√≠a
conmutaci√≥n
paquetes
argumentado
tecnolog√≠a
adecuada
servicios
tiempo
real
ejemplo
llamadas
telef√≥nicas
videoconferencias
retardos
Figura
1.14
Conmutaci√≥n
paquetes
10
Mbps
Ethernet
Clave
Paquetes
1,5
Mbps
Multiplexaci√≥n
estad√≠stica
Cola
paquetes
esperan
acceder
enlace
salida
1.3
N√öCLEO
RED
29
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
29terminal
terminal
variables
impredecibles
causa
principalmente
retar-
cola
paquetes
variables
impredecibles
partidarios
conmutaci√≥n
paquetes
argumentan
ofrece
compartici√≥n
ancho
banda
tecnolog√≠a
conmutaci√≥n
circuitos
sencilla
eficiente
cara
implementar
conmutaci√≥n
circuitos
encontrar
expo-
sici√≥n
interesante
acerca
conmutaci√≥n
paquetes
frente
conmutaci√≥n
circui-
tos
Molinero-Fern√°ndez
2002
Generalmente
personas
molestan
reservar
mesa
restaurante
prefieren
conmutaci√≥n
paquetes
conmutaci√≥n
circuitos
eficiente
conmutaci√≥n
paquetes
Veamos
ejemplo
sencillo
Suponga
usuarios
comparten
enlace
Mbps
Suponga
usuario
alterna
periodos
actividad
genera
datos
velocidad
constante
100
kbps
periodos
inactividad
genera
datos
suponga
usua-
rio
activo
10
ciento
tiempo
inactivo
tomando
caf√©
90
ciento
tiempo
restante
tecnolog√≠a
conmutaci√≥n
circuitos
reservarse
100
kbps
usuario
ejemplo
red
conmuta-
ci√≥n
circuitos
multiplexaci√≥n
TDM
marco
divide
10
parti-
ciones
100
ms
usuario
tendr√≠a
asignada
partici√≥n
marco
enlace
conmutaci√≥n
circuitos
soporte
10
(=
Mbps/100
kbps
usuarios
simult√°neamente
caso
utilizar
conmutaci√≥n
paquetes
probabilidad
determinado
usuario
est√©
activo
0,1
10
ciento
35
usuarios
probabilidad
11
usuarios
est√©n
activos
simul-
t√°neamente
0,0004
Problema
P7
indica
obtiene
probabilidad
10
usuarios
activos
ocurre
probabilidad
0,9996
velocidad
acumulada
llegada
datos
menor
Mbps
velocidad
salida
enlace
n√∫mero
usuarios
activos
10
menor
paquetes
fluyen
enlace
pr√°cticamente
retardo
caso
tecnolog√≠a
conmutaci√≥n
circuitos
10
usuarios
activos
simult√°neamente
velocidad
acumulada
llegada
paquetes
excede
capacidad
salida
enlace
cola
salida
comenzar√°
crecer
Contin√∫a
creciendo
velocidad
acumulada
entrada
cae
Mbps
punto
longitud
cola
comenzar√°
disminuir
Puesto
probabilidad
10
usuarios
conectados
baja
ejemplo
conmutaci√≥n
paquetes
proporciona
pr√°cticamente
rendimiento
conmutaci√≥n
circuitos
permitiendo
n√∫mero
usuarios
superior
Consideremos
ejemplo
sencillo
Suponga
10
usuarios
usuario
genera
1.000
paquetes
1.000
bits
usuarios
restantes
permanecen
inactivos
generan
paquetes
tecnolog√≠a
conmutaci√≥n
circuitos
multiplexaci√≥n
TDM
10
particiones
marco
partici√≥n
formada
1.000
bits
usuario
activo
emplear
partici√≥n
marco
transmitir
datos
restantes
particiones
marco
permanecen
inactivas
Transcurrir√°n
10
segundos
mill√≥n
bits
datos
usuario
activo
hayan
transmitidos
conmutaci√≥n
paquetes
usuario
activo
enviar
forma
continuada
paquetes
velocidad
m√°xima
enlace
Mbps
usuario
generando
paquetes
tengan
multiplexados
paquetes
usuario
activo
caso
datos
usuario
activo
transmitir√°n
30
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
30Los
ejemplos
anteriores
servido
ilustrar
casos
rendimiento
tecnolog√≠a
conmutaci√≥n
paquetes
resultar
superior
conmutaci√≥n
circuitos
quedado
patente
diferencia
crucial
formas
compar-
tir
velocidad
transmisi√≥n
enlace
flujos
datos
conmutaci√≥n
circuitos
preasigna
enlace
transmisi√≥n
independientemente
demanda
tiempo
enlace
asignado
innecesario
desperdicia
contrario
conmutaci√≥n
paquetes
asigna
enlace
demanda
capacidad
transmi-
si√≥n
enlace
compartir√°
paquete
paquete
usuarios
paquetes
transmitir
enlace
compartici√≥n
recursos
petici√≥n
lugar
preasignaci√≥n
denomina
multiplexaci√≥n
estad√≠stica
recursos
redes
telecomunicaciones
predominantes
conmuta-
ci√≥n
circuitos
paquetes
realmente
tendiendo
redes
conmutaci√≥n
paquetes
redes
telefon√≠a
conmutaci√≥n
circuitos
actuales
migrando
lentamente
redes
conmutaci√≥n
paquetes
particular
redes
telef√≥nicas
suelen
emplear
conmutaci√≥n
paquetes
internacional
cara
llamada
telef√≥nica
1.3.2
atraviesan
paquetes
redes
conmutaci√≥n
paquetes
Anteriormente
router
toma
paquete
entrante
enlaces
comunicaciones
router
determina
enlace
deber√°
reenviar
paquete
realidad
tipos
redes
diversas
formas
cap√≠tulo
introducci√≥n
describir
m√©todo
popular
m√©todo
empleado
Internet
Internet
paquete
atraviesa
red
contiene
cabecera
direcci√≥n
destino
paquete
direcciones
postales
direcci√≥n
estructura
jer√°rquica
llega
paquete
router
red
router
examina
direcci√≥n
destino
paquete
reenv√≠a
router
adyacente
espec√≠ficamente
router
dispone
tabla
reenv√≠o
asigna
direcciones
destino
enlaces
salientes
llega
paquete
router
exa-
mina
direcci√≥n
busca
tabla
direcci√≥n
destino
localizar
enlace
salida
apropiado
continuaci√≥n
router
dirige
paquete
enlace
salida
Acabamos
router
utiliza
direcci√≥n
destino
paquete
inde-
xar
tabla
reenv√≠o
determinar
enlace
salida
apropiado
afirmaci√≥n
pregunta
definen
tablas
reenv√≠o
configuran
manualmente
router
Internet
utiliza
procedimiento
automatizado
cuestiones
abordan
detalle
Cap√≠tulo
abriendo
boca
diremos
Internet
dispone
serie
protocolos
enrutamiento
especiales
utilizan
definir
autom√°ticamente
tablas
reenv√≠o
ejemplo
protocolo
enrutamiento
determina
ruta
corta
router
destino
ruta
corta
resultado
configuraci√≥n
tablas
reenv√≠o
routers
proceso
enrutamiento
terminal
terminal
an√°logo
conductor
autom√≥vil
utiliza
mapa
prefiere
preguntar
llegar
determinada
direcci√≥n
ejemplo
suponga
Juan
sale
Filadelfia
llegar
156
Lakeside
Drive
Orlando
Florida
Juan
dirigirse
estaci√≥n
servicio
pr√≥xima
preguntar
llegar
destino
empleado
1.3
N√öCLEO
RED
31
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
31queda
nombre
Florida
tomar
autopista
interestatal
I-95
Sur
entrada
salir
estaci√≥n
servicio
Tam-
bi√©n
Juan
entrado
Florida
pregunte
alguien
llegar
destino
Juan
toma
I-95
Sur
Jacksonville
Florida
lugar
vuelve
preguntar
estaci√≥n
servicio
dependiente
extrae
direcci√≥n
infor-
maci√≥n
referencia
Orlando
continuar
I-95
Day-
tona
Beach
pregunte
estaci√≥n
servicio
Daytona
Beach
empleado
extrae
informaci√≥n
referente
Orlando
tomando
I-4
llegar√°
directamente
Orlando
Juan
toma
I-4
abandona
salida
indica
Orlando
detiene
gasolinera
dependiente
extrae
informaci√≥n
direcci√≥n
referente
Lakeside
Drive
indica
carretera
seguir
llegar
Juan
Lakeside
Drive
pregunta
ni√±o
bicicleta
llegar
destino
ni√±o
extrae
dato
156
direcci√≥n
se√±ala
casa
Juan
llegado
destino
analog√≠a
dependientes
estaciones
servicio
ni√±o
bicicleta
routers
tablas
reenv√≠o
cerebros
ido
configurando
a√±os
experiencia
podr√≠amos
ruta
terminal
terminal
siguen
paquetes
Internet
invitamos
utilice
programa
Traceroute
visitando
sitio
http://www.traceroute
org
obtener
informaci√≥n
acerca
Traceroute
consulte
Secci√≥n
1.4
1.3.3
Redes
troncales
Internet
proveedores
ISP
Anteriormente
visto
sistemas
terminales
PC
usuario
PDA
ser-
vidores
web
servidores
correo
electr√≥nico
etc.
conectan
Internet
ISP
local
ISP
proporcionar
conectividad
cableada
inal√°mbrica
amplia
variedad
tecnolog√≠as
acceso
incluyen
DSL
cable
FTTH
Wi-
Fi
celular
WiMAX
Observe
ISP
local
compa√±√≠a
telef√≥nica
compa√±√≠a
cable
ejemplo
universidad
proporciona
acceso
Internet
estudiantes
personal
facultades
empresa
proporciona
acceso
empleados
conexi√≥n
usuarios
finales
proveedores
contenido
ISP
locales
peque√±a
problema
conectar
cientos
millones
sistemas
terminales
cientos
miles
redes
conforman
Internet
Internet
red
redes
entender
afirmaci√≥n
fundamental
resolver
puzzle
red
p√∫blica
Internet
ISP
acceso
situados
frontera
Internet
conectados
resto
Internet
jerarqu√≠a
niveles
proveedores
ISP
muestra
Figura
1.15
ISP
acceso
sit√∫an
nivel
inferior
jerar-
qu√≠a
nivel
superior
jerarqu√≠a
encuentran
n√∫mero
relativamente
peque√±o
ISP
nivel
ISP
nivel
red
for-
mado
enlaces
routers
conectado
redes
ISP
presen-
caracter√≠sticas
especiales
velocidad
enlace
suele
622
Mbps
superior
ISP
nivel
tama√±o
disponen
enlaces
rango
comprendido
2,5
10
Gbps
consecuencia
routers
reenviar
paquetes
velocidades
extremadamente
altas
ISP
nivel
caracterizan
‚Ä¢E
restantes
ISP
nivel
32
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
32Figura
1.15
Interconexi√≥n
ISP
conectados
n√∫mero
ISP
nivel
redes
cliente
Proporcionan
cobertura
internacional
ISP
nivel
conocen
redes
troncales
Internet
ISP
incluyen
Sprint
Verizon
MCI
anteriormente
UUNet
WorldCom
AT&T
NTT
Level3
Qwest
Cable
Wireless
Resulta
curioso
oficialmente
grupo
conceda
estatus
nivel
reza
tienes
preguntar
miembro
grupo
probablemente
regla
general
ISP
nivel
cobertura
regional
nacional
importante
conectado
ISP
nivel
v√©ase
Figura
1.15
llegar
red
Internet
global
ISP
nivel
enrutar
tr√°-
fico
ISP
nivel
conectado
ISP
nivel
cliente
ISP
nivel
conectado
ISP
nivel
proveedor
cliente
instituciones
empresas
tama√±o
conectan
redes
empresariales
directamente
ISP
nivel
nivel
convirti√©ndose
cliente
ISP
ISP
proveedor
cobra
determinadas
tasas
ISP
cliente
normalmente
dependen
velocidad
transmisi√≥n
enlace
conecta
red
nivel
conectar
directamente
redes
nivel
cuyo
caso
tr√°fico
fluir
redes
nivel
pasar
red
nivel
ISP
nivel
encuentran
ISP
nivel
inferior
conectan
Internet
ISP
nivel
nivel
jerarqu√≠a
Nivel
Nivel
Nivel
1.3
N√öCLEO
RED
33
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
33se
encuentran
ISP
acceso
complicar
cosas
proveedores
nivel
proveedores
nivel
integrados
verticalmente
venden
directamente
acceso
Internet
usuarios
finales
proveedores
contenido
ISP
nivel
inferior
ISP
conectados
directamente
nivel
igualitarios
interesante
estudio
Subramanian
2002
intenta
definir
estructura
niveles
Internet
forma
precisa
estu-
diando
topolog√≠a
Internet
funci√≥n
relaciones
cliente-proveedor
rela-
ciones
iguales
Consulte
der
Berg
2008
explicaci√≥n
com-
prensible
acerca
relaciones
iguales
cliente-proveedor
red
ISP
puntos
ISP
conecta
ISP
nivel
inferior
superior
nivel
jerarqu√≠a
conocen
Puntos
presencia
POP
Point
of
Presence
POP
simplemente
grupo
routers
red
ISP
routers
ISP
redes
pertenecen
clientes
ISP
conectarse
proveedor
nivel
normalmente
POP
dispersos
distintas
localizaciones
geogr√°ficas
red
m√∫ltiples
redes
ISP
conectados
POP
Normalmente
red
cliente
conec-
tarse
POP
proveedor
alquila
enlace
alta
velocidad
proveedor
teleco-
municaciones
empresa
conecta
directamente
routers
router
ubicado
POP
proveedor
ISP
disponer
puntos
conexi√≥n
iguales
conect√°ndose
m√∫ltiples
pares
POP
resumen
topolog√≠a
Internet
compleja
formada
docenas
ISP
nivel
nivel
miles
ISP
nivel
inferior
cobertura
ISP
variada
pudi√©ndose
extender
continentes
oc√©anos
limitada
peque√±as
regiones
mundo
ISP
nivel
inferior
conectan
ISP
nive-
superiores
interconectan
usuarios
proveedores
contenido
clientes
ISP
nivel
inferior
clientes
ISP
nivel
superior
1.4
Retardos
p√©rdidas
tasa
transferencia
redes
conmutaci√≥n
paquetes
Secci√≥n
1.1
Internet
verse
infraestructura
pro-
porciona
servicios
aplicaciones
distribuidas
ejecutan
sistemas
terminales
Ideal-
mente
desear√≠amos
servicios
Internet
pudieran
transportar
tantos
datos
quisi√©ramos
cualesquiera
sistemas
terminales
forma
instant√°nea
tuviera
lugar
p√©rdida
datos
Evidentemente
realidad
objetivo
inal-
canzable
necesariamente
redes
computadoras
restringir
tasa
transferencia
cantidad
datos
transmitir
sistemas
termi-
nales
introducir
retardos
sistemas
terminales
perder
paquetes
lamentable
leyes
f√≠sicas
introduzcan
retardos
p√©rdidas
restrinjan
tasas
transferencia
puesto
redes
computadoras
presentan
problemas
cuestiones
interesantes
relacionadas
abordarlos
suficientes
llenar
curso
redes
computadoras
motivar
cientos
tesis
doctorales
secci√≥n
comenzaremos
examinando
cuantificando
retardos
p√©rdidas
tasa
transferencia
redes
computadoras
34
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
341.4.1
Retardo
redes
conmutaci√≥n
paquetes
Recordemos
paquetes
inician
host
origen
atraviesan
serie
rou-
ters
terminan
viaje
host
destino
paquete
viaja
nodo
host
router
nodo
host
router
ruta
paquete
sufre
tipos
retardo
nodos
dicha
ruta
importantes
retar-
retardo
procesamiento
nodal
retardo
cola
retardo
transmi-
si√≥n
retardo
propagaci√≥n
retardos
suman
proporcionar
retardo
nodal
adquirir
conocimiento
profundo
tecnolog√≠a
conmuta-
ci√≥n
paquetes
redes
computadoras
preciso
comprender
naturaleza
importancia
retardos
Tipos
retardos
Utilizaremos
Figura
1.16
explorar
retardos
ruta
terminal
terminal
origen
destino
paquete
env√≠a
nodo
router
router
B.
objetivo
caracterizar
retardo
nodal
router
A.
Observe
router
dispone
enlace
salida
router
B.
enlace
precedido
cola
buffer
paquete
llega
router
procedente
nodo
router
examina
cabecera
paquete
determinar
enlace
salida
apropiado
paquete
dirige
paquete
enlace
ejemplo
enlace
salida
paquete
√∫nico
router
B.
paquete
transmitirse
enlace
actualmente
transmitiendo
paquete
paquetes
precedan
cola
enlace
ocupado
actualmente
paquetes
cola
esperando
enlace
paquete
reci√©n
llegado
ponerse
cola
Retardo
procesamiento
tiempo
requerido
examinar
cabecera
paquete
determinar
enviarlo
retardo
procesamiento
retardo
procesamiento
incluye
factores
tiempo
necesario
comprobar
errores
nivel
bit
paquete
producen
transmitir
bits
paquete
nodo
router
A.
retar-
procesamiento
routers
alta
velocidad
suelen
orden
microse-
gundos
menores
efectuado
procesamiento
nodal
router
dirige
paquete
Figura
1.16
Retardo
nodal
router
A.
Procesamiento
nodal
cola
esperando
transmisi√≥n
Transmisi√≥n
Propagaci√≥n
1.4
RETARDOS
P√âRDIDAS
TASA
TRANSFERENCIA
35
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
35cola
precede
enlace
router
B.
Cap√≠tulo
estudiaremos
detalles
acerca
funciona
router
Retardo
cola
cola
paquete
experimenta
retardo
cola
esperar
transmitido
enlace
duraci√≥n
retardo
cola
determinado
paquete
depender√°
n√∫mero
paquetes
hayan
llegado
cola
esperando
transmi-
tidos
enlace
cola
vac√≠a
transmitiendo
paquete
actualmente
retardo
cola
paquete
cero
contrario
tr√°fico
paquetes
esperando
transmitidos
retardo
cola
brevemente
n√∫mero
paquetes
paquete
entrante
esperar
encontrar
funci√≥n
intensidad
naturaleza
tr√°fico
llega
cola
pr√°ctica
retardos
cola
orden
microsegundos
milisegun-
Retardo
transmisi√≥n
Suponiendo
paquetes
transmiten
llega
sale
pr√°ctica
com√∫n
redes
conmutaci√≥n
paquetes
paquete
transmitido
paquetes
hayan
llegado
hayan
transmitidos
longitud
paquete
bits
velocidad
transmisi√≥n
enlace
router
router
bits
ejemplo
enlace
Ethernet
10
Mbps
velocidad
10
Mbps
enlace
Ethernet
100
Mbps
velocidad
100
Mbps
retardo
transmisi√≥n
denominado
retardo
almacenamiento
reenv√≠o
visto
Secci√≥n
1.3
R.
tiempo
necesario
introducir
transmitir
bits
paquete
enlace
Normalmente
pr√°ctica
retardos
transmisi√≥n
orden
microsegundos
milisegundos
Retardo
propagaci√≥n
bit
entrado
enlace
propagarse
router
B.
tiempo
necesario
propagarse
principio
enlace
router
retardo
propagaci√≥n
bit
propaga
velocidad
propagaci√≥n
enlace
velocidad
depende
f√≠sico
enlace
cable
fibra
√≥ptica
cable
cobre
par
trenzado
etc.
comprendido
rango
108
metros
108
metros
menor
velocidad
luz
retardo
propagaci√≥n
dis-
tancia
routers
dividida
velocidad
propagaci√≥n
retardo
propagaci√≥n
distancia
router
router
velocidad
propagaci√≥n
enlace
bit
paquete
propagado
nodo
bits
anteriores
paquete
almacenan
router
B.
continuaci√≥n
router
cabo
reenv√≠o
redes
√°rea
extensa
retardos
propagaci√≥n
orden
milisegundos
36
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
36Comparaci√≥n
retardos
transmisi√≥n
propagaci√≥n
reci√©n
llegados
campo
redes
computadoras
ocasiones
dificultades
comprender
diferencia
retardo
transmisi√≥n
propagaci√≥n
dife-
rencia
sutil
importante
retardo
transmisi√≥n
cantidad
tiempo
necesario
router
saque
paquete
funci√≥n
longitud
paquete
velocidad
transmisi√≥n
enlace
distancia
existente
routers
contrario
retardo
propagaci√≥n
tiempo
tarda
bit
propagarse
router
funci√≥n
distancia
rou-
ters
longitud
paquete
velocidad
transmi-
si√≥n
enlace
Veamos
analog√≠a
permitir
clarificar
conceptos
retardo
trans-
misi√≥n
retardo
propagaci√≥n
Imagine
autopista
puesto
peaje
100
kil√≥metros
muestra
Figura
1.17
imaginar
segmen-
tos
autopista
peajes
enlaces
casetas
peaje
routers
Suponga
autom√≥viles
viajan
propagan
autopista
velocidad
100
km
hora
coche
sale
peaje
instant√°neamente
acelera
adqui-
rir
velocidad
100
km
hora
mantiene
puestos
peaje
Supongamos
10
coches
viajan
caravana
orden
fijo
pensar
coche
bit
caravana
paquete
Supongamos
puesto
peaje
servicio
transmite
coches
velocidad
coche
12
segundos
noche
autopista
caravana
coches
supongamos
coche
caravana
llega
peaje
espera
entrada
coches
llegado
detenido
caravana
completa
almacenarse
peaje
reenviada
tiempo
necesario
peaje
ponga
cara-
vana
completa
autopista
10
coches)/(5
coches
minuto
minutos
tiempo
an√°logo
retardo
transmisi√≥n
router
tiempo
necesario
coche
desplace
salida
peaje
puesto
peaje
100
km/(100
km
hora
hora
tiempo
an√°logo
retardo
propagaci√≥n
tiempo
transcurre
caravana
queda
colocada
peaje
vuelve
quedar
colocada
peaje
suma
tiempo
transmisi√≥n
tiempo
propagaci√≥n
caso
tiempo
62
minutos
Profundicemos
analog√≠a
ocurrir√≠a
tiempo
servicio
puesto
peaje
invertido
caravana
tiempo
tarda
coche
viajar
peaje
ejemplo
supongamos
coches
viajan
velocidad
1.000
km
hora
peajes
operan
velocidad
coche
minuto
retardo
desplazarse
puestos
peaje
minutos
tiempo
tarda
puesto
peaje
servicio
caravana
10
minutos
caso
Figura
1.17
Analog√≠a
caravana
Caravana
coches
Peaje
Peaje
100
km
100
km
1.4
RETARDOS
P√âRDIDAS
TASA
TRANSFERENCIA
37
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
37primeros
coches
caravana
llegar√°n
puesto
peaje
coches
caravana
hayan
salido
peaje
situaci√≥n
produce
redes
conmutaci√≥n
paquetes
bits
paquete
llegar
router
bits
restantes
paquete
esperando
transmitidos
router
imagen
vale
mil
palabras
animaci√≥n
vale
mill√≥n
palabras
sitio
web
libro
texto
proporciona
applet
Java
inte-
ractivo
ilustra
compara
retardos
transmisi√≥n
propagaci√≥n
Animamos
lectores
visitar
applet
dproc
dcola
dtrans
dprop
retardos
procesamiento
cola
transmisi√≥n
propagaci√≥n
respectivamente
retardo
nodal
dnodal
dproc
dcola
dtrans
dprop
contribuciones
componentes
retardo
variar
significativamente
ejemplo
dprop
despreciable
digamos
par
microsegundos
enlace
conecte
routers
campus
universitario
dprop
cientos
milisegundos
routers
interconectados
enlace
v√≠a
sat√©lite
geoesta-
cionario
t√©rmino
dominante
expresi√≥n
proporciona
retardo
dnodal
dtrans
despreciable
significativo
contribuci√≥n
normalmente
despreciable
velocidades
transmisi√≥n
10
Mbps
superiores
ejemplo
redes
LAN
cientos
milisegundos
paquetes
gran-
des
Internet
enviados
modems
acceso
telef√≥nico
baja
velocidad
retardo
procesamiento
dproc
suele
despreciable
influen-
cia
tasa
transferencia
m√°xima
router
velocidad
m√°xima
router
reenviar
paquetes
1.4.2
Retardo
cola
p√©rdida
paquetes
componente
complejo
interesante
retardo
nodal
retardo
cola
dcola
retardo
cola
importante
interesante
redes
computadoras
escrito
miles
art√≠culos
libros
Bertsekas
1991
Daigle
1991
Klein-
rock
1975
1976
Ross
1995
abordarlo
forma
intuitiva
panor√°mica
lectores
curiosos
echar
vistazo
libros
ocupan
tema
escribir
tesis
doctoral
asunto
diferencia
retardos
dproc
dtrans
dprop
retardo
cola
variar
paquete
ejemplo
llegan
10
paquetes
cola
vac√≠a
tiempo
paquete
transmitido
sufrir√°
retardo
cola
paquete
transmitido
sufrir√°
retardo
cola
relativamente
espera
restantes
paquetes
transmitidos
caracterizar
retardo
cola
suelen
emplearse
medidas
esta-
d√≠sticas
retardo
cola
varianza
retardo
cola
probabilidad
retardo
cola
exceda
valor
especificado
casos
retardo
cola
casos
insignificante
respuesta
pregunta
depende
velocidad
llega
tr√°fico
cola
velocidad
transmisi√≥n
enlace
naturaleza
tr√°fico
entrante
tr√°fico
llega
peri√≥-
dicamente
r√°fagas
profundizar
punto
velocidad
media
llegan
paquetes
cola
expresa
paquetes
Recuerde
veloci-
38
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
38dad
transmisi√≥n
velocidad
bits
bits
salen
cola
simplificar
supongamos
paquetes
constan
bits
velocidad
media
llegan
bits
cola
bits
Supon-
gamos
cola
almacenar
n√∫mero
infinito
bits
relaci√≥n
denominada
intensidad
tr√°fico
suele
desempe√±ar
papel
importante
hora
estimar
magnitud
retardo
cola
velocidad
media
bits
llegan
cola
excede
velocidad
bits
transmitidos
cola
desafortunada
situaci√≥n
cola
tender√°
aumentar
l√≠mite
retardo
cola
aproximar√°
infinito
reglas
oro
ingenier√≠a
tr√°fico
dise√±e
sistema
intensidad
tr√°fico
Veamos
caso
naturaleza
tr√°fico
entrante
influye
retardo
cola
ejemplo
paquetes
llegan
peri√≥dicamente
llega
paquete
segundos
paquetes
llegar√°n
cola
vac√≠a
retardo
cola
contrario
paquetes
llegan
r√°fagas
forma
peri√≥-
dica
aparecer
retardo
cola
significativo
ejemplo
supongamos
llegan
simult√°neamente
paquetes
R)N
segundos
caso
paquete
transmitido
asociado
retardo
cola
paquete
transmitido
presentar√°
retardo
cola
segundos
forma
general
n-√©simo
paquete
transmitido
presentar√°
retardo
cola
/H110021)L
segundos
Dejamos
ejercicio
lec-
tor
c√°lculo
retardo
cola
ejemplo
ejemplos
llegada
peri√≥dica
paquetes
acabamos
describir
corresponden
casos
te√≥ricos
Normalmente
proceso
llegada
cola
aleatorio
llegadas
siguen
patr√≥n
paquetes
quedan
separados
periodos
tiempo
aleatorios
caso
realista
cantidad
normalmente
suficiente
caracterizar
completamente
estad√≠sticas
retardo
cola
resulta
√∫til
idea
intuitiva
magnitud
retardo
cola
particular
intensidad
tr√°fico
pr√≥xima
cero
llegadas
paquetes
esta-
r√°n
espaciadas
improbable
paquete
llegue
cola
encuentre
paquete
cola
retardo
cola
cero
contrario
intensidad
tr√°fico
pr√≥xima
inter-
valos
tiempo
velocidad
llegada
exceda
capacidad
transmisi√≥n
causa
variaciones
velocidad
llegada
paquetes
formar√°
cola
periodos
tiempo
velocidad
llegada
menor
capaci-
dad
transmisi√≥n
longitud
cola
disminuir√°
intensidad
tr√°fico
aproxime
longitud
media
cola
dependencia
cualitativa
retardo
cola
relaci√≥n
intensidad
tr√°fico
muestra
Figura
1.18
aspecto
importante
Figura
1.18
intensidad
tr√°-
fico
aproxima
retardo
cola
aumenta
r√°pidamente
peque√±o
porcentaje
aumento
intensidad
dar√°
lugar
incremento
porcentaje
retardo
experimentado
fen√≥meno
autopista
viaja
regu-
larmente
autopista
habitualmente
congestionada
inten-
sidad
tr√°fico
autopista
pr√≥xima
caso
produzca
suceso
d√©
lugar
cantidad
tr√°fico
ligeramente
usual
retardos
experimenten
llegar
enormes
entienda
retardos
cola
animamos
lector
visitar
sitio
web
dedicado
libro
proporciona
applet
Java
1.4
RETARDOS
P√âRDIDAS
TASA
TRANSFERENCIA
39
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
39Figura
1.18
Dependencia
retardo
cola
relaci√≥n
intensidad
tr√°fico
interactivo
cola
establece
velocidad
llegada
paquetes
suficien-
temente
alta
intensidad
tr√°fico
comprobar√°
cola
aumenta
lentamente
tiempo
P√©rdida
paquetes
secci√≥n
cola
capaz
almacenar
n√∫mero
infinito
paquetes
pr√°ctica
cola
acceder
enlace
capacidad
finita
aun-
capacidad
cola
depende
fundamentalmente
dise√±o
coste
router
Puesto
capacidad
cola
finita
retardos
paquetes
realmente
apro-
ximan
infinito
intensidad
tr√°fico
aproxima
lugar
paquete
llegar
encontrarse
cola
llena
sitio
almacenar
paquete
router
elimina
paquete
pierde
desbordamiento
cola
verse
applet
Java
intensidad
tr√°fico
punto
vista
sistema
terminal
paquete
perdido
paquete
transmitido
n√∫cleo
red
sale
red
destino
n√∫mero
paquetes
perdidos
aumenta
intensidad
tr√°fico
aumenta
rendi-
miento
nodo
suele
medirse
funci√≥n
retardos
fun-
ci√≥n
probabilidad
p√©rdida
paquetes
veremos
siguientes
cap√≠tulos
paquete
perdido
retransmitirse
terminal
terminal
garantizar
datos
transferidos
origen
destino
1.4.3
Retardo
terminal
terminal
momento
centrado
retardo
nodal
retardo
√∫nico
router
ocuparnos
retardo
origen
destino
entender
concepto
suponga
/H110021
routers
host
origen
host
destino
Suponga
momento
red
congestionada
retardos
cola
despreciables
retardo
procesamiento
router
host
origen
dproc
velocidad
transmisi√≥n
salida
router
host
origen
Retardo
cola
40
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
40R
bits
retardo
propagaci√≥n
enlace
dprop
retardos
noda-
suman
proporcionar
retardo
terminal
terminal
dterminal-terminal
dproc
dtrans
dprop
dtrans
tama√±o
paquete
Dejamos
lector
ejer-
cicio
generalizar
f√≥rmula
caso
retardos
nodos
diferen-
tes
exista
retardo
cola
nodo
Traceroute
orden
magnitud
retardo
terminal
terminal
red
computadoras
utilizar
programa
Traceroute
programa
simple
eje-
cutar
host
Internet
usuario
especifica
nombre
host
des-
tino
programa
host
origen
env√≠a
paquetes
especiales
destino
medida
paquetes
dirigen
destino
pasan
serie
routers
router
recibe
paquetes
especiales
devuelve
origen
mensaje
corto
con-
nombre
direcci√≥n
router
concretamente
suponga
/H110021
routers
origen
destino
origen
enviar√°
paquetes
especiales
red
dirigidos
destino
paquetes
especiales
marcan
quedando
paquete
marcado
N.
router
n-√©simo
recibe
paquete
n-√©simo
marcado
router
reenv√≠a
paquete
destino
devuelve
mensaje
origen
host
destino
recibe
paquete
n-√©simo
devuelve
mensaje
origen
origen
registra
tiempo
transcurrido
momento
envi√≥
paquete
momento
recibe
correspondiente
mensaje
vuelta
registra
nombre
direcci√≥n
router
host
destino
devuelve
mensaje
forma
origen
reconstruir
ruta
seguida
paquetes
fluyen
origen
destino
origen
determinar
retardos
ida
vuelta
routers
intervienen
proceso
Traceroute
repite
proceso
acabamos
describir
origen
realmente
env√≠a
paquetes
destino
documento
RFC
1393
describe
detalle
programa
Traceroute
ejemplo
salida
proporcionada
programa
Traceroute
trazado
ruta
host
origen
gaia.cs.umass.edu
Universidad
Mas-
sachusetts
host
cis.poly.edu
Universidad
Polit√©cnica
Brooklyn
salida
consta
columnas
contiene
valor
descrito
anteriormente
n√∫mero
router
ruta
columna
especifica
nombre
router
indica
direcci√≥n
router
formato
xxx.xxx.xxx.xxx
columnas
especifican
retardos
ida
vuelta
correspondientes
experimentos
origen
recibe
mensajes
router
p√©rdida
paquetes
red
Traceroute
incluye
asterisco
justo
n√∫mero
router
proporciona
tiempos
ida
vuelta
router
cs-gw
128.119.240.254
1.009
ms
0.899
ms
0.993
ms
128.119.3.154
128.119.3.154
0.931
ms
0.441
ms
0.651
ms
border4-rt-gi-1-3.gw.umass.edu
128.119.2.194
1.032
ms
0.484
ms
0.451
ms
acr1-ge-2-1-0.Boston.cw.net
208.172.51.129
10.006
ms
8.150
ms
8.460
ms
agr4-loopback.NewYork.cw.net
206.24.194.104
12.272
ms
14.344
ms
13.267
ms
1.4
RETARDOS
P√âRDIDAS
TASA
TRANSFERENCIA
41
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
416
acr2-loopback.NewYork.cw.net
206.24.194.62
13.225
ms
12.292
ms
12.148
ms
pos10-2.core2.NewYork1.Level3.net
209.244.160.133
12.218
ms
11.823
ms
11.793
ms
gige9-1-52.hsipaccess1.NewYork1.Level3.net
64.159.17.39
13.081
ms
11.556
ms
13.297
ms
p0-0.polyu.bbnplanet.net
4.25.109.122
12.716
ms
13.052
ms
12.786
ms
10
cis.poly.edu
128.238.32.126
14.080
ms
13.035
ms
12.802
ms
traza
routers
origen
destino
routers
nombre
direcciones
ejemplo
nombre
router
border4-rt-gi-1-3.gw.umass.edu
direcci√≥n
128.119.2.194
observamos
datos
proporcionados
router
vemos
pruebas
retardo
ida
vuelta
origen
router
1,03
milisegundos
retardos
ida
vuelta
pruebas
siguientes
0,48
0,45
milisegundos
respectivamente
retardos
ida
vuelta
contienen
retardos
acabamos
estudiar
incluyendo
retardos
transmisi√≥n
pro-
pagaci√≥n
procesamiento
router
cola
Puesto
retardo
cola
var√≠a
tiempo
retardo
ida
vuelta
paquete
env√≠ado
router
ocasiones
retardo
ida
vuelta
paquete
n+1
enviado
router
n+1
Efectivamente
observar
fen√≥meno
ejemplo
retardos
correspondientes
router
mayores
correspondientes
router
Desea
probar
programa
Traceroute
recomendamos
vivamente
visite
sitio
http://
www.traceroute.org
proporciona
interfaz
web
extensa
lista
or√≠genes
trazado
rutas
Seleccione
origen
especifique
nombre
host
destino
programa
Traceroute
har√°
trabajo
disponibles
diversos
programas
software
gratuitos
proporcionan
interfaz
gr√°fica
Trace-
route
programa
favoritos
PingPlotter
PingPlotter
2009
Retardos
sistemas
terminales
aplicaciones
retardos
procesamiento
transmisi√≥n
propagaci√≥n
sistemas
terminales
existir
retardos
adicionales
significativos
ejemplo
modems
acceso
telef√≥nico
introducen
retardo
modulaci√≥n
codificaci√≥n
orden
decenas
milisegundos
retardos
modulaci√≥n
codificaci√≥n
tecno-
log√≠as
acceso
Ethernet
modems
cable
DSL
significativos
sue-
len
despreciables
sistema
terminal
desea
transmitir
paquete
compartido
ejemplo
escenario
WiFi
Ethernet
retardar
transmi-
si√≥n
prop√≥sito
protocolo
compartir
sistemas
ter-
minales
Veremos
protocolos
detalle
Cap√≠tulo
retardo
importante
retardo
empaquetamiento
aparece
aplicaciones
oz
IP
oIP
Voice-over-IP
oIP
emisor
lugar
rellenar
paquete
voz
digitalizada
codificada
pasar
paquete
Internet
tiempo
tarda
rellenar
paquete
denomina
retardo
empaquetamiento
significa-
tivo
repercutir
calidad
percibida
usuario
llamada
oIP
pro-
blema
abordar√°
detalladamente
problemas
cap√≠tulo
1.4.4
Tasa
transferencia
redes
computadoras
retardos
p√©rdida
paquetes
medida
cr√≠tica
rendimiento
redes
computadoras
tasa
transferencia
terminal
terminal
definir
tasa
42
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
42de
transferencia
consideremos
transferencia
archivo
tama√±o
host
host
red
ejemplo
transferencia
consistir
transferir
clip
v√≠deo
tama√±o
par
peer
sistema
compartici√≥n
archivos
P2P.
tasa
transferencia
instant√°nea
instante
tiempo
velocidad
bits
host
recibe
archivo
aplicaciones
inclu-
yendo
sistemas
compartici√≥n
archivos
P2P
muestran
tasa
transferencia
instant√°nea
descargas
interfaz
usuario
fijado
anteriormente
detalle
archivo
consta
bits
transferencia
dura
segun-
host
recibe
bits
tasa
media
transferencia
archivo
bits
aplicaciones
tales
telefon√≠a
Internet
deseable
retardo
peque√±o
tasa
transferencia
instant√°nea
umbral
ejemplo
24
kbps
aplicaciones
telefon√≠a
Internet
256
kbps
aplicaciones
v√≠deo
tiempo
real
aplicaciones
incluyen
implican
transferen-
cia
archivos
retardo
cr√≠tico
deseable
tasa
transferencia
alta
comprender
importante
concepto
tasa
transferencia
ejemplos
Figura
1.19(a
muestra
sistemas
terminales
servidor
cliente
conectados
enlaces
comunicaciones
router
Consideremos
tasa
transferencia
transmitir
archivo
servidor
cliente
Rs
veloci-
dad
enlace
servidor
router
Rc
velocidad
enlace
router
cliente
Supongamos
√∫nicos
bits
enviados
red
servidor
cliente
escenario
ideal
tasa
transferen-
cia
servidor
cliente
responder
pregunta
pensar
bits
fluido
enlaces
comunicaciones
tuber√≠as
Evidentemente
servidor
bombear
bits
enlace
velocidad
Rs
bps
router
reenviar
bits
velocidad
Rc
bps
Rs
Rc
bits
bombeados
servidor
fluir√°n
router
llegar√°n
cliente
velocidad
Rs
bps
obteni√©ndose
tasa
transferencia
Rs
bps
contrario
Rc
Rs
router
reenviar
bits
r√°pidamente
recibe
Figura
1.19
Tasa
transferencia
transmisi√≥n
archivo
servidor
cliente
Servidor
Cliente
Servidor
a.
b.
Cliente
1.4
RETARDOS
P√âRDIDAS
TASA
TRANSFERENCIA
43
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
4344
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
caso
bits
abandonar√°n
router
velocidad
Rc
dando
lugar
tasa
transferencia
terminal
terminal
Rc
Observe
contin√∫an
llegando
bits
router
velocidad
Rs
siguen
abandonando
router
velocidad
Rc
cantidad
bits
router
esperando
transmitidos
cliente
aumen-
tar√°
constantemente
situaci√≥n
deseable
sencilla
red
enlaces
tasa
transferencia
m√≠n{Rc
Rs
velocidad
transmisi√≥n
enlace
cuello
botella
determinada
tasa
transferencia
aproximar
tiempo
tardar√°
transferir
archivo
tama√±o
bits
servidor
cliente
m√≠n{Rs
Rc
Veamos
ejemplo
concreto
Suponga
descargando
archivo
MP3
32
millones
bits
servidor
velocidad
transmisi√≥n
Rs
Mbps
velocidad
enlace
Rc
Mbps
tiempo
necesario
transferir
archivo
32
segundos
expresiones
tasa
transferencia
tiempo
transferencia
√∫nicamente
aproximaciones
cuestiones
relativas
protocolo
nivel
paquete
Figura
1.19(b
muestra
red
enlaces
servidor
cliente
velocidades
transmisi√≥n
enlaces
iguales
R1
R2
RN
Aplicando
an√°lisis
red
enlaces
determinar
tasa
transferencia
transferir
archivo
servidor
cliente
m√≠n
R1
R2,
,RN
velocidad
transmisi√≥n
enlace
cuello
botella
existente
ruta
servidor
cliente
Veamos
ejemplo
inspirado
red
Internet
Figura
1.20(a
muestra
sistemas
terminales
servidor
cliente
conectados
red
computa-
doras
Considere
tasa
transferencia
transmitir
archivo
servidor
cliente
servidor
conectado
red
enlace
acceso
cuya
velocidad
Rs
cliente
conectado
red
enlace
acceso
velocidad
Rc
Supon-
gamos
enlaces
existentes
n√∫cleo
red
comunicaciones
tie-
nen
velocidades
transmisi√≥n
altas
Rs
Rc
Ciertamente
n√∫cleo
Internet
sobredimensionado
enlaces
alta
velocidad
experi-
mentan
congesti√≥n
baja
Akella
2003
Supongamos
√∫nicamente
enviando
red
bits
transfieren
servidor
cliente
n√∫cleo
red
tuber√≠a
ancha
ejemplo
velocidad
bits
fluir
origen
destino
m√≠nimo
Rs
Rc
tasa
transferencia
m√≠n{Rs
Rc
normalmente
factor
restricci√≥n
tasa
transferencia
Internet
actualmente
red
acceso
Veamos
ejemplo
utilizar
Figura
1.20(b
vemos
10
servidores
10
clientes
conectados
n√∫cleo
red
computadoras
ejem-
plo
lugar
10
descargas
simult√°neas
implica
10
pares
cliente-servidor
Supongamos
10
descargas
√∫nico
tr√°fico
existente
red
tiempo
muestra
figura
enlace
n√∫cleo
atravesado
10
descargas
velocidad
transmisi√≥n
enlace
R.
Supongamos
enla-
ces
acceso
servidores
velocidad
Rs
enlaces
acceso
clientes
velocidad
Rc
velocidades
transmisi√≥n
enlaces
n√∫cleo
enlace
com√∫n
velocidad
velocidades
mayores
Rs
Rc
R.
deseamos
tasas
transferencia
descargas
Evidentemente
velocidad
enlace
com√∫n
ejemplo
cien
Rs
Rc
tasa
transferencia
descarga
m√≠n{Rs
Rc
ocurre
velocidad
enlace
com√∫n
orden
Rs
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
44Figura
1.20
Tasa
transferencia
terminal
terminal
cliente
descarga
archivo
servidor
10
clientes
descargando
10
servidores
Rc
tasa
transferencia
caso
Veamos
ejemplo
concreto
Supon-
gamos
Rs
Mbps
Rc
Mbps
Mbps
enlace
com√∫n
divide
veloci-
dad
transmisi√≥n
partes
iguales
10
descargas
cuello
botella
descarga
red
acceso
enlace
compar-
tido
n√∫cleo
proporciona
tasa
transferencia
500
kbps
descarga
tasa
transferencia
terminal
terminal
descarga
reducido
500
kbps
ejemplos
Figuras
1.19
1.20(a
demuestran
tasa
transferencia
depende
velocidades
transmisi√≥n
enlaces
fluyen
datos
visto
tr√°fico
tasa
transferencia
simple-
mente
aproximarse
velocidad
m√≠nima
transmisi√≥n
ruta
origen
destino
ejemplo
Figura
1.20(b
muestra
generalmente
tasa
transfe-
rencia
depende
velocidades
transmisi√≥n
enlaces
ruta
tr√°fico
existente
particular
enlace
velocidad
transmisi√≥n
alta
enlace
cuello
botella
transferencia
archivo
flujos
datos
atravesando
enlace
Examinaremos
detalladamente
tasa
transferencia
redes
computadoras
problemas
lector
realizar√°
casa
cap√≠tulos
siguientes
Servidor
a.
b.
Cliente
10
clientes
10
servidores
1.4
RETARDOS
P√âRDIDAS
TASA
TRANSFERENCIA
45
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
451.5
Capas
protocolos
modelos
servicio
visto
Internet
sistema
extremadamente
complicado
visto
piezas
conforman
Internet
numerosas
aplicaciones
protocolos
distintos
tipos
sistemas
terminales
dispositivos
conmuta-
ci√≥n
paquetes
diversos
tipos
medios
enlaces
Dada
enorme
compleji-
dad
esperanza
organizar
arquitectura
red
exposici√≥n
Afortunadamente
respuesta
ambas
preguntas
1.5.1
Arquitectura
capas
intentar
organizar
ideas
arquitectura
Internet
analog√≠a
humana
Realmente
forma
continua
tratando
sistemas
complejos
vida
cotidiana
Imagine
alguien
pide
describa
ejemplo
fun-
ciona
sistema
l√≠neas
a√©reas
estructura
utilizar√≠a
describir
complejo
sis-
tema
emplea
agencias
viajes
venta
billetes
personal
control
equipajes
puertas
embarque
pilotos
aviones
control
tr√°fico
a√©reo
sistema
√°mbito
mundial
dirigir
aviones
forma
describir
sistema
consis-
tir
describir
serie
acciones
realiza
realizan
vuela
avi√≥n
lugar
compra
billete
factura
equipaje
dirige
puerta
embarque
sube
avi√≥n
avi√≥n
despega
dirige
destino
avi√≥n
tomado
tierra
desembarca
recoge
equipaje
viaje
malo
quejar√°
agencia
viajes
ser-
vir√°
escenario
muestra
Figura
1.21
analog√≠as
redes
computadoras
compa√±√≠a
√°rea
tras-
lada
origen
destino
Internet
trasporta
paquete
origen
destino
analog√≠a
est√°bamos
buscando
quere-
mos
encontrar
estructura
Figura
1.21
fijamos
figura
obser-
varemos
funci√≥n
Billete
extremo
funci√≥n
Equipaje
Figura
1.21
Acciones
viaje
avi√≥n
Billete
compra
Equipaje
facturaci√≥n
Embarque
carga
Despegue
Control
vuelo
Billete
reclamaci√≥n
Equipaje
recogida
Desembarque
descarga
Aterrizaje
Control
vuelo
Control
vuelo
46
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
46Figura
1.22
Disposici√≥n
capas
horizontal
funcionalidades
compa√±√≠a
√°rea
pasajeros
billete
funci√≥n
Embarque
pasajeros
tie-
nen
billete
facturado
equipaje
pasajeros
embarcado
adquirido
billete
facturado
maletas
embarcado
funci√≥n
despegue
aterrizaje
vuelo
funci√≥n
control
avi√≥n
sugiere
fijarnos
funcionalidades
se√±aladas
Figura
1.21
forma
horizon-
muestra
Figura
1.22
Figura
1.22
separado
distintas
funciones
compa√±√≠a
a√©rea
capas
proporcionando
marco
trabajo
explicar
realiza
viaje
avi√≥n
Observe
capa
combinada
capas
implementa
funcionalidad
servicio
capas
Billete
inferiores
cabo
transferencia
persona
mostrador
l√≠nea
a√©rea
capas
Equipaje
inferiores
realiza
transferencia
persona
equipaje
dese
punto
factura-
ci√≥n
recogida
equipaje
Observe
capa
Equipaje
proporciona
ser-
vicio
personas
adquirido
billete
capa
Embarque
realiza
transferencia
embarque
desembarque
persona
equipaje
capa
Despegue/
Aterrizaje
realiza
transferencia
pista
pista
personas
equipajes
capa
pro-
porciona
servicio
llevando
cabo
determinadas
acciones
dicha
capa
ejemplo
capa
Embarque
subir
bajar
pasaje
avi√≥n
utilizando
servicios
capa
directamente
ejemplo
capa
Embar-
utilizando
servicio
transferencia
pasajeros
pista
pista
capa
Despegue/
Aterrizaje
arquitectura
capas
permite
estudiar
espec√≠fica
definida
sistema
complejo
simplificaci√≥n
valor
conside-
rable
proporcionar
modularidad
f√°cil
modificar
implementaci√≥n
servicio
suministrado
capa
capa
proporciona
servicio
capa
emplea
servicios
capa
resto
sistema
permanece
invariable
modifica
implementaci√≥n
capa
cambiar
implementaci√≥n
servicio
cambiar
servicio
ejemplo
modificara
funci√≥n
Embarque
personas
embarcaran
desembarcaran
alturas
resto
sistema
compa√±√≠a
a√©rea
ver√≠a
afectado
capa
Embarque
continuar√≠a
llevando
cabo
funci√≥n
cargar
descargar
personas
simplemente
implementa
dicha
funci√≥n
forma
1.5
CAPAS
PROTOCOLOS
MODELOS
SERVICIO
47
Billete
compra
Equipaje
facturaci√≥n
Embarque
carga
Despegue
Control
vuelo
Control
vuelo
Control
vuelo
Billete
reclamaci√≥n
Equipaje
recogida
Embarque
descarga
Aterrrizaje
Control
vuelo
Billete
Equipaje
Embarque
Despegar
Aterrizar
Aeropuerto
salida
Centros
intermedios
control
tr√°fico
a√©reo
Aeropuerto
llegada
Control
vuelo
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
4748
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
cambio
sistemas
complejos
tama√±o
actua-
lizan
constantemente
capacidad
modificar
implementaci√≥n
servicio
afec-
tar
resto
componentes
sistema
importante
ventaja
disposici√≥n
capas
Capas
protocolos
hablado
suficiente
compa√±√≠as
a√©reas
Dirijamos
atenci√≥n
protocolos
red
proporcionar
estructura
dise√±o
protocolos
red
dise√±adores
redes
organizan
protocolos
hardware
software
red
imple-
mentan
protocolos
capas
protocolo
pertenece
capas
funci√≥n
arquitectura
compa√±√≠a
a√©rea
Figura
1.22
pertene-
c√≠a
capa
interesados
servicios
ofrece
capa
capa
denomina
modelo
servicio
capa
caso
ejemplo
compa√±√≠a
a√©rea
capa
proporciona
servicio
llevando
cabo
acciones
dicha
capa
utilizando
servicios
capa
directamente
ejemplo
servicios
proporcionados
capa
pue-
den
incluir
entrega
fiable
mensajes
extremo
red
implementarse
servicio
fiable
entrega
mensajes
terminal
terminal
capa
/H110021
a√±adiendo
funcionalidad
capa
detectar
retransmitir
mensajes
perdidos
capa
protocolo
implementarse
software
hardware
combinaci√≥n
protocolos
capa
aplicaci√≥n
HTTP
SMTP
implementan
software
sistemas
terminales
protocolos
capa
transporte
Puesto
capa
f√≠sica
capas
enlace
datos
respon-
sables
manejar
comunicaci√≥n
enlace
espec√≠fico
normalmente
imple-
mentan
tarjetas
interfaz
red
ejemplo
tarjetas
Ethernet
WiFi
asociadas
determinado
enlace
capa
red
implementaci√≥n
mixta
hard-
ware
software
Observe
funciones
arquitectura
compa√±√≠a
a√©rea
distribuidas
distintos
aeropuertos
centro
control
vuelo
formaban
sistema
protocolo
capa
distribuido
sis-
temas
terminales
dispositivos
conmutaci√≥n
paquetes
restantes
componentes
conforman
red
suele
protocolo
capa
componentes
red
capas
protocolos
presentan
ventajas
conceptuales
estructurales
visto
capas
proporcionan
forma
estructurada
estudiar
componentes
sis-
tema
modularidad
facilita
actualizaci√≥n
componentes
sistema
comentar
investigadores
ingenieros
redes
opo-
nen
vehemente
estructura
capas
Wakeman
1992
potencial
inconveniente
estructura
capas
capa
duplicar
funcionalidad
capa
inferior
ejemplo
pilas
protocolos
proporcionan
funci√≥n
recuperaci√≥n
errores
enlace
extremo
extremo
potencial
inconveniente
funcionalidad
capa
precisar
informaci√≥n
ejemplo
valor
marca
temporal
capa
viola
objetivo
separaci√≥n
capas
protocolos
distintas
capas
toman
conjunto
pila
protocolos
pila
protocolos
Internet
consta
capas
capa
f√≠sica
capa
enlace
capa
red
capa
transporte
capa
aplicaci√≥n
muestra
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
48Figura
1.23
Pila
protocolos
Internet
modelo
referencia
OSI
Figura1.23(a
examina
Contenido
comprobar√°
organizado
libro
utili-
zando
capas
pila
protocolos
Internet
aplicar
enfoque
descen-
dente
abordando
lugar
capa
aplicaci√≥n
continuando
abajo
pila
Capa
aplicaci√≥n
capa
aplicaci√≥n
residen
aplicaciones
red
protocolos
capa
aplicaci√≥n
Internet
incluye
protocolos
tales
protocolo
HTTP
per-
mite
solicitud
transferencia
documentos
web
SMTP
permite
transferencia
mensajes
correo
electr√≥nico
FTP
permite
transferencia
archivos
sistemas
terminales
Veremos
determinadas
funciones
red
traducci√≥n
nombres
legibles
utilizamos
personas
sistemas
terminales
Internet
ejemplo
www.ietf.org
direcciones
red
32
bits
realiza
ayuda
protocolo
espec√≠fico
capa
aplicaci√≥n
concreto
Sistema
nombres
dominio
DNS
Domain
Name
System
Cap√≠tulo
veremos
f√°cil
crear
implantar
protocolos
capa
aplicaci√≥n
protocolo
capa
aplicaci√≥n
distribuido
sistemas
ter-
minales
estando
aplicaci√≥n
sistema
terminal
utiliza
protocolo
intercam-
biar
paquetes
informaci√≥n
aplicaci√≥n
sistema
terminal
paquete
informaci√≥n
capa
aplicaci√≥n
denominaremos
mensaje
Capa
transporte
capa
transporte
Internet
transporta
mensajes
capa
aplicaci√≥n
puntos
terminales
aplicaci√≥n
Internet
protocolos
transporte
TCP
UDP
pudiendo
transportar
mensajes
capa
aplicaci√≥n
TCP
ofrece
aplicaciones
servicio
orientado
conexi√≥n
servicio
propor-
ciona
suministro
garantizado
mensajes
capa
aplicaci√≥n
destino
mecanismo
control
flujo
adaptaci√≥n
velocidades
emisor
receptor
TCP
divide
mensajes
largos
segmentos
cortos
proporciona
mecanismo
control
congesti√≥n
emisor
regula
velocidad
Transporte
Aplicaci√≥n
Red
Enlace
F√≠sica
a.
Pila
protocolos
Transporte
Sesi√≥n
Aplicaci√≥n
Presentaci√≥n
Red
Enlace
F√≠sica
b.
Modelo
referencia
OSI
ISO
capas
1.5
CAPAS
PROTOCOLOS
MODELOS
SERVICIO
49
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
49transmisi√≥n
red
congestionada
protocolo
UDP
proporciona
aplica-
ciones
servicio
conexi√≥n
servicio
b√°sico
ofrece
fiabilidad
control
flujo
control
congesti√≥n
libro
denominaremos
paquetes
capa
transporte
segmentos
Capa
red
capa
red
Internet
responsable
trasladar
paquetes
capa
red
conoci-
datagramas
host
protocolo
capa
transporte
TCP
UDP
Internet
host
origen
pasa
segmento
capa
transporte
direcci√≥n
destino
capa
red
damos
servicio
correo
postal
carta
direcci√≥n
destino
capa
red
proporciona
servicio
suministrar
seg-
mento
capa
transporte
host
destino
capa
red
Internet
incluye
conocido
protocolo
IP
define
campos
datagrama
forma
act√∫an
sistemas
terminales
routers
campos
√∫nico
protocolo
IP
componentes
Internet
capa
red
ejecutar
protocolo
IP
capa
red
Internet
contiene
protocolos
enrutamiento
determinan
rutas
datagramas
siguen
or√≠-
genes
destinos
Internet
dispone
protocolos
enrutamiento
visto
Secci√≥n
1.3
Internet
red
redes
red
administrador
red
ejecutar
protocolo
enrutamiento
desee
capa
red
contiene
protocolo
IP
numerosos
protocolos
enrutamiento
suele
hacerse
referencia
simplemente
capa
IP
refleja
IP
pega-
mento
une
Internet
Capa
enlace
capa
red
Internet
encamina
datagrama
serie
routers
origen
destino
trasladar
paquete
nodo
host
router
nodo
ruta
capa
red
conf√≠a
servicios
capa
enlace
concreto
nodo
capa
red
pasa
datagrama
capa
enlace
entrega
datagrama
nodo
existente
ruta
nodo
capa
enlace
pasa
datagrama
capa
red
servicios
proporcionados
capa
enlace
dependen
protocolo
capa
enlace
concreto
emplee
enlace
ejemplo
protocolos
capa
enlace
proporcionan
entrega
fiable
nodo
transmisor
enlace
nodo
receptor
Observe
servicio
entrega
fiable
servicio
entrega
fiable
TCP
cabo
entrega
fiable
sistema
terminal
ejemplos
protocolos
capa
enlace
incluyen
Ethernet
WiFi
Protocolo
punto
punto
PPP
Point-to-Point
Protocol
Puesto
normalmente
data-
gramas
necesitan
atravesar
enlaces
viajar
origen
destino
datagrama
manipulado
distintos
protocolos
capa
enlace
distin-
tos
enlaces
disponibles
ruta
ejemplo
datagrama
manipu-
Ethernet
enlace
PPP
enlace
capa
red
recibir√°
servicio
distintos
protocolos
capa
enlace
libro
denominaremos
paquetes
capa
enlace
tramas
50
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
50Capa
f√≠sica
trabajo
capa
enlace
mover
tramas
completas
elemento
red
elemento
red
adyacente
trabajo
capa
f√≠sica
mover
bits
individuales
trama
nodo
protocolos
capa
dependientes
enlace
dependen
transmisi√≥n
enlace
ejemplo
cable
cobre
par
trenzado
fibra
√≥ptica
monomodo
ejemplo
Ether-
net
dispone
protocolos
capa
f√≠sica
cable
cobre
par
trenzado
cable
coaxial
fibra
etc.
caso
bits
desplazan
enlace
forma
modelo
OSI
vista
detalle
pila
protocolos
Internet
deber√≠amos
mencionar
√∫nica
pila
protocolos
existente
concreto
finales
d√©cada
1970
Orga-
nizaci√≥n
Internacional
Estandarizaci√≥n
ISO
International
Organization
for
Standar-
dization
propuso
redes
computadoras
fueran
organizadas
utilizando
capas
vino
denominar
modelo
OSI
Open
Systems
Interconnection
Inter-
conexi√≥n
sistemas
abiertos
ISO
2009
modelo
OSI
tom√≥
forma
proto-
colos
convertir√≠an
protocolos
Internet
infancia
simplemente
conjuntos
protocolos
desa-
rrollo
probablemente
inventores
modelo
OSI
original
pen-
sando
Internet
crearon
obstante
d√©cada
1970
cursos
universitarios
formaci√≥n
siguiendo
recomendaciones
ISO
organizaron
cursos
modelo
capas
causa
impacto
formaci√≥n
redes
modelo
capas
perdura
libros
texto
cursos
formaci√≥n
redes
capas
modelo
referencia
OSI
mostrado
Figura
1.23(b
capa
aplicaci√≥n
capa
presentaci√≥n
capa
sesi√≥n
capa
transporte
capa
red
capa
enlace
datos
capa
f√≠sica
funcionalidad
capas
b√°sica-
mente
contrapartidas
nombre
Internet
centrarnos
capas
adicionales
modelo
referencia
OSI
capa
presenta-
ci√≥n
capa
sesi√≥n
funci√≥n
capa
presentaci√≥n
proporcionar
ser-
vicios
permitan
aplicaciones
comunican
interpretar
significado
datos
intercambiados
servicios
incluyen
compresi√≥n
cifrado
datos
funciones
cuyos
nombres
autoexplicativos
descripci√≥n
datos
veremos
Cap√≠tulo
libera
aplicaci√≥n
preocuparse
formato
interno
datos
representan
almacenan
formatos
dife-
rir
computadora
capa
sesi√≥n
permite
delimitar
sincronizar
inter-
cambio
datos
incluyendo
medios
crear
punto
restauraci√≥n
esquema
recuperaci√≥n
Internet
falten
capas
existentes
modelo
referencia
OSI
plantea
par
cuestiones
interesantes
acaso
servicios
proporcionados
capas
importantes
ocurre
aplicaci√≥n
necesita
servi-
cios
respuesta
Internet
ambas
preguntas
problema
desarrollador
aplicaci√≥n
desarrollador
aplicaci√≥n
decidir
servicio
impor-
tante
problema
incorporar
dicha
funcionalidad
aplicaci√≥n
1.5
CAPAS
PROTOCOLOS
MODELOS
SERVICIO
51
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
511.5.2
Mensajes
segmentos
datagramas
tramas
Figura
1.24
muestra
ruta
f√≠sica
siguen
datos
descender
pila
proto-
colos
sistema
terminal
emisor
ascender
descender
pilas
protocolos
switch
capa
enlace
router
finalmente
ascender
pila
proto-
colos
sistema
terminal
receptor
veremos
libro
routers
switches
capa
enlace
operan
dispositivos
conmutaci√≥n
paquetes
forma
similar
sistemas
terminales
routers
switches
capa
enlace
orga-
nizan
hardware
software
red
capas
dispositivos
implementan
capas
pila
protocolos
habitualmente
implementan
capas
inferiores
muestra
Figura
1.24
switches
capa
enlace
implementan
capas
routers
implementan
capas
significa
ejemplo
routers
Internet
capaces
implementar
protocolo
IP
protocolo
capa
switches
capa
enlace
Veremos
switches
capa
enlace
reconocen
direcciones
IP
reconocer
direcciones
capa
ejemplo
direcciones
Ethernet
Observe
hosts
implementan
capas
coherente
idea
arquitectura
Internet
com-
pleja
fronteras
red
Figura
1.24
ilustra
importante
concepto
encapsulaci√≥n
host
emi-
sor
mensaje
capa
aplicaci√≥n
Figura
1.24
pasa
capa
trans-
porte
caso
simple
capa
transporte
recibe
mensaje
a√±ade
informaci√≥n
52
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
Ht
Ht
Ht
Hn
HnHl
HtHnHl
Switch
capa
enlace
Router
Aplicaci√≥n
Transporte
Red
Enlace
F√≠sica
Mensaje
Segmento
Datagrama
Trama
Ht
Ht
Ht
Hn
HnHl
Enlace
F√≠sica
Origen
Red
Enlace
F√≠sica
Destino
Aplicaci√≥n
Transporte
Red
Enlace
F√≠sica
MH
tHnHl
HtHn
MH
tHn
HtHnHl
MH
tHnHl
Figura
1.24
Hosts
routers
switches
capa
enlace
contiene
conjunto
distinto
capas
refleja
distintas
funcionalidades
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
52adicional
denominada
informaci√≥n
cabecera
capa
transporte
Figura
1.24
utilizada
capa
transporte
receptor
mensaje
capa
aplicaci√≥n
informaci√≥n
cabecera
capa
transporte
constituyen
segmento
capa
transporte
segmento
capa
transporte
encapsula
mensaje
capa
aplicaci√≥n
informaci√≥n
a√±adida
incluir
informaci√≥n
permita
capa
transporte
receptor
entregar
mensaje
aplicaci√≥n
apropiada
bits
detec-
ci√≥n
errores
permitan
receptor
determinar
bits
mensaje
cambiado
ruta
continuaci√≥n
capa
transporte
pasa
segmento
capa
red
a√±ade
informaci√≥n
cabecera
capa
red
Figura
1.24
direc-
ciones
sistemas
terminales
origen
destino
creando
datagrama
capa
red
datagrama
pasa
capa
enlace
a√±adir√°
informaci√≥n
cabecera
dando
lugar
trama
capa
enlace
vemos
capa
paquete
formado
tipos
campos
campos
cabecera
campo
carga
√∫til
Normalmente
carga
√∫til
paquete
capa
superior
analog√≠a
ilustrar
tema
env√≠o
informe
interno
empresa
sucursal
servicio
postal
p√∫blico
Supongamos
Ali-
cia
sucursal
enviar
informe
Benito
sucursal
informe
an√°logo
mensaje
capa
aplicaci√≥n
Alicia
intro-
duce
informe
correo
interno
empresa
escribe
nombre
n√∫mero
departamento
Benito
correo
interno
an√°logo
segmento
capa
transporte
contiene
informaci√≥n
cabecera
nombre
departamento
Benito
encapsula
mensaje
capa
aplicaci√≥n
informe
sala
correo
sucursal
emisora
recibe
meten
adecuado
enviar
informe
servicio
p√∫blico
correos
sala
correo
empresa
escriben
direcciones
postales
sucursal
emi-
sora
sucursal
receptora
postal
an√°logo
datagrama
encap-
sula
segmento
capa
transporte
correo
interno
encapsula
mensaje
original
informe
servicio
postal
entrega
postal
sala
correos
sucursal
receptora
comienza
proceso
desencapsulaci√≥n
sala
extrae
informe
env√≠a
Benito
Benito
abre
correo
interno
saca
informe
proceso
encapsulaci√≥n
complejo
acabamos
describir
ejemplo
mensaje
dividirse
segmentos
capa
transporte
dividirse
datagramas
capa
red
extremo
receptor
segmento
reconstruido
datagramas
cons-
tituyentes
1.6
Ataques
redes
Internet
convertido
herramienta
cr√≠tica
instituciones
actuales
incluyendo
empresas
peque√±as
medianas
universidades
organismos
gubernamentales
personas
individuales
conf√≠an
Internet
cabo
actividades
profesionales
sociales
personales
utilidades
emo-
ciones
oscuro
chicos
malos
intentan
estragos
vidas
diarias
da√±ando
computadoras
conectadas
Internet
violando
nues-
1.6
ATAQUES
REDES
53
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
53tra
privacidad
volviendo
inoperables
servicios
Internet
dependemos
Skoudis
2006
campo
seguridad
red
ocupa
chicos
malos
ata-
car
redes
computadoras
seremos
expertos
redes
defendernos
frente
ataques
dise√±ar
arqui-
tecturas
inmunes
tales
ataques
Dada
frecuencia
variedad
ataques
existen-
tes
amenaza
destructivos
ataques
futuros
seguridad
red
convertido
tema
principal
campo
redes
comunicaciones
a√±os
caracter√≠sticas
libro
texto
cuestiones
seguridad
redes
plano
secci√≥n
comenzaremos
incur-
si√≥n
campo
seguridad
red
describiendo
brevemente
ataques
actuales
da√±inos
predominantes
Internet
continuaci√≥n
siguientes
cap√≠tu-
ocuparemos
detalle
tecnolog√≠as
protocolos
red
consideraremos
diversos
problemas
relacionados
seguridad
asociados
dichas
tecnolog√≠as
protocolos
Cap√≠tulo
armados
experiencia
reci√©n
adquirida
redes
computadoras
protocolos
Internet
estudiaremos
profundidad
redes
defender
frente
ataques
dise√±arse
operar
ataques
imposibles
instancia
Puesto
experiencia
redes
protocolos
Internet
comenzaremos
repaso
problemas
seguridad
predominan
actualidad
abrir
boca
explicaciones
sustanciosas
propor-
cionaremos
cap√≠tulos
siguientes
preguntarnos
fun-
ciona
sentido
vulnerables
redes
computadoras
principales
tipos
ataques
malos
introducir
software
malicioso
host
Internet
Conectamos
dispositivos
Internet
deseamos
recibir
enviar
datos
Internet
incluye
tipo
cosas
p√°ginas
web
mensajes
correo
electr√≥nico
archivos
MP3
llamadas
telef√≥nicas
v√≠deos
directo
resultados
motores
b√∫squeda
etc.
lamentablemente
elementos
beneficiosos
elementos
maliciosos
conoce
forma
colectiva
software
malicioso
malware
acceder
dispositivos
infectarlos
malware
infectado
dispositivo
tipo
maldades
borrar
archi-
vos
instalar
software
esp√≠a
recopile
informaci√≥n
personal
n√∫mero
seguridad
social
contrase√±as
pulsaciones
teclas
enviar
datos
Internet
chicos
malos
atacantes
host
comprometido
pertenecer
red
miles
dispositivos
comprometidos
forma
simi-
lar
conoce
forma
colectiva
botnet
red
robot
atacantes
contro-
lan
aprovechan
distribuci√≥n
correo
electr√≥nico
basura
spam
cabo
ataques
distribuidos
denegaci√≥n
servicio
explicaremos
hosts
objetivo
malware
actualmente
auto-replicante
infecta
host
busca
acceder
host
hosts
Internet
hosts
acaba
infectar
busca
acceder
forma
mal-
ware
auto-replicante
extenderse
r√°pidamente
forma
exponencial
ejemplo
n√∫mero
dispositivos
infectados
gusano
2003
Saphire
Slammer
replicaba
54
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
541.6
ATAQUES
REDES
55
8,5
segundos
minutos
brote
infectando
90
ciento
hosts
vulnerables
10
minutos
Moore
2003
malware
extenderse
forma
virus
gusano
caballo
Troya
Skoudis
2004
virus
soft-
ware
malicioso
requiere
interacci√≥n
usuario
infectar
dispositivo
ejemplo
cl√°sico
adjunto
correo
electr√≥nico
contiene
c√≥digo
ejecutable
mali-
cioso
usuario
recibe
abre
adjunto
tipo
usuario
inadvertidamente
ejecu-
tar√°
malware
dispositivo
Normalmente
tales
virus
enviados
mensajes
correo
electr√≥nico
replican
ejecutado
virus
enviar
mensaje
id√©ntico
adjunto
malicioso
ejemplo
con-
tactos
libreta
direcciones
gusano
gusano
Slammer
malware
entrar
dispositivo
usuario
interaccione
forma
expl√≠cita
ejem-
plo
usuario
ejecutando
aplicaci√≥n
red
vulnerable
atacante
enviar
software
malicioso
casos
usuario
intervenga
aplica-
ci√≥n
aceptar
malware
Internet
ejecutarlo
creando
gusano
gusano
insta-
dispositivo
reci√©n
infectado
explora
Internet
buscando
hosts
ejecuten
aplicaci√≥n
red
vulnerable
hosts
vulnera-
bles
env√≠a
copia
hosts
caballo
Troya
mal-
ware
oculto
software
√∫til
malware
generalizado
dif√≠cil
defenderse
libro
animaremos
piense
cuesti√≥n
dise√±adores
redes
computadoras
defender
dispositivos
conectados
Internet
ataques
malware
malos
atacar
servidores
infraestructura
red
amenazas
seguridad
clasificarse
ataques
denegaci√≥n
servicio
Denial-of-Service
nombre
sugiere
ataque
vuelve
inutili-
zable
red
host
elemento
infraestructura
usuarios
leg√≠-
timos
servidores
web
servidores
correo
electr√≥nico
servidores
DNS
estudian
Cap√≠tulo
redes
institucionales
objeto
ata-
ques
DoS.
ataques
Internet
comunes
teniendo
lugar
miles
ataques
tipo
a√±o
Moore
2001
Mirkovic
2005
mayor√≠a
ataques
Internet
clasificarse
categor√≠as
siguientes
Ataque
vulnerabilidad
ataque
implica
env√≠o
mensajes
construidos
aplicaci√≥n
sistema
operativo
vulnerable
est√©
ejecut√°ndose
host
objetivo
env√≠a
secuencia
paquetes
correcta
aplicaci√≥n
sistema
operativo
vulnerable
servicio
detenerse
host
sufrir
fallo
catastr√≥fico
Inundaci√≥n
ancho
banda
atacante
env√≠a
cantidad
paquetes
host
objetivo
comienzan
inundar
enlace
acceso
objetivo
impidiendo
paquetes
leg√≠timos
puedan
alcanzar
servidor
Inundaci√≥n
conexiones
atacante
establece
n√∫mero
conexiones
TCP
completamente
abiertas
semi-abiertas
conexiones
estudian
Cap√≠tulo
host
objetivo
host
comenzar
atascarse
conexiones
fraudulen-
tas
impidi√©ndose
acepte
conexiones
leg√≠timas
continuaci√≥n
ataque
inundaci√≥n
ancho
banda
detallada-
mente
Recuerde
an√°lisis
Secci√≥n
1.4.2
retardos
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
55p√©rdida
paquetes
evidente
servidor
velocidad
acceso
bps
atacante
enviar
tr√°fico
velocidad
bps
causar
da√±os
√∫nico
origen
ataque
capaz
generar
tr√°fico
suficiente
da√±ar
servidor
tr√°fico
procede
origen
router
situado
punto
ruta
detectar
ataque
bloquear
tr√°fico
procedente
origen
llegue
cerca
servi-
dor
ataque
distribuido
DDoS
Distributed
mostrado
Figura
1.25
atacante
controla
or√≠genes
bombardee
objetivo
tr√°fico
m√©todo
tasa
acumulada
tr√°fico
or√≠genes
controlados
inutilizar
servicio
Actualmente
producen
forma
com√∫n
ataques
DDoS
utilizan
botnets
miles
hosts
comprometidos
Mir-
kovic
2005
ataques
DDoS
dif√≠ciles
detectar
compli-
cado
defenderse
ataques
procedentes
√∫nico
host
animamos
piense
pregunta
leyendo
libro
dise√±adores
redes
computadoras
defenderlas
ataques
Veremos
necesarias
defensas
tipos
ata-
ques
DoS.
malos
examinar
analizar
paquetes
Actualmente
usuarios
acceden
Internet
dispositivos
inal√°mbricos
tales
computadoras
port√°tiles
conexi√≥n
WiFi
dispositivos
mano
conexiones
Internet
m√≥viles
veremos
Cap√≠tulo
omnipresente
acceso
Inter-
net
extremadamente
√∫til
habilita
maravillosas
aplicaciones
usuarios
m√≥viles
crea
importante
vulnerabilidad
seguridad
colocar
receptor
pasivo
vecindades
transmisor
inal√°mbrico
recibir
copia
paque-
tes
transmitiendo
paquetes
contener
tipo
informaci√≥n
confidencial
incluyendo
contrase√±as
n√∫meros
seguridad
social
secretos
comerciales
Figura
1.25
Ataque
denegaci√≥n
servicio
distribuido
Atacante
inicio
ataque
Esclavo
Esclavo
Esclavo
V√≠ctima
Esclavo
Esclavo
56
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
56y
mensajes
personales
privados
receptor
pasivo
registra
copia
paquetes
pasan
conoce
packet
sniffer
husmeador
paquetes
sniffers
implantarse
entornos
cableados
entornos
cableados
multidifusi√≥n
redes
LAN
Ethernet
sniffer
obtener
copias
paquetes
enviados
LAN
descrito
Secci√≥n
1.2
tecnolog√≠as
acceso
cable
difunden
paquetes
vulnerables
monitorizados
analizados
atacante
acceder
enlace
acceso
router
acceso
instituci√≥n
colocar
sniffer
haga
copia
paquetes
entrantes
salientes
organizaci√≥n
paquetes
monitorizados
analizados
obtener
informaci√≥n
confidencial
software
sniffer
disponible
forma
gratuita
sitios
web
productos
comerciales
profesores
imparten
cursos
redes
suelen
pr√°cticas
labora-
torio
implican
escribir
programa
sniffer
programa
reconstrucci√≥n
datos
capa
aplicaci√≥n
pr√°cticas
laboratorio
Wireshark
Wireshark
2009
asociadas
texto
v√©ase
pr√°ctica
laboratorio
introductoria
Wireshark
cap√≠tulo
utilizan
exactamente
programa
sniffer
monitorizar
analizar
paquetes
Puesto
programas
sniffer
pasivos
inyectan
paquetes
canal
dif√≠ciles
detectar
env√≠amos
paquetes
canal
inal√°mbrico
tene-
mos
aceptar
posibilidad
atacante
registrar
copias
paquetes
adivinado
mejores
formas
defenderse
frente
programas
sniffer
t√©cnicas
criptogr√°ficas
Cap√≠tulo
veremos
aplica
criptograf√≠a
seguridad
red
malos
suplantar
identidades
sorprendentemente
f√°cil
lector
conocimientos
necesarios
medida
leyendo
texto
crear
paquete
direcci√≥n
origen
contenido
paquete
direcci√≥n
destino
arbitrarios
transmitir
paquete
Internet
reenviar√°
paquete
destino
Imagine
receptor
con-
fiado
ejemplo
router
Internet
recibe
paquete
toma
direcci√≥n
origen
falsa
ejecuta
comando
integrado
contenido
paquete
ejemplo
modifica
tabla
reenv√≠o
capacidad
inyectar
paquetes
Internet
direcci√≥n
origen
falsa
conoce
suplantaci√≥n
IP
formas
usuario
hacerse
pasar
resolver
problema
necesitaremos
aplicar
autenticaci√≥n
punto
terminal
mecanismo
permita
determinar
seguridad
mensaje
origen
creemos
animamos
lectores
medida
avanzan
cap√≠tulos
libro
piensen
aplicaciones
protocolos
red
Cap√≠tulo
exploraremos
mecanismos
autenticaci√≥n
punto
terminal
malos
modificar
borrar
mensajes
Terminamos
repaso
ataques
red
describiendo
ataques
inter-
posici√≥n
tipo
ataques
atacantes
introducen
ruta
comunicaciones
existente
entidades
establecido
conexi√≥n
ejemplo
enti-
dades
Alicia
Benito
personas
reales
entidades
red
ejemplo
routers
servidores
correo
atacante
ejemplo
router
1.6
ATAQUES
REDES
57
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
57el
atacante
tomado
control
ruta
comunicaci√≥n
m√≥dulo
software
resi-
dente
hosts
terminales
capa
inferior
pila
protocolos
ata-
ques
interposici√≥n
atacante
capacidad
examinar
analizar
paquetes
pasan
Benito
Alicia
inyectar
modificar
borrar
paquetes
jerga
utilizada
hablar
seguridad
redes
ataque
interposici√≥n
comprometer
integridad
datos
enviados
Alicia
Benito
veremos
Cap√≠tulo
mecanismos
proporcionan
confidenciali-
dad
protecci√≥n
frente
husmeo
paquetes
autenticaci√≥n
punto
terminal
permite
receptor
verificar
certeza
originador
mensaje
necesariamente
proporcionan
integridad
datos
necesitaremos
t√©cnicas
propor-
cionar
funcionalidad
terminar
secci√≥n
vale
pena
comentar
raz√≥n
Internet
convertido
lugar
inseguro
B√°sicamente
respuesta
Internet
dise√±ada
originalmente
insegura
basaba
modelo
grupo
usuarios
confiaban
conectados
red
transparente
Blumenthal
2001
modelo
definici√≥n
necesidad
pensar
seguridad
aspectos
arquitec-
tura
Internet
original
reflejan
idea
confianza
mutua
ejemplo
posibilidad
usuario
env√≠e
paquete
usuario
opci√≥n
predeterminada
lugar
capacidad
solicitada
concedida
normal
creer
identidad
usuario
declara
lugar
autenticarle
defecto
actualmente
Internet
implica
realmente
usuarios
confianza
mutua
usuarios
necesitan
comunicarse
necesariamente
conf√≠en
desear
comunicarse
forma
an√≥nima
comunicarse
indirectamente
terceros
ejemplo
cach√©s
web
estudiaremos
Cap√≠tulo
asisten-
tes
movilidad
veremos
Cap√≠tulo
desconfiar
hardware
soft-
ware
aire
comunican
libro
encontrarnos
retos
relacionados
seguridad
buscaremos
formas
defen-
dernos
frente
sniffer
suplantaci√≥n
identidades
punto
terminal
ataques
interposici√≥n
ataques
DDoS
software
malicioso
etc.
presente
comunicaci√≥n
usuarios
mutua
confianza
excepci√≥n
regla
Bienvenido
mundo
redes
modernas
comunicaciones
1.7
Historia
Internet
redes
computadoras
Secciones
1.1
1.6
presentaci√≥n
tecnolog√≠as
utilizadas
redes
comunicaciones
Internet
suficiente
impresionar
familiares
amigos
realmente
desea
causar
impresi√≥n
fiesta
asista
deber√≠a
salpicar
discurso
detalles
interesantes
acerca
fascinante
historia
Internet
Segaller
1998
1.7.1
desarrollo
conmutaci√≥n
paquetes
1961-1972
Internet
redes
computadoras
inicios
principios
d√©cada
1960
red
telef√≥nica
red
comunicaciones
dominante
58
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
58en
mundo
Recordemos
Secci√≥n
1.3
red
telef√≥nica
utiliza
mecanismos
conmutaci√≥n
circuitos
transmitir
informaci√≥n
emisor
receptor
opci√≥n
apropiada
voz
transmite
velocidad
constante
emisor
receptor
creciente
importancia
enormes
costes
computadoras
a√±os
d√©cada
1960
aparici√≥n
computa-
doras
tiempo
compartido
natural
retrospectivamente
conside-
rar
cuesti√≥n
enlazar
computadoras
pudieran
compartidas
usuarios
geogr√°ficamente
distribuidos
tr√°fico
generado
usuarios
probablemente
r√°fagas
compuesto
periodos
actividad
env√≠o
comando
computadora
remota
seguido
periodos
inactividad
espera
obtener
respuesta
contempla
respuesta
recibida
grupos
investigaci√≥n
repartidos
mundo
ignorante
existencia
Leiner
1998
comenzaron
trabajar
conmutaci√≥n
paquetes
alternativa
eficiente
robusta
conmutaci√≥n
circuitos
trabajo
publicado
t√©cnicas
conmutaci√≥n
paquetes
Leonard
Kleinrock
Kleinrock
1961
Kleinrock
1964
estudiante
graduado
MIT
Bas√°ndose
teo-
r√≠a
colas
trabajo
Kleinrock
demostraba
forma
elegante
efectividad
t√©c-
nica
conmutaci√≥n
paquetes
fuentes
generaban
tr√°fico
r√°fagas
1964
Paul
Baran
Baran
1964
Rand
Institute
comenzado
investigar
con-
mutaci√≥n
paquetes
comunicaciones
voz
seguras
redes
militares
National
Physical
Laboratory
NPL
Inglaterra
Donald
Davies
Roger
Scantlebury
tam-
bi√©n
desarrollando
ideas
acerca
conmutaci√≥n
paquetes
trabajos
realizados
MIT
instituto
Rand
laboratorios
NPL
esta-
blecieron
bases
red
Internet
actual
Internet
larga
tradici√≥n
hag√°moslo
demostremos
funciona
remonta
d√©cada
1960
J.
C.
R.
Licklider
DEC
1990
Lawrence
Roberts
colegas
Kleinrock
MIT
dirigieron
programa
Ciencias
Computaci√≥n
Agencia
Proyectos
Inves-
tigaci√≥n
Avanzada
ARPA
Advanced
Research
Projects
Agency
Unidos
Roberts
public√≥
plan
global
red
ARPAnet
Roberts
1967
red
com-
putadoras
conmutaci√≥n
paquetes
ancestro
directo
red
Internet
p√∫blica
actual
conmutadores
paquetes
conoc√≠an
procesadores
mensa-
jes
interfaz
IMP
Interface
Message
Processors),y
mutadores
concedido
empresa
BBN
Trabajo
1969
instal√≥
IMP
UCLA
supervisi√≥n
Kleinrock
instalaron
IMP
adicionales
Instituto
Investigaci√≥n
Stanford
SRI
UC
Santa
Barbara
Universidad
Utah
Figura
1.26
finales
1969
disponible
red
pre-
cursora
Internet
formada
nodos
Kleinrock
recuerda
utiliz√≥
red
cabo
inicio
sesi√≥n
remoto
UCLA
SRI
consiguiendo
sistema
fallara
Kleinrock
2004
1972
red
ARPAnet
crecido
15
nodos
pri-
mera
demostraci√≥n
p√∫blica
realizada
Robert
Kahn
1972
International
Con-
ference
on
Computer
Communications
complet√≥
protocolo
host
host
sistemas
terminales
ARPAnet
conocido
protocolo
control
red
NCP
Net-
work
Control
Protocol
RFC
001
Disponiendo
protocolo
terminal
terminal
pod√≠an
escribirse
aplicaciones
Ray
Tomlinson
BBN
escribi√≥
programa
correo
electr√≥nico
1972
1.7
HISTORIA
INTERNET
REDES
COMPUTADORAS
59
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
5960
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
Figura
1.26
procesadores
mensajes
interfaz
IMP
L.
Kleinrock
Mark
J.
Terrill
AP
Wide
World
Photos
1.7.2
Redes
propietarias
interredes
1972-1980
red
inicial
ARPAnet
√∫nica
red
cerrada
establecer
comunicaci√≥n
host
red
ARPAnet
realmente
conectado
IMP
ARPAnet
mediados
d√©cada
1970
comenzaron
surgir
redes
conmutaci√≥n
paque-
tes
aut√≥nomas
ARPAnet
incluyen
siguientes
‚Ä¢A
Abramson
1970
redes
conmutaci√≥n
paquetes
v√≠a
sat√©lite
DARPA
RFC
829
redes
conmutaci√≥n
paquetes
v√≠a
radio
Kahn
1978
‚Ä¢T
g√≠a
ARPAnet
‚Ä¢C
2009
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
60‚Ä¢R
finales
d√©cada
1960
principios
d√©cada
1970
Schwartz
1977
‚Ä¢L
Schwartz
1977
n√∫mero
redes
creciendo
Retrospectivamente
llegado
momento
desarrollar
arquitectura
completa
interconexi√≥n
redes
tra-
pionero
interconexi√≥n
redes
patrocinio
Agencia
DARPA
Defense
Advanced
Research
Projects
Agency
esencia
creaci√≥n
red
redes
Vinton
Cerf
Robert
Kahn
Cerf
1974
t√©rmino
internet-
ting
interredes
interconexi√≥n
redes
acu√±ado
describir
trabajo
principios
arquitect√≥nicos
integrados
TCP
prime-
ras
versiones
TCP
distintas
TCP
primeras
versiones
combinaban
entrega
fiable
secuencia
datos
retransmisiones
sistema
terminal
funci√≥n
realiza
TCP
funciones
reenv√≠o
actualmente
realizadas
IP
experimentos
TCP
combina-
reconocimiento
importancia
disponer
servicio
transporte
ter-
minal
terminal
fiable
control
flujo
aplicaciones
tales
voz
empaquetada
llevaron
separaci√≥n
IP
TCP
desarrollo
protocolo
UDP
protocolos
clave
Internet
emplean
actualmente
TCP
UDP
IP
fue-
ron
concebidos
finales
d√©cada
1970
investigaciones
relativas
Internet
agencia
DARPA
llevaron
cabo
importantes
actividades
red
Hawai
Norman
Abramson
desarroll√≥
ALOHAnet
red
paquetes
v√≠a
radio
permit√≠a
sitios
remotos
islas
Hawai
comunicarse
protocolo
ALOHA
Abramson
1970
protocolo
acceso
m√∫ltiple
permiti√≥
usuarios
distribuidos
geogr√°ficamente
compar-
tir
comunicaci√≥n
difusi√≥n
frecuencia
radio
Metcalfe
Boggs
basaron
protocolo
acceso
m√∫ltiple
Abramson
desarrollar
proto-
colo
Ethernet
Metcalfe
1976
redes
difusi√≥n
compartidas
basadas
cable
v√©ase
Figura
1.27
interesante
comentar
protocolo
Ethernet
Metcalfe
Boggs
motivado
necesidad
conectar
PC
impresoras
discos
compartidos
Perkins
1994
veinticinco
a√±os
revoluci√≥n
PC
explosi√≥n
redes
Metcalfe
Boggs
establecieron
bases
redes
LAN
computadoras
PC
actuales
tecnolog√≠a
Ethernet
represent√≥
paso
importante
intercone-
xi√≥n
redes
interred
red
√°rea
local
Ethernet
red
n√∫mero
redes
LAN
proliferaba
necesidad
interconectar
redes
LAN
adquir√≠a
importancia
Cap√≠tulo
veremos
detalle
Ethernet
ALOHA
tecnolog√≠as
LAN
1.7.3
Proliferaci√≥n
redes
1980-1990
Af
finales
d√©cada
1980
n√∫mero
hosts
conectados
red
Internet
p√∫blica
confederaci√≥n
redes
similar
Internet
actual
llegar√≠a
cien
mil
d√©cada
1980
√©poca
enorme
crecimiento
crecimiento
resultado
distintos
esfuerzos
crear
redes
computadoras
enlazaran
universidades
BITNET
proporcionaba
servicios
1.7
HISTORIA
INTERNET
REDES
COMPUTADORAS
61
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
6162
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
Figura
1.27
Concepci√≥n
original
Ethernet
Metcalfe
correo
electr√≥nico
transferencia
archivos
universidades
CSNET
Com-
puter
Science
Network
form√≥
investigadores
universitarios
ten√≠an
acceso
red
ARPAnet
pudieran
comunicarse
1986
cre√≥
NSFNET
proporcio-
nar
acceso
centros
supercomputaci√≥n
patrocinados
NSF
Inicialmente
velocidad
red
troncal
56
kbps
red
troncal
NSFNET
llegar√≠a
operar
1,5
Mbps
finales
d√©cada
servir√≠a
red
troncal
primaria
enlazar
redes
regionales
comunidad
ARPAnet
piezas
finales
arquitectura
Internet
actual
encajando
enero
1983
llev√≥
cabo
lanzamiento
oficial
TCP
IP
protocolo
host
est√°ndar
ARPAnet
reemplazando
protocolo
NCP
transici√≥n
RFC
801
NCP
TCP
IP
suceso
se√±alado
hosts
requiri√≥
pasar
utilizar
TCP
IP
finales
d√©cada
1980
realizaron
importantes
extensiones
TCP
implementar
control
congesti√≥n
basado
host
Jacobson
1988
desarroll√≥
sistema
DNS
emplea
establecer
correspondencia
nombres
Internet
personas
ejemplo
gaia.cs.umass.edu
direcciones
IP
32
bits
RFC
1034
paralelo
desarrollo
ARPAnet
fundamentalmente
Unidos
principios
d√©cada
1980
franceses
lanzaron
proyecto
Minitel
ambicioso
plan
redes
datos
hogares
Patrocinado
gobierno
franc√©s
sistema
Minitel
consist√≠a
red
p√∫blica
conmutaci√≥n
paque-
tes
basada
serie
protocolos
X.25
servidores
Minitel
terminales
econ√≥micos
incorporaban
modems
baja
velocidad
Minitel
alcanz√≥
√©xito
1984
gobierno
franc√©s
proporcion√≥
terminal
Minitel
gratuito
deseara
casa
sitios
Minitel
inclu√≠an
sitios
gratuitos
ejemplo
directorio
telef√≥nico
sitios
privados
cobraban
tarifas
bas√°ndose
utilizaci√≥n
servi-
cio
mediados
d√©cada
1990
produjo
pico
servicios
ofertados
ofreciendo
20.000
servicios
servicios
banca
bases
datos
investigaci√≥n
especializadas
red
utilizada
20
ciento
poblaci√≥n
Francia
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
621.7
HISTORIA
INTERNET
REDES
COMPUTADORAS
63
gener√≥
1.000
millones
d√≥lares
ingresos
anuales
di√≥
lugar
creaci√≥n
10.000
puestos
trabajo
Minitel
utiliz√≥
hogares
Francia
10
a√±os
americanos
siquiera
hubieran
o√≠do
hablar
Internet
1.7.4
explosi√≥n
Internet
d√©cada
1990
d√©cada
1990
marcada
serie
acontecimientos
simbolizaron
continua
evoluci√≥n
pronta
llegada
comercializaci√≥n
Internet
ARPAnet
pro-
genitor
Internet
exi
stir
MILNET
Red
Datos
Defensa
crecido
d√©cada
1980
transportando
tr√°fico
relacionado
Departamento
Defensa
Unidos
NSFNET
empezado
servir
red
troncal
conectar
redes
regionales
Unidos
redes
nacionales
ultra-
mar
1991
NSFNET
retir√≥
restricciones
NSFNET
prop√≥sitos
comerciales
NSFNET
eliminada
servicio
activo
1995
tr√°fico
troncal
Internet
transportado
Proveedores
servicios
Internet
comerciales
principal
acontecimiento
d√©cada
1990
aparici√≥n
World
Wide
Web
llevar√≠a
Internet
hogares
negocios
millones
personas
mundo
Web
sirvi√≥
plataforma
posibilitar
implantar
cientos
nue-
vas
aplicaciones
damos
sentadas
desea
historia
√©poca
Web
consulte
W3C
1995
Web
inventada
CERN
Tim
Berners-Lee
1989
1991
Berners-
Lee
1989
bas√°ndose
ideas
trabajos
acerca
hipertexto
desarrolla-
das
d√©cada
1940
Vannevar
Bush
Bush
1945
d√©cada
1960
Ted
Nelson
Xanadu
2009
Berners-Lee
socios
desarrollaron
versiones
iniciales
HTML
HTTP
servidor
web
navegador
componentes
clave
Web
finales
a√±o
1993
operativos
doscientos
servidores
web
colecci√≥n
servidores
presagio
venir
tiempo
investigadores
desarrollando
navegadores
web
interfaces
GUI
encontraba
Marc
Andreessen
lider√≥
desarroll√≥
popular
navegador
interfaz
GUI
Mosaic
1994
Marc
Andreessen
Jim
Clark
crearon
Mosaic
Commu-
nications
convertir√≠a
Netscape
Communications
Corporation
Cusu-
mano
1998
Quittner
1998
1995
estudiantes
universitarios
empleaban
navegadores
Mosaic
Netscape
navegar
Web
diariamente
√©poca
empresas
peque√±as
comenzaron
trabajar
servidores
web
rea-
lizar
transacciones
comerciales
Web
1996
Microsoft
empez√≥
desarrollar
navegadores
comenzar√≠a
guerra
navegadores
Netscape
Microsoft
ter-
minar√≠a
ganando
Microsoft
a√±os
Cusumano
1998
mitad
d√©cada
1990
periodo
crecimiento
innova-
ci√≥n
Internet
principales
corporaciones
miles
empresas
creando
productos
servicios
Internet
correo
electr√≥nico
Internet
continu√≥
evolucionando
lectores
correo
funcionalidades
proporcionaban
libretas
direc-
ciones
adjuntos
hiperv√≠nculos
activos
transporte
multimedia
milenio
Inter-
net
daba
soporte
cientos
aplicaciones
populares
incluyen
‚Ä¢C
Web
‚Ä¢L
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
63‚Ä¢L
‚Ä¢L
interesante
primeras
aplicaciones
estrella
creadas
comunidad
investigadores
j√≥venes
emprendedores
periodo
comprendido
1995
2001
paseo
monta√±a
rusa
Internet
mercados
financieros
fueran
rentables
cientos
empresas
Internet
vendidas
mercado
burs√°til
oferta
p√∫blica
inicial
empresas
valoradas
miles
millones
d√≥lares
ingresos
signi-
ficativos
acciones
Internet
hundieron
2000-2001
empresas
creaci√≥n
cerraron
obstante
emergieron
ganadores
espacio
Internet
incluyen
Microsoft
Cisco
Yahoo
e-Bay
Google
Amazon
1.7.5
Desarrollos
recientes
innovaci√≥n
redes
computadoras
contin√∫a
paso
avances
frentes
incluyendo
implementaci√≥n
aplicaciones
distribuci√≥n
con-
tenidos
telefon√≠a
Internet
velocidades
transmisi√≥n
altas
redes
LAN
rou-
ters
r√°pidos
desarrollos
merecen
atenci√≥n
especial
proliferaci√≥n
m√©todos
acceso
alta
velocidad
incluido
acceso
inal√°mbrico
seguridad
redes
P2P.
visto
Secci√≥n
1.2
creciente
penetraci√≥n
acceso
Internet
resi-
dencial
m√≥dem
cable
DSL
abre
etapa
abundancia
aplica-
ciones
multimedia
incluyendo
voz
v√≠deo
IP
Skype
2009
compartici√≥n
v√≠deos
YouTube
2009
televisi√≥n
IP
PPLive
2009
creciente
omnipresencia
redes
p√∫blicas
Wi-Fi
alta
velocidad
11
Mbps
superior
acceso
Internet
veloci-
dades
medias
cientos
kbps
redes
telefon√≠a
m√≥vil
constantemente
conectado
habilitan
excitante
conjunto
servicios
espec√≠ficos
ubicaci√≥n
Cap√≠tulo
ocuparemos
redes
ina-
l√°mbricas
movilidad
serie
ataques
denegaci√≥n
servicio
servidores
web
importantes
finales
d√©cada
1990
proliferaci√≥n
ataques
gusa-
gusano
Blaster
seguridad
redes
convirti√≥
tema
extremada-
mente
importante
ataques
lugar
desarrollo
sistemas
detecci√≥n
intrusiones
capaces
advertir
fase
temprana
ataque
cor-
tafuegos
filtrar
tr√°fico
deseado
red
Cap√≠tulo
vere-
mos
temas
importantes
relacionados
seguridad
innovaci√≥n
tomaremos
nota
redes
P2P.
aplicaci√≥n
red
P2P
explota
recursos
disponibles
computadoras
usuarios
almacena-
miento
contenido
ciclos
CPU
presencia
humana
autonom√≠a
significativa
servidores
centrales
Normalmente
computadoras
usuarios
pares
disponen
conectividad
intermitente
numerosas
historias
√©xito
P2P
lugar
a√±os
incluyen
compartici√≥n
archivos
P2P
Napster
Kazaa
Gnutella
eDonkey
LimeWire
etc.
distribuci√≥n
64
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
64archivos
BitTorrent
oz
IP
Skype
IPTV
PPLive
ppStream
Cap√≠tulo
veremos
aplicaciones
P2P.
1.8
Resumen
cap√≠tulo
presentado
cantidad
material
hablado
dis-
tintas
piezas
hardware
software
forman
Internet
particular
redes
computa-
doras
general
partido
frontera
red
fij√°ndonos
sistemas
terminales
aplicaciones
servicio
transporte
proporcionado
aplicaciones
ejecutan
sistemas
terminales
hablado
tecnolog√≠as
capa
enlace
medios
f√≠sicos
encontrarse
normalmente
red
acceso
continuaci√≥n
adentrado
interior
red
n√∫cleo
identificado
mecanismos
conmutaci√≥n
paquetes
conmutaci√≥n
circuitos
m√©todos
b√°sicos
utilizados
transporte
datos
red
telecomunicaciones
examinado
fortalezas
debilidades
m√©todo
examinado
estructura
global
Internet
aprendido
red
redes
visto
estructura
jer√°rquica
Internet
formada
ISP
nivel
superior
inferior
permitido
Internet
crezca
incluir
miles
redes
cap√≠tulo
introducci√≥n
abordado
temas
funda-
mentales
campo
redes
lugar
estudiado
causas
retardos
tasa
transferencia
p√©rdida
paquetes
red
conmutaci√≥n
paquetes
desarrollado
modelos
cuantitativos
simples
determinar
retardos
transmi-
si√≥n
propagaci√≥n
cola
tasa
transferencia
exhaustivo
modelos
retardo
problemas
repaso
incluidos
cap√≠-
tulo
continuaci√≥n
visto
capas
protocolos
modelos
servicio
princi-
pales
claves
arquitect√≥nicas
redes
volver√°
referencia
libro
Asimismo
repasado
ataques
seguridad
habituales
actualmente
Internet
terminado
introducci√≥n
repaso
historia
redes
computadoras
cap√≠tulo
constituye
minicurso
redes
computadoras
cubierto
enorme
cantidad
conceptos
b√°sicos
cap√≠tulo
abrumado
preocupe
siguientes
cap√≠tulos
revisaremos
ideas
vi√©ndolas
detalle
promesa
ame-
naza
punto
esperamos
termine
cap√≠tulo
teniendo
idea
pie-
zas
forman
red
teniendo
conocimiento
deber√°
desarrollar
vocabulario
campo
redes
computadoras
asuste
volver
consultar
cap√≠tulo
habiendo
incrementado
deseo
aprender
acerca
redes
tarea
resto
libro
Mapa
libro
iniciar
viaje
deber√≠a
echarse
vistazo
mapa
carreteras
familiarizarse
principales
carreteras
desv√≠os
encontraremos
viaje
embarcado
destino
cono-
cer
profundidad
redes
computadoras
mapa
cap√≠tulos
libro
1.8
RESUMEN
65
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
651
Redes
computadoras
Internet
capa
aplicaci√≥n
capa
transporte
capa
red
capa
enlace
redes
√°rea
local
Redes
inal√°mbricas
m√≥viles
Redes
multimedia
Seguridad
redes
computadoras
Gesti√≥n
redes
Cap√≠tulos
cap√≠tulos
centrales
libro
Observar√°
organizados
capas
superiores
pila
protocolos
Internet
capas
cap√≠tulo
capa
Observar√°
viaje
comenzar
superior
pila
protocolos
Internet
capa
aplicaci√≥n
con-
tinuaremos
trabajo
descendiendo
pila
razonamiento
recorrido
arriba-abajo
conozcamos
aplicaciones
estaremos
condicio-
nes
comprender
servicios
red
necesarios
soporte
aplicaciones
Podremos
examinar
distintas
formas
tales
servicios
implementados
arquitectura
red
Ocuparnos
aplicaciones
lugar
propor-
cionar
motivaci√≥n
necesaria
abordar
resto
texto
mitad
libro
Cap√≠tulos
abordan
temas
enorme-
mente
importantes
independientes
redes
comunicaciones
modernas
Cap√≠tulo
examinaremos
redes
inal√°mbricas
celulares
incluyendo
redes
LAN
inal√°mbricas
incluye
tecnolog√≠as
WiFi
WiMAX
Bluetooth
redes
telefon√≠a
m√≥vil
incluye
redes
GSM
movilidad
redes
IP
GSM
Cap√≠tulo
Redes
multimedia
examinaremos
aplicaciones
audio
v√≠deo
tales
telefon√≠a
Internet
videoconferencia
flujos
informaci√≥n
multimedia
almacenada
veremos
dise√±arse
redes
conmuta-
ci√≥n
paquetes
proporcionar
calidad
servicio
coherente
aplicaciones
audio
v√≠deo
Cap√≠tulo
Seguridad
redes
computadoras
veremos
lugar
fundamentos
mecanismos
cifrado
seguridad
red
examinaremos
aplicada
teor√≠a
b√°sica
amplio
rango
contextos
Internet
cap√≠tulo
Gesti√≥n
redes
examina
problemas
fundamentales
administraci√≥n
red
principales
protocolos
Internet
empleados
admi-
nistrar
red
Problemas
cuestiones
repaso
Cap√≠tulo
Cuestiones
repaso
SECCI√ìN
1.1
R1
diferencia
host
sistema
terminal
Enumere
tipos
siste-
terminales
servidor
web
sistema
terminal
R2
t√©rmino
protocolo
emplea
describir
relaciones
diplom√°ticas
Proporcione
ejemplo
protocolo
diplom√°tico
66
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
66SECCI√ìN
1.2
R3
programa
cliente
programa
servidor
programa
servidor
solicita
recibe
servicios
programa
cliente
R4
Enumere
tecnolog√≠as
acceso
Clasif√≠quelas
acceso
residencial
acceso
empresarial
acceso
m√≥vil
R5
velocidad
transmisi√≥n
sistema
HFC
dedicada
compartida
usuarios
producirse
colisiones
canal
descarga
HFC
R6
Enumere
tecnolog√≠as
acceso
residencial
disponibles
ciudad
tipo
acceso
detalle
velocidad
descarga
velocidad
carga
precio
mensual
R7
velocidad
transmisi√≥n
redes
LAN
Ethernet
determi-
velocidad
transmisi√≥n
usuarios
LAN
transmitir
continua-
mente
dicha
velocidad
R8
Cite
medios
f√≠sicos
emplear
tecnolog√≠a
Ether-
net
R9
acceso
residencial
emplean
modems
acceso
telef√≥nico
sistemas
HFC
DSL
FTTH
tecnolog√≠as
acceso
detalle
rango
velocidades
transmisi√≥n
indique
velocidad
transmisi√≥n
dedicada
compartida
R10
Describa
tecnolog√≠as
acceso
inal√°mbrico
Internet
populares
SECCI√ìN
1.3
R11
ventajas
presenta
red
conmutaci√≥n
circuitos
frente
red
con-
mutaci√≥n
paquetes
desventajas
multiplexaci√≥n
TDM
frente
mul-
tiplexaci√≥n
FDM
red
conmutaci√≥n
circuitos
R12
conmutaci√≥n
paquetes
emplea
multiplexaci√≥n
estad√≠stica
Compare
multiplexaci√≥n
estad√≠stica
multiplexaci√≥n
divisi√≥n
tiempo
TDM
R13
Suponga
√∫nico
dispositivo
conmutaci√≥n
paquetes
host
emi-
sor
host
receptor
velocidades
transmisi√≥n
host
emisor
dis-
positivo
conmutaci√≥n
switch
switch
host
receptor
R1
R2
respectivamente
Suponiendo
switch
utiliza
mecanismo
conmutaci√≥n
paquetes
almacenamiento
reenv√≠o
retardo
terminal
terminal
env√≠a
paquete
longitud
Ignore
retardos
cola
propagaci√≥n
procesamiento
R14
diferencia
ISP
nivel
ISP
nivel
R15
Suponga
usuarios
comparten
enlace
Mbps
usuario
trans-
mite
velocidad
Mbps
continuamente
20
ciento
tiempo
V√©ase
explicaci√≥n
multiplexaci√≥n
estad√≠stica
Secci√≥n
1.3
a.
utiliza
conmutaci√≥n
circuitos
usuarios
darse
soporte
b.
resto
problema
suponga
utiliza
conmutaci√≥n
paquetes
pr√°cticamente
retardo
cola
enlace
usua-
rios
transmiten
tiempo
existir√°
retardo
cola
usuarios
transmiten
simult√°neamente
PROBLEMAS
CUESTIONES
REPASO
67
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
67c
Calcule
probabilidad
usuario
est√©
transmitiendo
d.
Suponga
usuarios
Calcule
probabilidad
instante
determinado
usuarios
est√©n
transmitiendo
simult√°neamente
Halle
frac-
ci√≥n
tiempo
cola
crece
SECCI√ìN
1.4
R16
Considere
env√≠o
paquete
host
emisor
host
receptor
ruta
fija
Enumere
componentes
retardo
terminal
terminal
retardos
constantes
variables
R17
Visite
applet
Transmission
Versus
Propagation
Delay
transmisi√≥n
frente
retardo
propagaci√≥n
disponible
sitio
web
libro
Utilizando
velocidades
retar-
propagaci√≥n
tama√±os
paquete
disponibles
determine
combinaci√≥n
emisor
termine
operaci√≥n
transmisi√≥n
bit
paquete
llegado
receptor
Halle
combinaci√≥n
bit
paquete
haga
llegado
receptor
emisor
terminado
transmitir
R18
tiempo
tarda
paquete
cuya
longitud
1.000
bytes
propagarse
tra-
v√©s
enlace
distancia
2.500
km
velocidad
propagaci√≥n
2,5
10
velocidad
transmisi√≥n
Mbps
forma
general
tiempo
tarda
paquete
longitud
propagarse
enlace
distancia
velocidad
propagaci√≥n
velocidad
transmisi√≥n
bps
Depende
retardo
longitud
paquete
Depende
retardo
velocidad
transmisi√≥n
R19
Suponga
host
desea
enviar
archivo
tama√±o
host
B.
ruta
host
host
formada
enlaces
cuyas
velocidades
R1
500
kbps
R2
Mbps
R3
Mbps
a.
Suponiendo
tr√°fico
red
tasa
transferencia
archivo
b.
Suponga
tama√±o
archivo
millones
bytes
Dividiendo
tama√±o
archivo
tasa
transferencia
tiempo
tardar√°
transferirse
archivo
host
c.
Repita
apartados
R2
100
kbps
R20
Suponga
sistema
terminal
desea
enviar
archivo
tama√±o
sistema
terminal
B.
entrar
detalles
describa
crea
sistema
terminal
paque-
tes
archivo
paquetes
llega
conmutador
pa-
quetes
informaci√≥n
utiliza
conmutador
determinar
enlace
reenviado
paquete
conmutaci√≥n
paquetes
Internet
an√°loga
viajar
ciudad
preguntando
direcci√≥n
dirigimos
R21
isite
applet
Queuing
and
Loss
colas
p√©rdida
paquetes
sitio
web
libro
velocidades
transmisi√≥n
m√°xima
m√≠nima
veloci-
dades
intensidad
tr√°fico
Ejecute
applet
velocidades
deter-
mine
tiempo
transcurrir
lugar
p√©rdida
paquetes
Ac
68
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
68tiempo
pasa
producirse
p√©rdida
paquetes
valores
obtenidos
SECCI√ìN
1.5
R22
Enumere
tareas
capa
tareas
pudieran
realizadas
capas
R23
capas
pila
protocolos
Internet
respon-
sabilidades
principales
capas
R24
mensaje
capa
aplicaci√≥n
segmento
capa
trans-
porte
datagrama
capa
red
trama
capa
enlace
R25
capas
pila
protocolos
Internet
procesa
router
capas
procesa
switch
capa
enlace
capas
procesa
host
SECCI√ìN
1.6
R26
diferencia
virus
gusano
caballo
Troya
R27
Describa
crearse
red
robot
botnet
utilizar
ataque
DDoS.
R28
Suponga
Alicia
Benito
envi√°ndose
paquetes
red
Imagine
Victoria
introduce
red
capturar
paquetes
enviados
Alicia
env√≠a
Benito
capturar
paquetes
enviados
Benito
enviar
Ali-
cia
parezca
Enumere
da√±os
Victoria
ocasionar
posici√≥n
Problemas
P1
Dise√±e
describa
protocolo
nivel
aplicaci√≥n
utilizado
cajero
autom√°tico
computadora
central
banco
protocolo
deber√°
permitir
verificar
tarjeta
contrase√±a
usuario
consultar
saldo
almacena
computadora
central
apunte
cantidad
retirada
usuario
entidades
protocolo
controlar
casos
suficiente
saldo
cubrir
reembolso
Especifique
protocolo
enumerando
mensajes
intercambiados
acciones
rea-
lizadas
cajero
autom√°tico
computadora
central
banco
transmitir
recibir
mensajes
Haga
boceto
funcionamiento
protocolo
caso
retirada
efectivo
errores
utilizando
diagrama
similar
mostrado
Figura
1.2
Establezca
expl√≠citamente
suposiciones
hechas
protocolo
acerca
servicio
transporte
terminal
terminal
subyacente
P2
Considere
aplicaci√≥n
transmite
datos
velocidad
constante
ejemplo
emisor
genera
unidad
datos
bits
unidades
tiempo
valor
peque√±o
fijo
aplicaci√≥n
inicia
ejecutar√°
periodo
tiempo
relativamente
Responda
siguientes
cuestio-
nes
forma
justificando
respuesta
PROBLEMAS
69
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
69a
apropiado
aplicaci√≥n
red
conmutaci√≥n
circui-
tos
red
conmutaci√≥n
paquetes
b.
Suponga
utiliza
red
conmutaci√≥n
paquetes
√∫nico
tr√°fico
procede
aplicaci√≥n
acabamos
describir
suponga
suma
velocidades
datos
aplicaci√≥n
menor
capacidades
enlaces
necesario
mecanismo
con-
trol
congesti√≥n
P3
Considere
red
conmutaci√≥n
circuitos
Figura
1.12
Recuerde
circuitos
enlace
a.
n√∫mero
m√°ximo
conexiones
simult√°neas
curso
determinado
instante
tiempo
red
b.
Suponga
conexiones
encuentran
dispositivo
conmuta-
ci√≥n
esquina
superior
izquierda
dispositivo
conmutaci√≥n
esquina
inferior
derecha
n√∫mero
m√°ximo
conexiones
curso
P4
Repase
analog√≠a
caravana
coches
Secci√≥n
1.4
Suponga
velocidad
propagaci√≥n
100
km
hora
a.
Suponga
caravana
mueve
velocidad
150
km
partiendo
caseta
peaje
pasando
caseta
peaje
deteni√©ndose
justo
des-
pu√©s
caseta
peaje
retardo
terminal
terminal
b.
Repita
apartado
suponiendo
caravana
coches
lugar
P5
problema
exploran
retardos
propagaci√≥n
transmisi√≥n
con-
ceptos
fundamentales
redes
datos
Considere
hosts
conectados
enlace
cuya
velocidad
bps
Suponga
hosts
separados
metros
velocidad
propagaci√≥n
enlace
metros
host
env√≠a
paquete
tama√±o
bits
host
B.
a.
Exprese
retardo
propagaci√≥n
dprop
funci√≥n
s.
b.
Determine
tiempo
transmisi√≥n
paquete
dtrans
funci√≥n
R.
c.
Ignorando
retardos
procesamiento
cola
obtenga
expresi√≥n
retardo
terminal
terminal
d.
Suponga
host
comienza
transmitir
paquete
instante
ins-
tante
dtrans
bit
paquete
e.
Suponga
dprop
dtrans
instante
dtrans
pri-
mer
bit
paquete
f.
Suponga
dprop
menor
dtrans
instante
dtrans
pri-
mer
bit
paquete
g.
Suponga
2,5
10
metros
120
bits
56
kbps
Determine
distancia
dprop
dtrans
P6
problema
considerar
transmisi√≥n
voz
tiempo
real
host
host
red
conmutaci√≥n
paquetes
oIP
host
con-
vierte
marcha
voz
anal√≥gica
flujo
bits
digital
64
kbps
conti-
nuaci√≥n
host
agrupa
bits
paquetes
56
bytes
host
host
enlace
cuya
velocidad
transmisi√≥n
Mbps
retardo
propaga-
70
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
70ci√≥n
10
milisegundos
host
forma
paquete
env√≠a
host
B.
host
recibe
paquete
completo
convierte
bits
paquete
se√±al
anal√≥gica
tiempo
transcurre
momento
crea
bit
se√±al
anal√≥gica
host
decodifica
se√±al
anal√≥gica
host
P7
Suponga
usuarios
comparten
enlace
Mbps
Suponga
usuario
requiere
150
kbps
transmitir
transmite
10
ciento
tiempo
V√©ase
explicaci√≥n
multiplexaci√≥n
estad√≠stica
Sec-
ci√≥n
1.3
a.
utiliza
conmutaci√≥n
circuitos
usuarios
darse
soporte
b.
resto
problema
suponga
utiliza
red
conmutaci√≥n
paquetes
Halle
probabilidad
determinado
usuario
est√©
transmitiendo
c.
Suponga
120
usuarios
Determine
probabilidad
instante
determinado
exactamente
usuarios
transmitiendo
simult√°neamente
Suge-
rencia
utilice
distribuci√≥n
binomial
d.
Calcule
probabilidad
21
usuarios
transmitiendo
simult√°nea-
mente
P8
Consulte
explicaci√≥n
acerca
multiplexaci√≥n
estad√≠stica
Secci√≥n
1.3
proporciona
ejemplo
enlace
Mbps
usuarios
generando
datos
velocidad
100
kbps
ocupados
probabilidad
0,1
Suponga
enlace
Mbps
sustituye
enlace
Gbps
a.
valor
n√∫mero
m√°ximo
usuarios
soporte
simult√°neamente
emplea
red
conmutaci√≥n
circuitos
b.
Considere
utiliza
red
conmutaci√≥n
paquetes
n√∫mero
usuarios
M.
Proporcione
f√≥rmula
funci√≥n
determinar
probabilidad
usuarios
est√©n
enviando
datos
P9
Considere
paquete
longitud
origen
sistema
terminal
viaja
enlaces
sistema
terminal
destino
enlaces
conectados
dispositivos
conmutaci√≥n
paquetes
di
Ri
longitud
velocidad
propagaci√≥n
velocidad
transmi-
si√≥n
enlace
dispositivo
conmutaci√≥n
paquetes
retarda
paquete
dproc
Suponiendo
produce
retardo
cola
retardo
terminal
terminal
paquete
funci√≥n
di
Ri
Suponga
longitud
paquete
1.500
bytes
velocidad
propagaci√≥n
enlaces
2,5
10
velocidad
transmisi√≥n
enla-
ces
Mbps
retardo
procesamiento
conmutador
paquetes
milisegundos
longitud
enlace
5.000
km
4.000
km
enlace
1.000
km
valores
retardo
ter-
minal
terminal
P10
problema
suponga
R1
R2
R3
dproc
Suponga
conmutador
paquetes
almacena
paquetes
reenv√≠a
trans-
mite
inmediatamente
bit
recibe
esperar
llegue
paquete
completo
retardo
terminal
terminal
PROBLEMAS
71
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
71P11
conmutador
paquetes
recibe
paquete
determina
enlace
saliente
deber√°
reenviado
paquete
llega
paquete
transmitido
mitad
enlace
salida
paquetes
esperando
transmitidos
paquetes
transmiten
orden
llegada
Suponga
paquetes
longitud
1.500
bytes
velocidad
enlace
Mbps
retardo
cola
paquete
sentido
general
retardo
cola
paquetes
longitud
veloci-
dad
transmisi√≥n
bits
paquete
transmitiendo
actualmente
transmitidos
paquetes
cola
esperando
transmitidos
P12
Suponga
paquetes
llegan
simult√°neamente
enlace
actualmente
transmitiendo
paquete
paquete
cola
paquete
longitud
enlace
velocidad
transmisi√≥n
R.
retardo
cola
paquetes
P13
Considere
retardo
cola
buffer
router
precede
enlace
salida
Suponga
paquetes
bits
velocidad
transmisi√≥n
bps
llegan
simult√°neamente
paquetes
buffer
LN
segundos
Calcule
retardo
cola
paquete
Sugerencia
retardo
cola
paquete
cero
paquete
R;p
oe
2L
R.
paquete
transmitido
lote
paquetes
llegue
P14
Considere
retardo
cola
buffer
router
intensidad
tr√°fico
R.
Suponga
retardo
cola
expresarse
IL
a.
Determine
f√≥rmula
calcular
retardo
retardo
cola
retardo
transmisi√≥n
b.
Dibuje
retardo
funci√≥n
R.
P15
velocidad
llegada
paquetes
enlace
paquetes
velocidad
transmisi√≥n
enlace
paquetes
Bas√°ndose
f√≥rmula
retardo
retardo
cola
retardo
transmisi√≥n
obtenida
problema
deduzca
f√≥rmula
retardo
funci√≥n
¬µ.
P16
Considere
buffer
router
precede
enlace
salida
problema
utilizaremos
f√≥rmula
Little
f√≥rmula
famosa
teor√≠a
colas
n√∫mero
paquetes
buffer
paquete
trans-
mitido
velocidad
paquetes
llegan
enlace
retardo
retardo
cola
retardo
transmisi√≥n
experimentado
paquete
f√≥rmula
Little
d.
Suponga
media
buffer
contiene
10
paquetes
retardo
cola
paquete
10
milisegundos
velocidad
transmisi√≥n
enlace
100
paquetes
Utilizando
f√≥rmula
Little
velocidad
media
llegada
paquetes
suponiendo
produce
p√©rdida
paquetes
P17
a.
Generalice
f√≥rmula
retardo
terminal
terminal
dada
Secci√≥n
1.4.3
velocidades
procesamiento
velocidades
transmisi√≥n
retardos
propaga-
ci√≥n
heterog√©neos
b.
Repita
apartado
suponiendo
retardo
cola
dcola
nodo
72
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
72P18
Realice
trazado
ruta
Traceroute
origen
destino
situados
continente
horas
a.
Determine
media
desviaci√≥n
est√°ndar
retardos
ida
vuelta
horas
b.
Determine
n√∫mero
routers
existente
ruta
horas
variado
ruta
horas
c.
Intente
identificar
n√∫mero
redes
ISP
paquetes
Traceroute
atra-
viesan
origen
destino
routers
nombres
similares
direcciones
IP
similares
considerarse
ISP
experimentos
retardos
largos
producen
interfaces
situadas
proveedores
ISP
adyacentes
d.
Repita
apartado
origen
destino
situados
conti-
nentes
Compare
resultados
ubicaciones
continente
dis-
tintos
continentes
P19
Considere
ejemplo
tasa
transferencia
correspondiente
Figura
1.20(b
Suponga
parejas
cliente-servidor
lugar
10
Rs
Rc
velocidades
enlaces
servidor
enlaces
cliente
enlace
red
Suponga
enlaces
capacidad
suficiente
tr√°-
fico
red
generado
parejas
cliente-servidor
Deduzca
expre-
si√≥n
general
tasa
transferencia
funci√≥n
Rs
Rc
M.
P20
Considere
Figura
1.19(b
Suponga
rutas
servidor
cliente
rutas
compartan
enlace
ruta
consta
enlaces
velocidades
transmisi√≥n
iguales
Rk
Rk
Rk
N.
servidor
utilizar
ruta
enviar
datos
cliente
m√°xima
tasa
trans-
ferencia
alcanzar
servidor
servidor
emplear
rutas
enviar
datos
m√°xima
tasa
transferencia
alcanzar
ser-
vidor
P21
Considere
Figura
1.19(b
Suponga
enlace
servidor
cliente
probabilidad
p√©rdida
paquetes
probabilidades
p√©rdida
paquetes
enlaces
independientes
probabilidad
paquete
enviado
servidor
recibido
correctamente
receptor
paquete
pierde
camino
servidor
cliente
servidor
volver√°
transmitir
paquete
media
retransmitir
paquete
servidor
cliente
reciba
correctamente
P22
Considere
Figura
1.19(a
Suponga
enlace
cuello
botella
ruta
servidor
cliente
enlace
cuya
velocidad
Rs
bits
Suponga
env√≠amos
par
paquetes
servi-
dor
cliente
tr√°fico
ruta
Suponga
paquete
tama√±o
bits
enlaces
presentan
retardo
propa-
gaci√≥n
dprop
a.
periodo
llegadas
paquetes
destino
tiempo
transcurre
bit
paquete
llega
bit
paquete
b.
Suponga
enlace
cuello
botella
enlace
Rc
Rs
paquete
esperar
cola
entrada
PROBLEMAS
73
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
73segundo
enlace
Explique
respuesta
Suponga
servidor
env√≠a
paquete
segundos
enviar
valor
garantizar
paquete
esperar
cola
entrada
enlace
Explique
respuesta
P23
Suponga
necesita
enviar
forma
urgente
40
terabytes
datos
Boston
√Ångeles
Dispone
enlace
dedicado
100
Mbps
transferencia
datos
preferir√≠a
transmitir
datos
enlace
utilizar
FedEx
env√≠o
noche
Explique
respuesta
P24
hosts
separados
20.000
kil√≥metros
conectados
enlace
directo
Mbps
Suponga
velocidad
propagaci√≥n
enlace
2,5
108
metros
a.
Calcule
producto
ancho
banda-retardo
dprop
b.
env√≠a
archivo
cuyo
tama√±o
800.000
bits
host
host
B.
Suponga
archivo
env√≠a
forma
continua
mensaje
tama√±o
n√∫mero
m√°ximo
bits
enlace
instante
tiempo
determinado
c.
Haga
interpretaci√≥n
producto
ancho
banda-retardo
d.
ancho
metros
bit
enlace
campo
f√∫tbol
e.
Deduzca
expresi√≥n
general
anchura
bit
funci√≥n
veloci-
dad
propagaci√≥n
velocidad
transmisi√≥n
longitud
enlace
m.
P25
Continuando
Problema
P24
suponga
modificar
R.
valor
ancho
bit
longitud
enlace
P26
Considere
Problema
P24
enlace
Gbps
a.
Calcule
producto
ancho
banda-retardo
dprop
b.
Considere
env√≠o
archivo
800.000
bits
host
host
B.
Suponga
archivo
env√≠a
forma
continua
mensaje
tama√±o
n√∫mero
m√°ximo
bits
enlace
instante
tiempo
c.
ancho
metros
bit
enlace
P27
referencia
problema
P24
a.
tiempo
tarda
enviarse
archivo
suponiendo
env√≠a
forma
con-
tinua
b.
Suponga
archivo
divide
20
paquetes
conteniendo
40.000
bits
Suponga
receptor
confirma
recepci√≥n
paquete
tiempo
transmisi√≥n
paquete
confirmaci√≥n
despre-
ciable
suponga
emisor
transmitir
paquete
confirmado
tiempo
tardar√°
enviar
archivo
c.
Compare
resultados
obtenidos
apartados
P28
Suponga
enlace
microondas
10
Mbps
sat√©lite
geoestaciona-
rio
estaci√≥n
base
Tierra
sat√©lite
toma
fotograf√≠a
digital
minuto
env√≠a
estaci√≥n
base
velocidad
propagaci√≥n
2,4
108
metros
a.
retardo
propagaci√≥n
enlace
74
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
74b
producto
ancho
banda-retardo
dprop
c.
tama√±o
fotograf√≠a
valor
m√≠nimo
enlace
microondas
est√©
transmitiendo
continuamente
P29
Considere
analog√≠a
compa√±√≠a
a√©rea
utilizada
Secci√≥n
1.5
dedicada
capas
adici√≥n
cabeceras
unidades
datos
protocolo
medida
flu-
yen
sentido
descendente
pila
protocolos
concepto
equiva-
lente
informaci√≥n
cabecera
a√±adirse
pasajeros
equipaje
medida
descienden
pila
protocolos
compa√±√≠a
a√©rea
P30
redes
conmutaci√≥n
paquetes
modernas
host
origen
segmenta
mensajes
largos
capa
aplicaci√≥n
ejemplo
imagen
archivo
m√∫sica
paquetes
peque√±os
env√≠a
red
receptor
ensambla
paquetes
formar
paquete
original
proceso
conoce
segmentaci√≥n
mensajes
Figura
1.28
ilustra
transporte
terminal
terminal
mensaje
segmentaci√≥n
mensaje
Imagine
env√≠a
mensaje
cuya
longitud
10
bits
origen
destino
mostrados
Figura
1.28
Suponga
enlace
mostrados
figura
enlaces
Mbps
Ignore
retardos
propagaci√≥n
cola
procesamiento
a.
Suponga
mensaje
transmite
origen
destino
segmentarlo
tiempo
tarda
mensaje
desplazarse
origen
conmutador
paquetes
Teniendo
conmutador
paquetes
utiliza
m√©todo
conmutaci√≥n
almacenamiento
reenv√≠o
tiempo
invierte
mensaje
host
origen
host
des-
tino
b.
Suponga
mensaje
segmenta
4.000
paquetes
longitud
paquete
2.000
bits
tiempo
tarda
paquete
transmi-
tirse
origen
conmutador
paquetes
enviando
paquete
conmutador
host
origen
env√≠a
paquete
conmutador
paquetes
instante
tiempo
recibido
conmutador
paquete
completo
Figura
1.28
Transporte
mensajes
terminal
terminal
segmentaci√≥n
mensajes
segmentaci√≥n
mensajes
Origenb
Conmutador
paquetes
Paquete
Conmutador
paquetes
Destino
Origena
Conmutador
paquetes
Conmutador
paquetes
Destino
Mensaje
PROBLEMAS
75
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
75c
tiempo
tarda
transmitirse
archivo
host
origen
host
destino
emplea
segmentaci√≥n
mensajes
Compare
resultado
respuesta
apartado
com√©ntelo
d.
Comente
inconvenientes
segmentaci√≥n
mensajes
P31
Experimente
applet
Message
Segmentation
segmentaci√≥n
mensajes
dispo-
nible
sitio
web
libro
corresponden
retardos
indicados
applet
retardos
problema
afectan
retardos
propagaci√≥n
enlace
retardo
global
terminal
terminal
conmutaci√≥n
paquetes
seg-
mentaci√≥n
mensajes
conmutaci√≥n
mensajes
P32
env√≠a
archivo
tama√±o
bits
host
host
B.
hosts
enlaces
dispositivos
conmutaci√≥n
enlaces
conges-
tionados
retardos
cola
host
divide
archivo
segmen-
tos
bits
a√±ade
80
bits
cabecera
segmento
formando
paquetes
80
bits
velocidad
transmisi√≥n
enlace
bps
Calcule
valor
minimiza
retardo
transmitir
archivo
host
host
B.
retardo
propagaci√≥n
Preguntas
discusi√≥n
D1
tipos
servicios
inal√°mbricos
m√≥viles
disponibles
regi√≥n
vive
D2
Utilizando
tecnolog√≠a
LAN
inal√°mbrica
802.11
dise√±e
red
dom√©stica
casa
padres
Enumere
modelos
espec√≠ficos
productos
costes
correspondientes
red
dom√©stica
D3
Describa
servicios
Skype
PC
PC
Pruebe
servicio
v√≠deo
Skype
PC
PC
redacte
informe
narrando
experiencia
D4
Skype
ofrece
servicio
permite
llamada
telef√≥nica
PC
tel√©fono
tradicional
significa
llamada
voz
pasar
Internet
red
telef√≥nica
Explique
hacerse
D5
Servicio
mensajes
cortos
SMS
Short
Message
Service
pa√≠-
ses
continentes
popular
servicio
enviar
mensaje
SMS
sitio
web
tel√©fono
m√≥vil
D6
transmisi√≥n
flujos
v√≠deo
almacenado
sitios
web
populares
suministran
actualmente
flujos
v√≠deo
D7
flujos
P2P
v√≠deo
directo
sitios
web
populares
proporcionan
actualmente
servicio
D8
Localice
empresas
proporcionen
servicios
compartici√≥n
archivos
P2P.
empresa
tipo
archivos
trabajan
tipo
contenido
gestionan
D9
invent√≥
ICQ
servicio
mensajer√≠a
instant√°nea
inventado
edad
inventores
invent√≥
Napster
edades
ten√≠an
inventores
76
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
76D10
Compare
acceso
Internet
inal√°mbrico
WiFi
acceso
Internet
inal√°mbrico
3G.
velocidades
bit
servicios
costes
Comente
brevemente
concepto
itinerancia
ubicuidad
acceso
D11
servicio
compartici√≥n
archivos
P2P
Napster
origi-
nal
RIAA
medidas
tomando
limitar
compartici√≥n
P2P
archivos
derechos
propiedad
intelectual
diferencia
infracci√≥n
directa
indirecta
derechos
propiedad
intelectual
D12
BitTorrent
fundamentalmente
servicio
compartici√≥n
archivos
P2P
eDonkey
LimeWire
Kazaa
D13
Cree
10
a√±os
seguir√°n
comparti√©ndose
habitual
archivos
derechos
propiedad
intelectual
redes
comunicaciones
Razone
respuesta
Pr√°cticas
laboratorio
Wireshark
D√≠melo
olvidar√©
Ens√©√±amelo
recordar√©
Impl√≠came
entender√©
Proverbio
chino
comprender
protocolos
red
profundizar
enormemente
vi√©ndolos
acci√≥n
observando
ejemplo
secuencia
mensajes
intercambiados
entidades
examinando
detalles
operaci√≥n
protocolo
lle-
ven
cabo
determinadas
acciones
observando
dichas
acciones
consecuencias
hacerse
escenarios
simulados
entorno
red
real
Internet
applets
Java
disponibles
sitio
web
libro
aplican
m√©todos
laboratorio
Wireshark
aplicar√°
m√©todo
ejecutan
aplicaciones
red
diversos
escenarios
utilizando
computadora
dom√©stica
oficina
laborato-
rio
pr√°cticas
observar
protocolos
red
equipo
interactuando
inter-
cambiando
mensajes
entidades
ejecutan
punto
Internet
computadora
integral
pr√°cticas
laboratorio
observar
practicando
aprender
herramienta
b√°sica
observar
mensajes
intercambiados
entidades
ejecutan
protocolos
husmeador
paquetes
packet
sniffer
nombre
sugiere
husmeador
paquetes
copia
forma
pasiva
mensajes
enviados
recibidos
computadora
muestra
contenido
distintos
campos
protocolo
mensajes
capturados
Figura
1.29
muestra
captura
pantalla
software
Wireshark
Wireshark
husmeador
paquetes
gratuito
ejecuta
sistemas
Windows
Linux
Unix
Mac
libro
encontrar√°
pr√°cticas
laborato-
rio
Wireshark
permitir√°n
explorar
protocolos
estudiados
cap√≠tulo
pr√°ctica
laboratorio
Wireshark
instalar
copia
Wireshark
acceder
sitio
web
capturar
examinar
mensajes
protocolo
est√©n
intercambiados
navegador
web
servidor
web
encontrar
detalles
acerca
pr√°ctica
laboratorio
Wireshark
incluyendo
instrucciones
acerca
obtener
instalar
Wireshark
sitio
web
http://www.awl.com/kurose-ross
PR√ÅCTICAS
LABORATORIO
WIRESHARK
77
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
77Figura
1.29
captura
pantalla
Wireshark
78
CAP√çTULO
REDES
COMPUTADORAS
INTERNET
Men√∫
comandos
Listado
paquetes
capturados
Detalles
cabecera
paquete
seleccionado
Contenido
paquete
hexadecimal
ASCII
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
78Leonard
Kleinrock
Leonard
Kleinrock
catedr√°tico
Ciencias
Computaci√≥n
Universidad
California
√Ångeles
1969
computado-
ra
UCLA
convirti√≥
nodo
Internet
definici√≥n
principios
conmutaci√≥n
paquetes
1961
con-
virti√≥
tecnolog√≠a
basa
Internet
Recibi√≥
licenciatura
City
College
of
New
York
CCNY
t√≠tulos
m√°ster
doctor
Ingenier√≠a
El√©ctrica
MIT
ENTREVISTA
decidirse
especializarse
tecnolog√≠a
redes
Internet
estudiante
doctorado
MIT
1959
di
compa-
√±eros
clase
realizando
investigaciones
√°rea
teor√≠a
informaci√≥n
teor√≠a
codificaci√≥n
MIT
encontraba
investigador
Claude
Shannon
abierto
campos
investigaci√≥n
resuelto
problemas
impor-
tantes
problemas
investigaci√≥n
quedaban
complicados
consecuencias
importantes
decid√≠
iniciarme
√°rea
pensado
MIT
rodeado
montones
computadoras
vi
claramente
m√°quinas
necesitar√≠an
comunicarse
momento
exist√≠a
forma
efectiva
hacer-
decid√≠
desarrollar
tecnolog√≠a
permitir√≠a
crear
redes
datos
eficientes
fiables
trabajo
industria
inform√°tica
signific√≥
1951
1957
realic√©
CCNY
estudios
grado
Ingenier√≠a
El√©ctrica
turno
trabaj√©
t√©cnico
ingeniero
peque√±a
empre-
sa
electr√≥nica
industrial
llamada
Photobell
estuve
introduje
tecnolog√≠a
digital
l√≠neas
productos
B√°sicamente
utiliz√°bamos
dispositivos
fotoel√©ctricos
detectar
presencia
elementos
cajas
personas
etc.
circuito
denominaba
multivibrador
biestable
clase
tecnolog√≠a
necesit√°bamos
procesamiento
digital
campo
detecci√≥n
circuitos
resultaron
base
com-
putadoras
conocen
flip-flops
biestables
conmutadores
jerga
actual
pas√≥
cabeza
envi√≥
mensaje
host
UCLA
Instituto
Investigaci√≥n
Stanford
Francamente
ten√≠amos
idea
importancia
suceso
ten√≠amos
preparado
men-
saje
especial
pasara
historia
tantos
inventores
Samuel
Morse
Dios
Alexander
Graham
Bell
Watson
ven
necesito
Neal
Amstrong
peque√±o
paso
hombre
paso
Humanidad
tipos
inteligentes
Conoc√≠an
medios
comunicaci√≥n
sab√≠an
relaciones
p√∫blicas
quer√≠amos
iniciar
sesi√≥n
computadora
SRI
escribi-
mos
correctamente
recibido
escribimos
letra
recibida
letra
computadora
host
SRI
fallara
estrepitosamente
mensaje
corto
historia
Anteriormente
a√±o
citado
revista
UCLA
diciendo
red
estuviera
activa
funcionando
acceder
utilidades
inform√°ticas
79
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
79hogares
oficinas
f√°cilmente
disponer
electricidad
tel√©fono
visi√≥n
momento
Internet
estar√≠a
partes
funcionamiento
dispo-
nible
cualquiera
dispositivo
conectarse
lugar
invi-
sible
pude
prever
madre
99
a√±os
utilizar√≠a
Internet
realmente
uti-
liz√≥
ve
futuro
redes
f√°cil
visi√≥n
predecir
infraestructura
Preveo
veremos
considerable
implantaci√≥n
computaci√≥n
n√≥mada
dispositivos
m√≥viles
espacios
inteligentes
disponibilidad
dispositivos
inform√°ticos
ligeros
baratos
altas
prestaciones
port√°tiles
dis-
ponibilidad
dispositivos
comunicaciones
combinado
omnipresencia
Internet
permitido
convertirnos
n√≥madas
computaci√≥n
n√≥mada
referencia
tecnolog√≠a
per-
mite
usuarios
finales
lugar
obteniendo
acceso
servicios
Internet
forma
transparente
independientemente
viajen
independientemente
dispositivo
utili-
cen
complicada
visi√≥n
futuro
predecir
aplicaciones
servicios
siem-
pre
sorprendido
forma
incre√≠ble
correo
electr√≥nico
tecnolog√≠as
b√∫squeda
world-wide-
web
blogs
redes
sociales
generaci√≥n
compartici√≥n
usuarios
m√∫sica
foto-
graf√≠as
v√≠deos
etc.
encontramos
amanecer
aplicaciones
m√≥viles
sor-
prendentes
innovadoras
podremos
utilizar
dispositivos
mano
ola
permitir√°
pasar
mundo
virtual
ciberespacio
mundo
f√≠sico
espa-
cios
inteligentes
entornos
mesas
paredes
veh√≠culos
relojes
etc.
cobrar√°n
vida
tec-
nolog√≠a
actuadores
sensores
l√≥gica
procesamiento
almacenamiento
c√°maras
micr√≥fonos
altavoces
pantallas
comunicaci√≥n
tecnolog√≠a
integrada
permitir√°
entorno
proporcionar
servicios
IP
deseemos
accedamos
habitaci√≥n
habitaci√≥n
sabr√°
entrado
Podremos
comunicarnos
entorno
forma
natural
hablando
lengua
materna
solicitudes
generar√°n
respuestas
presentar√°n
p√°ginas
web
pantallas
pared
cristales
gafas
forma
texto
hablado
hologramas
etc.
Mirando
lejos
preveo
futuro
red
incluya
siguientes
componentes
adi-
cionales
fundamentales
Veo
agentes
software
inteligentes
red
cuya
funci√≥n
escarbar
datos
actuar
detectar
tendencias
cabo
tareas
forma
din√°mi-
ca
adaptativa
Preveo
cantidad
tr√°fico
red
considerablemente
generada
seres
humanos
dispositivos
integrados
agentes
software
inteli-
gentes
Preveo
conjuntos
sistemas
dotados
auto-organizaci√≥n
encargados
controlar
red
enorme
r√°pida
Preveo
enormes
cantidades
informaci√≥n
viajando
instant√°neamente
red
vi√©ndose
sometida
camino
enormes
cantida-
des
procesamiento
filtrado
Internet
esencialmente
sistema
nervioso
global
lle-
gar√°
partes
Preveo
suceder√°n
cosas
medida
vayamos
adentrando
siglo
XXI
personas
inspirado
profesionalmente
diferencia
inspirado
Claude
Shannon
MIT
brillante
investigador
capacidad
relacionar
ideas
matem√°ticas
mundo
f√≠sico
forma
extrema-
damente
intuitiva
tribunal
tesis
doctoral
consejo
estudiantes
inician
campo
redes
Internet
Internet
red
constituye
frontera
dimensiones
llena
desaf√≠os
asombrosos
oportunidades
innovaci√≥n
sentirse
restrin-
gido
tecnolog√≠a
actual
abrir
mente
imaginar
cosas
suceda
80
M01_KURO9675_05_SE_CH01.qxd
21/3/10
11:37
P√°gina
80CAP√çTULO
capa
aplicaci√≥n
81
aplicaciones
red
raz√≥n
red
computadoras
pudi√©ramos
concebir
aplicaci√≥n
√∫til
existir√≠a
necesidad
dise√±ar
protocolos
red
darlas
soporte
40
a√±os
creado
aplicaciones
red
ingenio-
sas
sorprendentes
aplicaciones
incluyen
cl√°sicas
aplicaciones
basadas
texto
populares
d√©cadas
1970
1980
correo
elec-
tr√≥nico
texto
acceso
remoto
computadoras
transferencia
archivos
grupos
noticias
chats
texto
incluye
aplicaci√≥n
excelencia
mediados
d√©cada
1990
World
Wide
Web
acompa√±ada
navegaci√≥n
web
b√∫squedas
web
comercio
electr√≥nico
citar
aplicacio-
nes
estrella
aparecidas
finales
milenio
mensajer√≠a
instant√°nea
listas
contac-
tos
compartici√≥n
archivos
P2P.
Asimismo
incluyen
aplicaciones
√©xito
audio
v√≠deo
telefon√≠a
Internet
compartici√≥n
v√≠deos
flu-
jos
v√≠deo
radio
Internet
televisi√≥n
IP
IPTV
incremento
acceso
residencial
banda
ancha
creciente
omnipresencia
acceso
inal√°mbrico
constituyen
base
excitantes
aplicaciones
esperan
futuro
cap√≠tulo
estudiar
aspectos
conceptuales
implementaci√≥n
aplicaciones
red
Comenzaremos
definiendo
conceptos
fundamentales
relativos
capa
aplicaci√≥n
incluyendo
servicios
red
requeridos
aplicaciones
clien-
tes
servidores
procesos
interfaces
capa
transporte
Examinaremos
detalle
aplicaciones
red
Web
correo
electr√≥nico
sistema
DNS
distribuci√≥n
archivos
redes
pares
P2P
Peer-to-Peer
telefon√≠a
Internet
P2P.
continuaci√≥n
ocuparemos
desarrollo
aplicaciones
red
TCP
UDP
particular
estudiaremos
API
sockets
echaremos
vistazo
aplicaciones
cliente-servidor
simples
implementadas
Java
proporcio-
naremos
cap√≠tulo
divertidas
interesantes
tareas
programaci√≥n
soc-
kets
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
81La
capa
aplicaci√≥n
lugar
particularmente
comenzar
estudio
protocolos
terreno
familiar
Habitualmente
empleamos
apli-
caciones
basan
protocolos
estudiar
dar√°
idea
adecuada
protocolos
servir√°
introducir
cuestiones
tendre-
mos
volver
estudiemos
protocolos
capas
transporte
red
enlace
2.1
Principios
aplicaciones
red
Imagine
ocurrido
idea
desarrollar
aplicaci√≥n
red
posi-
ble
aplicaci√≥n
llegue
servicio
Humanidad
simplemente
guste
profesor
haga
ganar
fortuna
√∫nicamente
divierta
desarrollarla
motivaci√≥n
continuaci√≥n
transformar
idea
aplica-
ci√≥n
red
real
B√°sicamente
desarrollo
aplicaci√≥n
red
implica
escribir
programas
ejecuten
distintos
sistemas
terminales
comuniquen
red
ejemplo
aplicaci√≥n
Web
emplean
programas
comunican
navegador
ejecuta
host
usuario
computadora
escritorio
por-
t√°til
PDA
tel√©fono
m√≥vil
etc.
programa
servidor
web
ejecuta
host
servidor
web
ejemplo
caso
sistema
compartici√≥n
archivos
P2P
emplea
programa
host
participa
comunidad
comparti-
ci√≥n
archivos
caso
programas
instalados
distintos
hosts
similares
id√©nticos
desarrollar
aplicaci√≥n
escribir
software
ejecu-
tar√°
sistemas
software
escribirse
Java
Python
cuesti√≥n
importante
necesario
escribir
software
ejecute
dispositivos
n√∫cleo
red
ejemplo
routers
switches
capa
enlace
deseara
escribir
software
aplicaci√≥n
dispositivos
n√∫cleo
red
visto
Cap√≠tulo
ilustra
Figura
1.24
dis-
positivos
n√∫cleo
red
operan
capa
aplicaci√≥n
capas
inferio-
res
espec√≠ficamente
capa
red
inferiores
dise√±o
b√°sico
confina
software
aplicaci√≥n
sistemas
terminales
muestra
Figura
2.1
facili-
tado
r√°pido
desarrollo
implementaci√≥n
cantidad
aplicaciones
red
2.1.1
Arquitecturas
aplicaciones
red
profundizar
codificaci√≥n
software
deber√≠amos
disponer
visi√≥n
general
arquitectura
aplicaci√≥n
arquitectura
apli-
caci√≥n
distinta
arquitectura
red
ejemplo
arquitectura
Internet
capas
vista
Cap√≠tulo
perspectiva
desarrollador
aplicaciones
arquitectura
red
fija
proporciona
conjunto
espec√≠fico
servi-
cios
aplicaciones
desarrollador
aplicaciones
dise√±a
arquitectura
aplicaci√≥n
terminales
seleccionar
arquitectura
aplicaci√≥n
desarrollador
probable-
mente
utilizar√°
paradigmas
arquitect√≥nicos
predominantes
aplicaciones
red
modernas
arquitectura
cliente-servidor
arquitectura
P2P.
82
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
822.1
PRINCIPIOS
APLICACIONES
RED
83
Transporte
Red
Enlace
F√≠sica
Aplicaci√≥n
ISP
nacional
globalRed
m√≥vil
ISP
local
regional
Red
empresarial
Red
dom√©stica
Transporte
Red
Enlace
Aplicaci√≥n
F√≠sica
Transporte
Red
Enlace
F√≠sica
Aplicaci√≥n
Figura
2.1
comunicaci√≥n
aplicaci√≥n
red
lugar
sistemas
terminales
capa
aplicaci√≥n
arquitectura
cliente-servidor
host
activo
denominado
servidor
servicio
solicitudes
hosts
clientes
hosts
clientes
activos
forma
intermitente
ejemplo
cl√°sico
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
83la
Web
servidor
web
activo
sirve
solicitudes
navegadores
ejecutan
hosts
clientes
servidor
web
recibe
solicitud
objeto
host
cliente
responde
envi√°ndole
objeto
solicitado
Observe
arquitec-
tura
cliente-servidor
clientes
comunican
directamente
ejemplo
aplicaci√≥n
web
navegadores
comunican
caracter√≠stica
arqui-
tectura
cliente-servidor
servidor
direcci√≥n
fija
conocida
denominada
direcci√≥n
IP
hablaremos
Puesto
servidor
direcci√≥n
fija
conocida
activo
cliente
contactar
enviando
paquete
direcci√≥n
aplicaciones
conocidas
utilizan
arquitectura
cliente-servidor
encuentran
aplicaciones
web
FTP
Telnet
correo
electr√≥nico
Figura
2.2(a
muestra
arquitectura
cliente-servidor
Normalmente
aplicaci√≥n
cliente-servidor
√∫nico
host
servidor
incapaz
responder
solicitudes
clientes
ejemplo
sitio
red
social
popu-
lar
verse
r√°pidamente
desbordado
dispone
servidor
gestionar
solicitudes
raz√≥n
arquitecturas
cliente-servidor
suele
utilizarse
agru-
paci√≥n
cluster
hosts
denomina
centro
datos
crear
servidor
virtual
capacidad
servicios
aplicaciones
basadas
arquitectura
cliente-
servidor
precisan
infraestructura
intensiva
requieren
prove-
edores
servicios
compren
instalen
mantengan
granjas
servidores
84
CAP√çTULO
CAPA
APLICACI√ìN
a.
Arquitectura
cliente-servidor
b.
Arquitectura
P2P
Figura
2.2
Arquitectura
cliente-servidor
arquitectura
P2P.
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
84proveedores
servicio
afrontar
costes
recurrentes
interconexiones
ancho
banda
enviar
datos
Internet
recibirlos
Servicios
populares
motores
b√∫squeda
ejemplo
Google
comercio
Internet
Amazon
e-Bay
correo
electr√≥nico
web
ejemplo
Yahoo
Mail
redes
sociales
MySpace
Facebook
compartici√≥n
v√≠deos
YouTube
precisan
infraestructura
intensiva
suministro
enormemente
costoso
arquitectura
P2P
m√≠nima
dependencia
infraes-
tructura
servidores
activos
lugar
aplicaci√≥n
explota
comunicaci√≥n
directa
parejas
hosts
conectados
forma
intermitente
conocidos
peers
pares
pares
propiedad
proveedor
servicio
computa-
doras
escritorio
port√°tiles
controlados
usuarios
encontr√°ndose
mayor√≠a
pares
domicilios
universidades
oficinas
Puesto
pares
comunican
pasar
servidor
dedicado
arquitectura
denomina
arquitectura
peer-to-peer
P2P
aplicaciones
actuales
populares
elevado
nivel
tr√°fico
basadas
arquitecturas
P2P.
aplicaciones
incluyen
distribuci√≥n
archi-
vos
ejemplo
BitTorrent
compartici√≥n
archivos
eMule
LimeWire
telefon√≠a
Internet
Skype
IPTV
PPLive
Figura
2.2(b
ilustra
arquitectura
P2P.
mencionado
aplicaciones
arquitecturas
h√≠bri-
das
combinan
elementos
cliente-servidor
P2P.
ejemplo
aplicaciones
mensajer√≠a
instant√°nea
servidores
utilizan
seguimiento
direc-
ciones
IP
usuarios
mensajes
usuario
usuario
env√≠an
directamente
hosts
dichos
usuarios
pasar
servidores
intermedios
caracter√≠sticas
convincentes
arquitecturas
P2P
auto-escala-
bilidad
ejemplo
aplicaci√≥n
compartici√≥n
archivos
P2P
peer
genera
carga
trabajo
solicitando
archivos
a√±ade
capacidad
servicio
sis-
tema
distribuyendo
archivos
peers
arquitecturas
P2P
presentan
relaci√≥n
coste-prestaciones
normalmente
requieren
infraestructura
servidores
significativa
ancho
banda
servidor
reducir
costes
pro-
veedores
servicios
MSN
Yahoo
etc.
interesados
emplear
arquitecturas
P2P
aplicaciones
Chuang
2007
futuras
aplicaciones
P2P
enfrentan
retos
importantes
Orientadas
ISP
mayor√≠a
ISP
residenciales
incluyendo
ISP
l√≠neas
DSL
cable
dimensionados
asim√©trico
ancho
banda
soporte
tr√°fico
descarga
carga
aplica-
ciones
P2P
distribuci√≥n
archivos
flujos
v√≠deo
desplazan
tr√°fico
carga
servidores
ISP
residenciales
ejerciendo
consecuencia
pre-
si√≥n
ISP
aplicaciones
P2P
futuras
dise√±adas
pensando
ISP
Xie
2008
Seguridad
naturaleza
extremadamente
distribuida
abierta
aplicacio-
nes
P2P
reto
seguridad
Doucer
2002
Yu
2006
Liang
2006
Naoumov
2006
Dhungel
2008
Incentivos
√©xito
aplicaciones
P2P
futuras
depende
convencer
usuarios
ofrecer
voluntariamente
aplicaciones
recursos
ancho
banda
almacenamiento
computaci√≥n
constituye
reto
dise√±o
incenti-
vos
Feldman
2005
Piatek
2008
Aperjis
2008
2.1
PRINCIPIOS
APLICACIONES
RED
85
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
852.1.2
Procesos
comunicaci√≥n
crear
aplicaci√≥n
red
necesita
disponer
conocimientos
b√°si-
cos
programas
ejecutan
sistemas
terminales
comunican
jerga
sistemas
operativos
realmente
programas
procesos
comunican
proceso
interpretarse
programa
ejecuta
sistema
terminal
procesos
ejecutan
sistemas
terminal
comunicarse
comunicaci√≥n
procesos
aplicando
reglas
gobernadas
sistema
operativo
sistema
terminal
libro
esta-
mos
especialmente
interesados
comunican
procesos
lugar
host
comunican
procesos
ejecutan
hosts
sistemas
operativos
potencialmente
procesos
sistemas
terminales
comunican
intercam-
biando
mensajes
red
computadoras
proceso
emisor
crea
env√≠a
men-
sajes
red
proceso
receptor
recibe
mensajes
posiblemente
responde
devolviendo
mensajes
Figura
2.1
ilustra
procesos
comunican
utili-
zando
capa
aplicaci√≥n
pila
protocolos
capas
Procesos
cliente
servidor
aplicaci√≥n
red
consta
parejas
procesos
env√≠an
mensajes
red
ejemplo
aplicaci√≥n
web
proceso
navegador
cliente
intercam-
bia
mensajes
proceso
servidor
web
sistema
compartici√≥n
archivos
P2P
transfiere
archivo
proceso
peer
proceso
par
Normal-
mente
pareja
procesos
comunic√°ndose
etiquetamos
proce-
sos
cliente
servidor
aplicaci√≥n
web
navegador
proceso
cliente
servidor
web
proceso
servidor
compartici√≥n
archivos
P2P
host
descarga
archivo
etiqueta
cliente
host
cargando
archivo
etiqueta
servidor
observado
aplicaciones
tales
compartici√≥n
archivos
P2P
proceso
cliente
servidor
proceso
sistema
compartici√≥n
archivos
P2P
cargar
descargar
archivos
obstante
contexto
sesi√≥n
comunicaci√≥n
pareja
procesos
etique-
tar
procesos
cliente
servidor
Definimos
procesos
cliente
servidor
contexto
sesi√≥n
comunicaci√≥n
pareja
procesos
proceso
inicia
comunicaci√≥n
inicialmente
pone
contacto
proceso
principio
sesi√≥n
etiqueta
cliente
proceso
espera
contactado
comenzar
sesi√≥n
servidor
Web
proceso
navegador
inicia
contacto
proceso
servidor
web
proceso
navegador
cliente
proceso
servidor
web
servidor
compartici√≥n
archivos
P2P
par
pide
par
env√≠e
determinado
archivo
cliente
servidor
contexto
sesi√≥n
comunicaci√≥n
concreta
tipo
confusi√≥n
ocasiones
emple-
aremos
terminolog√≠a
cliente
servidor
aplicaci√≥n
cap√≠tulo
examinaremos
c√≥digo
simple
cliente
servidor
aplicaciones
red
86
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
86Interfaz
proceso
red
computadoras
mencionado
anteriormente
mayor√≠a
aplicaciones
constan
parejas
procesos
comunicaci√≥n
env√≠an
mensajes
mensaje
enviado
proceso
atravesar
red
subyacente
proceso
env√≠a
mensajes
red
recibe
red
interfaz
software
denominada
socket
Veamos
analo-
g√≠a
ayudar√°
comprender
conceptos
proceso
socket
proceso
an√°logo
casa
socket
an√°logo
puerta
casa
proceso
desea
enviar
mensaje
proceso
ejecutando
host
env√≠a
mensaje
puerta
socket
proceso
emisor
supone
infraestructura
transporte
puerta
llevar√°
mensaje
puerta
proceso
destino
mensaje
llega
host
destino
pasa
puerta
socket
proceso
receptor
actuando
proceso
receptor
mensaje
Figura
2.3
ilustra
comunicaci√≥n
sockets
procesos
comu-
nican
Internet
Figura
2.3
supone
protocolo
transporte
subya-
cente
utilizado
procesos
protocolo
TCP
Internet
muestra
figura
socket
interfaz
capa
aplicaci√≥n
capa
transporte
host
conoce
Interfaz
programaci√≥n
aplicaciones
API
Application
Programming
Interface
opera
aplicaci√≥n
red
socket
inter-
faz
programaci√≥n
construyen
aplicaciones
red
desarrollador
aplicaci√≥n
control
elementos
capa
aplicaci√≥n
socket
control
capa
transporte
socket
√∫nico
control
desarrollador
aplicaci√≥n
capa
transporte
elecci√≥n
protocolo
transporte
capacidad
fijar
par√°-
metros
capa
transporte
ejemplo
tama√±os
m√°ximo
buffer
seg-
mento
veremos
Cap√≠tulo
desarrollador
aplicaci√≥n
seleccionado
protocolo
transporte
disponibles
elegir
aplicaci√≥n
crea
utilizando
servicios
capa
transporte
proporcionados
protocolo
Secciones
2.7
2.8
exploraremos
detalle
sockets
2.1
PRINCIPIOS
APLICACIONES
RED
87
Proceso
Host
servidor
Host
servidor
Controlado
desarrollador
aplicaciones
Controlado
desarrollador
aplicaciones
Proceso
TCP
buffers
variables
Internet
Controlado
sistema
operativo
Controlado
sistema
operativo
TCP
buffers
variables
Socket
Socket
Figura
2.3
Procesos
aplicaci√≥n
sockets
protocolo
transporte
subyacente
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
872.1.3
Servicios
transporte
disponibles
aplicaciones
Recordemos
socket
interfaz
proceso
aplicaci√≥n
protocolo
capa
transporte
aplicaci√≥n
emisor
empuja
mensajes
socket
socket
protocolo
capa
transporte
responsabili-
dad
mensajes
puerta
socket
recepci√≥n
redes
incluyendo
Internet
proporcionan
protocolo
capa
transporte
desarrollar
aplicaci√≥n
elegir
protoco-
capa
transporte
disponibles
cabo
selecci√≥n
probable-
mente
estudiar
servicios
ofrecen
protocolos
capa
transporte
disponibles
elegir
protocolo
proporcione
servicios
adapten
necesidades
aplicaci√≥n
situaci√≥n
similar
elegir
viajar
tren
avi√≥n
ciudad
elegir
trans-
porte
ofrece
servicios
ejemplo
tren
ofrece
llegar
centro
ciudades
avi√≥n
ofrece
tiempo
viaje
corto
servicios
ofrecer
protocolo
capa
transporte
aplicaciones
invocan
clasificar
posibles
servicios
forma
general
par√°metros
transferencia
datos
fiable
tasa
transferencia
tempo-
rizaci√≥n
seguridad
Transferencia
datos
fiable
explicado
Cap√≠tulo
red
computadoras
perderse
paque-
tes
ejemplo
paquete
desbordar
buffer
router
descartado
host
router
comprobar
bits
corrompidos
aplicaciones
correo
electr√≥nico
transferencia
archivos
acceso
remoto
hosts
transferencia
documentos
web
aplicaciones
financieras
p√©r-
dida
datos
consecuencias
catastr√≥ficas
caso
banco
cliente
soporte
aplicaciones
preciso
garantizar
datos
enviados
terminal
aplicaci√≥n
entre-
gados
correcta
completamente
terminal
aplicaci√≥n
protocolo
propor-
ciona
servicio
entrega
datos
garantizado
proporciona
transferencia
datos
fiable
servicio
importante
protocolo
capa
trans-
porte
potencialmente
proporcionar
aplicaci√≥n
transferencia
datos
fiable
proceso
proceso
protocolo
transporte
suministra
servicio
proceso
emisor
pasar
datos
socket
certidumbre
absoluta
datos
llega-
r√°n
errores
proceso
receptor
protocolo
capa
transporte
proporciona
transferencia
datos
fia-
ble
datos
enviados
proceso
emisor
llegar
proceso
recep-
ci√≥n
aceptable
aplicaciones
tolerantes
p√©rdidas
ejemplo
aplicaciones
multimedia
audio
v√≠deo
tiempo
real
audio
v√≠deo
almacenado
tolerar
cantidad
datos
pierda
apli-
caciones
multimedia
p√©rdida
datos
lugar
peque√±a
interrupci√≥n
reproducir
audio
v√≠deo
constituye
problema
fundamental
88
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
88Tasa
transferencia
Cap√≠tulo
presentado
concepto
tasa
transferencia
disponible
trasladar
contexto
sesi√≥n
comunicaciones
procesos
ruta
red
tasa
proceso
emisor
suministrar
bits
proceso
recepci√≥n
Puesto
sesiones
compartir√°n
ancho
banda
ruta
red
puesto
sesiones
iniciar√°n
terminar√°n
aleatoriamente
tasa
transferencia
disponible
fluctuar
tiempo
observaciones
llevan
servicio
protocolo
capa
transporte
proporcionar
tasa
transfe-
rencia
disponible
garantizada
velocidad
especificada
servicio
apli-
caci√≥n
solicitar
tasa
transferencia
garantizada
bits
protocolo
transporte
garantizar
tasa
transferencia
disponible
bits
servicio
ofreciera
tasa
transferencia
garantizada
resultar√≠a
atractivo
aplicaciones
ejemplo
aplicaci√≥n
telefon√≠a
Internet
codifica
voz
32
kbps
enviar
datos
red
entregar
datos
aplicaci√≥n
receptora
velocidad
protocolo
transporte
pro-
porcionar
tasa
transferencia
aplicaci√≥n
codificaci√≥n
velocidad
menor
recibir
tasa
transferencia
adecuada
mantener
velocidad
codificaci√≥n
lenta
renunciar
puesto
recibir
mitad
tasa
transferencia
necesaria
utilidad
aplicaci√≥n
telefon√≠a
Internet
aplicaciones
requisitos
tasa
transferencia
conocen
aplicaciones
sensibles
ancho
banda
aplicaciones
multimedia
actuales
sensibles
ancho
banda
emplear
t√©cnicas
codifica-
ci√≥n
adaptativa
codificaci√≥n
velocidad
adapte
tasa
trans-
ferencia
disponible
actualmente
aplicaciones
sensibles
ancho
banda
cumplir
requisitos
espec√≠ficos
tasa
transferencia
aplicaciones
el√°sticas
tasa
transferencia
disponible
correo
electr√≥nico
transfe-
rencia
archivos
transferencias
web
aplicaciones
el√°sticas
tasa
transferencia
Temporizaci√≥n
protocolo
capa
transporte
proporcionar
garant√≠as
temporiza-
ci√≥n
tasas
transferencia
garantizadas
garant√≠as
temporizaci√≥n
darse
diversas
formas
ejemplo
garant√≠a
bit
emisor
empuja
socket
llegue
socket
receptor
100
milisegun-
servicio
atractivo
aplicaciones
interactivas
tiempo
real
telefon√≠a
Internet
entornos
virtuales
teleconferencia
juegos
multijugador
requieren
restricciones
temporizaci√≥n
estrictas
entrega
datos
efectivas
V√©ase
Cap√≠tulo
Gauthier
1999
Ramjee
1994
ejemplo
retardos
largos
telefon√≠a
Internet
tienden
lugar
pausas
antinaturales
conversaci√≥n
juego
multijugador
entorno
virtual
interactivo
retardo
realizaci√≥n
acci√≥n
visualizaci√≥n
respuesta
entorno
ejemplo
jugador
extremo
conexi√≥n
extremo
extremo
aplicaci√≥n
parezca
realista
aplicaciones
ejecu-
tiempo
real
preferible
retardo
peque√±o
aplican
restricciones
estrictas
retardos
extremo
extremo
2.1
PRINCIPIOS
APLICACIONES
RED
89
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
89Seguridad
protocolo
transporte
proporcionar
aplicaci√≥n
servi-
cios
seguridad
ejemplo
host
emisor
protocolo
transporte
cifrar
datos
transmitidos
proceso
emisor
host
receptor
descifrar
datos
entregarlos
proceso
receptor
servicio
proporcionar
confiden-
cialidad
procesos
datos
observados
procesos
emisor
receptor
protocolo
transporte
proporcio-
nar
servicios
seguridad
confidencialidad
mecanismos
garantizar
integridad
datos
mecanismos
autenticaci√≥n
punto
terminal
temas
abordaremos
detalle
Cap√≠tulo
2.1.4
Servicios
transporte
proporcionados
Internet
momento
considerado
servicios
transporte
red
computa-
doras
proporcionar
general
Seamos
espec√≠ficos
examine-
mos
tipo
soporte
Internet
proporciona
aplicaciones
Internet
forma
general
redes
TCP
IP
pone
disposici√≥n
aplicaciones
protocolos
trans-
porte
UDP
TCP
desarrollador
aplicaciones
cree
aplicaci√≥n
red
Internet
primeras
decisiones
tomar
utilizar
UDP
TCP
protocolos
ofrece
conjunto
servicios
aplica-
ciones
invocan
Figura
2.4
detalla
requisitos
servicio
aplica-
ciones
seleccionadas
Servicios
TCP
modelo
servicio
TCP
incluye
servicio
orientado
conexi√≥n
servicio
transferencia
datos
fiable
aplicaci√≥n
invoca
TCP
protocolo
transporte
aplicaci√≥n
recibe
servicios
TCP
Aplicaci√≥n
P√©rdida
datos
Ancho
banda
Sensible
tiempo
Transferencia
archivos
p√©rdidas
El√°stica
Corre
electr√≥nico
p√©rdidas
El√°stica
Documentos
web
p√©rdidas
El√°stica
kbps
Telefon√≠a
Internet/
Tolerante
Audio
kbps‚Äì1
Mbps
d√©cimas
Videoconferencia
p√©rdidas
V√≠deo
10
kbps‚Äì5
Mbps
Audio
v√≠deo
almacenado
Tolerante
segundos
p√©rdidas
Juegos
interactivos
Tolerante
kbps‚Äì10
kbps
d√©cimas
segundos
p√©rdidas
Mensajer√≠a
instant√°nea
p√©rdidas
El√°stica
Figura
2.4
Requisitos
aplicaciones
red
seleccionadas
90
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
90‚Ä¢
Servicio
orientado
conexi√≥n
TCP
cliente
servidor
intercambien
informaci√≥n
control
capa
transporte
empiecen
fluir
mensajes
nivel
aplicaci√≥n
procedimiento
denominado
negociaci√≥n
reconocimiento
establecimiento
conexi√≥n
alerta
cliente
servidor
permi-
ti√©ndoles
prepararse
intercambio
paquetes
fase
negocia-
ci√≥n
conexi√≥n
TCP
sockets
procesos
conexi√≥n
conexi√≥n
full-duplex
procesos
enviarse
mensajes
conexi√≥n
tiempo
aplicaci√≥n
terminado
enviar
mensajes
necesario
desactivar
conexi√≥n
servicio
orien-
tado
conexi√≥n
lugar
servicio
conexi√≥n
procesos
conectados
forma
laxa
Cap√≠tulo
examinaremos
servicios
orienta-
conexi√≥n
veremos
implementan
Servicio
transferencia
datos
fiable
procesos
comunicaci√≥n
confiar
TCP
entregar
datos
enviados
errores
orden
correcto
aplicaci√≥n
pasa
flujo
bytes
socket
contar
TCP
entregar
flujo
bytes
socket
receptor
p√©rdida
duplicaci√≥n
bytes
TCP
incluye
mecanismo
control
congesti√≥n
servicio
mejorar
funcionamiento
general
Internet
beneficio
directo
pro-
cesos
comunican
mecanismo
control
congesti√≥n
TCP
regula
proceso
emisor
cliente
servidor
red
congestionada
emisor
receptor
explica
Cap√≠tulo
control
congesti√≥n
TCP
intenta
limitar
conexi√≥n
TCP
utilice
cuota
equitativa
ancho
banda
red
regulaci√≥n
velocidad
transmisi√≥n
efectos
da√±inos
aplica-
ciones
audio
v√≠deo
tiempo
real
requisitos
m√≠nimos
tasa
transferencia
aplicaciones
tiempo
real
tolerantes
p√©rdidas
nece-
sitan
servicio
transporte
completamente
fiable
razones
desarrolladores
aplicaciones
tiempo
real
deciden
ejecutar
aplicaciones
utilizando
pro-
tocolo
UDP
lugar
TCP
Servicios
UDP
UDP
protocolo
transporte
ligero
simple
proporciona
servicios
m√≠nimos
orientado
conexi√≥n
lugar
procedimiento
negociaci√≥n
procesos
comiencen
comunicarse
UDP
proporciona
servicio
transferencia
datos
fiable
proceso
env√≠a
mensaje
socket
UDP
protocolo
UDP
ofrece
garant√≠a
mensaje
llegar
pro-
ceso
receptor
mensajes
llegan
proceso
receptor
desordenada
UDP
incluye
mecanismo
control
congesti√≥n
emisor
UDP
introducir
datos
capa
inferior
capa
red
velocidad
parezca
observar
tasa
transferencia
extremo
extremo
real
menor
velocidad
causa
ancho
banda
limitado
enlaces
inter-
vinientes
causa
congesti√≥n
Puesto
aplicaciones
tiempo
real
tolerar
p√©rdidas
requieren
velocidad
m√≠nima
efectivas
desarrolladores
aplicaciones
ocasiones
deciden
ejecutarlas
usando
UDP
sosla-
yando
mecanismos
control
congesti√≥n
sobrecarga
gesti√≥n
paquetes
TCP
cortafuegos
configurados
bloquear
2.1
PRINCIPIOS
APLICACIONES
RED
91
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
91todos
tipos
tr√°fico
UDP
dise√±adores
decidiendo
frecuente-
mente
ejecutar
aplicaciones
multimedia
tiempo
real
TCP
Sripanidkulchai
2004
Servicios
proporcionados
protocolos
transporte
Internet
organizado
posibles
servicios
protocolo
transporte
par√°me-
tros
transferencia
datos
fiable
tasa
transferencia
temporizaci√≥n
seguridad
servicios
proporcionan
TCP
UDP
mencionado
TCP
proporciona
transferencia
datos
extremo
extremo
fiable
TCP
mejorar
f√°cilmente
capa
aplicaci√≥n
SSL
proporcionar
servicios
seguri-
dad
descripci√≥n
TCP
UDP
omitido
notoriamente
men-
ci√≥n
garant√≠as
relativas
tasa
transferencia
temporizaci√≥n
servicios
proporcionan
protocolos
transporte
Internet
Significa
aplicaciones
sensibles
tiempo
telefon√≠a
Internet
ejecutar
actual-
mente
Internet
Evidentemente
respuesta
Internet
a√±os
albergando
aplicaciones
sensibles
tiempo
aplicaciones
suelen
funcionar
dise√±adas
frente
falta
garant√≠as
forma
92
CAP√çTULO
CAPA
APLICACI√ìN
TCP
SEGURO
TCP
UDP
proporcionan
mecanismo
cifrado
datos
proceso
emisor
pasa
socket
datos
viajan
red
proceso
destino
ejemplo
proceso
emisor
env√≠a
contrase√±a
texto
legible
cifrada
socket
contrase√±a
viajar√°
enlaces
emisor
receptor
pudiendo
husmeada
descubierta
cualquiera
enlaces
intervinientes
Puesto
confidencialidad
cuestiones
seguridad
cr√≠ticas
aplicaciones
comunidad
Internet
desarrollado
mejora
TCP
denominada
SSL
Secure
Sockets
Layer
Capa
conectores
seguros
TCP
mejorado
SSL
protocolo
TCP
tradicional
proporcio-
na
servicios
cr√≠ticos
seguridad
proceso
proceso
incluyen
mecanismos
cifrado
integridad
datos
autenticaci√≥n
punto
terminal
Debemos
destacar
SSL
tercer
protocolo
transporte
Internet
nivel
TCP
UDP
mejora
TCP
implementa
capa
aplicaci√≥n
concreto
aplicaci√≥n
desea
utilizar
servicios
SSL
incluir
c√≥digo
SSL
clases
librer√≠as
enormemente
optimizadas
cliente
servidor
aplicaci√≥n
SSL
API
sockets
similar
API
sockets
protocolo
TCP
tradicional
aplicaci√≥n
utiliza
SSL
proceso
emisor
pasa
datos
texto
legible
socket
SSL
continuaci√≥n
SSL
cifra
datos
host
emisor
pasa
socket
TCP
datos
cifrados
viajan
Internet
socket
TCP
proceso
receptor
socket
recepci√≥n
pasa
datos
cifrados
SSL
descifra
SSL
pasa
datos
texto
legible
socket
proceso
receptor
Cap√≠tulo
cubre
detalle
SSL
SEGURIDAD
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
92Aplicaci√≥n
Protocolo
capa
Protocolo
transporte
aplicaci√≥n
subyacente
Correo
electr√≥nico
SMTP
RFC
5321
TCP
Acceso
remoto
terminal
Telnet
RFC
854
TCP
Web
HTTP
RFC
2616
TCP
Transferencia
archivos
FTP
RFC
959
TCP
Flujos
multimedia
HTTP
ejemplo
YouTube
RTP
TCP
UDP
Telefon√≠a
Internet
SIP
RTP
proprietario
ejemplo
Skype
T√≠picamente
UDP
Figura
2.5
Aplicaciones
populares
Internet
protocolos
capa
aplicaci√≥n
protocolos
transporte
subyacentes
Cap√≠tulo
veremos
trucos
dise√±o
obstante
dise√±o
inteli-
gente
limitaciones
retardo
excesivo
suele
ocurrir
caso
Internet
p√∫blica
resumen
actualmente
Internet
ofrecer
servicios
satisfactorios
aplicaciones
sensibles
tiempo
proporcionar
garant√≠a
ancho
banda
temporizaci√≥n
Figura
2.5
enumera
protocolos
transporte
utilizados
aplicaciones
populares
Internet
Veremos
aplicaciones
correo
electr√≥nico
acceso
remoto
terminales
Web
transferencia
archivos
utilizan
TCP
aplicaciones
elegido
TCP
principalmente
protocolo
ofrece
servicio
transferencia
datos
fiable
garantizando
datos
llegar√°n
finalmente
destino
visto
normalmente
telefon√≠a
Internet
ejecuta
UDP
aplicaci√≥n
telefon√≠a
Internet
necesita
enviar
datos
red
velocidad
m√≠nima
v√©ase
audio
tiempo
real
Figura
2.4
pro-
bablemente
UDP
TCP
aplicaciones
telefon√≠a
Internet
tolerantes
p√©rdidas
datos
necesitan
servicio
transferencia
datos
fiable
proporcionado
TCP
Direccionamiento
procesos
momento
centrado
servicios
transporte
existentes
procesos
comunican
indica
proceso
proceso
desea
comuni-
carse
utilizando
servicios
especifica
proceso
ejecuta
host
situado
Amherst
Massachusetts
Unidos
desea
comunicarse
deter-
minado
proceso
ejecut√°ndose
host
ubicado
Bangkok
Tailandia
iden-
tificar
proceso
recepci√≥n
especificarse
elementos
informaci√≥n
nombre
direcci√≥n
host
identificador
especifique
proceso
recep-
ci√≥n
host
destino
Internet
host
identifica
direcci√≥n
IP
Cap√≠tulo
veremos
detalle
direcciones
IP
momento
necesitamos
direc-
ci√≥n
IP
magnitud
32
bits
identifica
forma
un√≠voca
host
veremos
Cap√≠tulo
extendida
implantaci√≥n
traductores
direcciones
2.1
PRINCIPIOS
APLICACIONES
RED
93
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
93de
red
NAT
Network
Address
Translators
pr√°ctica
√∫nica
direc-
ci√≥n
IP
32
bits
defina
host
direcci√≥n
host
destinado
mensaje
host
emi-
sor
identificar
proceso
recepci√≥n
ejecut√°ndose
host
informaci√≥n
necesaria
general
host
ejecutando
aplica-
ciones
red
n√∫mero
puerto
destino
sirve
prop√≥sito
aplicaciones
popu-
lares
asignados
n√∫meros
puerto
espec√≠ficos
ejemplo
servidor
web
queda
identificado
n√∫mero
puerto
80
proceso
servidor
correo
utilice
protocolo
SMTP
identifica
n√∫mero
puerto
25
encontrar
lista
n√∫meros
puerto
conocidos
protocolos
est√°ndar
Internet
http://www.iana.org
desarrollador
crea
aplicaci√≥n
red
asignarse
n√∫mero
puerto
Examinaremos
n√∫meros
puerto
detalle
Cap√≠tulo
2.1.5
Protocolos
capa
aplicaci√≥n
Acabamos
aprender
procesos
red
comunican
enviando
mensajes
sockets
estructurados
mensajes
significado
campos
mensajes
env√≠an
procesos
mensajes
pre-
guntas
llevan
√°mbito
protocolos
capa
aplicaci√≥n
protocolo
capa
aplicaci√≥n
define
procesos
aplicaci√≥n
ejecutan
distintos
sistemas
terminales
pasan
mensajes
particular
protocolo
capa
aplicaci√≥n
define
‚Ä¢L
respuesta
‚Ä¢L
mensaje
delimitan
campos
‚Ä¢L
campos
‚Ä¢L
protocolos
capa
aplicaci√≥n
especificados
documentos
RFC
dominio
p√∫blico
ejemplo
protocolo
capa
aplicaci√≥n
Web
HTTP
HyperText
Transfer
Protocol
RFC
2616
disponible
RFC
navegador
web
reglas
dadas
RFC
ocupa
HTTP
navegador
recuperar
p√°ginas
web
servidor
web
ajuste
RFC
protocolos
capa
aplicaci√≥n
propietarios
inten-
cionadamente
disponibles
mundo
ejemplo
siste-
compartici√≥n
archivos
P2P
existentes
utilizan
protocolos
capa
aplicaci√≥n
propietarios
importante
diferenciar
aplicaciones
red
protocolos
capa
aplica-
ci√≥n
protocolo
capa
aplicaci√≥n
√∫nicamente
elemento
aplicaci√≥n
red
Veamos
par
ejemplos
Web
aplicaci√≥n
cliente-servidor
permite
usuarios
obtener
documentos
almacenados
servidores
web
demanda
Web
consta
componentes
incluyen
est√°ndar
formatos
documentos
HTML
navegadores
web
Firefox
Microsoft
Internet
Explo-
94
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
94rer
servidores
web
ejemplo
servidores
Apache
Microsoft
protocolo
capa
aplicaci√≥n
protocolo
capa
aplicaci√≥n
Web
HTTP
define
formato
secuencia
mensajes
pasan
navegador
web
servidor
web
HTTP
pieza
pieza
importante
aplicaci√≥n
web
ejemplo
aplicaci√≥n
correo
electr√≥nico
Internet
constituida
componentes
incluyen
servidores
correo
albergan
buzones
usuarios
lectores
correo
permiten
usuarios
leer
crear
men-
sajes
est√°ndar
definir
estructura
mensajes
correo
electr√≥nico
pro-
tocolos
capa
aplicaci√≥n
definen
pasan
mensajes
servidores
pasan
mensajes
servidores
lectores
correo
interpretan
contenidos
partes
mensajes
ejemplo
cabe-
cera
principal
protocolo
capa
aplicaci√≥n
correo
electr√≥nico
proto-
colo
SMTP
Simple
Mail
Transfer
Protocol
Protocolo
simple
transferencia
correo
RFC
5321
protocolo
SMTP
componente
componente
importante
aplicaci√≥n
correo
electr√≥nico
2.1.6
Aplicaciones
red
libro
desarrollan
aplicaciones
Internet
dominio
p√∫blico
propietarias
lugar
abordar
n√∫mero
aplicaciones
Internet
enciclopedia
decidido
centrarnos
aplicaciones
dominantes
impor-
tantes
cap√≠tulo
abordaremos
aplicaciones
importantes
Web
transferencia
archivos
correo
electr√≥nico
servicio
directorio
P2P.
lugar
veremos
Web
aplicaci√≥n
enormemente
popular
protocolo
capa
aplicaci√≥n
HTTP
sencillo
f√°cil
comprender
apli-
caci√≥n
pasaremos
examinar
brevemente
FTP
proporciona
contraste
HTTP
continuaci√≥n
veremos
aplicaci√≥n
correo
electr√≥nico
aplicaci√≥n
popular
Internet
correo
electr√≥nico
complejo
Web
sentido
utiliza
protocolos
capa
aplicaci√≥n
continuaci√≥n
abordaremos
sistema
DNS
proporciona
servicio
directorio
Internet
mayor√≠a
usuarios
interact√∫an
directamente
DNS
lugar
invocan
indirectamente
DNS
aplicaciones
incluyen
aplicaciones
web
transferencia
archivos
correo
electr√≥nico
DNS
ilustra
implementarse
capa
aplicaci√≥n
Internet
elemento
funcionalidad
red
b√°sica
traducci√≥n
nombre
red
direcci√≥n
red
veremos
aplicaciones
P2P
distribuci√≥n
archivos
bases
datos
distribuidas
telefon√≠a
IP
2.2
Web
HTTP
principios
d√©cada
1990
Internet
utilizada
principalmente
investigado-
res
profesores
estudiantes
universitarios
acceder
hosts
remotos
transferir
archivos
hosts
locales
hosts
remotos
viceversa
recibir
enviar
noticias
mensa-
jes
correo
electr√≥nico
aplicaciones
contin√∫an
extremada-
mente
√∫tiles
Internet
pr√°cticamente
desconocida
comunidades
acad√©micas
dedicadas
investigaci√≥n
principios
d√©cada
1990
aplicaci√≥n
importante
apareci√≥
escena
World
Wide
Web
Berners-Lee
1994
2.2
WEB
HTTP
95
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
95La
Web
aplicaci√≥n
Internet
atrajo
atenci√≥n
p√∫blico
general
Cambi√≥
dram√°tica
contin√∫a
cambiando
forma
personas
interac-
t√∫an
entornos
trabajo
Internet
pasar√°
redes
datos
pr√°cticamente
√∫nica
red
datos
atrae
mayor√≠a
usuarios
Web
opera
demanda
usuarios
reciben
desean
desean
radio
televi-
si√≥n
fuerza
usuarios
sintonizar
programas
proveedor
contenido
disponible
contenido
disponible
demanda
Web
disfruta
maravillosas
funciones
mundo
gustan
indivi-
duo
tremendamente
f√°cil
publicar
informaci√≥n
Web
mundo
conver-
tirse
editor
costes
extremadamente
bajos
hiperv√≠nculos
motores
b√∫squeda
ayudan
navegar
oc√©ano
sitios
web
gr√°ficos
estimulan
sentidos
formularios
applets
Java
dispositivos
per-
miten
interactuar
p√°ginas
sitios
Web
proporciona
interfaz
men√∫s
cantidades
material
audio
v√≠deo
almacenado
Internet
mate-
rial
multimedia
demanda
2.2.1
Introducci√≥n
HTTP
Protocolo
transferencia
hipertexto
HTTP
HyperText
Transfer
Protocol
pro-
tocolo
capa
aplicaci√≥n
Web
coraz√≥n
Web
defi-
nido
documentos
RFC
1945
RFC
2616
HTTP
implementa
programas
programa
cliente
programa
servidor
programa
cliente
programa
servidor
ejecutan
sistemas
terminales
comunican
intercambiando
mensajes
HTTP
HTTP
define
estructura
mensajes
cliente
servidor
intercambian
mensajes
explicar
detalle
HTTP
repaso
terminolog√≠a
Web
p√°gina
web
denominada
documento
web
consta
objetos
objeto
simplemente
archivo
ejemplo
archivo
HTML
imagen
JPEG
applet
Java
clip
v√≠deo
direccionarse
√∫nico
URL
mayo-
r√≠a
p√°ginas
web
constituidas
archivo
base
HTML
objetos
refe-
renciados
ejemplo
p√°gina
web
contiene
texto
HTML
im√°genes
JPEG
p√°gina
web
contiene
objetos
archivo
base
HTML
im√°genes
archivo
base
HTML
referencia
objetos
contenidos
p√°gina
URL
objetos
URL
componentes
nombre
host
servidor
alberga
objeto
nombre
ruta
objeto
ejemplo
URL
http://www.unaEscuela.edu/unDepartmento/imagen.gif
www.unaEscuela.edu
corresponde
nombre
host
/unDepartmento
imagen
gif
nombre
ruta
Puesto
navegadores
web
Internet
Explorer
Firefox
implementan
cliente
HTTP
contexto
Web
utilizaremos
t√©rminos
navegador
cliente
forma
indistinta
servidores
web
implementan
servidor
HTTP
albergan
objetos
web
direccionable
URL
servidores
web
populares
incluyen
Apache
Microsoft
Internet
Information
Server
HTTP
define
clientes
web
solicitan
p√°ginas
web
servidores
web
servidores
transfieren
p√°ginas
web
clientes
veremos
inte-
96
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
96Figura
2.6
Comportamiento
solicitud-respuesta
HTTP
racci√≥n
cliente
servidor
detalle
idea
general
ilustra
Figura
2.6
usuario
solicita
p√°gina
web
ejemplo
clic
hiperv√≠n-
culo
navegador
env√≠a
servidor
mensajes
solicitud
HTTP
objetos
conteni-
p√°gina
servidor
recibe
solicitudes
responde
mensajes
respuesta
HTTP
contienen
objetos
HTTP
utiliza
TCP
protocolo
transporte
subyacente
lugar
ejecutarse
UDP
cliente
HTTP
inicia
conexi√≥n
TCP
servidor
conexi√≥n
establecido
procesos
navegador
servidor
acce-
den
TCP
interfaces
socket
descrito
Secci√≥n
2.1
cliente
interfaz
socket
puerta
proceso
cliente
conexi√≥n
TCP
servidor
puerta
proceso
servidor
conexi√≥n
TCP
cliente
env√≠a
mensajes
solicitud
HTTP
interfaz
socket
recibe
mensajes
res-
puesta
HTTP
procedentes
interfaz
socket
forma
similar
servidor
HTTP
recibe
mensajes
solicitud
interfaz
socket
env√≠a
mensajes
respuesta
interfaz
socket
cliente
env√≠a
mensaje
interfaz
socket
mensaje
deja
manos
cliente
pasa
manos
TCP
visto
Secci√≥n
2.1
TCP
proporciona
servicio
transferencia
datos
fia-
ble
HTTP
implica
mensaje
solicitud
HTTP
enviado
proceso
cliente
llegar√°
intacto
servidor
mensaje
respuesta
HTTP
enviado
proceso
servidor
llegar√°
intacto
cliente
venta-
jas
arquitectura
capas
HTTP
preocuparse
p√©rdidas
datos
detalles
TCP
recupera
datos
perdidos
reordena
red
trabajo
TCP
protocolos
capas
inferiores
pila
proto-
colos
importante
observar
servidor
env√≠a
archivos
solicitados
clientes
almacenar
informaci√≥n
acerca
cliente
determinado
cliente
pide
objeto
espacio
tiempo
segundos
servidor
responde
diciendo
acaba
servir
objeto
cliente
lugar
servidor
reenv√≠a
objeto
olvidado
completo
anteriormente
servidor
HTTP
mantiene
informaci√≥n
acerca
clientes
HTTP
protocolo
memoria
Debemos
destacar
Web
utiliza
arqui-
Solicitud
HTTP
Respuesta
HTTP
Respuesta
HTTP
Solicitud
HTTP
PC
ejecutando
Internet
Explorer
Linux
ejecutando
Firefox
Servidor
ejecutando
servidor
web
Apache
2.2
WEB
HTTP
97
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
97tectura
aplicaci√≥n
cliente-servidor
explicado
Secci√≥n
2.1
servidor
web
activo
direcci√≥n
IP
fija
servicio
solicitudes
procedentes
potencialmente
millones
navegadores
distintos
2.2.2
Conexiones
persistentes
persistentes
aplicaciones
Internet
cliente
servidor
comunicaci√≥n
periodo
tiempo
amplio
cliente
serie
solicitudes
servidor
res-
pondiendo
dichas
solicitudes
Dependiendo
aplicaci√≥n
est√©
empleando
aplicaci√≥n
solicitudes
hacerse
peri√≥dicamente
intervalos
regu-
lares
forma
intermitente
interacci√≥n
cliente-servidor
lugar
TCP
desarrollador
aplicaci√≥n
tomar
decisi√≥n
importante
deber√≠a
par
solicitud
respuesta
enviarse
conexi√≥n
TCP
separada
deber√≠an
enviarse
solicitudes
correspondientes
respuestas
cone-
xi√≥n
TCP
utiliza
m√©todo
aplicaci√≥n
utiliza
conexiones
persistentes
emplea
opci√≥n
conexiones
persistentes
profundizar
cuesti√≥n
dise√±o
examinar
ventajas
des-
ventajas
conexiones
persistentes
contexto
aplicaci√≥n
espec√≠fica
ejemplo
HTTP
utilizar
tipos
conexi√≥n
HTTP
emplea
conexiones
persistentes
defecto
clientes
servidores
HTTP
configurar
emplear
lugar
conexiones
persistentes
HTTP
conexiones
persistentes
Sigamos
pasos
permiten
transferir
p√°gina
web
servidor
cliente
caso
conexiones
persistentes
Supongamos
p√°gina
consta
archivo
base
HTML
10
im√°genes
JPEG
residiendo
11
objetos
servidor
Suponga-
mos
URL
archivo
base
HTML
http://www.unaEscuela.edu/unDepartmento/home.index
ocurre
proceso
cliente
HTTP
inicia
conexi√≥n
TCP
servidor
www.unaEscuela.edu
puerto
n√∫mero
80
n√∫mero
puerto
defecto
HTTP
Asociados
conexi√≥n
TCP
socket
cliente
socket
servidor
cliente
HTTP
env√≠a
mensaje
solicitud
HTTP
servidor
socket
mensaje
solicitud
incluye
nombre
ruta
/unDepartmento
home.index
veremos
detalle
mensajes
HTTP
proceso
servidor
HTTP
recibe
mensaje
solicitud
socket
recupera
objeto
/unDepartmento
home.index
almacenamiento
RAM
disco
encapsula
objeto
mensaje
respuesta
HTTP
env√≠a
cliente
tra-
v√©s
socket
proceso
servidor
HTTP
indica
TCP
cierre
conexi√≥n
TCP
TCP
real-
mente
termina
conexi√≥n
seguro
cliente
recibido
men-
saje
respuesta
perfecto
cliente
HTTP
recibe
mensaje
respuesta
conexi√≥n
TCP
termina
mensaje
indica
objeto
encapsulado
archivo
HTML
cliente
extrae
archivo
98
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
98mensaje
respuesta
examina
archivo
HTML
localiza
referencias
10
obje-
tos
JPEG
pasos
repiten
objetos
JPEG
refe-
renciados
navegador
recibe
p√°gina
web
muestra
usuario
navegadores
distin-
tos
interpretar
mostrar
usuario
p√°gina
web
formas
distintas
HTTP
cliente
interpreta
p√°gina
web
especificaciones
HTTP
RFC
1945
RFC
2616
√∫nicamente
definen
protocolo
comunicaci√≥n
programa
HTTP
cliente
programa
HTTP
servidor
pasos
anteriores
ilustran
conexiones
persistentes
cone-
xi√≥n
TCP
cierra
servidor
env√≠e
objeto
conexi√≥n
mantiene
restantes
objetos
Observe
conexi√≥n
TCP
transporta
exactamente
men-
saje
solicitud
mensaje
respuesta
ejemplo
usuario
solicita
p√°gina
web
generan
11
conexiones
TCP
pasos
descritos
anteriormente
intencionadamente
vagos
respecta
cliente
obtiene
im√°genes
JPEG
conexiones
serie
TCP
dichas
im√°genes
obtienen
conexiones
TCP
paralelo
usuarios
configurar
navegadores
modernos
controlar
grado
paralelismo
modos
defecto
mayor√≠a
navegadores
abren
10
cone-
xiones
TCP
paralelo
conexiones
gestiona
transacci√≥n
solicitud-res-
puesta
usuario
prefiere
n√∫mero
m√°ximo
conexiones
paralelo
establecerse
cuyo
caso
establecer√°n
conexiones
serie
veremos
cap√≠tulo
conexiones
paralelo
reduce
tiempo
respuesta
continuar
c√°lculo
aproximado
estimar
cantidad
tiempo
transcurre
cliente
solicita
archivo
base
HTML
recibe
archivo
completo
definimos
tiempo
ida
vuelta
RTT
Round-Trip
Time
tiempo
tarda
paquete
peque√±o
viajar
cliente
servidor
volver
cliente
tiempo
RTT
incluye
retardos
propagaci√≥n
paque-
tes
retardos
cola
routers
switches
intermedios
retardos
procesa-
miento
paquetes
retardos
explican
Secci√≥n
1.4
Consideremos
ocurre
usuario
clic
hiperv√≠nculo
muestra
Figura
2.7
navegador
inicie
conexi√≥n
TCP
navegador
servidor
web
implica
proceso
fases
cliente
env√≠a
peque√±o
seg-
mento
TCP
servidor
servidor
reconoce
responde
peque√±o
segmento
TCP
cliente
devuelve
mensaje
reconocimiento
servidor
primeras
partes
proceso
fases
tardan
periodo
tiempo
RTT
completarse
primeras
fases
negociaci√≥n
cliente
env√≠a
conexi√≥n
TCP
mensaje
solicitud
HTTP
combinado
negociaci√≥n
mensaje
reconocimiento
mensaje
solicitud
llega
servidor
env√≠a
archivo
HTML
conexi√≥n
TCP
mensaje
solicitud
respuesta
HTTP
consume
periodo
tiempo
RTT
tiempo
respuesta
RTT
tiempo
transmisi√≥n
archivo
HTML
servidor
HTTP
conexiones
persistentes
conexiones
persistentes
presentan
inconvenientes
lugar
establecerse
mantenerse
conexi√≥n
completamente
objeto
soli-
2.2
WEB
HTTP
99
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
99Figura
2.7
C√°lculo
aproximado
tiempo
necesario
solicitar
recibir
archivo
HTML
citado
conexiones
asignarse
buffers
TCP
variables
TCP
mantenerse
cliente
servidor
sobrecargar
forma
significativa
servidor
web
sirviendo
solicitudes
cientos
clientes
distintos
simult√°neamente
lugar
explicado
objeto
sufre
retardo
entrega
RTT
RTT
establecer
conexi√≥n
TCP
RTT
solicitar
recibir
objeto
conexiones
persistentes
servidor
deja
conexi√≥n
TCP
abierta
enviar
respuesta
subsiguientes
solicitudes
respuestas
lugar
cliente
servidor
enviarse
conexi√≥n
concreto
p√°gina
web
completa
ejemplo
archivo
base
HTML
10
im√°genes
enviar
conexi√≥n
TCP
persistente
p√°ginas
web
residan
servidor
enviarse
servidor
cliente
√∫nica
conexi√≥n
TCP
persistente
solicitudes
objetos
reali-
zarse
esperar
obtener
respuestas
solicitudes
pendientes
pipeli-
ning
procesamiento
cadena
Normalmente
servidor
HTTP
cierra
conexi√≥n
utilizado
tiempo
intervalo
temporizaci√≥n
confi-
gurable
servidor
recibe
solicitudes
env√≠a
objetos
defecto
HTTP
utiliza
conexiones
persistentes
procesamiento
cadena
problemas
repaso
Cap√≠tulos
compararemos
cuantitativamente
ren-
dimiento
conexiones
persistentes
persistentes
animamos
con-
sulte
Heidemann
1997
Nielsen
1997
Tiempo
cliente
Tiempo
servidor
Inicio
conexi√≥n
TCP
RTT
Solicitud
archivo
RTT
Recepci√≥n
archivo
completo
Tiempo
invertido
transmitir
archivo
100
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
1002.2.3
Formato
mensajes
HTTP
especificaciones
HTTP
RFC
2616
incluyen
definiciones
formatos
mensajes
HTTP
continuaci√≥n
estudiar
tipos
mensajes
HTTP
existen-
tes
mensajes
solicitud
mensajes
respuesta
Mensaje
solicitud
HTTP
Ac
Pt
GET
/unadireccion
pagina.html
HTTP/1.1
Host
www.unaescuela.edu
Connection
close
User-agent
Mozilla/4.0
Accept-language
fr
aprender
cosas
miramos
detalle
sencillo
mensaje
solici-
tud
lugar
comprobar
mensaje
escrito
texto
ASCII
nor-
persona
conocimientos
inform√°ticos
leerlo
lugar
vemos
mensaje
consta
l√≠neas
seguida
retorno
carro
salto
l√≠nea
l√≠nea
seguida
retorno
carro
salto
l√≠nea
adicionales
mensaje
concreto
formado
l√≠neas
men-
saje
solicitud
constar
l√≠neas
√∫nicamente
l√≠nea
mensaje
solicitud
HTTP
denomina
l√≠nea
solicitudy
siguientes
l√≠neas
l√≠neas
cabecera
l√≠nea
solicitud
consta
campos
campo
m√©todo
campo
URL
campo
versi√≥n
HTTP
campo
especifica
m√©todo
tomar
valores
incluyen
GET
POST
HEAD
PUT
DELETE
inmensa
mayor√≠a
mensajes
solicitud
HTTP
utilizan
m√©todo
GET
m√©todo
emplea
navegador
solicita
objeto
identificando
objeto
campo
URL
ejemplo
navegador
solicitando
objeto
/unadi-
reccion
pagina
html
campo
correspondiente
versi√≥n
explica
ejemplo
navegador
utiliza
versi√≥n
HTTP/1.1
Analicemos
l√≠neas
cabecera
ejemplo
l√≠nea
cabecera
Host
www.unaescuela.edu
especifica
host
reside
objeto
pensarse
l√≠nea
cabecera
innecesaria
puesto
conexi√≥n
TCP
activa
host
veremos
Secci√≥n
2.2.5
cach√©s
proxy
web
necesitan
informa-
ci√≥n
proporcionada
l√≠nea
cabecera
host
incluir
l√≠nea
cabecera
Con-
nection
close
navegador
diciendo
servidor
desea
molestarse
trabajar
conexiones
persistentes
desea
servidor
cierre
conexi√≥n
des-
pu√©s
enviar
objeto
solicitado
l√≠nea
cabecera
User-agent
especifica
agente
usuario
tipo
navegador
solicitud
servidor
caso
agente
usuario
Mozilla/4.0
navegador
Netscape
l√≠nea
cabecera
resulta
√∫til
servidor
enviar
versiones
objeto
dis-
tintos
tipos
agentes
usuario
URL
direcciona
versiones
l√≠nea
cabecera
Accept-language
indica
usuario
prefiere
recibir
versi√≥n
franc√©s
objeto
objeto
servidor
caso
contrario
ser-
vidor
enviar√°
versi√≥n
defecto
l√≠nea
cabecera
Accept-language
cabeceras
negociaci√≥n
contenido
disponibles
HTTP
2.2
WEB
HTTP
101
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
101Figura
2.8
Formato
general
mensaje
solicitud
HTTP
visto
ejemplo
estudiar
formato
general
mensaje
soli-
citud
Figura
2.8
comprobar
formato
general
similar
usado
ejemplo
f√≠jese
l√≠neas
cabecera
retorno
carro
salto
l√≠nea
adicionales
incluye
cuerpo
entidad
campo
queda
vac√≠o
utiliza
m√©todo
GET
m√©todo
POST
cliente
HTTP
utiliza
m√©todo
POSTcuando
usuario
completa
formula-
rio
ejemplo
especifica
t√©rminos
b√∫squeda
utilizando
motor
b√∫squeda
mensaje
POST
usuario
solicita
p√°gina
web
servidor
contenido
concreto
depender√°
usuario
escrito
campos
formulario
valor
campo
m√©todo
POST
cuerpo
entidad
con-
usuario
introducido
campos
formulario
Ser√≠amos
descuidados
dij√©ramos
solicitud
generada
formulario
necesariamente
utiliza
m√©todo
POST
lugar
formularios
HTML
emplean
m√©todo
GETe
incluyen
datos
entrada
especificados
campos
for-
mulario
URL
solicitado
ejemplo
formulario
emplea
m√©todo
GETy
campos
entradas
campos
monkeys
bananas
URL
estructura
www.unsitio.com/animalsearch?monkeys&bananas
Probable-
mente
navegar
Web
visto
direcciones
URL
tipo
m√©todo
HEADes
similar
m√©todo
GET
servidor
recibe
solicitud
m√©todo
HEAD
responde
mensaje
HTTP
excluye
objeto
solicitado
desarrolladores
aplicaciones
utilizan
m√©todo
HEAD
labores
depura-
ci√≥n
m√©todo
PUT
suele
utilizarse
herramientas
publicaci√≥n
web
per-
mite
usuario
cargar
objeto
ruta
espec√≠fica
directorio
servidor
web
determinado
aplicaciones
necesitan
cargar
objetos
servidores
web
emplean
m√©todo
PUT
m√©todo
DELETE
permite
usuario
aplicaci√≥n
borrar
objeto
servidor
web
Mensajes
respuesta
HTTP
continuaci√≥n
proporcionamos
mensaje
respuesta
HTTP
t√≠pico
mensaje
res-
puesta
respuesta
mensaje
solicitud
ejemplo
acabamos
m√©todo
sp
sp
cr
lf
cr
lfNombre
campo
cabecera
L√≠neas
cabecera
L√≠nea
blanco
Cuerpo
entidad
L√≠nea
solicitud
valor
sp
cr
lf
cr
lf
Nombre
campo
cabecera
valor
sp
URL
Versi√≥n
102
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
102HTTP/1.1
200
OK
Connection
close
Date
Sat
07
Jul
2007
12:00:15
GMT
Server
Apache/1.3.0
Unix
Last-Modified
Sun
May
2007
09:23:24
GMT
Content-Length
6821
Content-Type
text
html
datos
datos
datos
datos
datos
Examinemos
detenidamente
mensaje
respuesta
secciones
l√≠nea
inicial
l√≠neas
cabecera
cuerpo
entidad
cuerpo
entidad
importante
mensaje
contiene
objeto
solicitado
representado
l√≠nea
datos
datos
datos
datos
datos
l√≠nea
contiene
campos
especifica
versi√≥n
protocolo
correspondiente
c√≥digo
contiene
mensaje
explicativo
correspondiente
ejemplo
l√≠nea
indica
servidor
utilizando
HTTP/1.1
correcto
OK
servidor
encontrado
enviando
objeto
solicitado
Veamos
l√≠neas
cabecera
servidor
utiliza
l√≠nea
Connection
close
indicar
cliente
cerrar
conexi√≥n
TCP
enviar
mensaje
l√≠nea
cabecera
Date
indica
hora
fecha
cre√≥
respuesta
HTTP
enviada
servidor
Observe
especifica
hora
objeto
creado
modificado
hora
servidor
recupera
objeto
sistema
archivos
inserta
objeto
mensaje
respuesta
env√≠a
l√≠nea
cabecera
Server
indica
mensaje
generado
servidor
web
Apache
an√°loga
l√≠nea
cabecera
User-agent
mensaje
solicitud
HTTP
l√≠nea
Last-Modi-
fied
especifica
hora
fecha
objeto
creado
modificado
l√≠nea
cabecera
Last-Modified
estudiaremos
detalle
resulta
fun-
damental
almacenamiento
cach√©
objeto
cliente
local
servidores
almacenamiento
cach√©
red
conocidos
servidores
proxy
l√≠nea
Content-Length
especifica
n√∫mero
bytes
objeto
enviado
l√≠nea
Content-Type
indica
objeto
especificado
cuerpo
entidad
texto
HTML
tipo
objeto
indicado
oficialmente
l√≠nea
cabe-
cera
Content-Type
extensi√≥n
archivo
visto
ejemplo
pasar
examinar
formato
general
mensaje
respuesta
mostrado
Figura
2.9
formato
general
mensaje
res-
puesta
corresponde
ejemplo
Comentaremos
cosas
acerca
c√≥digos
descripciones
c√≥digo
frase
asociada
indican
resultado
solicitud
c√≥digos
frases
asociadas
200
OK
solicitud
ejecutado
√©xito
devuelto
informaci√≥n
mensaje
respuesta
301
Moved
Permanently
objeto
solicitado
movido
forma
permanente
URL
especifica
l√≠nea
cabecera
Location
mensaje
respuesta
software
cliente
recuperar√°
autom√°ticamente
URL
400
Bad
Request
c√≥digo
error
gen√©rico
indica
solicitud
comprendida
servidor
2.2
WEB
HTTP
103
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
103Figura
2.9
Formato
general
mensaje
respuesta
HTTP
404
Not
Found
documento
solicitado
servidor
505
HTTP
Version
Not
Supported
versi√≥n
protocolo
HTTP
solicitada
soportada
servidor
gustar√≠a
mensaje
respuesta
HTTP
real
recomendable
ade-
f√°cil
lugar
establezca
conexi√≥n
Telnet
servidor
web
favorito
continuaci√≥n
escriba
mensaje
solicitud
l√≠nea
obtener
objeto
est√©
almacenado
servidor
ejemplo
acceso
l√≠nea
coman-
prompt
escriba
telnet
cis.poly.edu
80
GET
/~ross/
HTTP/1.1
Host
cis.poly.edu
Pulse
tecla
retorno
carro
escribir
l√≠nea
abre
conexi√≥n
TCP
puerto
80
host
cis.poly.eduy
env√≠a
men-
saje
solicitud
HTTP
Deber√≠a
mensaje
respuesta
incluya
archivo
base
HTML
p√°gina
inicial
profesor
Ross
simplemente
l√≠neas
mensaje
HTTP
recibir
objeto
sustituya
GET
HEAD
sustituya
/~ross/
/~banana
f√≠jese
tipo
mensaje
respuesta
recibe
secci√≥n
visto
serie
l√≠neas
cabecera
utilizarse
mensajes
HTTP
solicitud
respuesta
especificaci√≥n
HTTP
define
n√∫mero
l√≠neas
cabecera
insertadas
navegadores
servidores
web
servidores
almacenamiento
cach√©
red
cubierto
√∫nicamente
peque√±a
totalidad
disponible
l√≠neas
cabecera
continuaci√≥n
veremos
Secci√≥n
2.2.5
hablar
almacenamiento
cach√©s
web
red
leer
exposici√≥n
enormemente
clara
comprensible
acerca
protocolo
HTTP
incluyendo
cabeceras
c√≥digos
Krishnamurty
2001
consulte
tam-
bi√©n
Luotonen
1998
exposici√≥n
punto
vista
desarrollador
versi√≥n
sp
sp
cr
lf
cr
lfnombre
campo
cabecera
L√≠neas
cabecera
L√≠nea
blanco
Cuerpo
entidad
L√≠nea
valor
cr
sp
sp
lf
cr
lf
nombre
campo
cabecera
valor
c√≥digo
frase
104
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
104¬øC√≥mo
decide
navegador
l√≠neas
cabecera
incluir
mensaje
solicitud
decide
servidor
web
l√≠neas
cabecera
incluir
mensaje
respuesta
navegador
generar√°
l√≠neas
cabecera
funci√≥n
tipo
versi√≥n
navegador
ejemplo
navegador
HTTP/1.0
generar√°
l√≠nea
cabecera
correspon-
diente
versi√≥n
1.1
configuraci√≥n
navegador
usuario
ejem-
plo
idioma
preferido
navegador
actualmente
cach√©
versi√≥n
objeto
posiblemente
desactualizada
servidores
web
comportan
forma
similar
productos
versiones
configuraciones
influyen
l√≠neas
cabe-
cera
incluir√°n
mensajes
respuesta
2.2.4
Interacci√≥n
usuario-servidor
cookies
mencionado
anteriormente
servidor
HTTP
memoria
conexi√≥n
simplifica
dise√±o
servidor
permitido
ingenieros
desarrollar
servidores
web
alto
rendimiento
gestionar
miles
conexiones
TCP
simult√°-
neas
sitio
web
deseable
identificar
usuarios
servidor
desea
restringir
acceso
usuarios
desea
servir
con-
funci√≥n
identidad
usuario
prop√≥sitos
HTTP
utiliza
cookies
cookies
definidas
documento
RFC
2965
permiten
sitios
seguir
pista
usuarios
Actualmente
mayor√≠a
sitios
web
comerciales
importantes
utilizan
cookies
muestra
Figura
2.10
tecnolog√≠a
cookies
utiliza
compo-
nentes
l√≠nea
cabecera
cookie
mensaje
respuesta
HTTP
l√≠nea
cabecera
cookie
mensaje
solicitud
HTTP
archivo
cookies
almacenado
sistema
terminal
usuario
gestionado
navegador
usuario
base
datos
back-end
sitio
web
Bas√°ndonos
Figura
2.10
ejemplo
funcionan
cookies
Suponga
Susana
accede
Web
utilizando
Internet
Explorer
PC
casa
entra
Amazon.com
Supongamos
anteriormente
visitado
sitio
eBay
solicitud
llega
servidor
web
Amazon
servidor
crea
n√∫mero
identificaci√≥n
√∫nico
crea
entrada
base
datos
back-end
indexada
n√∫mero
identificaci√≥n
servidor
web
Amazon
responde
navegador
Susana
incluyendo
respuesta
HTTP
l√≠nea
cabecera
Set-cookie
contiene
n√∫mero
identifica-
ci√≥n
ejemplo
l√≠nea
cabecera
Set-cookie
1678
navegador
Susana
recibe
mensaje
respuesta
HTTP
ve
cabecera
Set-cookie
navegador
a√±ade
l√≠nea
archivo
especial
cookies
l√≠nea
incluye
nombre
host
servidor
n√∫mero
identificaci√≥n
cabe-
cera
Set-cookie
Observe
archivo
cookies
entrada
eBay
Susana
visitado
sitio
medida
Susana
contin√∫a
navegando
sitio
Amazon
solicita
p√°gina
web
navegador
consulta
archivo
cookies
extrae
n√∫mero
identificaci√≥n
sitio
a√±ade
cabecera
cookie
incluye
n√∫mero
identificaci√≥n
solicitud
HTTP
Espe-
c√≠ficamente
solicitudes
HTTP
servidor
Amazon
incluyen
l√≠nea
cabecera
Cookie
1678
2.2
WEB
HTTP
105
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
105Figura
2.10
Mantenimiento
usuario
cookies
forma
servidor
Amazon
seguir
actividad
Susana
sitio
Aun-
sitio
web
Amazon
necesariamente
conoce
nombre
Susana
exacta-
mente
p√°ginas
visitado
usuario
n√∫mero
1678
orden
Amazon
utiliza
cookies
proporcionar
servicio
carro
compra
Amazon
mantener
lista
compras
Susana
pagarlas
juntas
sesi√≥n
Susana
vuelve
sitio
Amazon
ejemplo
semana
navegador
continuar√°
incluyendo
l√≠nea
cabecera
Cookie
1678
mensajes
solicitud
Amazon
recomienda
productos
Susana
bas√°ndose
p√°ginas
web
visi-
tado
anteriormente
sitio
Susana
registra
Amazon
proporcionando
nombre
completo
direcci√≥n
correo
electr√≥nico
direcci√≥n
postal
informaci√≥n
tarjeta
cr√©dito
Amazon
incluir
informaci√≥n
base
datos
aso-
ciando
nombre
Susana
n√∫mero
identificaci√≥n
p√°ginas
106
CAP√çTULO
CAPA
APLICACI√ìN
Host
cliente
Host
servidor
mensaje
usual
solicitud
http
mensaje
usual
respuesta
http
usual
Set-cookie
1678mensaje
usual
solicitud
http
cookie
1678
mensaje
usual
respuesta
http
mensaje
usual
solicitud
http
cookie
1678
mensaje
usual
respuesta
http
Tiempo
semana
ebay
8734
servidor
crea
ID
1678
usuario
Tiempo
Archivo
cookies
Clave
amazon
1678
ebay
8734
amazon
1678
ebay
8734
Acci√≥n
cookie
espec√≠fica
acceso
acceso
entrada
base
datos
back-end
Acci√≥n
cookie
espec√≠fica
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
106visitado
sitio
Amazon
sitios
comercio
elec-
tr√≥nico
proporcionan
servicio
compra
clic
Susana
desee
comprar
producto
visita
posterior
volver
escribir
nombre
n√∫mero
tarjeta
cr√©dito
direcci√≥n
afirmar
cookies
utilizarse
identificar
usua-
rio
usuario
visita
sitio
usuario
proporcionar
identi-
ficaci√≥n
posiblemente
nombre
sesiones
posteriores
navegador
pasa
cabecera
cookie
servidor
identificando
usuario
servidor
coo-
kies
utilizarse
crear
capa
sesi√≥n
protocolo
HTTP
memoria
conexi√≥n
ejemplo
usuario
inicia
sesi√≥n
aplicaci√≥n
correo
electr√≥nico
basada
Web
ejemplo
Hot-
mail
navegador
env√≠a
servidor
informaci√≥n
cookie
permitiendo
servidor
identificar
usuario
sesi√≥n
usuario
mantenga
aplicaci√≥n
cookies
simplifican
usuarios
realizaci√≥n
compras
Internet
controvertidas
considerarse
invasi√≥n
intimidad
usuario
acabamos
empleando
combinaci√≥n
cookies
informaci√≥n
cuentas
suministrada
usuario
sitio
web
obtener
informaci√≥n
usuario
potencialmente
vender
informaci√≥n
empre-
sas
Cookie
Central
Cookie
Central
2008
proporciona
informaci√≥n
acerca
controversia
cookies
2.2.5
Almacenamiento
cach√©
web
cach√©
web
denominada
servidor
proxy
entidad
red
satisface
solicitudes
HTTP
nombre
servidor
web
origen
cach√©
web
dispone
almacenamiento
disco
mantiene
copias
objetos
solicitados
recien-
temente
muestra
Figura
2.11
navegador
usuario
configu-
rar
solicitudes
HTTP
dirijan
lugar
cach√©
web
ejemplo
suponga
navegador
solicitando
objeto
http://www.unaEs-
cuela.edu/campus.gif
Veamos
ocurre
Figura
2.11
Clientes
solicitan
objetos
cach√©
web
Solicitud
HTTP
Respuesta
HTTP
Solicitud
HTTP
Respuesta
HTTP
Solicitud
HTTP
Respuesta
HTTP
Solicitud
HTTP
Respuesta
HTTP
Cliente
Servidor
origen
Servidor
origen
Cliente
Servidor
proxy
2.2
WEB
HTTP
107
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
1071
navegador
establece
conexi√≥n
TCP
cach√©
web
env√≠a
solicitud
HTTP
objeto
cach√©
web
cach√©
web
comprueba
copia
objeto
almacenada
localmente
cach√©
web
devuelve
objeto
mensaje
respuesta
HTTP
nave-
gador
cliente
cach√©
web
objeto
abre
conexi√≥n
TCP
servidor
origen
www.unaEscuela.edu
cach√©
web
env√≠a
solicitud
HTTP
obtener
objeto
conexi√≥n
TCP
cach√©-servidor
recibir
solicitud
servidor
origen
env√≠a
objeto
mensaje
respuesta
HTTP
cach√©
web
cach√©
web
recibe
objeto
almacena
copia
dispositivo
almace-
namiento
local
env√≠a
copia
mensaje
respuesta
HTTP
navega-
dor
cliente
conexi√≥n
TCP
existente
navegador
cliente
cach√©
web
Observe
cach√©
servidor
cliente
recibe
solicitudes
env√≠a
respuestas
navegador
comporta
servidor
env√≠a
solicitudes
recibe
respuestas
servidor
origen
act√∫a
cliente
Habitualmente
ISP
adquiere
instala
cach√©
web
ejemplo
uni-
versidad
instalar
cach√©
red
campus
configurar
navegadores
campus
apuntando
cach√©
ISP
residencial
tama√±o
AOL
instalar
cach√©s
red
preconfigurar
navegadores
suministre
apunten
cach√©s
instaladas
almacenamiento
cach√©
web
implantado
Internet
razones
pri-
mera
raz√≥n
cach√©
web
reducir
sustancialmente
tiempo
respuesta
solicitud
cliente
especialmente
ancho
banda
cuello
botella
cliente
servidor
origen
menor
ancho
banda
cuello
botella
cliente
cach√©
conexi√≥n
alta
velocidad
cliente
cach√©
ocurre
cach√©
objeto
solicitado
suministrar
objeto
r√°pidamente
cliente
raz√≥n
ilustraremos
ejemplo
cach√©s
web
reducir
sustancialmente
tr√°fico
enlace
acceso
Internet
instituci√≥n
Reduciendo
tr√°fico
instituci√≥n
ejemplo
empresa
universidad
mejorar
ancho
banda
r√°pidamente
implica
reducci√≥n
costes
cach√©s
web
reducir
tr√°fico
web
glo-
bal
Internet
mejorando
consecuencia
rendimiento
aplicaciones
adquirir
conocimiento
profundo
ventajas
cach√©s
ejemplo
contexto
ilustrado
Figura
2.12
figura
muestra
redes
red
ins-
titucional
resto
red
p√∫blica
Internet
red
institucional
LAN
alta
velo-
cidad
router
red
institucional
router
Internet
conectados
enlace
15
Mbps
servidores
origen
conectados
Internet
encuentran
distribuidos
mundo
Suponga
tama√±o
objeto
Mbits
tasa
media
solicitudes
navegadores
instituci√≥n
servidores
ori-
gen
15
solicitudes
Suponga
mensajes
solicitud
HTTP
extremadamente
peque√±os
crean
tr√°fico
redes
enlace
acceso
router
institucional
router
Internet
Suponga
tiempo
tarda
reenviar
solicitud
HTTP
contenida
datagrama
IP
router
Internet
enlace
acceso
Figura
2.12
recibe
respuesta
108
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
108(normalmente
contenida
datagramas
IP
segundos
Informalmente
denominar
retardo
retardo
Internet
tiempo
respuesta
tiempo
navegador
solicita
objeto
recibe
suma
retardo
LAN
retardo
acceso
retardo
routers
retardo
Internet
Hagamos
burdo
c√°lculo
estimar
retardo
intensidad
tr√°fico
LAN
v√©ase
Secci√≥n
1.4.2
15
solicitudes
seg
/H11080(1
Mbits
solicitud)/(100
Mbps
0,15
intensidad
tr√°fico
enlace
acceso
router
Internet
router
instituci√≥n
15
solicitudes
seg
/H11080(1
Mbits
solicitud)/(15
Mbps
intensidad
tr√°fico
0,15
LAN
normalmente
resultados
m√°ximo
decenas
milisegundos
retardo
despreciar
retardo
LAN
visto
Secci√≥n
1.4.2
intensidad
tr√°fico
aproxima
caso
enlace
acceso
Figura
2.12
retardo
enlace
comienza
aumentar
crece
l√≠mite
tiempo
respuesta
satisfa-
cer
solicitudes
orden
minutos
inaceptable
usua-
rios
instituci√≥n
Evidentemente
necesario
Figura
2.12
Cuello
botella
red
institucional
Internet
Internet
p√∫blica
Red
institucional
Enlace
acceso
15
Mbps
LAN
100
Mbps
Servidores
origen
2.2
WEB
HTTP
109
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
109Figura
2.13
Adici√≥n
cach√©
red
institucional
soluci√≥n
incrementar
velocidad
acceso
15
Mbps
ejemplo
100
Mbps
disminuir√°
intensidad
tr√°fico
enlace
acceso
0,15
traduce
retardos
despreciables
routers
caso
tiempo
res-
puesta
segundos
retardo
Internet
soluci√≥n
implica
instituci√≥n
actualizar
enlace
acceso
15
Mbps
100
Mbps
resulta
soluci√≥n
cara
Consideremos
soluci√≥n
alternativa
actualizar
enlace
acceso
lugar
instalar
cach√©
web
red
institucional
soluci√≥n
ilustra
Figura
2.13
tasas
acierto
fracci√≥n
solicitudes
satisfechas
cach√©
suelen
comprendidas
pr√°ctica
0,2
0,7
prop√≥sitos
ilustrativos
supongamos
cach√©
proporciona
tasa
acierto
0,4
instituci√≥n
clientes
cach√©
conectados
LAN
alta
velocidad
40
ciento
solicitudes
satisfechas
forma
inmediata
10
milisegun-
cach√©
obstante
restante
60
ciento
solicitudes
satisfechas
servidores
origen
60
ciento
objetos
solicitados
atravesando
enlace
acceso
intensidad
tr√°fico
reduce
1,0
0,6
T√≠picamente
intensidad
tr√°fico
menor
0,8
corresponde
retardo
peque√±o
digamos
decenas
milisegundos
enlace
15
Mbps
retardo
despreciable
comparado
segundos
retardo
Internet
Teniendo
retardo
Internet
p√∫blica
Red
institucional
Enlace
acceso
15
Mbps
Cach√©
institucional
LAN
100
Mbps
Servidores
origen
110
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
1100,4
/H11080(0,01
segundos
0,6
/H11080(2,01
segundos
1,2
segundos
soluci√≥n
proporciona
tiempo
respuesta
menor
requiere
instituci√≥n
actualice
enla-
ce
Internet
instituci√≥n
comprar
instalar
cach√©
web
coste
cach√©s
utilizan
software
dominio
p√∫blico
ejecu-
ta
computadoras
PC
baratas
2.2.6
GET
condicional
almacenamiento
cach√©
reducir
tiempos
respuesta
percibidos
usuario
introduce
problema
copia
objeto
reside
cach√©
desactualizada
palabras
objeto
almacenado
servidor
web
modificado
copia
almacenada
cach√©
cliente
Afortunada-
mente
HTTP
dispone
mecanismo
permite
cach√©
verificar
objetos
actualizados
mecanismo
denomina
GET
condicional
mensaje
solici-
tud
HTTP
denomina
mensaje
GET
condicional
mensaje
solicitud
utiliza
m√©todo
GET
mensaje
solicitud
incluye
l√≠nea
cabecera
If-
Modified-Since
ilustrar
opera
GET
condicional
veamos
ejemplo
lugar
cach√©
proxy
env√≠a
mensaje
solicitud
servidor
web
nombre
navegador
realiza
solicitud
GET
/fruit
kiwi.gif
HTTP/1.1
Host
www.exotiquecuisine.com
lugar
servidor
web
env√≠a
cach√©
mensaje
respuesta
objeto
solicitado
HTTP/1.1
200
OK
Date
Sat
Jul
2007
15:39:29
Server
Apache/1.3.0
Unix
Last-Modified
Wed
Jul
2007
09:23:24
Content-Type
image
gif
datos
datos
datos
datos
datos
cach√©
reenv√≠a
objeto
navegador
solicitado
almacena
local-
mente
importante
cach√©
almacena
fecha
modifi-
caci√≥n
objeto
tercer
lugar
semana
navegador
solicita
objeto
cach√©
objeto
almacenado
Puesto
objeto
modificado
servidor
web
transcurso
semana
cach√©
realiza
comprobaci√≥n
actualizaci√≥n
ejecutando
GET
condicio-
nal
Espec√≠ficamente
cach√©
env√≠a
GET
/fruit
kiwi.gif
HTTP/1.1
Host
www.exotiquecuisine.com
If-modified-since
Wed
Jul
2007
09:23:24
2.2
WEB
HTTP
111
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
111Observe
valor
l√≠nea
cabecera
If-modified-since
exactamente
valor
l√≠nea
cabecera
Last-Modified
enviada
servidor
semana
GET
condicional
pide
servidor
env√≠e
objeto
modificado
fecha
especificada
Suponga
objeto
modi-
ficado
julio
2007
09:23:24
cuarto
lugar
servidor
web
env√≠a
mensaje
respuesta
cach√©
HTTP/1.1
304
Not
Modified
Date
Sat
14
Jul
2007
15:39:29
Server
Apache/1.3.0
Unix
cuerpo
entidad
vac√≠o
Vemos
respuesta
GET
condicional
servidor
web
env√≠a
mensaje
respuesta
incluye
objeto
solicitado
incluyera
objeto
solicitado
conse-
guir√≠a
desperdiciar
ancho
banda
incrementar
tiempo
respuesta
percibido
usua-
rio
especialmente
tama√±o
objeto
Observe
mensaje
respuesta
muestra
l√≠nea
texto
304
Not
Modified(no
modificado
indica
cach√©
reenviar
copia
objeto
cach√©
navegador
solicitado
terminamos
exposici√≥n
acerca
HTTP
protocolo
Internet
protocolo
capa
aplicaci√≥n
estudiado
detalle
examinado
formato
mensajes
HTTP
acciones
realizadas
servidor
cliente
web
env√≠an
reciben
mensajes
visto
acerca
infraes-
tructura
aplicaciones
web
incluyendo
cach√©s
cookies
bases
datos
back-end
elementos
ligados
protocolo
HTTP
2.3
Transferencia
archivos
FTP
sesi√≥n
FTP
t√≠pica
usuario
sentado
frente
host
host
local
desea
transferir
archivos
host
remoto
usuario
acceder
remota
proporcionar
identificaci√≥n
usuario
contrase√±a
propor-
cionada
informaci√≥n
autorizaci√≥n
usuario
transferir
archivos
sis-
tema
archivos
local
sistema
archivos
remoto
viceversa
muestra
Figura
2.14
usuario
interact√∫a
FTP
agente
usuario
FTP
lugar
usuario
proporciona
nombre
host
remoto
proceso
cliente
FTP
host
local
establezca
conexi√≥n
TCP
proceso
servidor
FTP
host
remoto
continuaci√≥n
usuario
proporciona
identificaci√≥n
contrase√±a
enviados
conexi√≥n
TCP
comandos
FTP
servi-
dor
autorizado
usuario
usuario
copia
archivos
almacenados
sistema
archivos
local
sistema
archivos
remoto
viceversa
HTTP
FTP
protocolos
transferencia
archivos
caracter√≠sti-
cas
com√∫n
ejemplo
ejecutan
TCP
protocolos
capa
aplicaci√≥n
presentan
diferencias
importantes
diferencia
principal
FTP
utiliza
conexiones
TCP
paralelas
transferir
archivo
conexi√≥n
control
conexi√≥n
datos
conexi√≥n
control
emplea
enviar
informaci√≥n
control
hosts
identificaci√≥n
112
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
112Figura
2.14
FTP
transfiere
archivos
sistema
archivos
local
sistema
archivos
remoto
Figura
2.15
Conexiones
control
datos
usuario
contrase√±a
comandos
modificar
directorio
remoto
comandos
intro-
ducir
PUT
extraer
GET
archivos
conexi√≥n
datos
utiliza
enviar
archivo
Puesto
FTP
utiliza
conexi√≥n
control
separada
FTP
env√≠a
informaci√≥n
control
banda
Cap√≠tulo
veremos
protocolo
RTSP
utiliza
controlar
transferencia
medios
continuos
audio
v√≠deo
tam-
bi√©n
env√≠a
informaci√≥n
control
banda
recordar√°
HTTP
env√≠a
l√≠neas
cabecera
solicitud
respuesta
conexi√≥n
TCP
transporta
archivo
transferido
raz√≥n
HTTP
env√≠a
informaci√≥n
control
banda
secci√≥n
veremos
SMTP
principal
protocolo
correo
elec-
tr√≥nico
env√≠a
informaci√≥n
control
banda
Figura
2.15
ilustran
conexiones
control
datos
FTP
usuario
inicia
sesi√≥n
FTP
host
remoto
cliente
FTP
usuario
establece
lugar
conexi√≥n
control
TCP
servidor
host
remoto
puerto
servidor
n√∫mero
21
cliente
FTP
env√≠a
identi-
ficaci√≥n
contrase√±a
usuario
conexi√≥n
control
cliente
FTP
env√≠a
conexi√≥n
control
comandos
modificar
directorio
remoto
servidor
recibe
comando
trans-
ferencia
archivo
conexi√≥n
control
host
remoto
servidor
inicia
conexi√≥n
datos
TCP
cliente
FTP
env√≠a
exactamente
archivo
conexi√≥n
datos
cierra
conexi√≥n
datos
sesi√≥n
usuario
desea
transferir
archivo
FTP
abre
conexi√≥n
datos
FTP
conexi√≥n
control
permanece
abierta
Conexi√≥n
control
TCP
puerto
21
Conexi√≥n
datos
TCP
puerto
20Cliente
FTP
Servidor
FTP
Interfaz
usuario
FTP
Sistema
archivos
local
Usuario
host
Sistema
archivos
remoto
Cliente
FTP
Servidor
FTP
Transferencia
archivos
2.3
TRANSFERENCIA
ARCHIVOS
FTP
113
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
113dure
sesi√≥n
usuario
crea
conexi√≥n
datos
archivo
trans-
ferido
sesi√≥n
conexiones
datos
persistentes
Pt
usuario
concreto
servidor
asociar
conexi√≥n
control
usuario
espec√≠-
fica
directorio
actual
usuario
mueve
√°rbol
directorio
remoto
control
informaci√≥n
sesi√≥n
usuario
activa
restringe
forma
significativa
n√∫mero
sesiones
FTP
mantener
simult√°neamente
Recuerde
HTTP
contrario
protocolo
memoria
recordar
usuarios
2.3.1
Comandos
respuestas
FTP
terminar
secci√≥n
explicaci√≥n
comandos
res-
puestas
FTP
comunes
comandos
cliente
servidor
respuestas
servidor
cliente
env√≠an
conexi√≥n
control
formato
ASCII
bits
comandos
HTTP
personas
leer
comandos
FTP
separar
comandos
sucesivos
a√±ade
retorno
carro
salto
l√≠nea
comando
comando
consta
caracteres
ASCII
letras
may√∫sculas
emplean
argumentos
opcionales
comandos
comunes
siguientes
USER
nombre_de_usuario
utiliza
enviar
identificaci√≥n
usuario
ser-
vidor
PASS
contrase√±a
utiliza
enviar
contrase√±a
usuario
servidor
LIST
utiliza
pedir
servidor
devuelva
lista
archivos
exis-
tentes
directorio
remoto
actual
lista
archivos
env√≠a
cone-
xi√≥n
datos
persistente
lugar
conexi√≥n
control
TCP
RETR
nombre_de_archivo
utiliza
recuperar
extraer
archivo
directorio
actual
host
remoto
comando
host
remoto
inicie
cone-
xi√≥n
datos
env√≠e
archivo
solicitado
conexi√≥n
datos
STOR
nombre_de_archivo
utiliza
almacenar
introducir
archivo
directorio
actual
host
remoto
correspondencia
comando
ejecuta
usuario
comando
FTP
enviado
conexi√≥n
control
comando
seguido
respuesta
enviada
servidor
cliente
respuestas
n√∫meros
d√≠gitos
mensaje
opcional
n√∫mero
estructura
similar
c√≥digo
frase
explicativa
l√≠nea
mensajes
respuesta
HTTP
Algu-
nas
respuestas
t√≠picas
posibles
frases
siguientes
331
Username
OK
password
required
125
Data
connection
already
open
transfer
starting
425
Can‚Äôt
open
data
connection
452
Error
writing
file
lectores
est√©n
interesados
obtener
informaci√≥n
acerca
comandos
FTP
respuestas
animamos
leer
documento
RFC
959
114
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
1142.4
Correo
electr√≥nico
Internet
correo
electr√≥nico
existido
Internet
viera
luz
aplicaci√≥n
popu-
lar
Internet
comienzos
Segaller
1998
a√±os
ido
convirtiendo
aplicaci√≥n
elaborada
potente
actualidad
conti-
n√∫a
aplicaciones
importantes
utilizadas
Internet
servicio
ordinario
correo
postal
correo
electr√≥nico
comunicaci√≥n
as√≠ncrono
personas
env√≠an
leen
mensajes
conviene
coordinarse
agendas
personas
contraste
correo
postal
correo
electr√≥nico
r√°pido
f√°cil
distribuir
barato
aplicaciones
modernas
correo
electr√≥nico
disponen
caracter√≠sticas
potentes
listas
correo
enviar
mensajes
correo
electr√≥nico
correo
basura
spam
miles
destinatarios
tiempo
mensajes
correo
electr√≥nico
incluyen
adjuntos
hiperv√≠nculos
texto
formato
HTML
fotograf√≠as
secci√≥n
examinar
protocolos
capa
aplicaci√≥n
forman
base
correo
electr√≥nico
Internet
sumergirnos
explicaci√≥n
deta-
llada
acerca
protocolos
proporcionar
visi√≥n
conjunto
sistema
correo
Internet
componentes
fundamentales
Figura
2.16
muestra
visi√≥n
general
sistema
correo
Internet
diagrama
vemos
componentes
principales
agentes
usuario
servidores
correo
Protocolo
simple
transferencia
correo
SMTP
Simple
Mail
Transfer
Protocol
continuaci√≥n
describir
componentes
contexto
emisor
Alicia
env√≠a
mensaje
correo
electr√≥nico
desti-
natario
Benito
agentes
usuario
permiten
usuarios
leer
responder
reenviar
guardar
componer
mensajes
agentes
usuario
correo
electr√≥nico
denominan
lectores
correo
general
evitado
t√©r-
mino
libro
Alicia
termina
componer
mensaje
agente
usuario
env√≠a
mensaje
servidor
correo
mensaje
colocado
cola
mensajes
salientes
servidor
correo
Benito
leer
mensaje
agente
usuario
recupera
mensaje
buz√≥n
servidor
correo
finales
d√©cada
1990
comenzaron
popularizarse
agentes
usuario
interfaz
gr√°fica
usuario
GUI
Graphical
User
Interface
permitiendo
usuarios
com-
mensajes
multimedia
Actualmente
Microsoft
Outlook
Apple
Mail
Mozilla
Thun-
derbird
encuentran
agentes
usuario
interfaz
GUI
populares
correo
electr√≥nico
interfaces
usuario
dominio
p√∫blico
correo
electr√≥nico
basadas
texto
ejemplo
mail
pine
elm
interfaces
basadas
Web
veremos
servidores
correo
forman
n√∫cleo
infraestructura
correo
electr√≥nico
destinatario
ejemplo
Benito
buz√≥n
correo
ubicado
servidores
correo
buz√≥n
Benito
gestiona
mantiene
mensajes
enviados
mensaje
t√≠pico
inicia
viaje
agente
usuario
emisor
viaja
servidor
correo
emisor
servidor
correo
destinatario
depositado
buz√≥n
Benito
acceder
mensajes
contenidos
buz√≥n
servidor
correo
contiene
autentica
Benito
nombre
usuario
contrase√±a
servidor
correo
Alicia
ocu-
parse
fallos
producen
servidor
correo
Benito
servidor
Ali-
cia
enviar
mensaje
correo
servidor
Benito
servidor
Alicia
2.4
CORREO
ELECTR√ìNICO
INTERNET
115
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
115Figura
2.16
Esquema
general
sistema
correo
electr√≥nico
Internet
mantiene
mensaje
cola
mensajes
intenta
enviarlo
Normalmente
reintentos
env√≠o
realizan
30
minutos
conseguido
servidor
elimina
mensaje
notifica
emisor
Alicia
mensaje
correo
electr√≥nico
SMTP
principal
protocolo
capa
aplicaci√≥n
correo
electr√≥nico
Internet
Utiliza
servicio
transferencia
datos
fiable
TCP
transferir
correo
servidor
correo
emisor
servidor
correo
destinatario
mayor√≠a
protocolos
capa
aplicaci√≥n
SMTP
lados
cliente
ejecuta
servidor
correo
emisor
servidor
eje-
cuta
servidor
correo
destinatario
cliente
servidor
SMTP
ejecutan
servidores
correo
servidor
correo
env√≠a
mensajes
correo
servidores
correo
act√∫a
cliente
SMTP
servidor
correo
recibe
correo
servidores
act√∫a
servidor
SMTP
2.4.1
SMTP
protocolo
SMTP
definido
documento
RFC
5321
coraz√≥n
correo
electr√≥nico
Internet
mencionado
anteriormente
SMTP
transfiere
mensa-
Cola
mensajes
salientes
Clave
Buz√≥n
correo
usuario
SMTP
Agente
usuario
Agente
usuario
Agente
usuario
Agente
usuario
Agente
usuarioAgente
usuario
Servidor
correo
Servidor
correo
Servidor
correo
SMTP
SMTP
116
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
116jes
servidores
correo
emisores
servidores
correo
destinata-
rios
SMTP
antiguo
HTTP
RFC
original
ocupa
SMTP
data
1982
SMTP
exist√≠a
tiempo
SMTP
cualidades
maravillosas
prueba
presencia
Internet
tecnolog√≠a
heredada
utiliza
funcionalidades
arcaicas
ejemplo
restringe
cuerpo
cabeceras
mensajes
formato
ASCII
bits
restricci√≥n
sentido
principios
d√©cada
1980
capacidad
transmisi√≥n
escasa
enviaba
mensajes
adjuntos
im√°genes
tama√±o
archivos
audio
v√≠deo
actualmente
multimedia
restricci√≥n
formato
ASCII
bits
causa
problemas
requiere
datos
binarios
multimedia
codifiquen
ASCII
transmitidos
SMTP
requiere
correspondiente
mensaje
ASCII
decodificado
vuelta
binario
transporte
SMTP
Recuerde
visto
Secci√≥n
2.2
HTTP
precisa
datos
multimedia
codificados
ASCII
transferidos
ilustrar
funcionamiento
b√°sico
SMTP
recurrir
escenario
conocido
Suponga
Alicia
desea
enviar
Benito
sencillo
mensaje
ASCII
2.4
CORREO
ELECTR√ìNICO
INTERNET
117
CORREO
ELECTR√ìNICO
WEB
diciembre
1995
a√±os
inventara
Web
Sabeer
Bhatia
Jack
Smith
visitaron
empresa
capital
riesgo
Internet
Draper
Fisher
Jurvetson
propusieron
desarrollar
sistema
gratuito
correo
electr√≥nico
basa-
do
Web
idea
proporcionar
correo
electr√≥nico
gratuita
cual-
quiera
deseara
cuentas
fueran
accesibles
Web
cambio
15
ciento
compa√±√≠a
Draper
Fisher
Jurvetson
financi√≥
Bhatia
Smith
montaron
empresa
Hotmail
personas
trabajando
tiempo
completo
14
tiempo
parcial
trabajaban
cambio
opci√≥n
compra
acciones
capa-
ces
desarrollar
lanzar
servicio
julio
1996
mes
lanzamiento
ten√≠an
100.000
suscriptores
diciembre
1997
18
meses
lan-
zamiento
servicio
Hotmail
12
millones
suscriptores
adquirida
Microsoft
400
millones
d√≥lares
√©xito
Hotmail
atri-
buye
ventaja
tomar
iniciativa
marketing
viral
intr√≠nseco
correo
electr√≥nico
estudiantes
est√©n
leyendo
libro
encuentren
emprendedores
concebir
desarrollar
servicios
Internet
ventaja
t√©cnicas
inherentes
marketing
viral
correo
electr√≥nico
contin√∫a
proliferando
haci√©ndose
a√±o
pasa
sofisti-
cado
potente
servicios
populares
actualmente
gmail
Google
ofrece
gigabytes
almacenamiento
gratuito
servicios
avanzados
filtrado
correo
basura
detecci√≥n
virus
servicio
opcional
cifrado
correo
electr√≥nico
SSL
acceso
servicios
correo
electr√≥nico
terceros
interfaz
orientada
reali-
zacion
b√∫squedas
HISTORIA
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
1171
Alicia
invoca
agente
usuario
correo
electr√≥nico
proporciona
direcci√≥n
correo
electr√≥nico
Benito
ejemplo
benito@unaescuela.edu
compone
mensaje
indica
agente
usuario
env√≠e
agente
usuario
Alicia
env√≠a
mensaje
servidor
correo
colocado
cola
mensajes
cliente
SMTP
ejecuta
servidor
correo
Alicia
ve
mensaje
cola
mensajes
Abre
conexi√≥n
TCP
servidor
SMTP
ejecuta
servidor
correo
Benito
fase
negociaci√≥n
inicial
SMTP
cliente
SMTP
env√≠a
mensaje
Alicia
conexi√≥n
TCP
servidor
correo
Benito
servidor
SMTP
recibe
mensaje
servidor
correo
Benito
coloca
mensaje
buz√≥n
Benito
Benito
invoca
agente
usuario
leer
mensaje
apetezca
Figura
2.17
resume
escenario
importante
observar
normalmente
SMTP
utiliza
servidores
correo
inter-
medios
enviar
correo
servidores
correo
encuentran
extremos
opuestos
mundo
servidor
Alicia
Hong
Kong
Benito
St
Louis
conexi√≥n
TCP
conexi√≥n
directa
servidores
Hong
Kong
St
Louis
particular
servidor
correo
Benito
servicio
servi-
dor
Alicia
conservar√°
mensaje
intentar√°
mensaje
deja
ser-
vidor
correo
intermedio
Veamos
detalle
transfiere
SMTP
mensaje
servidor
correo
emi-
sor
servidor
correo
receptor
Comprobaremos
protocolo
SMTP
presenta
similitudes
protocolos
empleados
personas
interacciones
cara
cara
lugar
cliente
SMTP
ejecuta
host
servidor
correo
emisor
establece
conexi√≥n
TCP
puerto
25
servidor
SMTP
ejecuta
host
servidor
correo
receptor
servidor
operativo
cliente
intentar√°
establecido
conexi√≥n
servidor
cliente
llevan
cabo
proceso
negociaci√≥n
capa
aplicaci√≥n
personas
intercambiar
informaci√≥n
presentan
clientes
servidores
SMTP
presentan
mis-
mos
transferir
informaci√≥n
fase
negociaci√≥n
SMTP
cliente
118
CAP√çTULO
CAPA
APLICACI√ìN
SMTP
Servidor
correo
Alicia
Servidor
correo
Benito
Agente
Alicia
Agente
Benito
Cola
mensajes
Clave
Buz√≥n
correo
usuario
Figura
2.17
Alicia
env√≠a
mensaje
Benito
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
118SMTP
especifica
direcci√≥n
correo
electr√≥nico
emisor
persona
generado
mensaje
direcci√≥n
correo
electr√≥nico
destinatario
cliente
servidor
SMTP
presentado
cliente
env√≠a
mensaje
SMTP
servicio
transferencia
datos
fiable
TCP
transferir
mensaje
servidor
errores
cliente
repite
proceso
conexi√≥n
TCP
enviar
mensajes
servidor
caso
contrario
indica
TCP
cierre
cone-
xi√≥n
Veamos
transcripci√≥n
ejemplo
mensajes
intercambiados
cliente
SMTP
servidor
SMTP
nombre
host
cliente
crepes.fr
nombre
host
servidor
hamburger.edu
l√≠neas
texto
ASCII
precedidas
exactamente
l√≠neas
cliente
env√≠a
socket
TCP
l√≠neas
texto
ASCII
precedidas
l√≠neas
servidor
env√≠a
socket
TCP
transcripci√≥n
comienza
establece
conexi√≥n
TCP
220
hamburger.edu
HELO
crepes.fr
250
Hello
crepes.fr
pleased
to
meet
you
MAIL
FROM
alicia@crepes.fr
250
alicia@crepes.fr
Sender
ok
RCPT
TO
benito@hamburger.edu
250
benito@hamburger.edu
Recipient
ok
DATA
354
Enter
mail
end
with
on
line
by
itself
gusta
ketchup
pepinillos
vinagre
250
Message
accepted
for
delivery
QUIT
221
hamburger.edu
closing
connection
ejemplo
cliente
env√≠a
mensaje
gusta
ketchup
pepinillos
vinagre
servidor
correo
crepes.fr
servidor
correo
hamburger.edu
di√°logo
cliente
ejecuta
comandos
HELO
abreviatura
HELLO
MAIL
FROM
RCPT
TO
DATA
QUIT
comandos
explican
cliente
env√≠a
l√≠nea
consta
√∫nicamente
punto
indica
mensaje
servidor
jerga
ASCII
mensaje
ter-
mina
CRLF.CRLF
CR
LF
corresponden
retorno
carro
salto
l√≠nea
respectivamente
servidor
responde
comando
teniendo
res-
puestas
c√≥digo
respuesta
explicaci√≥n
opcional
ingl√©s
mencionado
SMTP
utiliza
conexiones
persistentes
servidor
correo
emisor
men-
sajes
enviar
servidor
correo
receptor
enviar
mensajes
tra-
v√©s
conexi√≥n
TCP
mensaje
cliente
inicia
proceso
comando
MAIL
FROM
crepes.fr
designa
mensaje
√∫nico
punto
eje-
cuta
comando
QUITs√≥lo
mensajes
hayan
enviados
recomendable
utilice
Telnet
establecer
di√°logo
directo
ser-
vidor
SMTP
ejecute
telnet
NombreServidor
25
2.4
CORREO
ELECTR√ìNICO
INTERNET
119
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
119donde
NombreServidores
nombre
servidor
correo
local
simple-
mente
estableciendo
conexi√≥n
TCP
host
local
servidor
correo
Des-
pu√©s
escribir
l√≠nea
deber√≠a
recibir
inmediatamente
respuesta
220
servidor
continuaci√≥n
ejecute
comandos
SMTPHELO
MAIL
FROM
RCPT
TO
DATA
CRLF.CRLF
QUIT
instantes
apropiados
extremadamente
recomendable
realice
Tarea
programaci√≥n
incluida
cap√≠tulo
tarea
crear
agente
usuario
simple
implemente
cliente
SMTP
permitir√°
enviar
mensaje
correo
electr√≥nico
destinatario
arbitrario
servi-
dor
correo
local
2.4.2
Comparaci√≥n
HTTP
comparar
brevemente
SMTP
HTTP
protocolos
emplean
transferir
archivos
host
HTTP
transfiere
archivos
denominados
obje-
tos
servidor
web
cliente
web
normalmente
navegador
SMTP
transfiere
archivos
mensajes
correo
electr√≥nico
servidor
correo
servi-
dor
correo
transferir
archivos
HTTP
persistente
SMTP
emplean
conexiones
persistentes
protocolos
caracter√≠sticas
comunes
presentan
diferencias
lugar
HTTP
principalmente
protocolo
pull
protocolo
extracci√≥n
alguien
carga
informaci√≥n
servidor
web
usuarios
utilizan
HTTP
extraer
informaci√≥n
servidor
desean
concreto
m√°quina
desea
recibir
archivo
inicia
conexi√≥n
TCP
contra-
rio
SMTP
fundamentalmente
protocolo
push
protocolo
inserci√≥n
servidor
correo
emisor
introduce
archivo
servidor
correo
receptor
concreto
m√°quina
desea
enviar
archivo
inicia
conexi√≥n
TCP
diferencia
aludido
anteriormente
SMTP
requiere
mensaje
incluyendo
cuerpo
mensaje
est√©
formato
ASCII
bits
mensaje
contiene
caracteres
corresponden
formato
ejemplo
caracteres
acentuados
contiene
datos
binarios
ejemplo
archivo
imagen
mensaje
codificado
ASCII
bits
datos
HTTP
impo-
nen
restricci√≥n
diferencia
importante
maneja
documento
conste
texto
im√°genes
posiblemente
tipos
multimedia
visto
Secci√≥n
2.2
HTTP
encapsula
objeto
mensaje
respuesta
HTTP
correo
Internet
incluye
objetos
mensaje
mensaje
2.4.3
Formatos
mensajes
correo
Alicia
escribe
carta
correo
ordinario
Benito
incluir
tipo
informaci√≥n
accesoria
superior
carta
direcci√≥n
Benito
pro-
pia
direcci√≥n
respuesta
fecha
forma
similar
persona
env√≠a
men-
saje
correo
electr√≥nico
cabecera
contiene
informaci√≥n
administrativa
antecede
cuerpo
mensaje
informaci√≥n
incluye
serie
l√≠neas
cabecera
definidas
documento
RFC
5322
l√≠neas
cabecera
cuerpo
mensaje
separan
l√≠nea
blanco
CRLF
RFC
5322
especifica
formato
exacto
l√≠neas
cabecera
interpreta-
ciones
sem√°nticas
HTTP
l√≠nea
cabecera
contiene
texto
legible
120
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
120consta
palabra
clave
seguida
puntos
valor
palabras
clave
obligatorias
opcionales
cabecera
formada
l√≠nea
cabecera
From
l√≠nea
cabecera
To
incluir
l√≠nea
Subject
l√≠neas
cabecera
opcionales
importante
destacar
l√≠neas
cabecera
comandos
SMTP
estudiado
Sec-
ci√≥n
2.4.1
contengan
palabra
comunes
from
to
comandos
vistos
secci√≥n
forman
protocolo
negociaci√≥n
SMTP
l√≠neas
cabecera
examinadas
secci√≥n
forman
mensaje
correo
cabecera
mensaje
t√≠pica
From
alicia@crepes.fr
To
benito@hamburger.edu
Subject
B√∫squeda
significado
vida
mensaje
cabecera
incluye
l√≠nea
blanco
continuaci√≥n
cuerpo
mensaje
ASCII
Deber√≠a
utilizar
Telnet
enviar
mensaje
servidor
correo
contenga
l√≠neas
cabecera
incluyendo
l√≠nea
cabecera
asunto
Subject
ejecute
comando
telnet
NombreServidor
25
explicado
Secci√≥n
2.4.1
2.4.4
Protocolos
acceso
correo
electr√≥nico
SMTP
env√≠a
mensaje
servidor
correo
Alicia
servidor
correo
Benito
mensaje
coloca
buz√≥n
exposici√≥n
t√°citamente
Benito
lee
correo
registr√°ndose
host
servidor
uti-
lizando
lector
correo
ejecuta
host
principios
d√©cada
1990
forma
habitual
cosas
actualmente
acceso
correo
electr√≥nico
utiliza
arquitectura
cliente-servidor
usuario
t√≠pico
lee
correo
electr√≥nico
cliente
ejecuta
sistema
terminal
usuario
ejemplo
PC
oficina
port√°til
PDA
Ejecutando
cliente
correo
PC
local
usuarios
disponen
rico
conjunto
funcionalidades
incluye
posibilidad
visualizar
documentos
adjuntos
mensajes
multimedia
Puesto
Benito
destinatario
ejecuta
agente
usuario
PC
local
natu-
ral
considere
incluir
servidor
correo
PC
local
forma
ser-
vidor
correo
Alicia
dialogar√°
directamente
PC
Benito
problema
m√©todo
Recuerde
servidor
correo
gestiona
buzones
correo
ejecuta
lados
cliente
servidor
SMTP
servidor
correo
Benito
residiera
PC
local
PC
Benito
tendr√≠a
encendido
conectado
Internet
recibir
correos
pudieran
llegar
momento
impracticable
usuarios
Internet
lugar
usua-
rio
t√≠pico
ejecuta
agente
usuario
PC
local
accede
buz√≥n
correo
alma-
cenado
servidor
correo
compartido
encendido
servidor
compartido
usuarios
normalmente
mantenido
ISP
usuario
ejem-
plo
universidad
empresa
ruta
mensaje
correo
electr√≥nico
Alicia
env√≠a
Benito
Acabamos
estudiar
punto
ruta
mensaje
correo
electr√≥nico
depositado
servidor
correo
Benito
con-
seguir
f√°cilmente
agente
usuario
Alicia
env√≠e
mensaje
directamente
2.4
CORREO
ELECTR√ìNICO
INTERNET
121
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
121al
servidor
correo
Benito
hacerse
utilizando
SMTP
SMTP
dise√±ado
correo
electr√≥nico
host
normalmente
agente
usuario
emisor
comunica
directamente
servidor
correo
destinatario
lugar
muestra
Figura
2.18
agente
usuario
Alicia
utiliza
SMTP
introducir
mensaje
correo
servidor
correo
conti-
nuaci√≥n
servidor
correo
Alicia
utiliza
SMTP
cliente
SMTP
pasar
mensaje
servidor
correo
Benito
procedimiento
pasos
Funda-
mentalmente
retransmisi√≥n
servidor
correo
Alicia
agente
usuario
forma
acceder
servidor
correo
destino
inal-
canzable
Alicia
deposite
mensaje
servidor
correo
intentar
enviar
mensaje
servidor
correo
Benito
ejemplo
30
minutos
servidor
Benito
est√©
operativo
servidor
correo
Alicia
funciona
recurso
quejarse
admi-
nistrador
sistema
RFC
ocupa
SMTP
define
utilizar
comandos
SMTP
transmitir
mensaje
servidores
SMTP
falta
pieza
puzzle
destinatario
Benito
eje-
cuta
agente
usuario
PC
local
obtiene
mensajes
encuentran
ser-
vidor
correo
ISP
agente
usuario
Benito
utilizar
SMTP
obtener
mensajes
operaci√≥n
extracci√≥n
pull
mien-
SMTP
protocolo
push
inserci√≥n
puzzle
completa
a√±adiendo
protocolo
especial
acceso
correo
permita
transferir
mensajes
servidor
correo
Benito
PC
local
Actualmente
protocolos
acceso
correo
electr√≥nico
populares
incluyen
Protocolo
oficina
correos
versi√≥n
POP3
Post
Office
Protocol‚ÄîVersion
Protocolo
acceso
correo
Internet
IMAP
Internet
Mail
Access
Protocol
HTTP
Figura
2.18
proporciona
resumen
protocolos
utilizan
correo
Internet
SMTP
emplea
transferir
correo
servidor
correo
emisor
servidor
correo
destinatario
SMTP
utiliza
transferir
correo
agente
usuario
emisor
servidor
correo
transferir
mensajes
correo
almacenados
servidor
correo
destinatario
agente
usuario
emplea
protocolo
acceso
correo
POP3
POP3
POP3
protocolo
acceso
correo
extremadamente
simple
definido
RFC
1939
documento
corto
protocolo
simple
funcionalidad
limitada
POP3
inicia
agente
usuario
122
CAP√çTULO
CAPA
APLICACI√ìN
SMTP
Servidor
correo
Alicia
Servidor
correo
Benito
Agente
Alicia
Agente
BenitoSMTP
POP3
IMAP
HTTP
Figura
2.18
Protocolos
correo
electr√≥nico
entidades
utilizan
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
122cliente
abre
conexi√≥n
TCP
puerto
110
servidor
correo
servidor
establecida
conexi√≥n
TCP
POP3
pasa
fases
autorizaci√≥n
transac-
ci√≥n
actualizaci√≥n
fase
autorizaci√≥n
agente
usuario
env√≠a
nombre
usuario
contrase√±a
texto
legible
autenticar
usuario
fase
transacci√≥n
agente
usuario
recupera
mensajes
fase
agente
usuario
marcar
mensajes
borrado
eliminar
marcas
borrado
obtener
estad√≠sticas
correo
fase
actuali-
zaci√≥n
lugar
cliente
ejecutado
comando
quit
terminando
sesi√≥n
POP3
instante
servidor
correo
borra
mensajes
mar-
cados
borrado
transacci√≥n
POP3
agente
usuario
ejecuta
comandos
servidor
devuelve
comando
respuesta
posibles
respuestas
OK(seguida
ocasio-
nes
serie
datos
servidor-cliente
utilizada
servidor
indicar
comando
correcto
-ERR
utilizada
servidor
indicar
error
comando
fase
autorizaci√≥n
comandos
principales
user
nombreusuario
pass
contrase√±a
ilustrar
comandos
sugerimos
establezca
conexi√≥n
Telnet
directamente
servidor
POP3
utilizando
puerto
110
ejecute
comandos
Suponga
mailServer
nombre
servidor
correo
Ver√°
similar
telnet
mailServer
110
OK
POP3
server
ready
user
benito
OK
pass
hambre
OK
user
successfully
logged
on
escribe
comando
servidor
POP3
responder√°
mensaje
-ERR
Abordemos
fase
transacci√≥n
agente
usuario
utilice
POP3
suele
configurado
usuario
descargar
borrar
descargar
guardar
secuencia
comandos
ejecute
agente
usuario
POP3
depender√°
modos
est√©
operando
descargar
borrar
agente
usuario
ejecu-
tar√°
comandos
list
retry
dele
ejemplo
suponga
usuario
men-
sajes
buz√≥n
correo
di√°logo
proporcionamos
continuaci√≥n
cliente
agente
usuario
S:(que
servidor
servidor
correo
transacci√≥n
similar
list
498
912
retr
bla
bla
bla
dele
2.4
CORREO
ELECTR√ìNICO
INTERNET
123
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
123C
retr
bla
bla
bla
dele
quit
OK
POP3
server
signing
off
lugar
agente
usuario
pide
servidor
correo
informe
tama√±o
mensajes
almacenados
continuaci√≥n
agente
usuario
recupera
borra
mensajes
servidor
Observe
fase
autorizaci√≥n
agente
usuario
utilizado
comandos
list
retr
dele
quit
sin-
taxis
comandos
definida
documento
RFC
1939
procesar
comando
quit
servidor
POP3
entra
fase
actualizaci√≥n
borra
mensajes
buz√≥n
problema
descarga
borrado
destinatario
Benito
n√≥mada
desear
acceder
mensajes
correo
m√°qui-
nas
ejemplo
PC
oficina
PC
casa
port√°til
des-
carga
borrado
reparte
mensajes
correo
Benito
m√°quinas
particular
Benito
lee
mensaje
PC
oficina
volver
leerlo
por-
t√°til
casa
noche
descargar
guardar
agente
usuario
deja
mensajes
servidor
correo
hayan
descargado
caso
Benito
volver
leer
mensajes
distintas
m√°quinas
acceder
mensaje
trabajo
casa
desea
sesi√≥n
POP3
agente
usuario
servidor
correo
servidor
POP3
mantiene
informaci√≥n
concreto
mantiene
relaci√≥n
men-
sajes
usuario
marcados
borrados
servidor
POP3
conserva
informaci√≥n
sesi√≥n
POP3
falta
memoria
sesiones
simplifica
enormemente
implementaci√≥n
servidor
POP3
IMAP
acceso
POP3
Benito
descargado
mensajes
m√°quina
local
crear
carpetas
correo
mover
mensajes
descargados
carpetas
continua-
ci√≥n
borrar
mensajes
pasarlos
carpetas
b√∫squedas
mensajes
nombre
emisor
asunto
paradigma
carpetas
mensajes
guar-
m√°quina
local
plantea
problema
usuario
n√≥mada
preferir√°
mante-
ner
jerarqu√≠a
carpetas
servidor
remoto
acceder
computadora
POP3
protocolo
POP3
proporciona
usuario
crear
carpetas
remotas
asignar
mensajes
resolver
problemas
invent√≥
protocolo
IMAP
definido
RFC
3501
POP3
IMAP
protocolo
acceso
correo
Ofrece
fun-
cionalidades
POP3
significativamente
complejo
implementaciones
cliente
servidor
complejas
servidor
IMAP
asociar√°
mensaje
carpeta
mensaje
llega
servidor
asocia
carpeta
INBOX
Bandeja
entrada
destinatario
pasar
mensaje
carpeta
creada
usuario
leer
mensaje
124
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
124borrarlo
etc.
protocolo
IMAP
proporciona
comandos
permiten
usuarios
crear
carpetas
mover
mensajes
carpeta
IMAP
proporciona
comandos
permiten
usuarios
b√∫squedas
carpetas
remotas
localizar
mensajes
cumplan
determinados
criterios
Observe
diferencia
POP3
servidor
IMAP
mantiene
informaci√≥n
acerca
sesiones
IMAP
ejemplo
nombres
carpetas
mensajes
asociados
importante
caracter√≠stica
IMAP
dispone
comandos
permiten
agente
usuario
obtener
partes
componentes
mensajes
ejemplo
agente
usuario
obtener
cabecera
mensaje
mensaje
MIME
partes
caracter√≠stica
resulta
√∫til
emplea
conexi√≥n
ancho
banda
peque√±o
ejemplo
enlace
m√≥dem
baja
velocidad
agente
usuario
servidor
correo
conexi√≥n
ancho
banda
peque√±o
usuario
quiera
descargar
mensajes
guardados
buz√≥n
desee
saltarse
mensajes
largos
ejemplo
archivo
audio
v√≠deo
obtener
informaci√≥n
acerca
IMAP
sitio
oficial
IMAP
IMAP
2009
Correo
electr√≥nico
Web
Actualmente
usuarios
env√≠an
acceden
correo
electr√≥nico
navegadores
web
Hotmail
introdujo
mediados
d√©cada
1990
acceso
basado
Web
actualmente
ofrece
servicio
Yahoo
Google
principales
universidades
empresas
servicio
agente
usuario
navega-
dor
web
corriente
usuario
comunica
buz√≥n
remoto
HTTP
destinatario
Benito
desea
acceder
mensaje
buz√≥n
enviado
servidor
correo
Benito
navegador
utilizando
protocolo
HTTP
lugar
protocolos
POP3
IMAP
emisor
Alicia
desea
enviar
mensaje
correo
electr√≥nico
transmitido
navegador
servidor
correo
HTTP
lugar
SMTP
servidor
correo
Alicia
contin√∫a
enviando
mensajes
recibiendo
mensajes
servidores
correo
emplean
SMTP
2.5
DNS
servicio
directorio
Internet
personas
identificadas
maneras
ejemplo
iden-
tificadas
nombre
aparece
certificado
nacimiento
n√∫mero
seguridad
social
n√∫mero
carnet
conducir
datos
utilizar
identificar
personas
determinado
con-
texto
identificador
apropiado
ejemplo
computadoras
IRS
terrible
agencia
tributaria
Unidos
prefieren
utilizar
n√∫meros
seguridad
social
longitud
fija
nombre
aparece
certificado
nacimiento
personas
prefieren
emplear
nombre
figura
certificados
nacimiento
f√°ciles
recordar
n√∫meros
seguridad
social
imaginar
alguien
dijera
Hola
nombre
132-67-9875
marido
178-87-1146
personas
identificadas
diversas
formas
hosts
Internet
identificador
hosts
nombre
host
nombres
host
ejemplo
cnn.com
www.yahoo.com
gaia.cs.umass.edu
cis.poly.edu
2.5
DNS
SERVICIO
DIRECTORIO
INTERNET
125
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
125mnem√≥nicos
entendidos
personas
nombres
host
proporcionan
informaci√≥n
acerca
ubicaci√≥n
host
Internet
nombre
host
www.eurecom.fr
termina
c√≥digo
pa√≠s
.fr
informa
probable
host
encuentre
Francia
puesto
nombres
host
constar
caracteres
alfanum√©ricos
longitud
variable
dif√≠ciles
procesar
routers
razones
hosts
identifican
direcciones
IP
Cap√≠tulo
veremos
detalle
direcciones
IP
resultar√°
√∫til
leer
exposici√≥n
direcci√≥n
IP
consta
bytes
r√≠gida
estructura
jer√°rquica
aspecto
direcci√≥n
IP
ejemplo
121.7.106.83
punto
separa
bytes
expresados
notaci√≥n
decimal
valores
com-
prendidos
255
direcci√≥n
IP
jer√°rquica
explorar
direcci√≥n
izquierda
derecha
obtiene
informaci√≥n
espec√≠fica
acerca
lugar
ubicado
host
Internet
red
red
redes
forma
similar
examinamos
direcci√≥n
postal
abajo
obtenemos
informaci√≥n
espec√≠fica
acerca
lugar
definido
direcci√≥n
2.5.1
Servicios
proporcionados
DNS
Acabamos
formas
identificar
host
nombre
host
direcci√≥n
IP
personas
prefieren
utilizar
identificador
nombre
host
f√°cil
recordar
routers
prefieren
emplear
direcciones
IP
longitud
fija
siguen
estructura
jer√°rquica
reconciliar
preferencias
nece-
sitamos
servicio
directorio
traduzca
nombres
host
direcciones
IP
tarea
principal
cabo
Sistema
nombres
dominio
DNS
Domain
Name
System
Internet
DNS
base
datos
distribuida
implementada
jerarqu√≠a
ser-vidores
DNS
protocolo
capa
aplicaci√≥n
permite
hosts
consultar
base
datos
distribuida
servidores
DNS
suelen
m√°quinas
UNIX
ejecutan
software
BIND
Berkeley
Internet
Name
Domain
Dominio
nombres
Internet
Berkeley
BIND
2009
protocolo
DNS
ejecuta
UDP
utiliza
puerto
53
protocolos
capa
aplicaci√≥n
HTTP
SMTP
FTP
emplean
habitual-
mente
DNS
traducir
nombres
host
suministrados
usuario
direcciones
IP
ejemplo
veamos
ocurre
navegador
cliente
HTTP
ejecuta
determinado
host
usuario
solicita
URL
www.unaescuela.edu/
index.html
host
usuario
enviar
mensaje
solicitud
HTTP
servidor
web
www.unaescuela.edu
host
usuario
obtener
lugar
direcci√≥n
IP
www.unaescuela.edu
m√°quina
cliente
ejecuta
cliente
aplicaci√≥n
DNS
navegador
extrae
nombre
host
www.unaescuela.edu
URL
pasa
nombre
host
cliente
aplicaci√≥n
DNS
cliente
DNS
env√≠a
consulta
contiene
nombre
host
servidor
DNS
cliente
DNS
recibe
finalmente
respuesta
incluye
direcci√≥n
IP
correspon-
diente
nombre
host
navegador
recibe
direcci√≥n
IP
servidor
DNS
iniciar
conexi√≥n
TCP
proceso
servidor
HTTP
localizado
puerto
80
direcci√≥n
126
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
126Podemos
ejemplo
DNS
a√±ade
retardo
adicional
ocasiones
sustancial
aplicaciones
Internet
utilizan
Afortunadamente
veremos
direcci√≥n
IP
deseada
almacenada
cach√©
servidor
DNS
ayuda
reducir
tr√°fico
red
DNS
retardo
servicio
DNS
DNS
proporciona
servicios
importantes
traducci√≥n
nombres
host
direcciones
IP
Alias
host
host
nombre
complicado
alias
ejem-
plo
nombre
host
relay1.west-coast.enterprise.com
digamos
alias
enterprise.com
www.enterprise.com
caso
nombre
host
relay1.west-coast.enterprise.com
nombre
host
can√≥nico
alias
nombres
host
normalmente
mne-
m√≥nicos
nombres
can√≥nicos
aplicaci√≥n
invocar
DNS
obtener
nombre
host
can√≥nico
determinado
alias
direcci√≥n
IP
host
Alias
servidor
correo
razones
obvias
enormemente
deseable
direcciones
correo
electr√≥nico
mnem√≥nicas
ejemplo
Benito
Hotmail
direcci√≥n
correo
simple
benito@hot-
mail.com
nombre
host
servidor
correo
Hotmail
complicado
mnem√≥nico
simplemente
hotmail.com
ejemplo
nombre
can√≥nico
parecido
relay1.west-coast.hotmail.com
aplicaci√≥n
correo
invocar
servicio
DNS
obtener
nombre
host
can√≥nico
determinado
alias
direcci√≥n
IP
host
regis-
tro
MX
v√©ase
permite
servidor
correo
servidor
web
empresa
nombres
host
alias
iguales
ejemplo
servidor
web
servidor
correo
empresa
llamar
enterprise.com
Distribuci√≥n
carga
DNS
emplea
distribuci√≥n
carga
servidores
replicados
servidores
web
replicados
sitios
carga
trabajo
cnn.com
replicados
servidores
ejecut√°ndose
ser-
vidor
sistema
terminal
distinto
teniendo
direcci√≥n
IP
servidores
web
replicados
asociado
conjunto
direcciones
IP
√∫nico
nombre
host
can√≥nico
base
datos
DNS
contiene
conjunto
direccio-
nes
IP
clientes
realizan
consulta
DNS
nombre
asignado
conjunto
direcciones
servidor
responde
conjunto
completo
direcciones
IP
rota
orden
direcciones
respuesta
normalmente
cliente
env√≠a
mensaje
solicitud
HTTP
direcci√≥n
IP
aparece
lugar
conjunto
rotaci√≥n
DNS
distribuye
tr√°fico
servidores
replicados
rota-
ci√≥n
DNS
emplea
correo
electr√≥nico
m√∫ltiples
servidores
correo
alias
Recientemente
empresas
distribuci√≥n
contenido
Akamai
Akamai
2009
utilizado
DNS
formas
sofisticadas
proporcionar
distribuci√≥n
contenido
web
v√©ase
Cap√≠tulo
DNS
especificado
documentos
RFC
1034
RFC
1035
actualizado
RFC
adicionales
sistema
complejo
tocado
aspec-
tos
b√°sicos
funcionamiento
lector
interesado
consultar
RFC
libro
Abitz
Liu
Abitz
1993
consultar
documento
retrospectivo
Mockape-
tris
1988
proporciona
agradable
descripci√≥n
DNS
DNS
asimismo
Mockapetris
2005
2.5
DNS
SERVICIO
DIRECTORIO
INTERNET
127
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
1272.5.2
funciona
DNS
presentar
alto
nivel
funciona
DNS
centraremos
servicio
traducci√≥n
nombre
host-direcci√≥n
IP
Suponga
determinada
aplicaci√≥n
ejemplo
navegador
web
lector
correo
ejecuta
host
usuario
necesita
traducir
nombre
host
direcci√≥n
IP
aplicaci√≥n
invocar√°
cliente
DNS
especificando
nombre
host
necesita
correspondiente
traducci√≥n
sistemas
basa-
UNIX
gethostbyname
llamada
funci√≥n
aplicaci√≥n
utiliza
cabo
traducci√≥n
Secci√≥n
2.7
veremos
aplicaci√≥n
Java
invocar
servicio
DNS
aplicaci√≥n
DNS
host
usuario
entra
fun-
cionamiento
enviando
mensaje
consulta
red
mensajes
consulta
respuesta
DNS
env√≠an
datagramas
UDP
puerto
53
Transcurrido
retardo
orden
milisegundos
segundos
servicio
DNS
host
usuario
recibe
mensaje
respuesta
DNS
proporciona
traducci√≥n
deseada
pasa
enton-
ces
aplicaci√≥n
invocado
perspectiva
dicha
aplicaci√≥n
ejecuta
host
usuario
DNS
caja
negra
proporciona
servicio
traducci√≥n
simple
directo
caja
negra
implementa
servicio
compleja
constando
n√∫mero
servidores
DNS
distribuidos
mundo
protocolo
capa
aplicaci√≥n
especifica
servidores
DNS
hosts
realizan
consultas
comunican
dise√±o
simple
DNS
servidor
DNS
contuviera
corres-
pondencias
nombres
direcciones
dise√±o
centralizado
clientes
simple-
mente
dirigir√≠an
consultas
servidor
DNS
responder√≠a
directamente
consultas
clientes
simplicidad
dise√±o
atrac-
tiva
inapropiado
red
Internet
causa
enorme
creciente
canti-
dad
hosts
problemas
dise√±o
centralizado
citar
siguientes
128
CAP√çTULO
CAPA
APLICACI√ìN
DNS
FUNCIONES
CR√çTICAS
RED
PARADIGMA
CLIENTE-SERVIDOR
HTTP
FTP
SMTP
protocolo
DNS
protocolo
capa
aplicaci√≥n
puesto
ejecuta
sistemas
terminales
comunicaci√≥n
utilizando
paradigma
cliente-servi-
dor
basa
protocolo
transporte
subyacente
extremo
extremo
transferir
mensajes
DNS
sistemas
terminales
comunicaci√≥n
punto
vista
funci√≥n
DNS
aplicaciones
web
transferencia
archivos
correo
electr√≥nico
diferencia
aplicaciones
DNS
aplicaci√≥n
usuario
interact√∫e
directamente
lugar
DNS
cabo
funciones
b√°si-
cas
Internet
traducir
nombres
hosts
direcciones
IP
subyacentes
aplica-
ciones
usuario
aplicaciones
software
Internet
mencionado
Secci√≥n
1.2
complejidad
arquitectura
Internet
fronteras
red
DNS
implementa
importante
proceso
traducci√≥n
nombres
direcciones
utilizan-
do
clientes
servidores
ubicados
frontera
red
ejemplo
dicha
filosof√≠a
dise√±o
PR√ÅCTICA
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
128‚Ä¢
√∫nico
punto
fallo
servidor
DNS
falla
falla
red
Internet
Volumen
tr√°fico
√∫nico
servidor
DNS
tendr√≠a
gestionar
consultas
DNS
solicitudes
HTTP
mensajes
correo
electr√≥nico
generados
cien-
tos
millones
hosts
Base
datos
centralizada
distante
√∫nico
servidor
DNS
cerca
clientes
efect√∫an
consultas
colocamos
√∫nico
servidor
DNS
ciu-
dad
York
consultas
Australia
deber√≠an
viajar
extremo
globo
enlaces
lentos
congestionados
retardos
significativos
Mantenimiento
√∫nico
servidor
DNS
tendr√≠a
mantener
registros
hosts
Internet
enorme
base
datos
centralizada
tendr√≠a
actualizada
frecuencia
incluir
hosts
resumen
base
datos
centralizada
almacenada
√∫nico
servidor
DNS
sim-
plemente
escalarse
consecuencia
sistema
DNS
utiliza
dise√±o
distri-
buido
DNS
estupendo
ejemplo
implementar
base
datos
distribuida
Internet
base
datos
jer√°rquica
distribuida
abordar
problema
escalado
DNS
utiliza
n√∫mero
servidores
organiza-
forma
jer√°rquica
distribuidos
mundo
servidor
DNS
dispone
correspondencias
hosts
Internet
lugar
corres-
pondencias
repartidas
servidores
DNS
aproximaci√≥n
pode-
mos
clases
servidores
DNS
servidores
DNS
ra√≠z
servidores
DNS
dominio
nivel
superior
TLD
Top-Level
Domain
servidores
DNS
autorita-
tivos
organizados
jerarqu√≠a
mostrada
Figura
2.19
com-
prender
clases
servidores
interact√∫an
suponga
cliente
DNS
desea
determinar
direcci√≥n
IP
correspondiente
nombre
host
www.amazon.com
aproximaci√≥n
lugar
siguientes
acontecimientos
cliente
con-
tacta
servidores
ra√≠z
devuelve
direcciones
IP
servi-
Figura
2.19
jerarqu√≠a
servidores
DNS
Servidores
DNS
.edu
Servidores
DNS
.org
Servidores
DNS
.com
Servidores
DNS
poly.edu
Servidores
DNS
yahoo.com
Servidores
DNS
amazon.com
Servidores
DNS
pbs.org
Servidores
DNS
umass.edu
Servidores
DNS
ra√≠z
2.5
DNS
SERVICIO
DIRECTORIO
INTERNET
129
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
129Figura
2.20
Servidores
DNS
ra√≠z
2009
nombre
organizaci√≥n
ubicaci√≥n
dores
TLD
dominio
nivel
superior
com
continuaci√≥n
cliente
contacta
servidores
TLD
devuelve
direcci√≥n
IP
servidor
autoritativo
ama-
zon.com
cliente
contacta
servidores
autoritativos
amazon.com
devuelve
direcci√≥n
IP
correspondiente
nombre
host
www.ama-
zon.com
examinaremos
proceso
b√∫squeda
DNS
detalle
lugar
echemos
vistazo
clases
servidores
DNS
Servidores
DNS
ra√≠z
Internet
13
servidores
DNS
ra√≠z
etiquetados
mayor√≠a
localizan
Am√©rica
Norte
Figura
2.20
muestra
mapa
octubre
2006
servidores
DNS
ra√≠z
disponible
lista
servidores
DNS
ra√≠z
actuales
Root-servers
2009
referencia
13
servidores
DNS
ra√≠z
fueran
√∫nico
servidor
servidor
realmente
agrupaci√≥n
cluster
servidores
replicados
prop√≥sitos
seguridad
fiabilidad
Servidores
dominio
nivel
superior
TLD
servidores
responsables
dominios
nivel
superior
com
org
net
edu
gov
dominios
nivel
superior
correspondientes
distintos
pa√≠ses
ejemplo
uk
fr
ca
jp
empresa
Network
Solutions
mantiene
servidores
TLD
dominio
nivel
superior
.com
empresa
Educause
mantiene
servidores
TLD
dominio
nivel
superior
.edu
Servidores
DNS
autoritativos
organizaciones
hosts
accesibles
p√∫blicamente
servidores
web
servidores
correo
Inter-
net
proporcionar
registros
DNS
accesibles
p√∫blicamente
establezcan
corres-
pondencia
nombres
dichos
hosts
direcciones
IP
servidor
DNS
autoritativo
organizaci√≥n
alberga
registros
DNS
organizaci√≥n
a.
c.
d.
g.
h.
j.
Verisign
Dulles
Cogent
Herndon
Angeles
Maryland
College
Park
MD
US
DoD
Viena
ARL
Aberdeen
MD
Verisign
21
localizaciones
i.
Autonomica
Estocolmo
28
localizaciones
k.
RIPE
Londres
16
localizaciones
m.
WIDE
Tokio
Seul
Par√≠s
San
Francisco
e.
f.
NASA
Mt
View
CA
Internet
Software
C.
Palo
Alto
CA
36
localizaciones
b.
l.
USC-ISI
Marina
Rey
CA
ICANN
Angeles
CA
130
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
130elegir
implementar
servidor
DNS
autoritativo
almacenar
registros
alternativamente
organizaci√≥n
pagar
registros
almacenados
servidor
DNS
autoritativo
proveedor
servicios
mayor√≠a
univer-
sidades
empresas
tama√±o
implementan
mantienen
servido-
res
DNS
autoritativos
principal
secundario
backup
servidores
DNS
ra√≠z
TLD
autoritativos
pertenecen
jerarqu√≠a
servi-
dores
DNS
muestra
Figura
2.19
tipo
importante
servidor
DNS
conocido
servidor
DNS
local
servidor
DNS
local
pertenece
estrictamente
jerarqu√≠a
servidores
obstante
importante
arquitectura
DNS
ISP
ejemplo
ISP
universidad
departamento
acad√©mico
empresa
residencial
servidor
DNS
local
denominado
servidor
nom-
bres
predeterminado
host
conecta
ISP
proporciona
host
direc-
ciones
IP
servidores
DNS
locales
normalmente
DHCP
veremos
Cap√≠tulo
determinar
f√°cilmente
direcci√≥n
IP
ser-
vidor
DNS
local
accediendo
ventanas
red
Windows
UNIX
Gene-
ralmente
servidor
DNS
local
host
cerca
host
caso
ISP
institucional
servidor
DNS
local
encontrarse
LAN
host
caso
ISP
residencial
separado
host
routers
host
realiza
consulta
DNS
env√≠a
servidor
DNS
local
act√∫a
proxy
reenviando
consulta
jerarqu√≠a
servidores
DNS
veremos
detalladamente
continuaci√≥n
Veamos
ejemplo
sencillo
Suponga
host
cis.poly.edu
desea
direcci√≥n
gaia.cs.umass.edu
Suponga
servidor
DNS
local
Uni-
versidad
Polit√©cnica
denomina
dns.poly.edu
servidor
DNS
autoritativo
gaia.cs.umass.edu
llama
dns.umass.edu
muestra
Figura
2.21
host
cis.poly.eduenv√≠a
lugar
mensaje
consulta
DNS
servidor
DNS
local
dns.poly.edu
mensaje
consulta
contiene
nombre
host
tra-
ducido
gaia.cs.umass.edu
servidor
DNS
local
reenv√≠a
consulta
servidor
DNS
ra√≠z
toma
sufijo
eduy
devuelve
servidor
DNS
local
lista
direc-
ciones
IP
servidores
TLD
responsables
dominio
.edu
servidor
DNS
local
reen-
v√≠a
continuaci√≥n
mensaje
consulta
servidores
TLD
servidor
TLD
toma
nota
sufijo
umass.edu
responde
direcci√≥n
IP
servidor
DNS
autorita-
tivo
correspondiente
Universidad
Massachusetts
dns.umass.edu
servidor
DNS
local
reenv√≠a
consulta
directamente
dns.umass.edu
res-
ponde
direcci√≥n
IP
gaia.cs.umass.edu
Observe
ejemplo
obtener
direcci√≥n
correspondiente
nombre
host
env√≠ado
mensajes
DNS
mensajes
consulta
mensajes
respuesta
veremos
almacenamiento
cach√©
DNS
reduce
tr√°fico
consultas
ejemplo
supon√≠amos
servidor
TLD
conoce
servidor
DNS
autori-
tativo
correspondiente
nombre
host
general
lugar
ser-
vidor
TLD
√∫nicamente
servidor
DNS
intermedio
servidor
DNS
autoritativo
nombre
host
ejemplo
suponga
Universidad
Massachusetts
servidor
DNS
universidad
denomi-
nado
dns.umass.edu
Suponga
departamentos
Uni-
versidad
Massachusetts
servidor
DNS
servidor
DNS
departamental
servidor
autoritativo
hosts
departamento
caso
servidor
DNS
intermedio
dns.umass.edurecibe
consulta
host
2.5
DNS
SERVICIO
DIRECTORIO
INTERNET
131
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
131Figura
2.21
Interacci√≥n
diversos
servidores
DNS
cuyo
nombre
termina
cs.umass.edu
devuelve
dns.poly.edu
direcci√≥n
IP
dns.cs.umass.edu
autoritativo
nombres
host
terminan
cs.umass.edu
servidor
DNS
local
dns.poly.eduenv√≠a
consulta
servi-
dor
DNS
autoritativo
devuelve
correspondencia
deseada
servidor
DNS
local
devuelve
correspondencia
host
solicitud
caso
env√≠ado
10
mensajes
ejemplo
mostrado
Figura
2.21
utiliza
consultas
recursivas
consultas
iterativas
consulta
enviada
cis.poly.edu
dns.poly.edu
consulta
recursiva
consulta
solicita
dns.poly.edu
obtenga
correspondencia
consultas
siguientes
iterativas
puesto
res-
puestas
devueltas
directamente
dns.poly.edu
teor√≠a
consulta
DNS
iterativa
recursiva
ejemplo
Figura
2.22
muestra
cadena
consultas
DNS
consultas
recursivas
pr√°ctica
consultas
normal-
mente
siguen
patr√≥n
mostrado
Figura
2.21
consulta
procedente
host
solicitud
servidor
DNS
local
recursiva
restantes
consultas
iterativas
Almacenamiento
cach√©
DNS
momento
ignorado
almacenamiento
cach√©
DNS
funcionalidad
extremadamente
importante
sistema
DNS
realidad
DNS
explota
exhaustivamente
Host
solicitante
cis.poly.edu
Servidor
DNS
local
Servidor
DNS
TLD
dns.poly.edu
Servidor
DNS
ra√≠z
Servidor
DNS
autoritativo
dns.umass.edu
gaia.cs.umass.edu
132
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
132Figura
2.22
Consultas
recursivas
DNS
almacenamiento
cach√©
mejorar
comportamiento
retardos
reducir
n√∫mero
mensajes
DNS
Internet
idea
esconde
almacenamiento
cach√©
DNS
simple
cadena
consultas
servidor
DNS
recibe
respuesta
DNS
contiene
ejemplo
corres-
pondencia
nombre
host
direcci√≥n
IP
almacenar
informaci√≥n
memoria
local
ejemplo
Figura
2.21
servidor
DNS
local
dns.poly.edu
recibe
respuesta
servidor
DNS
almacenar
cach√©
informaci√≥n
contenida
respuesta
relaci√≥n
nombre
host
direcci√≥n
IP
almacena
cach√©
servidor
DNS
llegan
consultas
servi-
dor
DNS
preguntando
nombre
host
servidor
DNS
proporcionar
direcci√≥n
IP
deseada
autoritativo
nombre
host
hosts
correspondencias
nombres
host
direcciones
IP
permanentes
servidores
DNS
descartan
informaci√≥n
almacenada
cach√©
periodo
tiempo
normalmente
ejemplo
suponga
host
apricot.poly.edu
consulta
dns.poly.edu
solicit√°ndole
direcci√≥n
IP
correspondiente
nombre
host
cnn.com
Suponga
horas
host
Universidad
Polit√©cnica
digamos
Host
solicitante
cis.poly.edu
Servidor
DNS
local
Servidor
DNS
TLD
dns.poly.edu
Servidor
DNS
ra√≠z
Servidor
DNS
autoritativo
dns.umass.edu
gaia.cs.umass.edu
2.5
DNS
SERVICIO
DIRECTORIO
INTERNET
133
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
133kiwi.poly.fr
consulta
dns.poly.eduespecificando
nom-
bre
host
Gracias
almacenamiento
cach√©
servidor
DNS
local
devolver
forma
inmediata
direcci√≥n
IP
cnn.com
host
solicitado
consultar
servidor
DNS
servidor
DNS
local
almacenar
cach√©
direcciones
IP
servidores
TLD
permitiendo
servidores
DNS
locales
saltarse
servidores
DNS
ra√≠z
cadena
consultas
ocurre
fre-
cuencia
2.5.3
Registros
mensajes
DNS
servidores
DNS
implementan
conjuntamente
base
datos
distribuida
DNS
almacenan
registros
recursos
RR
incluyendo
proporcionan
correspon-
dencias
nombre
host
direcci√≥n
IP
mensaje
respuesta
DNS
transporta
registros
recursos
subsecci√≥n
proporcionamos
introducci√≥n
recursos
mensajes
DNS
encontrar
informaci√≥n
detallada
Abitz
1993
RFC
DNS
RFC
1034
RFC
1035
registro
recurso
formado
siguientes
campos
Nombre
Valor
Tipo
TTL
TTL
tiempo
vida
registro
recurso
determina
recurso
deber√≠a
eliminado
cach√©
registros
ejemplo
dados
continuaci√≥n
ignorado
campo
TTL
significado
Nombrey
Valordepende
campo
Tipo
‚Ä¢S
Tipo
Nombre
nombre
host
Valor
direcci√≥n
IP
corres-
pondiente
nombre
registro
tipo
proporciona
corresponden-
cia
est√°ndar
nombre
host-direcci√≥n
IP
ejemplo
relay1.bar.foo.com
145.37.93.126
A)es
registro
tipo
A.
‚Ä¢S
Tipo
NS
Nombrees
dominio
foo.com
Valores
nombre
host
servidor
DNS
autoritativo
obtener
direcciones
IP
hosts
dominio
registro
utiliza
encaminar
consultas
DNS
cadena
consultas
ejemplo
foo.com
dns.foo.com
NS)es
registro
tipo
NS
‚Ä¢S
Tipo
CNAME
Valores
nombre
host
can√≥nico
correspondiente
alias
especificado
Nombre
registro
proporcionar
hosts
consul-
tas
nombre
can√≥nico
correspondiente
nombre
host
ejemplo
foo.com
relay1.bar.foo.com
CNAME)es
registro
CNAME
‚Ä¢S
Tipo
MX
Valor
nombre
can√≥nico
servidor
correo
alias
Nombre
ejemplo
foo.com
mail.bar.foo.com
MX
registro
MX
registros
MX
permiten
nombres
host
servidores
correo
alias
simples
Observe
utilizando
registro
MX
empresa
alias
servidor
correo
servidores
ejemplo
servidor
web
obtener
nombre
can√≥nico
servidor
correo
cliente
DNS
consultar√≠a
registro
MX
nombre
can√≥nico
servidor
consultar√≠a
registro
CNAME
servidor
DNS
autoritativo
determinado
nombre
host
servidor
DNS
contendr√°
registro
tipo
nombre
host
134
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
134el
servidor
DNS
autoritativo
contener
registro
tipo
cach√©
servidor
autoritativo
nombre
host
servidor
contendr√°
regis-
tro
tipo
NS
dominio
incluye
nombre
host
contendr√°
registro
tipo
proporcione
direcci√≥n
IP
servidor
DNS
campo
Valor
registro
NS
ejemplo
suponga
servidor
TLD
edu
autoritativo
host
gaia.cs.umass.edu
servidor
contendr√°
registro
dominio
incluye
host
gaia.cs.umass.edu
ejemplo
umass.edu
dns.umass.edu
NS
servidor
TLD
edutambi√©n
contendr√≠a
registro
tipo
establece
corres-
pondencia
servidor
DNS
dns.umass.edu
direcci√≥n
IP
dns.umass.edu
128.119.40.111
Mensajes
DNS
Anteriormente
secci√≥n
referencia
mensajes
respuesta
consul-
tas
DNS
√önicamente
clases
mensajes
DNS
mensa-
jes
respuesta
consulta
utilizan
formato
muestra
Figura
2.23
sem√°ntica
distintos
campos
mensaje
DNS
‚Ä¢L
secci√≥n
cabecera
contiene
serie
campos
campos
n√∫mero
16
bits
identifica
consulta
identificador
copia
mensaje
respuesta
consulta
permite
cliente
establecer
correspondencias
correctas
respuestas
recibidas
con-
sultas
enviadas
campo
Indicadores
incluyen
nombre
indica
serie
indicadores
indicador
consulta
respuesta
bit
informa
mensaje
consulta
respuesta
indicador
autoritativo
bit
activa
men-
saje
respuesta
servidor
DNS
servidor
autoritativo
nombre
soli-citado
Figura
2.23
Formato
mensajes
DNS
Identificaci√≥n
N√∫mero
cuestiones
N√∫mero
RR
autoridad
Campos
nombre
tipo
consulta
12
bytes
Registros
RR
respuesta
consulta
Registros
servidores
autoritativos
Informaci√≥n
ayuda
adicional
utilizar
Indicadores
N√∫mero
RR
respuesta
N√∫mero
RR
adicionales
Autoridad
n√∫mero
variable
registros
recursos
Informaci√≥n
adicional
n√∫mero
variable
registros
recursos
Respuestas
n√∫mero
variable
registros
recursos
Cuestiones
n√∫mero
variable
cuestiones
2.5
DNS
SERVICIO
DIRECTORIO
INTERNET
135
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
135El
indicador
recursi√≥n-deseada
bit
activa
cliente
host
ser-
vidor
DNS
desea
servidor
DNS
realice
recursi√≥n
disponga
registro
mensaje
respuesta
campo
recursi√≥n-disponible
bit
activa
servidor
DNS
soporta
recursi√≥n
cabecera
incluyen
cam-
pos
n√∫mero
indican
n√∫mero
apariciones
tipos
secciones
datos
siguen
cabecera
‚Ä¢L
secci√≥n
cuestiones
contiene
informaci√≥n
acerca
consulta
secci√≥n
incluye
campo
nombre
contiene
nombre
consul-
tar
campo
tipo
especifica
tipo
cuesti√≥n
plantea
acerca
nombre
ejemplo
direcci√≥n
host
asociada
nombre
tipo
servidor
correo
nombre
tipo
MX
‚Ä¢E
secci√≥n
respuestas
contiene
registros
recurso
nombre
consultado
originalmente
Recuerde
registro
recurso
par√°metro
Tipo
ejemplo
NS
CNAME
MX
par√°me-
tro
Valor
par√°metro
TTL
respuesta
devolver
registros
recur-
sos
nombre
host
asociadas
direcciones
IP
ejemplo
servidores
web
replicados
visto
anteriormente
secci√≥n
‚Ä¢L
secci√≥n
autoridad
contiene
registros
servidores
autoritativos
‚Ä¢L
informaci√≥n
adicional
contiene
registros
√∫tiles
ejemplo
campo
respuesta
mensaje
respuesta
consulta
MX
contiene
registro
recurso
proporciona
nombre
host
can√≥nico
servidor
correo
sec-
ci√≥n
informaci√≥n
adicional
contiene
registro
tipo
proporciona
direc-
ci√≥n
IP
nombre
host
can√≥nico
servidor
correo
gustar√≠a
enviar
mensaje
consulta
DNS
directamente
host
trabajando
servidor
DNS
hacerse
f√°cilmente
programa
nslookup
disponible
mayor√≠a
plataformas
Windows
UNIX
ejemplo
host
Windows
basta
abrir
aplicaci√≥n
S√≠mbolo
sistema
prompt
invocar
programa
nslookup
escribiendo
simplemente
nslookup
continuaci√≥n
enviar
consulta
DNS
servidor
DNS
ra√≠z
TLD
autoritativo
recibir
mensaje
respuesta
servidor
DNS
nslookup
mostrar√°
registros
incluidos
respuesta
formato
legible
personas
alternativa
ejecuci√≥n
nslookup
host
visitar
sitios
web
permiten
uti-
lizar
nslookup
forma
remota
basta
escribir
nslookup
motor
b√∫squeda
acceder
sitios
Inserci√≥n
registros
base
datos
DNS
exposici√≥n
centrado
recuperan
registros
base
datos
DNS
est√©
preguntando
introducen
registros
dicha
base
datos
Veamos
contexto
ejemplo
concreto
Suponga
creado
empresa
llamada
Network
Utopia
segura-
mente
desear√°
registrar
nombre
dominio
networkutopia.com
regis-
tro
registrador
entidad
comercial
verifica
unicidad
nombre
dominio
a√±ade
base
datos
DNS
veremos
percibe
peque√±as
tasas
servicios
1999
√∫nico
registrador
Network
Solutions
136
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
136ten√≠a
monopolio
registro
nombres
dominios
com
net
org
actualmente
entidades
registradoras
compiten
clientes
ICANN
Internet
Corporation
for
Assigned
Names
and
Numbers
Corporaci√≥n
Internet
nombres
n√∫meros
asignados
acredita
distintas
entidades
registradoras
direcci√≥n
http://www.internic.net
encontrar
lista
completa
enti-
dades
registrar
nombre
dominio
networkutopia.com
entidad
registra-
dora
proporcionarle
nombres
direcciones
IP
servidores
DNS
autoritativos
principal
secundario
Suponga
ejemplo
datos
dns1.networkutopia.com
dns2.networkutopia.com
212.212.212.1
212
212.212.2
servidores
registrador
asegura
intro-
duzca
registro
tipo
NS
registro
tipo
servidores
TLD
com
Espec√≠fi-
camente
servidor
autoritativo
principal
networkutopia.com
entidad
registradora
deber√°
insertar
siguientes
registros
recursos
sistema
DNS
networkutopia.com
dns1.networkutopia.com
NS
dns1.networkutopia.com
212.212.212.1
asegurarse
registro
recurso
tipo
servidor
web
www.networkutopia.com
registro
recurso
tipo
MX
servidor
correo
mail.networkutopia.com
introducido
servidores
DNS
autoritativos
contenidos
servidores
DNS
configuraban
est√°ticamente
ejemplo
archivo
configuraci√≥n
creado
administrador
sistema
recientemente
a√±adido
opci√≥n
actualizaci√≥n
UPDATE
proto-
colo
DNS
permite
a√±adir
borrar
din√°micamente
datos
base
datos
mensajes
DNS
documentos
RFC
2136
RFC
3007
especifican
actualiza-
ciones
din√°micas
DNS
completado
pasos
usuarios
visitar
sitio
web
enviar
correos
electr√≥nicos
empleados
empresa
terminar
exposi-
ci√≥n
verificando
afirmaci√≥n
verificaci√≥n
ayudar√°
con-
solidar
aprendido
DNS
Suponga
Alicia
Australia
desea
p√°gina
web
www.networkutopia.com
explicado
anterior-
mente
host
enviar√°
lugar
consulta
DNS
servidor
DNS
local
pondr√°
contacto
servidor
TLD
com
servidor
DNS
local
comunicarse
servidor
DNS
ra√≠z
cach√©
direcci√≥n
servidor
TLD
com
servidor
TLD
contendr√°
registros
recursos
tipo
NS
tipo
enumerados
anteriormente
entidad
registradora
almacenado
servidores
TLD
com
servidor
TLD
com
env√≠a
respuesta
servi-
dor
DNS
local
Alicia
conteniendo
dicha
respuesta
registros
recursos
con-
tinuaci√≥n
servidor
DNS
local
transmite
consulta
DNS
212.212.212.1
solicitando
registro
tipo
correspondiente
www.networkutopia.com
regis-
tro
proporciona
direcci√≥n
IP
servidor
web
deseado
ejemplo
212.212.71.4
servidor
DNS
local
pasa
host
Alicia
momento
navegador
Alicia
iniciar
conexi√≥n
TCP
host
212.212.71.4
enviar
solicitud
HTTP
podido
cosas
suceden
bastido-
res
navegamos
Web
2.5
DNS
SERVICIO
DIRECTORIO
INTERNET
137
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
137138
CAP√çTULO
CAPA
APLICACI√ìN
VULNERABILIDADES
DNS
visto
DNS
componente
fundamental
infraestructura
Internet
servicios
importantes
incluyen
aplicaciones
web
correo
elec-
tr√≥nico
funcionar
natural
preguntarse
atacado
DNS
DNS
blanco
f√°cil
espera
puesto
servicio
arrastran-
do
mayor√≠a
aplicaciones
Internet
tipo
ataque
viene
mente
ataque
DDoS
inundaci√≥n
ancho
banda
v√©ase
Secci√≥n
1.6
servidores
DNS
ejemplo
atacante
intentar
enviar
servidores
DNS
ra√≠z
cantidad
paquetes
tantos
consultas
DNS
leg√≠timas
fueran
contestadas
ataque
DDoS
escala
servidores
DNS
ra√≠z
lugar
realmente
21
octubre
2002
ataque
atacantes
utilizaron
botnet
enviar
enormes
cargas
mensa-
jes
ping
ICMP
13
servidores
DNS
ra√≠z
mensajes
ICMP
estudian
Cap√≠tulo
momento
basta
paquetes
ICMP
tipos
especiales
datagramas
IP
Afortunadamente
ataque
escala
caus√≥
da√±os
m√≠nimos
impacto
experiencia
Internet
usuarios
atacantes
dirigieron
√©xito
cantidad
paquetes
servidores
ra√≠z
servidores
protegi-
mecanismos
filtrado
paquetes
configurados
bloquear
mensajes
ping
ICMP
dirigidos
servidores
protegidos
resguarda-
funcionaron
normalmente
mayor√≠a
servidores
DNS
locales
ten√≠an
alma-
cenadas
cach√©
direcciones
IP
servidores
dominio
nivel
superior
permitiendo
procesamiento
consultas
ignorando
normalmente
servidores
DNS
ra√≠z
ataque
DDoS
potencialmente
efectivo
servidores
DNS
consistir√≠a
enviar
cantidad
consultas
DNS
servidores
dominio
alto
nivel
ejemplo
servidores
administren
dominio
.com
complicado
filtrar
consultas
DNS
dirigidas
servidores
DNS
servidores
dominio
nivel
superior
puenteados
f√°cilmente
servidores
ra√≠z
severidad
ataque
parcialmente
mitigada
almacenamiento
cach√©
servidores
DNS
locales
sistema
DNS
atacado
teor√≠a
maneras
ataque
intermediaci√≥n
man-in-the-middle
atacante
intercepta
consultas
hosts
devuelve
respuestas
falsas
ataque
envenenamiento
DNS
atacante
env√≠a
respuestas
falsas
servidor
DNS
enga√±√°ndole
almacene
cach√©
registros
falsos
Cualquiera
ataques
utilizarse
ejemplo
redirigir
usuario
web
inadvertido
sitio
web
atacante
ataques
dif√≠ciles
implemen-
tar
requieren
interceptar
paquetes
enga√±ar
servidores
Skoudis
2006
importante
ataque
DNS
ataque
servicio
DNS
aprove-
cha
infraestructura
DNS
lanzar
ataque
DDoS
host
objetivo
ejemplo
servidor
correo
universidad
ataque
atacante
env√≠a
consultas
DNS
servidores
DNS
autoritativos
incluyendo
consulta
direcci√≥n
origen
host
objetivo
servidores
DNS
enviar√°n
respuestas
directamente
host
objetivo
consultas
crearse
forma
respuesta
larga
bytes
consulta
conoce
amplificaci√≥n
atacante
SEGURIDAD
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
138podr√≠a
potencialmente
colapsar
host
objetivo
generar
tr√°fico
fecha
ataques
reflexi√≥n
explotan
DNS
√©xito
limitado
Mirkovic
2005
resumen
DNS
demostrado
sorprendentemente
robusto
frente
ataques
momento
habido
ataque
conseguido
interrumpir
√©xito
servicio
DNS
contrario
√©xito
ataques
reflexi√≥n
obstante
tipo
ataques
controlados
apropiada
configuraci√≥n
servidores
DNS
2.6
APLICACIONES
P2P
139
SEGURIDAD
2.6
Aplicaciones
P2P
aplicaciones
descritas
cap√≠tulo
momento
incluyendo
aplicaciones
web
correo
electr√≥nico
DNS
emplean
arquitecturas
cliente-servidor
dependen
medida
exista
infraestructura
servidores
activos
Recuerde
Secci√≥n
2.1.1
arquitectura
P2P
depende
m√≠nima-
mente
depende
absoluto
exista
infraestructura
servidores
activos
lugar
serie
parejas
hosts
conectados
forma
intermitente
deno-
minados
pares
peers
comunican
directamente
pares
propiedad
proveedor
servicios
computadoras
escritorio
port√°tiles
controlados
usuarios
secci√≥n
examinaremos
tipos
aplicaciones
particular-
mente
adaptadas
dise√±os
P2P.
distribuci√≥n
archivos
aplicaci√≥n
distribuye
archivo
√∫nico
origen
n√∫meros
pares
distribuci√≥n
archivos
punto
partida
investigar
funcionamiento
P2P
muestra
forma
clara
caracter√≠stica
auto-escalabilidad
arquitec-
turas
P2P.
ejemplo
espec√≠fico
distribuci√≥n
archivos
describir
popular
sistema
BitTorrent
aplicaci√≥n
P2P
examinaremos
base
datos
distribuida
comunidad
peers
tama√±o
aplicaci√≥n
usa-
remos
concepto
Tabla
hash
distribuida
DHT
Distributed
Hash
Table
aplicaci√≥n
estudiaremos
Skype
aplicaci√≥n
telefon√≠a
Internet
P2P
√©xito
2.6.1
Distribuci√≥n
archivos
P2P
Comenzaremos
incursi√≥n
P2P
considerando
aplicaci√≥n
corriente
dis-
tribuci√≥n
archivo
tama√±o
√∫nico
servidor
hosts
archivo
versi√≥n
sistema
operativo
Linux
parche
software
aplicaci√≥n
sistema
operativo
existentes
archivo
audio
MP3
archivo
v√≠deo
MPEG
distribuci√≥n
archivos
cliente-servidor
servidor
enviar
copia
archivo
pares
provocando
enorme
sobrecarga
servidor
consumiendo
cantidad
ancho
banda
distribuci√≥n
archivos
P2P
par
redistribuir
archivo
recibido
cualesquiera
pares
ayudando
servidor
cabo
proceso
distribuci√≥n
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
139Figura
2.24
Problema
distribuci√≥n
archivo
momento
escribir
l√≠neas
oto√±o
2009
protocolo
distribuci√≥n
archivos
P2P
popular
BitTorrent
BitTorrent
2009
Originalmente
desarrollado
Bram
Cohen
v√©ase
entrevista
Bram
Cohen
cap√≠tulo
exis-
ten
clientes
BitTorrent
independientes
distintos
cumplen
protocolo
Bit-
Torrent
diversos
navegadores
web
cumplen
protocolo
HTTP
subsecci√≥n
examinaremos
lugar
caracter√≠stica
auto-escalabilidad
arquitecturas
P2P
contexto
distribuci√≥n
archivos
describiremos
detalle
BitTorrent
destacando
funcionalidades
caracter√≠sticas
importantes
Escalabilidad
arquitecturas
P2P
comparar
arquitecturas
cliente-servidor
arquitecturas
P2P
ilustrar
auto-escalabilidad
inherente
P2P
considerar
modelo
cuanti-
tativo
simple
distribuci√≥n
archivo
conjunto
fijo
pares
tipos
arquitectura
muestra
Figura
2.24
servidor
pares
conecta-
Internet
enlaces
acceso
us
velocidad
carga
enlace
acceso
servidor
ui
velocidad
carga
enlace
acceso
par
di
velocidad
des-
carga
enlace
acceso
par
i.
tama√±o
bits
archivo
distri-
buir
n√∫mero
pares
desean
obtener
copia
archivo
tiempo
distribuci√≥n
tiempo
tardan
pares
obtener
copia
archivo
an√°lisis
tiempo
distribuci√≥n
proporcionamos
continuaci√≥n
ambas
arqui-
tecturas
simplificaci√≥n
generalmente
precisa
Akella
2003
supo-
ner
n√∫cleo
Internet
ancho
banda
suficiente
implica
cuellos
botella
encuentran
acceso
red
ser-
vidor
clientes
participando
aplicaci√≥n
red
Internet
Archivo
Servidor
us
u1
u2
u3
d1
d2
d3
u4
u5u6
d4
d5
d6
dN
140
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
1402.6
APLICACIONES
P2P
141
anchos
banda
carga
descarga
dedicados
completamente
distribuir
archivo
lugar
determinar
tiempo
distribuci√≥n
arquitectura
cliente-servidor
denotaremos
Dcs
arquitectura
pares
ayudan
distribuir
archivo
observaciones
siguientes
‚Ä¢E
pares
servidor
transmitir
NF
bits
Puesto
velocidad
carga
servidor
us
tiempo
distribuir
archivo
m√≠nimo
NF
us
‚Ä¢S
dm√≠n
velocidad
descarga
par
cuya
velocidad
descarga
menor
dm√≠n
m√≠n
d1,dp
dN
par
menor
velocidad
descarga
obtener
bits
archivo
dm√≠n
segundos
tiempo
m√≠nimo
distribu-
ci√≥n
dm√≠n
Teniendo
observaciones
obtiene
Dcs
m√°x
proporciona
l√≠mite
inferior
tiempo
distribuci√≥n
arquitectura
cliente-servidor
problemas
repaso
pedir√°
demuestre
servidor
planificar
transmisiones
l√≠mite
inferior
alcanzado
realmente
tomemos
l√≠mite
inferior
tiempo
distribuci√≥n
real
2.1
Ap
suficientemente
tiempo
distri-
buci√≥n
arquitectura
cliente-servidor
dada
NF
us
tiempo
dis-
tribuci√≥n
aumenta
linealmente
n√∫mero
pares
N.
ejemplo
n√∫mero
pares
multiplica
mil
semana
pasando
mil
mill√≥n
tiempo
necesario
distribuir
archivo
pares
ver√°
multiplicado
1.000
Hagamos
an√°lisis
similar
arquitectura
P2P
par
ayu-
servidor
distribuir
archivo
par
recibe
datos
archivo
utilizar
capacidad
carga
redistribuir
datos
pares
Calcular
tiempo
distribuci√≥n
arquitectura
P2P
complicado
arquitectura
cliente-servidor
tiempo
distribuci√≥n
depende
par
implicado
dis-
tribuya
partes
archivo
pares
obstante
obtenerse
expresi√≥n
simple
permite
calcular
tiempo
m√≠nimo
distribuci√≥n
Kumar
2006
debemos
siguientes
observaciones
‚Ä¢A
archivo
llegue
comunidad
pares
servidor
enviar
bit
archivo
enlace
acceso
tiempo
m√≠nimo
distribuci√≥n
m√≠nimo
us
diferencia
ocurre
esquema
cliente-servidor
bit
enviado
servidor
enviado
pares
distribuirlo
NF
us
dm√≠n
Dcs
m√°x
NF
us
dm√≠n
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
141‚Ä¢A
obtener
bits
archivo
dm√≠n
segundos
tiempo
m√≠nimo
distribuci√≥n
dm√≠n
‚Ä¢P
velocidad
carga
servidor
velocidades
carga
par
utotal
us
u1
uN.
sistema
suministrar
cargar
bits
peers
suministrando
NF
bits
velocidad
utotal
tiempo
m√≠nimo
distribuci√≥n
NF/(us
u1
Teniendo
observaciones
obtenemos
tiempo
m√≠nimo
distribuci√≥n
arquitectura
P2P
DP2P.
2.2
Ecuaci√≥n
2.2
proporciona
l√≠mite
inferior
tiempo
m√≠nimo
distribuci√≥n
arquitectura
P2P.
suponemos
peer
redistribuir
bit
recibe
esquema
redistribuci√≥n
permite
alcanzar
l√≠mite
infe-
rior
Kumar
2006
Demostraremos
caso
especial
resultado
problemas
repaso
realidad
redistribuyen
fragmentos
archivo
lugar
bits
indivi-
duales
Ecuaci√≥n
2.2
sirve
aproximaci√≥n
tiempo
m√≠nimo
distribu-
ci√≥n
real
tomar
l√≠mite
inferior
Ecuaci√≥n
2.2
tiempo
m√≠nimo
distribuci√≥n
real
2.3
Figura
2.25
compara
tiempo
m√≠nimo
distribuci√≥n
arquitecturas
cliente-
servidor
P2P
suponiendo
pares
velocidad
carga
u.
figura
establecido
hora
us
10u
dm√≠n
us
par
transmitir
archivo
completo
hora
velocidad
transmisi√≥n
servidor
10
velocidad
carga
par
simplificar
velocidades
descarga
pares
suficientemente
efecto
Figura
2.25
arquitectura
cliente-servidor
tiempo
distribuci√≥n
aumenta
linealmente
l√≠mite
medida
n√∫mero
pares
aumenta
arquitectura
P2P
tiempo
m√≠nimo
distribuci√≥n
menor
tiempo
distribuci√≥n
arquitectura
cliente-servidor
menor
hora
n√∫mero
pares
aplicaciones
emplean
arquitectura
P2P
auto-escalarse
escalabilidad
consecuencia
directa
pares
act√∫an
redistribuidores
consumidores
bits
BitTorrent
BitTorrent
popular
protocolo
P2P
distribuci√≥n
archivos
BitTorrent
2009
jerga
BitTorrent
colecci√≥n
pares
participan
distri-
us
dm√≠n
NF
us
ui
i=1
DP2P
m√°x
us
dm√≠n
NF
us
ui
i=1
DP2P
m√°x
142
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
142Figura
2.25
Tiempo
distribuci√≥n
arquitecturas
P2P
cliente-servidor
buci√≥n
determinado
archivo
conoce
torrent
torrente
peers
torrente
descargan
fragmentos
tama√±o
archivo
tama√±o
t√≠pico
fragmento
256
kBytes
par
une
torrente
fragmentos
archivo
tiempo
acumulando
fragmentos
descarga
fragmentos
actualiza
fragmentos
pares
par
adquirido
archivo
completo
ego√≠stamente
abandonar
torrente
forma
altruista
permanecer
continuar
suministrando
frag-
mentos
pares
par
abandonar
torrente
ins-
tante
subconjunto
fragmentos
volver
unirse
Veamos
cerca
opera
BitTorrent
Puesto
BitTorrent
sistema
protocolo
complejo
describir
mecanismos
importantes
dejar
margen
detalles
claramente
funciona
torrente
nodo
infraestructura
denominado
tracker
rastreador
par
une
torrente
registra
tracker
peri√≥dicamente
informa
torrente
tracker
pista
pares
participando
torrente
determinado
torrente
instante
n√∫mero
pares
participantes
alto
mil
muestra
Figura
2.26
par
Alicia
une
torrente
tracker
selecciona
aleatoriamente
subconjunto
pares
digamos
ejemplo
50
concretar
conjunto
peers
participantes
env√≠a
direcciones
IP
50
peers
Alicia
Teniendo
lista
pares
Alicia
intenta
establecer
conexiones
TCP
concurrentes
pares
incluidos
dicha
lista
Denominaremos
pares
Alicia
establecer
√©xito
conexi√≥n
TCP
pares
vecinos
Figura
2.26
vemos
Alicia
pares
vecinos
Normalmente
medida
pasa
tiempo
pares
abandonar
conexi√≥n
aparte
50
iniciales
intentar
establecer
conexiones
TCP
Alicia
pares
vecinos
determinado
par
ir√°n
variando
tiempo
10
15
20
25
300
Tiempo
m√≠nimo
distribuci√≥n
35
0,5
1,5
2,5
1,0
3,0
2,0
3,5
Cliente-servidor
P2P
2.6
APLICACIONES
P2P
143
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
143Figura
2.26
Distribuci√≥n
archivos
BitTorrent
determinado
instante
tiempo
peer
subconjunto
fragmentos
archivo
disponiendo
distintos
pares
subconjuntos
Peri√≥dicamente
Ali-
cia
preguntar√°
vecinos
conexiones
TCP
lista
fragmentos
disponen
Alicia
vecinos
obtendr√°
listas
frag-
mentos
informaci√≥n
Alicia
solicitar√°
conexiones
TCP
fragmentos
determinado
instante
Alicia
subconjunto
fragmen-
tos
sabr√°
fragmentos
vecinos
informaci√≥n
Alicia
tomar
importantes
decisiones
lugar
fragmentos
solicitar
vecinos
lugar
vecinos
enviar
fragmentos
solicitados
decidir
fragmentos
solicitar
Alicia
utiliza
t√©cnica
conocida
com√∫n
idea
determinar
fragmentos
fragmentos
comunes
vecinos
fragmentos
menor
n√∫mero
copias
repetidas
repartidas
vecinos
solicitar
pri-
mer
lugar
fragmentos
comunes
dichos
fragmentos
redistri-
buir√°n
r√°pidamente
consiguiendo
n√∫mero
copias
fragmento
torrente
determinar
solicitudes
responder
BitTorrent
utiliza
algoritmo
intercambio
inteligente
idea
b√°sica
Alicia
d√©
prioridad
vecinos
actualmente
suministrando
datos
velocidad
Espec√≠ficamente
vecinos
Alicia
mide
forma
continua
velocidad
recibe
bits
deter-
mina
pares
env√≠an
bits
velocidad
forma
rec√≠proca
env√≠a
fragmentos
pares
10
segundos
vuelve
Tracker
Comercio
fragmentos
Par
Obtener
lista
pares
Alicia
144
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
144calcular
velocidades
posiblemente
modificar
conjunto
formado
pares
jerga
BitTorrent
pares
filtrados
unchoked
importante
30
segundos
Alicia
elige
forma
aleatoria
vecino
adicional
env√≠a
fragmentos
Supongamos
par
elegido
aleato-
riamente
Benito
jerga
BitTorrent
Benito
filtrado
forma
optimista
Alicia
enviando
datos
Benito
convertirse
suministradores
principales
Benito
cuyo
caso
Benito
comenzar√≠a
enviar
datos
Alicia
velocidad
Benito
env√≠a
datos
Alicia
suficiente-
mente
alta
Benito
convertirse
suministrado-
res
principales
Alicia
palabras
30
segundos
Alicia
elegir√°
aleatoriamente
socio
intercambio
iniciar√°
transacciones
pares
satisfechos
intercambio
incluir√°n
respectivas
listas
principales
continuar√°n
realizando
intercambios
pares
encuentre
socio
efecto
pares
capaces
suministrar
datos
velocidades
compatibles
tienden
emparejarse
selecci√≥n
aleatoria
vecinos
permite
pares
obtener
fragmentos
intercambiar
pares
vecinos
pares
principales
par
prueba
filtrados
reciben
fragmentos
Alicia
BitTorrent
dispone
serie
interesantes
mecanismos
incluyen
gesti√≥n
piezas
mini-
fragmentos
procesamiento
cadena
selecci√≥n
aleatoria
fragmento
endgame
anti-snubbing
Cohen
2003
mecanismo
incentivos
intercambio
acabamos
describir
denomina
tit-for-tat
toma
daca
estrategia
teor√≠a
juegos
Cohen
2003
demostrado
esquema
incentivos
soslayarse
maliciosamente
Liogkas
2006
Locher
2006
Piatek
2007
obstante
ecosistema
BitTorrent
√©xito
b√°rbaro
millones
pares
simult√°neos
compartiendo
activamente
archivos
cientos
miles
torrentes
BitTorrent
hubiera
dise√±ado
estrategia
tit-for-tat
variante
resto
caracter√≠sticas
fueran
BitTo-
rrent
existiera
actualmente
usuarios
hubieran
pretendido
aprovecharse
Saroiu
2002
Guo
2005
Piatek
2007
proponen
interesantes
variantes
protocolo
BitTo-
rrent
aplicaciones
P2P
flujos
multimedia
directo
PPLive
ppstream
inspiradas
BitTorrent
Hei
2007
2.6.2
Tablas
hash
distribuidas
DHT
componente
cr√≠tico
aplicaciones
P2P
aplicaciones
distribuidas
√≠ndice
base
datos
simple
soporte
operaciones
b√∫squeda
actua-
lizaci√≥n
base
datos
distribuida
pares
cabo
opera-
ciones
almacenamiento
contenido
cach√©
enrutamiento
complejo
consultas
indexaci√≥n
informaci√≥n
realizaci√≥n
b√∫squedas
componente
cr√≠tico
sistemas
estudiar
continuaci√≥n
t√©cnica
popular
indexaci√≥n
b√∫squeda
tablas
hash
distribuidas
DHT
Distributed
Hash
Table
Veamos
construir
base
datos
distribuida
simple
n√∫mero
orden
millones
pares
permita
indexaci√≥n
realizaci√≥n
consultas
simples
informaci√≥n
almacenada
base
datos
formada
parejas
clave
valor
ejemplo
claves
n√∫meros
seguridad
social
valores
nom-
bres
correspondientes
personas
caso
pareja
clave
valor
ejemplo
2.6
APLICACIONES
P2P
145
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
145ser√≠a
156-45-7081
Johnny
Wu
claves
nombres
contenidos
ejemplo
nombres
pel√≠culas
albums
paquetes
software
valores
direcciones
IP
estuvieran
almacenados
dichos
contenidos
ejemplo
caso
pareja
clave-valor
Led
Zeppelin
IV
203.17.123.38
peers
consultar√°n
base
datos
suministrando
clave
parejas
clave
valor
base
datos
corresponden
clave
base
datos
devuelve
pares
correspon-
dientes
peer
consulta
ejemplo
base
datos
almacena
n√∫meros
seguridad
social
nombres
personas
asociados
peer
consultar
n√∫mero
concreto
seguridad
social
base
datos
devolver√°
nombre
persona
n√∫mero
pares
insertar
parejas
clave
valor
base
datos
construcci√≥n
base
datos
sencilla
arquitectura
cliente-
servidor
parejas
clave
valor
encuentran
almacenados
servidor
central
enfoque
centralizado
empleaba
sistemas
P2P
Napster
problema
significativamente
interesante
constituye
desa-
f√≠o
sistemas
distribuidos
formados
millones
pares
conectados
autoridad
central
sistema
P2P
desea
distribuir
parejas
clave
valor
pares
par
almacene
peque√±o
subconjunto
totalidad
parejas
clave
valor
m√©todo
sencillo
construir
base
datos
P2P
consiste
diseminar
aleatoria
parejas
clave
valor
pares
man-
par
lista
direcciones
IP
pares
participantes
par
realiza
consulta
enviarla
pares
pares
contienen
parejas
clave
valor
corresponden
clave
consultada
responder
parejas
apropiadas
m√©todo
absoluto
escalable
requerir√≠a
par
siguiera
pista
pares
posiblemente
millo-
nes
tendr√≠a
enviar
consulta
pares
Ac
P2P.
lugar
asignaremos
identificador
par
identi-
ficador
entero
comprendido
rango
fijo
Observe
identificador
expresarse
representaci√≥n
bits
necesario
clave
entero
perteneciente
rango
atento
claves
ejemplo
citadas
anteriormente
n√∫meros
seguridad
social
nombres
contenidos
multimedia
n√∫meros
enteros
generar
enteros
claves
utilizar
funci√≥n
hash
asocie
clave
ejemplo
n√∫mero
seguridad
social
n√∫mero
entero
comprendido
rango
funci√≥n
hash
funci√≥n
entra-
das
asociada
salida
entero
probabili-
dad
corresponda
salida
extremadamente
baja
lectores
est√©n
familiarizados
funciones
hash
consultar
Cap√≠tulo
estudian
funciones
detalle
asume
funci√≥n
hash
p√∫blicamente
dis-
ponible
peers
sistema
hablemos
clave
estaremos
referencia
funci√≥n
hash
clave
original
ejemplo
clave
original
Led
Zeppelin
IV
clave
n√∫mero
entero
valor
hash
Led
Zeppelin
IV
puesto
empleando
valores
hash
claves
lugar
claves
referiremos
base
datos
distri-
buida
tabla
hash
distribuida
DHT
Abordemos
problema
almacenar
parejas
clave
valor
tabla
DHT
cuesti√≥n
central
definir
regla
asignar
claves
pares
Puesto
par
146
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
146tiene
asociado
identificador
entero
clave
entero
contenido
rango
natural
asignar
pareja
clave
valor
peer
cuyo
identificador
clave
implementar
esquema
tendremos
definir
que-
remos
convenios
adoptar
conveniencia
definir
peer
inmediato
sucesor
clave
Veamos
ejemplo
Supongamos
caso
identificadores
peers
claves
encuentran
rango
15
Supongamos
tam-
bi√©n
peers
sistema
siguientes
identificadores
10
12
15
supongamos
deseamos
almacenar
pareja
clave-valor
11
Johnny
Wu
pares
par
Aplicando
convenio
pr√≥-
ximo
par
12
inmediato
sucesor
clave
11
almacenaremos
par
11
Johnny
Wu
par
12
completar
definici√≥n
establecemos
clave
exactamente
identificadores
par
almacenaremos
pareja
clave-valor
par
clave
identificadores
par
aplicaremos
convenio
m√≥dulo
2n
almacenando
pareja
clave-valor
par
identificador
peque√±o
Imaginemos
par
Alicia
desea
insertar
pareja
clave-valor
tabla
DHT
Conceptualmente
sencillo
lugar
determina
par
cuyo
identi-
ficador
clave
continuaci√≥n
env√≠a
mensaje
par
d√°ndole
instrucciones
almacenar
pareja
clave
valor
determina
Alicia
par
cuyo
identificador
clave
Alicia
tuviera
pares
sistema
identificadores
correspondientes
direcciones
IP
determinar
localmente
par
m√©todo
requiere
par
controlados
restantes
pares
tabla
DHT
totalmente
impracti-
cable
sistema
escala
formado
millones
pares
DHT
circular
afrontar
problema
escala
consideremos
disponemos
pares
c√≠rculo
disposici√≥n
circular
par
controlar
inmediato
sucesor
m√≥dulo
Figura
2.27(a
muestra
ejemplo
disposici√≥n
circular
caso
exactamente
pares
ejem-
plo
par
consciente
existencia
inmediato
sucesor
ejem-
plo
par
conoce
direcci√≥n
IP
identificador
par
acerca
restantes
pares
DHT
disposici√≥n
circular
pares
caso
especial
red
solapada
red
solapada
pares
forman
red
l√≥gica
abstracta
reside
red
computadoras
subyacente
formada
enlaces
f√≠sicos
routers
hosts
enlaces
red
solapada
enla-
ces
f√≠sicos
simplemente
uniones
virtuales
parejas
pares
red
solapada
Figura
2.27(a
pares
enlaces
solapados
red
solapada
Figura
2.27(b
peers
16
enlaces
solapados
Normalmente
enlace
solapado
utiliza
enlaces
f√≠sicos
routers
red
subyacente
Utilizando
red
solapada
circular
Figura
2.27(a
suponemos
par
desea
determinar
par
tabla
DHT
responsable
clave
11
insertar
con-
sultar
pareja
clave
valor
Utilizando
red
solapada
par
origen
par
crea
mensaje
responsable
clave
11
env√≠a
mensaje
sucesor
par
par
recibe
mensaje
conoce
identificador
sucesor
determinar
responsable
clave
cuesti√≥n
2.6
APLICACIONES
P2P
147
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
147Figura
2.27
DHT
circular
peer
desea
determinar
responsable
clave
11
DHT
circular
atajos
par
responsable
clave
simplemente
env√≠a
mensaje
suce-
sor
ejemplo
par
recibe
mensaje
pregunta
clave
11
determina
responsable
sucesor
clave
simplemente
pasa
mensaje
sucesor
par
proceso
con-
tin√∫a
mensaje
llega
par
12
determina
par
clave
11
punto
par
12
devolver
mensaje
origen
par
informando
responsable
clave
11
DHT
circular
proporciona
soluci√≥n
elegante
reducir
cantidad
informaci√≥n
solapada
gestionar
par
resumen
par
consciente
existencia
pares
inmediato
sucesor
inmediato
predecesor
defecto
par
existencia
predecesor
env√≠a
mensajes
soluci√≥n
introduce
problema
par
√∫nicamente
consciente
pares
vecinos
encontrar
nodo
responsable
clave
caso
nodos
DHT
reenviar
mensaje
siguiendo
contorno
c√≠r-
culo
media
enviar√°n
N/2
mensajes
dise√±ar
DHT
llegar
compromiso
n√∫mero
vecinos
par
n√∫mero
mensajes
DHT
nece-
sita
enviar
resolver
√∫nica
consulta
par
pares
solapamiento
malla
enviar
mensaje
consulta
par
controlar
pares
DHT
circular
par
consciente
existencia
pares
env√≠an
N/2
mensajes
media
consulta
Afortunadamente
ajustar
dise√±o
DHT
n√∫mero
vecinos
par
n√∫mero
mensajes
consulta
mantenga
tama√±o
aceptable
mejora
consistir√≠a
utilizar
red
sola-
pada
circular
base
a√±adir
atajos
par
controlado
inmediato
sucesor
n√∫mero
relativamente
peque√±o
pares
atajo
dispersos
c√≠rculo
Figura
2.27(b
muestra
ejemplo
DHT
circular
atajos
atajos
emplean
agilizar
enrutamiento
mensajes
consulta
Espec√≠ficamente
par
recibe
mensaje
consultar
responsable
clave
11
a.
b.
10
12
15
10
12
15
148
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
148una
clave
reenv√≠a
mensaje
vecino
sucesor
vecinos
atajo
pr√≥-
ximo
clave
Figura
2.27(b
par
recibe
mensaje
preguntando
clave
11
determina
par
clave
vecinos
vecino
atajo
10
continuaci√≥n
reenv√≠a
mensaje
directamente
par
10
Evidente-
mente
atajos
reducir
forma
significativa
n√∫mero
mensajes
utilizado
procesar
consulta
consecuencia
pregunta
debemos
plantearnos
vecinos
atajo
par
pares
deber√≠an
vecinos
atajo
investigadores
dedicado
esfuerzo
resolver
cuesti√≥n
Stoica
2001
Rowstron
2001
Ratna-
samy
2001
Zhao
2004
Maymounkov
2002
Garces-Erce
2003
demostrado
DHT
dise√±ar
n√∫mero
vecinos
par
n√∫mero
mensajes
consulta
O(log
n√∫mero
pares
tipo
dise√±o
proporciona
compromiso
satisfactorio
soluciones
extremas
emplear
topolog√≠as
solapadas
red
malla
redes
circulares
Abandono
pares
sistemas
P2P
par
entrar
salir
sistema
avisar
dise√±ar
DHT
preocuparnos
actualizar
red
solapada
DHT
teniendo
fen√≥meno
abandono
pares
proporcionar
imagen
gene-
ral
consideremos
DHT
circular
Figura
2.27(a
gestionar
abandono
pares
tendremos
par
controlados
sucesores
conozca
direcciones
IP
ejemplo
par
localizados
pares
necesitare-
mos
par
verifique
peri√≥dicamente
sucesores
activos
ejem-
plo
envi√°ndoles
peri√≥dicamente
mensajes
ping
solicit√°ndoles
respuestas
Consideremos
actualiza
DHT
par
abandona
repentinamente
sistema
ejemplo
supongamos
par
Figura
2.27(a
abandona
red
caso
pares
anteriores
detectan
abandonado
responde
mensajes
ping
pares
actualizar
informaci√≥n
indica
sucesores
Veamos
par
actualiza
informaci√≥n
par
sustituye
sucesor
par
sucesor
par
8)
continuaci√≥n
par
pide
sucesor
par
8)
identificador
direcci√≥n
IP
sucesor
inmediato
par
10
par
par
10
sucesor
problemas
repaso
deber√°
determinar
actualizar√≠a
par
informaci√≥n
enrutamiento
red
solapada
visto
ocurre
par
abandona
red
consideremos
pasa
par
une
DHT
Supongamos
par
cuyo
identificador
13
desea
unirse
DHT
momento
existencia
par
DHT
par
13
deber√≠a
enviar
lugar
mensaje
par
preguntando
cu√°-
predecesor
sucesor
mensaje
reenviado
DHT
llegar
par
12
dar√°
predecesor
13
sucesor
actual
par
15
pasar√°
sucesor
13
continuaci√≥n
par
12
env√≠a
informa-
ci√≥n
acerca
predecesor
sucesor
par
13
unirse
DHT
par
15
sucesor
notificando
par
12
modificar
sucesor
inme-
diato
13
2.6
APLICACIONES
P2P
149
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
149Las
DHT
utilizan
ampliamente
pr√°ctica
ejemplo
BitTorrent
utiliza
DHT
Kademlia
crear
tracker
distribuido
BitTorrent
clave
identificador
torrente
valor
direcciones
IP
pares
participando
actualmente
torrente
Falkner
2007
Neglia
2007
consultar
DHT
identificador
torrente
par
BitTorrent
reci√©n
llegado
determinar
par
responsable
identificador
encarga
pares
existentes
torrente
localizado
par
par
reci√©n
llegado
consultarle
obtener
lista
pares
torrente
DHT
emplean
ampliamente
sistema
compartici√≥n
archivos
eMule
localizaci√≥n
con-
pares
Liang
2006
2.6.3
Caso
estudio
telefon√≠a
Internet
P2P
Skype
Skype
aplicaci√≥n
P2P
inmensamente
popular
suele
orden
millones
usuarios
conectados
simult√°neamente
proporcionar
servi-
cio
telefon√≠a
Internet
PC
PC
Skype
ofrece
servicios
telefon√≠a
PC
tel√©fono
tel√©fono
PC
videoconferencia
PC
PC
Fundada
emprendedores
crearon
FastTrack
Kazaa
Skype
adquirida
eBay
2005
2.600
millones
d√≥lares
Skype
utiliza
t√©cnicas
P2P
serie
formas
innovadoras
ilustran
perfecci√≥n
utilizarse
P2P
aplicaciones
all√°
distribuci√≥n
contenido
compartici√≥n
archivos
sucede
mensajer√≠a
instant√°-
nea
telefon√≠a
Internet
PC
PC
inherentemente
P2P
puesto
base
aplicaci√≥n
parejas
usuarios
peers
comunic√°ndose
tiempo
real
Skype
emplea
t√©cnicas
P2P
importantes
funciones
ubicaci√≥n
usuarios
NAT
transversal
propietarios
protocolos
Skype
transmi-
siones
paquetes
Skype
paquetes
voz
control
cifradas
informaci√≥n
contenida
sitio
web
Skype
serie
estudios
t√©cni-
cos
investigadores
logrado
determinar
funciona
Skype
t√©rminos
generales
Baset
2006
Guha
2006
Chen
2006
Suh
2006
Ren
2006
sucede
Fast-
Track
nodos
Skype
organizados
red
jer√°rquica
superpuesta
par
clasifica
super
par
par
normal
Skype
incluye
√≠ndice
asigna
nombres
usuario
Skype
direcciones
IP
actuales
n√∫meros
puertos
√≠ndice
distribuido
super
pares
Alicia
llamar
Benito
cliente
Skype
busca
√≠ndice
distribuido
determinar
direcci√≥n
IP
actual
Benito
Puesto
protocolo
Skype
propietario
actualmente
organizadas
asignaciones
√≠ndice
super
pares
posi-
ble
emplee
tipo
organizaci√≥n
DHT
emplean
t√©cnicas
P2P
retransmisores
relays
Skype
establecer
llamadas
hosts
situados
redes
dom√©sticas
configuraciones
redes
dom√©sticas
proporcionan
acceso
Internet
router
normalmente
router
inal√°mbrico
routers
realidad
simples
routers
sue-
len
incluir
mecanismo
Traducci√≥n
direcciones
red
NAT
Network
Address
Translator
Estudiaremos
mecanismos
NAT
Cap√≠tulo
√∫nico
necesitamos
mecanismo
NAT
impide
host
situado
red
150
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
150dom√©stica
inicie
conexi√≥n
host
situado
red
interlocuto-
res
Skype
activados
mecanismos
NAT
producir√°
problema
aceptar
llamada
iniciada
aparentemente
llamadas
imposibles
utilizaci√≥n
inteligente
super
pares
retransmiso-
res
permite
resolver
forma
elegante
problema
Suponga
momento
ini-
ciar
Alicia
sesi√≥n
asigna
super
par
mecanismo
NAT
Alicia
iniciar
sesi√≥n
super
par
NAT
proh√≠be
sesiones
iniciadas
red
dom√©stica
permite
Alicia
super
par
intercambiar
mensajes
control
sesi√≥n
sucede
Benito
inicia
sesi√≥n
Alicia
llamar
Benito
informa
super
par
informa
super
par
Benito
informa
Benito
acerca
llamada
entrante
Alicia
Benito
acepta
lla-
mada
super
pares
seleccionan
tercer
super
par
NAT
nodo
retransmisor
cuyo
trabajo
consistir√°
retransmitir
datos
Alicia
Benito
super
pares
Benito
Alicia
instrucciones
Benito
Alicia
respectivamente
iniciar
sesi√≥n
retransmisor
Alicia
enviar√°
paquetes
voz
retransmisor
conexi√≥n
Alicia-retransmisor
iniciada
Alicia
retransmisor
reen-
viar√°
paquetes
conexi√≥n
retransmisor-Benito
iniciada
Benito
paquetes
enviados
Benito
Alicia
fluyen
cone-
xiones
retransmisi√≥n
orden
inverso
Problema
resuelto
Benito
Alicia
dispon-
dr√°n
conexi√≥n
terminal
terminal
demanda
aceptar
sesi√≥n
origen
red
LAN
utilizaci√≥n
retrans-
misores
ilustra
dise√±o
sofisticado
sistemas
P2P
pares
llevan
cabo
servicios
b√°sicos
sistema
ejemplos
ser√≠an
servicio
√≠ndice
retransmisi√≥n
tiempo
utilizan
servicio
usuario
ejemplo
descarga
archivos
telefon√≠a
IP
sistema
P2P
proporciona
Skype
aplicaci√≥n
Internet
extraordinario
√©xito
utilizada
dece-
nas
millones
usuarios
enormemente
r√°pida
adopci√≥n
global
Skype
compartici√≥n
archivos
P2P
Web
mensajer√≠a
instant√°nea
anteriormente
prueba
palpable
sabidur√≠a
inherente
dise√±o
arquitect√≥nico
global
Internet
dise√±o
pod√≠a
previsto
enorme
amplio
conjunto
aplicacio-
nes
Internet
desarrollar√≠an
30
a√±os
siguientes
servicios
red
ofrecidos
aplicaciones
Internet
transporte
datagramas
conexi√≥n
UDP
transfe-
rencia
fiable
datagramas
orientada
conexi√≥n
TCP
interfaz
sockets
direccio-
namiento
sistema
nombres
DNS
demostrado
capaces
permitir
desarrollo
miles
aplicaciones
Puesto
aplicaciones
construido
capas
inferiores
pila
protocolos
Internet
necesi-
desarrollen
programas
cliente-servidor
peer-to-peer
emplearlos
sistemas
usuario
permitido
aplicaciones
implan-
ten
adopten
forma
extraordinariamente
r√°pida
2.7
Programaci√≥n
sockets
TCP
examinado
serie
importantes
aplicaciones
red
escriben
pr√°ctica
programas
aplicaciones
redes
secci√≥n
escribiremos
programas
aplicaci√≥n
utilizan
TCP
secci√≥n
veremos
escriben
programas
UDP
2.7
PROGRAMACI√ìN
SOCKETS
TCP
151
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
151Recuerde
Secci√≥n
2.1
aplicaciones
red
compuestas
pareja
programas
programa
cliente
programa
servidor
residen
siste-
terminales
distintos
ejecutan
programas
crean
proceso
cliente
proceso
servidor
procesos
comunican
leyendo
escri-
biendo
sockets
crea
aplicaci√≥n
red
tarea
principal
desarrollador
escribir
c√≥digo
programas
cliente
servidor
tipos
aplicaciones
red
implementaci√≥n
est√°ndar
protocolo
definido
ejemplo
RFC
tipo
implementacio-
nes
programas
cliente
servidor
adaptarse
reglas
dictadas
RFC
ejemplo
programa
cliente
implementaci√≥n
cliente
proto-
colo
FTP
descrito
Secci√≥n
2.3
definido
expl√≠citamente
documento
RFC
959
forma
similar
programa
servidor
implementaci√≥n
protocolo
servi-
dor
FTP
definido
expl√≠citamente
documento
RFC
959
desarro-
llador
escribe
c√≥digo
programa
cliente
desarrollador
independiente
escribe
c√≥digo
programa
servidor
desarrolladores
siguen
cuidadosamente
reglas
marcadas
RFC
programas
capaces
interoperar
Ciertamente
aplicaciones
red
actuales
implican
comunicaci√≥n
programas
cliente
servidor
creados
desarrolladores
independientes
ejemplo
navegador
Firefox
comunic√°ndose
servidor
web
Apache
cliente
FTP
PC
cargando
archivo
servidor
FTP
Linux
programa
cliente
programa
servidor
implementa
protocolo
definido
RFC
emplear
n√∫mero
puerto
asociado
protocolo
n√∫meros
puerto
explicado
brevemente
Sec-
ci√≥n
2.1
tratan
detalladamente
Cap√≠tulo
tipo
aplicaci√≥n
red
aplicaciones
propietarias
caso
pro-
tocolo
capa
aplicaci√≥n
utilizado
programas
cliente
servidor
cumplir
necesariamente
recomendaci√≥n
RFC
existente
√∫nico
desarrollador
equipo
desarrollo
crea
programa
cliente
programa
servidor
desarrollador
control
completo
incluye
c√≥digo
c√≥digo
implementa
protocolo
dominio
p√∫blico
desarrolladores
inde-
pendientes
desarrollar
c√≥digo
interopere
aplicaci√≥n
hora
crear
aplicaci√≥n
propietaria
desarrollador
cuidado
utilizar
n√∫meros
puerto
conocidos
definidos
documentos
RFC
secci√≥n
examinar
problemas
fundamentales
desarrollo
aplicaciones
propietarias
cliente-servidor
fase
desarrollo
primeras
decisiones
desarrollador
tomar
aplicaci√≥n
ejecutar√°
TCP
UDP
Recuerde
TCP
orientado
conexi√≥n
proporciona
canal
fiable
flujo
bytes
transmiten
datos
sistemas
termi-
nales
UDP
protocolo
conexi√≥n
env√≠a
paquetes
datos
indepen-
dientes
sistema
terminal
tipo
garant√≠a
acerca
entrega
secci√≥n
desarrollar
aplicaci√≥n
cliente
simple
ejecute
TCP
secci√≥n
desarrollaremos
aplicaci√≥n
cliente
simple
ejecute
UDP
Presentamos
aplicaciones
TCP
UDP
Java
Podr√≠amos
escrito
c√≥digo
C++
optado
Java
principalmente
lenguaje
aplicaciones
escriben
forma
clara
n√≠tida
Java
utilizan
l√≠neas
c√≥digo
l√≠nea
explicarse
programador
inexperto
demasiada
dificultad
asustarse
familiarizado
Java
experiencia
programaci√≥n
lenguaje
deber√≠a
seguir
c√≥digo
f√°cilmente
152
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
152Figura
2.28
Procesos
comunic√°ndose
sockets
TCP
lectores
est√©n
interesados
programaci√≥n
cliente-servidor
disponibles
referencias
Donahoo
2001
Stevens
1997
Frost
1994
Kurose
1996
2.7.1
Programaci√≥n
sockets
TCP
Recuerde
Secci√≥n
2.1
procesos
ejecutan
m√°quinas
comunican
enviando
mensajes
sockets
Dijimos
proceso
an√°logo
vivienda
socket
proceso
an√°logo
puerta
mues-
tra
Figura
2.28
socket
puerta
proceso
aplicaci√≥n
TCP
desarro-
llador
aplicaci√≥n
dispone
control
situado
capa
aplicaci√≥n
socket
control
capa
trans-
porte
peque√±o
desarrollador
aplicaci√≥n
posibilidad
fijar
par√°metros
TCP
tama√±o
m√°ximo
buffer
tama√±o
m√°ximo
segmento
examinemos
detalle
interacci√≥n
programas
cliente
servi-
dor
cliente
corresponde
iniciar
contacto
servidor
reac-
cionar
contacto
inicial
cliente
preparado
implica
cosas
lugar
programa
servidor
durmiendo
ejecut√°ndose
proceso
cliente
trate
iniciar
contacto
lugar
programa
servidor
disponer
tipo
puerta
precisamente
socket
acepte
contacto
inicial
procedente
proceso
cliente
est√©
ejecu-
tando
host
arbitrario
Utilizando
analog√≠a
vivienda
puerta
pro-
ceso
socket
ocasiones
referiremos
contacto
inicial
cliente
diciendo
equivalente
llamar
puerta
entrada
proceso
servidor
ejecut√°ndose
proceso
cliente
iniciar
conexi√≥n
TCP
servidor
programa
cliente
creando
socket
cliente
crea
socket
especifica
direcci√≥n
proceso
servidor
direcci√≥n
IP
2.7
PROGRAMACI√ìN
SOCKETS
TCP
153
Proceso
Host
servidor
Host
servidor
Controlado
desarrollador
aplicaciones
Controlado
desarrollador
aplicaciones
Proceso
TCP
buffers
variables
Internet
Controlado
sistema
operativo
Controlado
sistema
operativo
TCP
buffers
variables
Socket
Socket
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
153del
host
servidor
n√∫mero
puerto
proceso
servidor
creado
socket
programa
cliente
protocolo
TCP
cliente
inicia
proceso
fases
establece
conexi√≥n
servidor
proceso
fases
lugar
capa
transporte
completamente
transparente
programas
cliente
servi-
dor
proceso
fases
proceso
cliente
llama
puerta
entrada
proceso
servidor
servidor
escucha
llamada
crea
puerta
forma
precisa
socket
dedicado
cliente
concreto
ejemplo
puerta
entrada
objeto
ServerSocket
deno-
minamos
socketAcogida
cliente
llama
puerta
programa
invoca
m√©todo
accept
socketAcogida
crea
puerta
cliente
fase
negociaci√≥n
existir√°
conexi√≥n
TCP
socket
cliente
socket
servidor
sucesivo
referiremos
socket
dedicado
servidor
nombre
socket
conexi√≥n
servidor
perspectiva
aplicaci√≥n
conexi√≥n
TCP
conducto
virtual
directo
socket
cliente
socket
conexi√≥n
servidor
proceso
cliente
enviar
bytes
arbitrarios
socket
TCP
garantiza
proceso
servidor
reci-
bir√°
socket
conexi√≥n
byte
orden
enviado
TCP
proporciona
servicio
fiable
flujo
bytes
procesos
cliente
ser-
vidor
personas
entrar
salir
puerta
proceso
cliente
env√≠a
bytes
socket
recibir-
forma
similar
proceso
servidor
recibir
enviar
bytes
socket
conexi√≥n
ilustra
Figura
2.29
Puesto
sockets
desempe√±an
papel
fundamental
aplicaciones
cliente-servidor
desarrollo
tipo
aplicaciones
suele
denominar
programaci√≥n
sockets
proporcionar
ejemplo
aplicaci√≥n
cliente-servidor
resulta
√∫til
explicar
concepto
flujo
flujo
secuencia
caracteres
entran
salen
proceso
flujo
flujo
entrada
flujo
salida
proceso
flujo
entrada
asociado
tipo
fuente
entrada
proceso
ejemplo
entrada
est√°ndar
teclado
socket
fluyan
datos
procedentes
Internet
flujo
salida
asociado
dispositivo
salida
proceso
salida
est√°ndar
monitor
socket
fluyan
datos
Internet
2.7.2
Ejemplo
aplicaci√≥n
cliente-servidor
Java
utilizar
aplicaci√≥n
cliente-servidor
simple
demostrar
pro-
gramar
socket
TCP
UDP
cliente
lee
l√≠nea
entrada
est√°ndar
teclado
env√≠a
soc-
ket
servidor
servidor
lee
l√≠nea
socket
conexi√≥n
servidor
pasa
l√≠nea
caracteres
may√∫scula
servidor
env√≠a
l√≠nea
modificada
socket
conexi√≥n
cliente
cliente
lee
l√≠nea
modificada
socket
muestra
salida
est√°ndar
monitor
154
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
154Figura
2.29
Socket
cliente
socket
acogida
socket
conexi√≥n
Figura
2.30
ilustra
actividad
relativa
sockets
cliente
servidor
continuaci√≥n
proporcionamos
pareja
programas
cliente-servidor
imple-
mentaci√≥n
TCP
aplicaci√≥n
Realizaremos
an√°lisis
detallado
l√≠nea
l√≠nea
programas
nombre
programa
cliente
TCPCliente.java
nombre
programa
servidor
TCPServidor.java
√©nfasis
cuestiones
fundamentales
proporcionado
intencionada
c√≥digo
funciona
correc-
tamente
prueba
balas
c√≥digo
realmente
tendr√≠a
l√≠neas
auxiliares
programas
compilados
respectivos
hosts
programa
servidor
ejecuta
host
servidor
crea
proceso
servidor
host
mencionado
anteriormente
proceso
servidor
espera
contactado
proceso
cliente
aplicaci√≥n
ejemplo
programa
cliente
ejecuta
crea
proceso
cliente
proceso
contacta
inmediatamente
servidor
establece
conexi√≥n
TCP
usuario
cliente
utilizar
aplicaci√≥n
enviar
l√≠nea
recibir
continuaci√≥n
l√≠nea
escrita
letras
may√∫sculas
TCPCliente.java
c√≥digo
cliente
aplicaci√≥n
import
java.io
import
java.net
class
TCPCliente
public
static
void
main(String
argv
throws
Exception
String
frase
Proceso
cliente
Proceso
servidor
Socket
cliente
Socket
acogida
welcoming
socket
fases
Socket
conexi√≥n
bytes
bytes
2.7
PROGRAMACI√ìN
SOCKETS
TCP
155
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
155String
fraseModificada
BufferedReader
entradaDesdeUsuario
new
BufferedReader
new
InputStreamReader(System.in
Socket
socketCliente
new
Socket(‚Äúnombrehost
6789
DataOutputStream
salidaAServidor
new
DataOutputStream
socketCliente.getOutputStream
BufferedReader
entradaDesdeServidor
new
BufferedReader(new
InputStreamReader
socketCliente.getInputStream
frase
entradaDesdeUsuario.readLine
salidaAServidor.writeBytes(frase
\n
modifiedSentence
entradaDesdeServidor.readLine
System.out.println(‚ÄúDEL
SERVIDOR
fraseModificada
socketCliente.close
Figura
2.30
Aplicaci√≥n
cliente-servidor
utiliza
servicios
transporte
orientados
conexi√≥n
Crear
socket
port
solicitud
entrante
Servidor
socketAcogida
ServerSocket
Ejecuci√≥n
hostid
Cliente
Establecimiento
conexi√≥n
TCPEsperar
solicitud
conexi√≥n
entrante
socketConexion
socketAcogida.accept
Leer
solicitud
socketConexion
Escribir
respuesta
socketConexion
Cerrar
socketConexion
Crear
socket
conectado
hostid
port
socketCliente
Socket
Enviar
solicitud
usando
socketCliente
Leer
respuesta
socketCliente
Cerrar
socketCliente
156
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
156Figura
2.31
TCPclientetiene
flujos
transmiten
caracteres
programa
TCPCliente
crea
flujos
socket
muestra
Figura
2.31
socket
denomina
socketCliente
flujo
entradaDesdeUsuario
flujo
entrada
programa
asociado
entrada
est√°ndar
teclado
usuario
escribe
caracteres
teclado
caracteres
entran
flujo
entradaDesdeU-
suario
flujo
entradaDesdeServidores
flujo
entrada
programa
aso-
ciado
socket
caracteres
llegan
procedentes
flujo
red
entran
flujo
entradaDesdeUsuario
flujo
salidaAServidor
flujo
salida
programa
asociado
socket
caracteres
env√≠a
cliente
flujo
red
entran
flujo
salidaAServidor
Comentemos
distintas
l√≠neas
forman
c√≥digo
import
java.io
import
java.net
java.ioy
java.netson
paquetes
Java
paquete
java.iocontiene
clases
flu-
jos
entrada
salida
concreto
paquete
java.io
contiene
clases
Buffere-
dReader
DataOutputStream
clases
utiliza
programa
crear
flujos
anteriormente
mencionados
paquete
java.net
proporciona
clases
soporte
red
particular
contiene
clases
Socket
ServerSocket
objeto
socket-
Clientede
programa
deriva
clase
Socket
Proceso
Teclado
Flujo
salida
Flujo
entrada
Monitor
Flujo
entrada
salidaAServidor
entradaDesdeUsuario
entradaDesdeServidor
socketCliente
Socket
TCP
capa
transporte
capa
transporte
2.7
PROGRAMACI√ìN
SOCKETS
TCP
157
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
157class
TCPCliente
public
static
void
main(String
argv
throws
Exception
momento
visto
encontrar
principio
mayor√≠a
c√≥digos
Java
l√≠nea
principio
bloque
definici√≥n
clase
palabra
clave
class
inicia
definici√≥n
clase
cuyo
nombre
TCP-
Cliente
clase
contiene
variables
m√©todos
variables
m√©todos
encierran
llaves
establecen
principio
bloque
definici√≥n
clase
clase
TCPClienteno
variable
clase
exactamente
m√©todo
m√©todo
main
m√©todos
similares
funciones
procedimientos
lenguajes
ejemplo
m√©todo
main
lenguaje
Java
fun-
ci√≥n
main()de
C++
int√©rprete
Java
ejecuta
aplicaci√≥n
invocado
clase
controla
aplicaci√≥n
comienza
llamando
m√©todo
main
clase
m√©todo
main
llama
restantes
m√©todos
necesarios
ejecutar
apli-
caci√≥n
introducci√≥n
programaci√≥n
sockets
Java
ignorar
pala-
bras
clave
public
static
void
main
throws
Exceptions
incluirlas
c√≥digo
String
frase
String
fraseModificada
l√≠neas
anteriores
declaran
objetos
tipo
String
objeto
frase
cadena
escrita
usuario
enviada
servidor
objeto
fraseModificada
cadena
pro-
porcionada
servidor
enviada
salida
est√°ndar
usuario
BufferedReader
entradaDesdeUsuario
new
BufferedReader
new
InputStreamReader(System.in
l√≠nea
crea
objeto
flujo
entradaDesdeUsuario
tipo
Buffered
Rea-
der
flujo
entrada
inicializa
System.in
asocia
flujo
entrada
est√°n-
comando
permite
cliente
leer
texto
introducido
teclado
Socket
socketCliente
new
Socket(‚Äúnombrehost
6789
l√≠nea
crea
objeto
socketCliente
tipo
Socket
inicia
conexi√≥n
TCP
cliente
servidor
cadena
nombrehost
sustituirse
nombre
host
servidor
ejemplo
apple.poly.edu
conexi√≥n
TCP
inicie
realmente
cliente
realiza
b√∫squeda
DNS
nombre
host
obtener
direcci√≥n
IP
correspondiente
n√∫mero
6789
n√∫mero
puerto
utilizar
n√∫mero
puerto
asegurarse
utilizar
n√∫mero
puerto
servidor
aplicaci√≥n
mencionado
anterioridad
direcci√≥n
IP
host
n√∫mero
puerto
aplicaci√≥n
identifi-
can
proceso
servidor
DataOutputStream
salidaAServidor
new
DataOutputStream(socketCliente.getOutputStream
BufferedReader
entradaDesdeServidor
new
BufferedReader(new
inputStreamReader
socketCliente.getInputStream
158
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
158Las
l√≠neas
anteriores
crean
objetos
flujo
asociados
socket
flujo
salida-
AServidorproporciona
salida
proceso
socket
flujo
entradaDesdeSer-
vidorproporciona
entrada
proceso
socket
v√©ase
Figura
2.31
frase
entradaDesdeServidor.readLine
l√≠nea
introduce
texto
escrito
usuario
cadena
frase
cadena
frase
contin√∫a
recopilando
caracteres
usuario
termina
l√≠nea
introduciendo
retorno
carro
l√≠nea
pasa
entrada
est√°ndar
flujo
entradaDes-
deUsuarioa
cadena
frase
salidaAServidor.writeBytes(frase
\n
l√≠nea
introduce
cadena
frase
retorno
carro
adicional
flujo
salidaAServidor
cadena
aumentada
fluye
socket
cliente
entra
canal
TCP
cliente
espera
recibir
caracteres
procedentes
servidor
fraseModificada
entradaDesdeServidor.readLine
llegan
caracteres
servidor
entran
flujo
entradaDesdeServidor
almacenan
cadena
fraseModificada
caracteres
contin√∫an
acumul√°ndose
modifiedSentencehasta
l√≠nea
termina
car√°cter
retorno
carro
System.out.println(‚ÄúDEL
SERVIDOR
fraseModificada
l√≠nea
muestra
monitor
cadena
fraseModificadadevuelta
servi-
dor
socketCliente.close
l√≠nea
cierra
socket
cierra
conexi√≥n
TCP
cliente
servidor
TCP
cliente
env√≠e
mensaje
TCP
TCP
servidor
v√©ase
Secci√≥n
3.5
TCPServidor.java
veamos
programa
servidor
import
java.io
import
java.net
class
TCPServidor
public
static
void
main(String
argv
throws
Exception
String
fraseCliente
String
fraseMayusculas
ServerSocket
socketAcogida
new
ServerSocket
6789
while(true
Socket
socketConexion
socketAcogida.accept
BufferedReader
entradaDesdeCliente
new
BufferedReader(new
InputStreamReader
socketConexion.getInputStream
DataOutputStream
salidaACliente
2.7
PROGRAMACI√ìN
SOCKETS
TCP
159
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
159new
DataOutputStream
socketConexion.getOutputStream
fraseCliente
entradaDesdeCliente.readLine
fraseMayusculas
fraseCliente.toUpperCase
\n
salidaACliente.writeBytes(fraseMayusculas
TCPServidor
similitudes
TCPCliente
Analicemos
l√≠neas
TCPServidor.java
comentaremos
l√≠neas
id√©nticas
similares
comandos
programa
TCPCliente.java
l√≠nea
TCPServidor
completamente
distinta
visto
TCPCliente
ServerSocket
socketAcogida
new
ServerSocket(6789
l√≠nea
crea
objeto
socketAcogida
cuyo
tipo
ServerSocket
objeto
socket-
Acogidaes
puerta
escucha
cliente
llama
socketAcogida
escu-
cha
n√∫mero
puerto
6789
l√≠nea
Socket
socketConexion
socketAcogida
.accept
l√≠nea
crea
socket
denominado
socketConexion
cliente
env√≠a
solicitud
socketAcogida
socket
n√∫mero
puerto
6789
Cap√≠tulo
explicaremos
sockets
n√∫mero
puerto
TCP
establece
continuaci√≥n
canal
virtual
directo
socketCliente
cliente
socketConexionen
servidor
cliente
servidor
enviarse
bytes
canal
bytes
llegan
orden
establecido
socketConexion
servidor
continuar
escucha
solicitudes
procedentes
clientes
dirigidas
aplicaci√≥n
utilizando
socketAcogida
versi√≥n
pro-
grama
pone
realmente
escucha
solicitudes
conexi√≥n
modificar
utilizando
hebras
haga
programa
crea
continuaci√≥n
obje-
tos
flujo
datos
an√°logos
objetos
flujo
datos
socketCliente
Fij√©mo-
l√≠nea
fraseMayusculas
fraseCliente.toUpperCase
\n
comando
n√∫cleo
aplicaci√≥n
Toma
l√≠nea
enviada
cliente
pasa
caracteres
may√∫scula
a√±ade
retorno
carro
Utiliza
m√©todo
toUpperCase
restantes
comandos
programa
fundamentales
emplean
comu-
nicaci√≥n
cliente
probar
programas
instale
compile
TCPCliente.java
host
TCPServidor.java
Aseg√∫rese
incluir
nombre
host
apropiado
servi-
dor
TCPCliente.java
continuaci√≥n
ejecute
servidor
TCPServidor.class
programa
servidor
compilado
crea
proceso
servidor
inactivo
contactado
cliente
continuaci√≥n
ejecute
cliente
TCPCliente.class
programa
cliente
compilado
crea
proceso
cliente
160
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
1602.8
PROGRAMACI√ìN
SOCKETS
UDP
161
establece
conexi√≥n
TCP
procesos
cliente
servidor
utilizar
aplicaci√≥n
escriba
cadena
caracteres
seguida
retorno
carro
desarrollar
aplicaci√≥n
cliente-servidor
comenzar
modificando
ligeramente
programas
ejemplo
lugar
letras
may√∫sculas
servidor
contar
n√∫mero
aparece
letra
devolver
n√∫mero
2.8
Programaci√≥n
sockets
UDP
visto
secci√≥n
procesos
comunican
TCP
existiera
conducto
pipe
conducto
mantiene
procesos
cierra
procesos
desea
enviar
bytes
simplemente
inserta
bytes
conducto
proceso
env√≠o
asocia
direc-
ci√≥n
destino
bytes
conducto
conectado
l√≥gicamente
destino
Ade-
conducto
proporciona
canal
fiable
flujo
bytes
secuencia
bytes
recibida
proceso
receptor
exactamente
emisor
insert√≥
conducto
UDP
permite
procesos
est√©n
ejecut√°ndose
hosts
dife-
rentes
comuniquen
UDP
diferencia
TCP
puntos
funda-
mentales
lugar
UDP
servicio
conexi√≥n
fase
inicial
negociaci√≥n
establezca
conducto
comunicaci√≥n
procesos
UDP
dispone
conducto
proceso
desea
enviar
lote
bytes
proceso
proceso
emisor
asociar
direcci√≥n
proceso
destino
lote
bytes
hacerse
lote
bytes
proceso
emi-
sor
desee
transmitir
Veamos
analog√≠a
Considere
grupo
20
personas
toman
taxis
dirigirse
destino
personas
subiendo
taxis
informan
conductor
lugar
desean
UDP
similar
servicio
taxi
direcci√≥n
destino
tupla
formada
direcci√≥n
IP
host
destino
n√∫mero
puerto
proceso
destino
conjunto
formado
lote
bytes
infor-
maci√≥n
direcci√≥n
IP
destino
n√∫mero
puerto
denominarlo
paquete
UDP
proporciona
modelo
servicio
fiable
orientado
mensaje
m√°ximo
esfuerzo
suministrar
lote
bytes
destino
servicio
orientado
mensaje
sentido
lotes
bytes
env√≠an
√∫nica
operaci√≥n
emisor
entregados
lote
extremo
recepci√≥n
contrasta
sem√°ntica
flujo
bytes
TCP
UDP
servicio
entrega
esfuerzo
best
effort
garantiza
lote
bytes
entregado
servicio
UDP
diferencia
enormemente
aspectos
modelo
servicio
fiable
flujo
bytes
TCP
creado
paquete
proceso
emisor
pone
red
socket
Continuando
analog√≠a
taxis
socket
emisor
taxi
esperando
paquete
taxi
pone
marcha
dirige
direcci√≥n
des-
tino
paquete
taxi
garantiza
finalmente
paquete
llegue
direcci√≥n
destino
taxi
averiar
sufrir
tipo
imprevisto
palabras
UDP
proporciona
servicio
transporte
fiable
procesos
comunicaci√≥n
garantiza
paquete
llegue
destino
secci√≥n
ilustrar
programaci√≥n
sockets
volviendo
desarrollar
aplicaci√≥n
secci√≥n
ocasi√≥n
UDP
Compro-
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
161baremos
c√≥digo
UDP
c√≥digo
TCP
puntos
importantes
particular
fase
inicial
procesos
necesita
socket
acogida
flujos
asociados
sockets
host
emisor
crea
paquetes
asociando
direcci√≥n
IP
destino
n√∫mero
puerto
lote
bytes
desea
enviar
proceso
receptor
desenmara√±ar
paquete
recibido
obtener
bytes
informaci√≥n
paquete
Recordemos
sencilla
aplicaci√≥n
cliente
lee
l√≠nea
entrada
est√°ndar
teclado
env√≠a
soc-
ket
servidor
servidor
lee
l√≠nea
socket
servidor
convierte
l√≠nea
may√∫sculas
servidor
env√≠a
l√≠nea
modificada
cliente
socket
cliente
lee
l√≠nea
modificada
socket
muestra
salida
est√°ndar
monitor
Figura
2.32
destaca
actividad
principal
relativa
sockets
cliente
ser-
vidor
comunican
servicio
transporte
conexi√≥n
UDP
Figura
2.32
Aplicaci√≥n
cliente-servidor
utiliza
servicios
transporte
conexi√≥n
Crear
socket
port
solicitud
entrante
Servidor
socketServidor
DatagramSocket
Ejecuci√≥n
hostid
Cliente
Leer
solicitud
socketServidor
Escribir
respuesta
especificando
n√∫mero
puerto
direcci√≥n
host
cliente
socketServidor
Crear
direcci√≥n
hostid
port
enviar
solicitud
datagrama
usando
socketCliente
Crear
socket
socketCliente
DatagramSocket
Leer
respuesta
socketCliente
Cerrar
socketCliente
162
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
162UDPCliente.java
c√≥digo
cliente
aplicaci√≥n
import
java.io
import
java.net
class
UDPCliente
public
static
void
main(String
args
throws
Exception
BufferedReader
entradaDesdeUsuario
new
BufferedReader(new
InputStreamReader
System.in
DatagramSocket
socketCliente=
new
DatagramSocket
InetAddress
DireccionIP
InetAddress.getByName(‚Äúnombrehost
byte
enviarDatos
new
byte[1024
byte
recibirDatos
new
byte[1024
String
frase
entradaDesdeUsuario.readLine
enviarDatos
frase.getBytes
DatagramPacket
enviarPaquete
new
DatagramPacket(enviarDatos
enviarDatos.length
DireccionIP
9876
socketCliente.send(enviarPaquete
DatagramPacket
recibirPaquete
new
DatagramPacket(recibirDatos
recibirDatos.length
socketCliente.receive(recibirPaquete
String
fraseModificada
new
String(recibirPaquete.getData
System.out.println(‚ÄúDEL
SERVIDOR
fraseModificada
socketCliente.close
muestra
Figura
2.33
programa
UDPCliente.javacrea
flujo
soc-
ket
nombre
socket
socketCliente
tipo
DatagramSocket
Observe
UDP
utiliza
cliente
clase
socket
TCP
concreto
UDP
nues-
tro
cliente
utiliza
tipo
DatagramSocket
TCP
cliente
emple-
aba
Socket
flujo
entradaDesdeUsuario
flujo
entrada
programa
conectado
entrada
est√°ndar
teclado
Ten√≠amos
flujo
equivalente
versi√≥n
TCP
programa
usuario
escribe
caracteres
teclado
entran
flujo
entradaDesdeUsuario
diferencia
ocurre
TCP
caso
flujos
entrada
salida
asociados
socket
lugar
introdu-
cir
bytes
flujo
asociado
objeto
Socket
UDP
introducir√°
paquetes
individuales
objeto
DatagramSocket
Echemos
vistazo
l√≠neas
c√≥digo
significativamente
diferen-
tes
programa
TCPCliente.java
2.8
PROGRAMACI√ìN
SOCKETS
UDP
163
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
163DatagramSocket
socketCliente=
new
DatagramSocket
l√≠nea
crea
objeto
socketClientede
tipo
DatagramSocket
contraste
TCP-
Cliente.java
l√≠nea
inicia
conexi√≥n
TCP
concreto
cliente
pone
contacto
host
servidor
ejecutar
l√≠nea
raz√≥n
constructor
Data-
gramSocket
toma
argumentos
nombre
host
servidor
n√∫mero
puerto
Utilizando
analog√≠a
puertas
conductos
ejecuci√≥n
l√≠nea
crea
puerta
proceso
cliente
crea
conducto
pro-
cesos
InetAddress
DireccionIP
InetAddress.getByName(‚Äúnombrehost
enviar
bytes
proceso
destino
necesitamos
direcci√≥n
proceso
direcci√≥n
direcci√≥n
IP
host
destino
l√≠nea
invoca
b√∫squeda
DNS
traduzca
nombre
host
ejemplo
suministrado
c√≥digo
desarro-
llador
direcci√≥n
IP
versi√≥n
TCP
programa
cliente
invocaba
DNS
aun-
hac√≠a
impl√≠cita
lugar
expl√≠cita
m√©todo
getByName()toma
argumento
nombre
host
servidor
devuelve
direcci√≥n
IP
almacena
dicha
direcci√≥n
objeto
DireccionIPde
tipo
InetAddress
byte
enviarDatos
new
byte[1024
byte
recibirDatos
new
byte[1024
164
CAP√çTULO
CAPA
APLICACI√ìN
Proceso
Teclado
Paquete
datagramas
UDP
Paquete
datagramas
UDP
Monitor
Flujo
entrada
enviarPaquete
entradaDesdeUsuario
recibirPaquete
socketCliente
Socket
UDP
capa
transporte
capa
transporte
Figura
2.33
UDPClienttiene
flujo
socket
acepta
paquetes
proceso
suministra
paquetes
proceso
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
164Los
arrays
bytes
enviarDatos
recibirDatos
almacenar√°n
datos
cliente
env√≠a
recibe
respectivamente
enviarDatos
frase.getBytes
l√≠nea
realiza
b√°sicamente
conversi√≥n
tipos
Toma
cadena
frase
renombra
enviarDatos
array
bytes
DatagramPacket
enviarPaquete
new
DatagramPacket
enviarDatos
enviarDatos.length
DireccionIP
9876
l√≠nea
construye
paquete
enviarPaquete
cliente
introducir√°
red
tra-
v√©s
socket
paquete
incluye
datos
contenidos
paquete
enviarDatos
longitud
datos
direcci√≥n
IP
servidor
n√∫mero
puerto
aplicaci√≥n
definido
9876
Observe
enviarPaquetees
tipo
DatagramPac-
ket
socketCliente.send(enviarPaquete
l√≠nea
m√©todo
send
objeto
socketCliente
toma
paquete
acaba
crear
introduce
red
socketCliente
Observe
UDP
env√≠a
l√≠nea
caracteres
forma
TCP
TCP
sim-
plemente
insertaba
cadena
caracteres
flujo
datos
conexi√≥n
l√≥gica
directa
servidor
UDP
crea
paquete
incluye
direcci√≥n
servidor
enviar
paquete
cliente
espera
recibir
paquete
procedente
servidor
DatagramPacket
recibirPaquete
new
DatagramPacket(recibirDatos
recibirDatos.length
l√≠nea
cliente
crea
contenedor
paquete
recibirPaquete
objeto
tipo
DatagramPacket
espera
recibir
paquete
servidor
socketCliente.receive(recibirPaquete
cliente
inactivo
recibe
paquete
llega
almacena
reci-
birPaquete
String
fraseModificada
new
String(recibirPaquete.getData
l√≠nea
extrae
datos
recibirPaquete
realiza
conversi√≥n
tipos
convirtiendo
array
bytes
cadena
fraseModificada
System.out.println(‚ÄúDEL
SERVIDOR
fraseModificada
l√≠nea
aparece
TCPCliente
muestra
cadena
fraseModificadaen
monitor
cliente
socketCliente.close
2.8
PROGRAMACI√ìN
SOCKETS
UDP
165
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
165Esta
l√≠nea
cierra
socket
Puesto
UDP
proporciona
servicio
conexi√≥n
l√≠nea
cliente
env√≠e
mensaje
capa
transporte
servidor
dife-
rencia
caso
TCPCliente
UDPServidor.java
Veamos
servidor
aplicaci√≥n
import
java.io
import
java.net
class
UDPServidor
public
static
void
main(String
args
throws
Exception
DatagramSocket
socketServidor
new
DatagramSocket(9876
byte
recibirDatos
new
byte[1024
byte
enviarDatos
new
byte[1024
while(true
DatagramPacket
recibirPaquete
new
DatagramPacket(recibirDatos
recibirDatos.length
socketServidor.receive(recibirPaquete
String
frase
new
String
recibirPaquete.getData
InetAddress
DireccionIP
recibirPaquete.getAddress
int
puerto
recibirPaquete.getPort
String
fraseMayusculas
frase.toUpperCase
enviarDatos
fraseMayusculas.getBytes
DatagramPacket
enviarPaquete
new
DatagramPacket(enviarDatos
enviarDatos.length
DireccionIP
puerto
socketServidor.send(enviarPaquete
programa
UDPServidor.java
crea
socket
muestra
Figura
2.34
nombre
socket
socketServidor
objeto
tipo
DatagramSocket
socket
cliente
aplicaci√≥n
flujos
asociados
socket
Examinemos
l√≠neas
c√≥digo
TCPServidor.java
DatagramSocket
socketServidor
new
DatagramSocket(9876
l√≠nea
crea
socketServidor
tipo
DatagramSocket
puerto
9876
datos
enviados
recibidos
pasar√°n
socket
Puesto
UDP
pro-
166
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
166porciona
servicio
conexi√≥n
crear
socket
continuar
escu-
chando
captar
solicitudes
conexi√≥n
TCPServidor.java
clientes
acceden
aplicaci√≥n
enviar√°n
paquetes
puerta
socketServidor
String
frase
new
String(recibirPaquete.getData
InetAddress
DireccionIP
recibirPaquete.getAddress
int
puerto
recibirPaquete.getPort
l√≠neas
anteriores
decodifican
paquete
llega
procedente
cliente
pri-
mera
extrae
datos
paquete
almacena
cadena
frase
l√≠nea
similar
programa
UDPCliente
l√≠nea
extrae
direcci√≥n
IP
l√≠nea
extrae
n√∫mero
puerto
cliente
elegido
cliente
n√∫mero
puerto
servidor
9876
cap√≠tulo
estudiaremos
detalle
n√∫meros
puerto
cliente
Necesariamente
servidor
obtener
direc-
ci√≥n
IP
n√∫mero
puerto
cliente
devolverle
texto
convertido
may√∫sculas
cliente
completa
an√°lisis
programas
UDP
probar
aplicaci√≥n
instale
compile
UDPCliente.javaen
host
UDPServidor.javaen
host
Ase-
g√∫rese
incluir
nombre
host
apropiado
servidor
programa
UDPCliente
java
continuaci√≥n
ejecute
programas
respectivos
hosts
diferencia
TCP
ejecutar
cliente
servidor
raz√≥n
proceso
cliente
intenta
establecer
conexi√≥n
servidor
ejecu-
tarse
programa
cliente
ejecutado
programas
cliente
servidor
utilizar
aplicaci√≥n
escribiendo
l√≠nea
cliente
2.8
PROGRAMACI√ìN
SOCKETS
UDP
167
Proceso
Paquete
datagramas
UDP
Paquete
datagramas
UDP
Socket
UDP
puerto
9876
capa
transporte
capa
transporte
enviarPaquete
recibirPaquete
socketServidor
toUpperCase
Figura
2.34
UDPServidorno
flujos
socket
acepta
paquetes
proceso
suministra
paquetes
proceso
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
1672.9
Resumen
cap√≠tulo
estudiado
aspectos
conceptuales
implementaci√≥n
apli-
caciones
red
podido
comprobar
omnipresencia
arquitectura
cliente-servi-
dor
adoptada
aplicaciones
Internet
protocolos
HTTP
FTP
SMTP
POP3
DNS
estudiado
importantes
protocolos
nivel
aplicaci√≥n
correspondientes
aplicaciones
asociadas
Web
transferencia
archivos
correo
electr√≥nico
DNS
detalle
aprendido
acerca
arqui-
tectura
P2P
empezando
predominar
utiliza
aplicaciones
examinado
utilizarse
API
sockets
crear
aplicaciones
red
Asimismo
estudiado
sockets
servicios
transporte
terminal
terminal
orientados
conexi√≥n
TCP
conexi√≥n
UDP
completado
pri-
mera
etapa
viaje
arquitectura
red
capas
principio
libro
Secci√≥n
1.1
proporcionado
definici√≥n
vaga
protocolo
formato
orden
mensajes
intercambiados
entida-
des
comunican
acciones
realizadas
transmisi√≥n
recepci√≥n
mensaje
evento
material
facilitado
cap√≠tulo
concreto
estudio
detallado
protocolos
HTTP
FTP
SMTP
POP3
DNS
aporta
definici√≥n
profundidad
protocolos
concepto
clave
redes
estudio
protocolos
aplicaci√≥n
proporcionado
oportunidad
desarrollar
idea
intuitiva
protocolos
Secci√≥n
2.1
descrito
modelos
servicio
ofrecen
TCP
UDP
aplicaciones
invocan
Secciones
2.7
2.8
visto
detalle
mode-
servicio
desarrollo
aplicaciones
sencillas
ejecutan
TCP
UDP
hablado
acerca
TCP
UDP
proporcionan
modelos
servicio
ejemplo
TCP
proporciona
servicio
datos
fiable
cap√≠tulo
veremos
detenidamente
servicios
proporcionan
funcionamiento
protocolos
transporte
conocimientos
acerca
estructura
aplicacio-
nes
Internet
protocolos
capa
aplicaci√≥n
preparados
seguir
descendiendo
pila
protocolos
examinar
capa
transporte
Cap√≠-
tulo
Problemas
cuestiones
repaso
Cap√≠tulo
Cuestiones
repaso
SECCI√ìN
2.1
R.1
Enumere
aplicaciones
Internet
propietarias
protocolos
capa
aplicaci√≥n
utilizan
R.2
diferencia
arquitectura
red
arquitectura
aplicaci√≥n
R.3
sesi√≥n
comunicaci√≥n
procesos
proceso
cliente
proceso
servidor
168
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
168PROBLEMAS
CUESTIONES
REPASO
169
R.4
aplicaci√≥n
compartici√≥n
archivos
P2P
afirmaci√≥n
lados
cliente
servidor
sesi√≥n
comunica-
ci√≥n
R.5
informaci√≥n
utiliza
proceso
ejecuta
host
identificar
proceso
ejecuta
host
R.6
Suponga
desea
transici√≥n
cliente
remoto
servidor
r√°pidamente
utilizar√≠a
UDP
TCP
R.7
Utilizando
Figura
2.4
aplicaciones
indicadas
dicha
figura
presenta
requisitos
temporizaci√≥n
ausencia
p√©rdida
datos
concebir
aplicaci√≥n
requiera
p√©rdida
datos
extremadamente
sensible
tiempo
R.8
Enumere
clases
principales
servicios
proporcionar
proto-
colo
transporte
clases
servicios
indique
UDP
TCP
proporcionan
servicio
R.9
Recuerde
TCP
mejorarse
SSL
proporcionar
servicios
seguridad
proceso
proceso
incluyendo
mecanismos
cifrado
capa
opera
SSL
capa
transporte
capa
aplicaci√≥n
desarrollador
aplicaci√≥n
desea
mejorar
TCP
SSL
SECCIONES
2.2‚Äì2.5
R.10
t√©rmino
protocolo
R.11
HTTP
FTP
SMTP
POP3
ejecutan
TCP
lugar
UDP
R.12
sitio
comercio
electr√≥nico
desea
mantener
registro
compras
clientes
Describa
utilizando
cookies
R.13
Describa
almacenamiento
cach√©
web
reducir
retardo
recepci√≥n
objeto
solicitado
Reducir√°
tipo
almacenamiento
retardo
objetos
solicitados
usuario
objetos
R.14
Establezca
sesi√≥n
Telnet
servidor
web
env√≠e
mensaje
solicitud
l√≠neas
Incluya
mensaje
l√≠nea
cabecera
If-modified-since
forzar
mensaje
respuesta
c√≥digo
304
Not
Modified
R.15
FTP
env√≠a
informaci√≥n
control
banda
R.16
Suponga
Alicia
dispone
correo
electr√≥nico
web
ejemplo
Hotmail
gmail
env√≠a
mensaje
Benito
accede
correo
alma-
cenado
servidor
correo
utilizando
POP3
Explique
transmite
mensaje
host
Alicia
Benito
Aseg√∫rese
citar
serie
pro-
tocolos
capa
aplicaci√≥n
utilizan
mensaje
host
R.17
Imprima
cabecera
mensaje
correo
electr√≥nico
recibido
reciente-
mente
l√≠neas
cabecera
Received
contiene
Analice
l√≠neas
cabecera
mensaje
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
169R.18
perspectiva
usuario
diferencia
descargar
borrar
descargar
mantener
POP3
R.19
servidor
web
servidor
correo
electr√≥nico
organizaci√≥n
exactamente
alias
nombre
host
ejemplo
foo.com
tipo
especificado
registro
recurso
RR
contiene
nombre
host
servidor
correo
SECCI√ìN
2.6
R.20
BitTorrent
suponga
Alicia
proporciona
fragmentos
Benito
intervalos
30
segundos
Devolver√°
necesariamente
Benito
favor
proporcionar√°
fragmentos
Alicia
intervalo
tiempo
R.21
Suponga
par
Alicia
une
BitTorrent
posesi√≥n
fragmento
posee
fragmentos
convertirse
principales
suministradores
pares
suministrar
obtendr√°
Alicia
fragmento
R.22
red
solapada
Contiene
routers
fronteras
red
solapada
crea
mantiene
red
solapada
encarga
distribuir
consultas
R.23
sentido
mensajer√≠a
instant√°nea
√≠ndice
centralizado
h√≠brido
arquitecturas
cliente-servidor
P2P
R.24
Considere
DHT
topolog√≠a
red
solapada
malla
par
controla
pares
sistema
ventajas
desventajas
dise√±o
tipo
ventajas
desventajas
DHT
circular
atajos
R.25
Skype
utiliza
t√©cnicas
P2P
funciones
importantes
dichas
funcio-
nes
R.26
Cite
aplicaciones
distintas
adapten
forma
natural
arqui-
tecturas
P2P.
Sugerencia
distribuci√≥n
archivos
mensajer√≠a
instant√°nea
SECCIONES
2.7‚Äì2.8
R.27
servidor
UDP
descrito
Secci√≥n
2.8
necesitaba
socket
servidor
TCP
descrito
Secci√≥n
2.7
necesitaba
servidor
TCP
tuviera
soportar
conexiones
simult√°neas
procedente
host
cliente
distinto
sockets
necesitar√≠a
servidor
TCP
R.28
aplicaci√≥n
cliente-servidor
TCP
descrita
Secci√≥n
2.7
ejecutado
programa
servidor
programa
cliente
aplicaci√≥n
cliente-servidor
UDP
descrita
Secci√≥n
2.8
programa
cliente
ejecutarse
programa
servidor
170
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
170Problemas
P1
falso
a.
usuario
solicita
p√°gina
web
consta
texto
im√°genes
obte-
ner
p√°gina
cliente
env√≠a
mensaje
solicitud
recibe
mensajes
respuesta
b.
p√°ginas
web
ejemplo
www.mit.edu/research.htmly
www
mit.edu/students.html
enviar
conexi√≥n
per-
sistente
c.
conexiones
persistentes
navegador
servidor
origen
√∫nico
segmento
TCP
transportar
mensajes
solicitud
HTTP
distintos
d.
l√≠nea
cabecera
Date
mensaje
respuesta
HTTP
indica
objeto
modificado
e.
mensajes
respuesta
HTTP
incluyen
cuerpo
mensaje
vac√≠o
P2
Lea
documento
RFC
959
relativo
FTP
Enumere
comandos
cliente
soportados
documento
P3
cliente
HTTP
desea
recuperar
documento
web
URL
Inicialmente
direcci√≥n
IP
servidor
HTTP
desconocida
protoco-
capa
aplicaci√≥n
capa
transporte
HTTP
necesarios
escenario
P4
cadena
caracteres
ASCII
capturada
Wireshark
navegador
enviaba
mensaje
GET
HTTP
contenido
real
men-
saje
GET
HTTP
caracteres
cr><lf
representan
retorno
carro
salto
l√≠nea
cadena
caracteres
cursiva
cr
texto
p√°rrafo
representa
car√°cter
retorno
carro
contenido
punto
cabe-
cera
HTTP
Responda
siguientes
cuestiones
indicando
mensaje
GET
HTTP
respuesta
GET
/cs453
index.html
HTTP/1.1
cr><lf
Host
gai
a.cs.umass.edu
cr><lf
User-Agent
Mozilla/5.0
Windows;U
Windows
NT
5.1
en-US
rv:1.7.2
Gec
ko/20040804
Netscape/7.2
ax
cr><lf
Accept
ex
xml
application
xml
application
xhtml+xml
text
/html;q=0.9
text
plain;q=0.8,image
png,*/*;q=0.5
cr><lf
Accept-Language
en-us
en;q=0.5
cr><lf
Accept-
Encoding
zip
deflate
cr><lf
Accept-Charset
ISO
-8859-1,utf-8;q=0.7,*;q=0.7
cr><lf
Keep-Alive
300
cr
lf
Connection
keep-alive
cr><lf><cr><lf
a.
URL
documento
solicitado
navegador
b.
versi√≥n
HTTP
ejecutando
navegador
c.
tipo
conexi√≥n
solicita
navegador
persistente
persistente
d.
direcci√≥n
IP
host
ejecutando
navegador
PROBLEMAS
171
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
171e
tipo
navegador
inicia
mensaje
necesario
indicar
tipo
navegador
mensaje
solicitud
HTTP
P5
texto
muestra
respuesta
devuelta
servidor
mensaje
solicitud
GET
HTTP
problema
Responda
siguientes
cuestiones
indicando
mensaje
encuentran
respuestas
HTTP/1.1
200
OK
cr><lf
Date
Tue
07
Mar
2008
12:39:45GMT
cr><lf
Server
Apache/2.0.52
Fedora
cr><lf
Last-Modified
Sat
10
Dec2005
18:27:46
GMT
cr><lf
ETag
526c3-f22-a88a4c80‚Äù<cr><lf
Accept-Ranges
bytes
cr><lf
Content-Length
3874
cr><lf
Keep-Alive
timeout
max=100
cr><lf
Connection
Keep-Alive
cr><lf
Content-Type
text
html
charset=
ISO-8859-1
cr><lf><cr><lf><!doctype
html
public
//w3c//dtd
html
4.0
transitional//en‚Äù><lf><html><lf
head><lf
meta
http-equiv=‚ÄùContent-Type
content=‚Äùtext
html
charset
iso-8859-1‚Äù><lf
meta
name=‚ÄùGENERATOR
content=‚ÄùMozilla/4.79
Windows
NT
5.0
Netscape]‚Äù><lf
title
CMPSCI
453
591
NTU-ST550A
Spring
2005
homepage</title><lf></head><lf
contin√∫a
texto
documento
mostrado
a.
podido
servidor
encontrar
documento
momento
suministr√≥
respuesta
documento
b.
modificado
documento
c.
bytes
contiene
documento
devuelto
d.
bytes
documento
devolviendo
acordado
servidor
emplear
conexi√≥n
persistente
P6
Utilice
especificaci√≥n
HTTP/1.1
RFC
2616
responder
siguientes
cues-
tiones
a.
Explique
mecanismo
se√±alizaci√≥n
cliente
servidor
indicar
cerrando
conexi√≥n
persistente
se√±alizar
cierre
conexi√≥n
cliente
servidor
b.
servicios
cifrado
proporciona
HTTP
c.
cliente
abrir
conexiones
simult√°neas
determinado
ser-
vidor
d.
servidor
cliente
cerrar
conexi√≥n
transporte
detecta
conexi√≥n
inactiva
tiempo
inicie
cierre
conexi√≥n
transmi-
tiendo
datos
dicha
conexi√≥n
Explique
respuesta
P7
Suponga
navegador
clic
v√≠nculo
p√°gina
web
direcci√≥n
IP
correspondiente
URL
asociado
almacenado
cach√©
host
local
necesario
b√∫squeda
DNS
obtener
direcci√≥n
IP
Suponga
host
reciba
direcci√≥n
IP
DNS
visitado
ser-
vidores
DNS
tiempos
ida
vuelta
RTT
sucesivas
visitas
172
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
172RTT1
RTTn
Suponga
p√°gina
web
asociada
v√≠nculo
contiene
exactamente
objeto
consta
peque√±o
fragmento
texto
HTML
RTT0
tiempo
RTT
host
local
servidor
contiene
objeto
Supo-
niendo
tiempo
transmisi√≥n
despreciable
objeto
tiempo
transcu-
rre
cliente
clic
v√≠nculo
recibe
objeto
P8
Continuando
Problema
P7
suponga
archivo
HTML
referencia
objetos
peque√±os
encuentran
servidor
Despreciando
tiempos
transmisi√≥n
tiempo
transcurre
utiliza
a.
HTTP
persistente
conexiones
TCP
paralelo
b.
HTTP
persistente
navegador
configurado
conexiones
paralelo
c.
HTTP
persistente
P9
red
institucional
conectada
Internet
Figura
2.12
suponga
tama√±o
objeto
850.000
bits
tasa
media
solicitudes
navegado-
res
instituci√≥n
servidores
origen
16
solicitudes
Suponga
tiempo
tarda
router
Internet
enlace
acceso
reenv√≠a
solicitud
HTTP
recibe
respuesta
media
segundos
v√©ase
Secci√≥n
2.2.5
Modele
tiempo
respuesta
suma
retardo
acceso
retardo
router
Internet
router
instituci√≥n
retardo
Internet
retardo
acceso
utilice
expresi√≥n
/(1
  
tiempo
requerido
enviar
objeto
enlace
acceso
tasa
llegada
objetos
enlace
acceso
a.
Calcule
tiempo
respuesta
b.
suponga
instalada
cach√©
LAN
institucional
Suponga
tasa
fallos
0,4
Calcule
tiempo
respuesta
P10
Dispone
enlace
corto
10
metros
emisor
transmitir
velocidad
150
bits
sentidos
Suponga
paquetes
datos
longitud
100.000
bits
paquetes
contienen
comandos
control
ejemplo
ACK
longitud
200
bits
Suponga
conexiones
paralelo
utiliza
1/
ancho
banda
enlace
Considere
protocolo
HTTP
suponga
objeto
descargado
100
kbytes
objeto
inicialmente
descargado
contiene
10
objetos
referenciados
procedentes
emisor
sentido
caso
des-
cargas
paralelo
instancias
paralelas
HTTP
persistente
Considere
HTTP
persistente
Cabe
esperar
ventaja
significativa
caso
persistente
Justifique
explique
respuesta
P11
Continuando
escenario
problema
suponga
Benito
comparte
enlace
usuarios
Benito
utiliza
instancias
paralelas
HTTP
persis-
tente
usuarios
utilizan
HTTP
persistente
descargas
paralelo
a.
ayudan
Benito
conexiones
paralelo
obtener
p√°ginas
r√°pida-
mente
b.
usuarios
abren
instancias
paralelas
HTTP
persistente
seguir√°n
beneficiosas
conexiones
paralelo
Benito
PROBLEMAS
173
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
173P12
Escriba
programa
TCP
simple
servidor
acepte
l√≠neas
entrada
proce-
dentes
cliente
muestre
dichas
l√≠neas
salida
est√°ndar
servidor
tarea
modificando
programa
TCPServidor.javavisto
cap√≠tulo
Compile
ejecute
programa
m√°quina
disponga
nave-
gador
web
configure
servidor
proxy
navegador
apunte
host
ejecutando
programa
servidor
configure
n√∫mero
puerto
forma
apropiada
navegador
deber√°
enviar
mensajes
solicitud
GET
servidor
servidor
mostrar
dichos
mensajes
salida
est√°ndar
Uti-
lice
plataforma
determinar
navegador
genera
mensajes
GET
condicio-
nales
objetos
almacenados
localmente
cach√©
P13
diferencia
MAIL
FROM
SMTP
From
mensaje
correo
P14
marca
SMTP
cuerpo
mensaje
HTTP
HTTP
utilizar
m√©todo
SMTP
marcar
cuerpo
mensaje
Explique
respuesta
P15
Lea
documento
RFC
5321
dedicado
SMTP
MTA
Considere
mensaje
correo
basura
recibido
modificado
correo
basura
real
Suponiendo
√∫nicamente
remitente
mensaje
correo
malicioso
hosts
honestos
identifique
host
malicioso
generado
correo
basura
From
Fri
Nov
07
13:41:30
2008
Return-Path
tennis5@pp33head.com
Received
from
barmail.cs.umass.edu
barmail.cs.umass.edu
128.119.240.3
by
cs.umass.edu
8.13.1/8.12.6
for
hg@cs.umass.edu
Fri
Nov
2008
13:27:10
-0500
Received
from
asusus-4b96
localhost
127.0.0.1
by
barmail.cs.umass.edu
Spam
Firewall
for
hg@cs.umass.edu
Fri
Nov
2008
13:27:07
-0500
EST
Received
from
asusus-4b96
58.88.21.177
by
barmail.cs.umass.edu
for
hg@cs.umass.edu
Fri
07
Nov
2008
13:27:07
-0500
EST
Received
from
58.88.21.177
by
inbnd55.exchangeddd.com
Sat
Nov
2008
01:27:07
+0700
From
Jonny
tennis5@pp33head.com
To
hg@cs.umass.edu
Subject
asegurar
ahorros
P16
Lea
documento
RFC
1939
dedicado
POP3
prop√≥sito
comando
UIDL
POP3
P17
Imagine
accede
correo
electr√≥nico
utilizando
POP3
a.
Suponga
configurado
cliente
correo
POP
operar
des-
cargar
borrar
Complete
transacci√≥n
174
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
174C
list
498
912
retr
bla
bla
blah
b.
Suponga
configurado
cliente
correo
POP
operar
des-
cargar
guardar
Complete
transacci√≥n
list
498
912
retr
bla
bla
bla
c.
Suponga
configurado
cliente
correo
POP
operar
des-
cargar
guardar
Utilizando
transcripci√≥n
apartado
suponga
recu-
pera
mensajes
sale
POP
minutos
vuelve
acceder
POP
recuperar
mensaje
correo
Suponga
intervalo
minutos
enviado
mensaje
correo
Pro-
porcione
transcripci√≥n
sesi√≥n
POP
P18
a.
base
datos
whois
b.
Utilice
bases
datos
whois
Internet
obtener
nombres
ser-
vidores
DNS
Indique
bases
datos
whois
utilizado
c.
Utilice
programa
nslookup
host
local
enviar
consultas
DNS
ser-
vidores
DNS
servidor
DNS
local
servidores
DNS
encontrado
apartado
Intente
consultas
obtener
registros
recursos
tipo
NS
MX
Escriba
resumen
hallazgos
d.
Utilice
programa
nslookup
localizar
servidor
web
direc-
ciones
IP
servidor
web
instituci√≥n
centro
estudios
empresa
direcciones
IP
e.
Utilice
base
datos
whois
ARIN
determinar
rango
direcciones
IP
uti-
lizado
universidad
f.
Describa
atacante
utilizar
bases
datos
whois
herramienta
nslookup
labores
reconocimiento
instituci√≥n
lanzar
ataque
g.
Explique
bases
datos
whois
disponibles
p√∫blicamente
PROBLEMAS
175
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
175P19
problema
emplear√°
√∫til
herramienta
dig
disponible
hosts
Unix
Linux
explorar
jerarqu√≠a
servidores
DNS
muestra
Figura
2.21
servidor
DNS
nivel
superior
jerarqu√≠a
DNS
delega
consulta
DNS
servidor
DNS
nivel
jerarqu√≠a
devolviendo
cliente
DNS
nombre
servidor
DNS
nivel
Lea
p√°gina
manual
dedicada
dig
continuaci√≥n
responda
siguientes
preguntas
a.
Comenzando
servidor
DNS
ra√≠z
servidores
ra√≠z
a-m].root-ser-
vers.net
inicie
secuencia
consultas
obtener
direcci√≥n
IP
servi-
dor
web
departamento
utilizando
herramienta
dig
Visualice
lista
nombres
servidores
DNS
incluidos
cadena
delegaci√≥n
obte-
nido
respuesta
consulta
b.
Repita
apartado
sitios
web
populares
ejemplo
google.com
yahoo.com
amazon.com
P20
Suponga
acceder
cach√©s
servidores
DNS
locales
departa-
mento
proponer
forma
determinar
aproximada
servido-
res
web
situados
departamento
populares
usuarios
departamento
Explique
respuesta
P21
Suponga
departamento
servidor
DNS
local
computado-
ras
departamento
usuario
normal
administrador
red
sistema
determinar
computa-
dora
departamento
accedido
segundos
determinado
sitio
web
externo
Explique
respuesta
P22
Desea
distribuir
archivo
15
Gbits
pares
servidor
velocidad
carga
us
30
Mbps
par
velocidad
descarga
di
Mbps
velocidad
carga
u.
10
100
1.000
300
kbps
700
kbps
Mbps
prepare
gr√°fica
proporcione
tiempo
m√≠nimo
distribuci√≥n
combinaciones
distribuci√≥n
cliente-servidor
distribuci√≥n
P2P.
P23
Desea
distribuir
archivo
bits
pares
utilizando
arquitectura
cliente-
servidor
Suponga
modelo
flexible
servidor
transmitir
simult√°-
neamente
pares
transmitiendo
par
distintas
velocidades
velocidad
combinada
us
a.
Suponga
us
dm√≠n
Especifique
esquema
distribuci√≥n
tiempo
distribuci√≥n
NF
us
b.
Suponga
us
dm√≠n
Especifique
esquema
distribuci√≥n
tiempo
distribuci√≥n
dm√≠n
c.
Demuestre
general
tiempo
m√≠nimo
distribuci√≥n
m√°x
NF
us
dm√≠n
P24
Desea
distribuir
archivo
bits
pares
utilizando
arquitectura
P2P.
Suponga
modelo
flexible
simplificar
suponga
dm√≠n
ancho
banda
descarga
pares
cuello
botella
176
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
176a
Suponga
us
us
u1
uN)/N.
Especifique
esquema
distribuci√≥n
tiempo
distribuci√≥n
us
b.
Suponga
us
us
u1
uN)/N.
Especifique
esquema
distribuci√≥n
tiempo
distribuci√≥n
NF/(us
u1
c.
Demuestre
general
tiempo
m√≠nimo
distribuci√≥n
m√°x
us
NF/(us
u1
P25
Considere
red
solapada
pares
activos
disponiendo
pareja
pares
conexi√≥n
TCP
activa
Suponga
conexiones
TCP
atraviesan
routers
nodos
fronteras
correspondiente
red
solapada
P26
Suponga
Benito
une
torrente
BitTorrent
desea
suministrar
datos
pares
denomina
libre
a.
Benito
afirma
recibir
copia
completa
archivo
compartido
conjunto
usuarios
correcto
Benito
b.
Benito
a√±ade
eficientes
descargas
utilizando
com-
putadoras
distintas
direcciones
IP
laboratorio
departamento
P27
problema
objetivo
determinar
eficiencia
sistema
comparti-
ci√≥n
archivos
P2P
BitTorrent
Considere
pares
Benito
Alicia
unen
torrente
pares
incluyendo
Benito
Alicia
compartiendo
archivo
consta
fragmentos
Suponga
instante
determinado
fragmentos
par
seleccionados
forma
aleatoria
uniforme
fragmentos
par
frag-
mentos
Responda
siguientes
preguntas
a.
probabilidad
Benito
fragmentos
Alicia
expresamos
n√∫mero
fragmentos
nb
Benito
na
Alicia
b.
Elimine
suposiciones
apartado
calcular
probabilidad
Benito
fragmentos
Alicia
na
fragmentos
c.
Suponga
par
BitTorrent
vecinos
probabilidad
Benito
datos
inter√©s
veci-
P28
ejemplo
DHT
circular
Secci√≥n
2.6.2
suponga
par
par
abandonado
red
actualiza
par
informaci√≥n
sucesor
par
sucesor
sucesor
P29
ejemplo
DHT
circular
Secci√≥n
2.6.2
suponga
par
desea
unirse
DHT
inicialmente
par
conoce
direcci√≥n
IP
par
15
pasos
P30
red
DHT
circular
nodos
identificadores
clave
rango
63
Suponga
pares
cuyos
identificadores
16
24
32
40
48
56
a.
Suponga
par
par
atajo
pares
determine
par
atajo
n√∫mero
mensajes
enviados
consulta
iniciada
par
m√≠nimo
PROBLEMAS
177
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
177b
Repita
apartado
permita
par
pares
atajo
P31
Puesto
n√∫mero
entero
perteneciente
intervalo
expresar
n√∫mero
binario
bits
DHT
clave
expresar
k0
k1
kn‚Äì1
identificador
par
p0
p1
pn‚Äì1
defi-
nimos
distancia
XOR
clave
par
Explique
utilizar
m√©trica
asignar
parejas
clave
valor
pares
obtener
informaci√≥n
crear
DHT
eficiente
utilizando
m√©trica
natural
consulte
Maymounkov
2002
describe
DHT
Kademlia
P32
Considere
versi√≥n
generalizada
esquema
descrito
problema
lugar
utilizar
n√∫meros
binarios
tratar
claves
identificadores
pares
n√∫meros
base
utilizaremos
m√©trica
problema
dise√±ar
DHT
sustituyendo
Compare
DHT
basada
n√∫meros
base
DHT
basada
n√∫meros
binarios
caso
DHT
genera
mensajes
consulta
P33
DHT
redes
solapadas
necesariamente
corresponden
redes
f√≠sicas
subyacentes
sentido
pares
vecinos
f√≠sica-
mente
alejados
ejemplo
par
encontrarse
Asia
vecino
Am√©rica
Norte
asignamos
identificadores
forma
aleatoria
uniforme
pares
acaban
unirse
red
esquema
asignaciones
produjera
correspondencia
Explique
respuesta
correspondencia
afectar
rendimiento
DHT
P34
Instale
compile
programas
Java
TCPCliente
UDPCliente
host
programas
TCPServidory
UDPServidoren
host
a.
Suponga
ejecuta
TCPCliente
programa
TCPServidor
ocurrir√°
b.
Suponga
ejecuta
programa
UDPCliente
UDPServidor
ocurrir√°
c.
ocurrir√°
utiliza
n√∫meros
puerto
lados
cliente
servidor
P35
Suponga
programa
UDPClient.javasustituimos
l√≠nea
DatagramSocket
socketCliente=
new
DatagramSocket
DatagramSocket
socketCliente=
new
DatagramSocket(5432
necesario
modificar
programa
UDPServidor.java
n√∫me-
ros
puerto
sockets
UDPClienty
UDPServidor
cambio
d(k
||k
pjj
178
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
178Preguntas
discusi√≥n
D1
cree
aplicaciones
compartici√≥n
archivos
P2P
popula-
res
acaso
distribuyen
m√∫sica
v√≠deos
foma
gratuita
ilegal
enorme
cantidad
servidores
responden
forma
eficiente
enorme
demanda
megabytes
razones
D2
Lea
documento
The
Darknet
and
the
Future
of
Content
Distribution
Biddle
England
Peinado
Willman
Biddle
2003
puntos
vista
autores
D3
sitios
web
dedicados
comercio
electr√≥nico
suelen
disponer
bases
datos
back-end
comunican
servidores
HTTP
bases
datos
back-end
D4
configurar
navegador
almacenamiento
cach√©
local
opciones
almacenamiento
cach√©
dispone
D5
configurar
navegador
abrir
conexiones
simult√°neas
sitio
web
ventajas
desventajas
disponer
n√∫mero
cone-
xiones
TCP
simult√°neas
D6
visto
sockets
TCP
Internet
tratan
datos
envia-
flujo
bytes
sockets
UDP
reconocen
l√≠mites
mensa-
jes
Cite
ventaja
desventaja
API
orientadas
byte
API
reconozca
mantenga
expl√≠citamente
l√≠mites
mensajes
definidos
aplicaci√≥n
D7
servidor
web
Apache
cuesta
funcionalidad
proporciona
actualmente
D8
clientes
BitTorrent
utilizan
tablas
DHT
crear
tracker
distribuido
dichas
DHT
clave
valor
D9
Imagine
organizaciones
est√°ndares
web
deciden
cambiar
convenio
denominaci√≥n
objeto
nombre
referencie
√∫nico
nombre
independiente
ubicaci√≥n
denomina
URN
Indique
problemas
implicar√≠a
cambio
D10
actualmente
compa√±√≠as
distribuyan
Internet
televisi√≥n
directo
caso
afirmativo
utilizan
dichas
empresas
arquitecturas
cliente-servidor
P2P
D11
empresas
proporcionando
actualmente
servicio
v√≠deo
carta
tra-
v√©s
Internet
utilizando
arquitectura
P2P
D12
proporciona
Skype
servicio
PC
tel√©fono
tantos
pa√≠ses
destino
dis-
tintos
D13
clientes
BitTorrent
populares
PREGUNTAS
DISCUSI√ìN
179
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
179Tareas
programaci√≥n
sockets
Tarea
servidor
web
multihebra
terminar
tarea
programaci√≥n
desarrollado
Java
servidor
web
mul-
tihebra
capaz
servir
solicitudes
paralelo
implementar
versi√≥n
1.0
HTTP
define
documento
RFC
1945
HTTP/1.0
crea
conexi√≥n
TCP
separada
par
solicitud
respuesta
hebra
separada
gestiona
conexiones
hebra
principal
servidor
escuche
clientes
deseen
establecer
conexi√≥n
simplificar
tarea
programaci√≥n
desarrollaremos
c√≥digo
etapas
escribir√°
c√≥digo
servidor
multihebra
simplemente
muestre
contenido
mensaje
solicitud
HTTP
recibido
programa
ejecute
correctamente
deber√°
a√±adir
c√≥digo
necesario
generar
respuesta
apropiada
Am
web
recuerde
proporcionando
servicio
puerto
est√°ndar
80
especificar
n√∫mero
puerto
URL
proporcione
navegador
ejemplo
nombre
host
host.unaEscuela.edu
servidor
escucha
puerto
6789
desea
recuperar
archivo
index.html
especificar
URL
navegador
http://host.unaescuela.edu:6789/index.html
servidor
detecte
error
deber√°
enviar
mensaje
respuesta
c√≥digo
fuente
HTML
apropiado
informaci√≥n
acerca
error
muestre
ventana
navegador
encontrar
detalles
tarea
√∫tiles
frag-
mentos
c√≥digo
Java
sitio
web
http://www.awl.com/kurose-ross
Tarea
cliente
correo
tarea
desarrollar
Java
agente
usuario
correo
siguien-
tes
caracter√≠sticas
‚Ä¢D
local
direcci√≥n
correo
electr√≥nico
emisor
direcci√≥n
correo
electr√≥nico
receptor
asunto
mensaje
mensaje
‚Ä¢D
enviar
comandos
SMTP
servidor
correo
local
recibir
procesar
comandos
SMTP
procedentes
servidor
correo
local
interfaz
similar
captura
pantalla
mostrada
p√°gina
desarrollar
agente
usuario
env√≠e
mensaje
correo
electr√≥nico
m√°ximo
destinatario
agente
usuario
supondr√°
dominio
direcci√≥n
correo
electr√≥nico
destinatario
nombre
can√≥-
nico
servidor
SMTP
destinatario
agente
usuario
realizar√°
b√∫squeda
DNS
obtener
registro
MX
emisor
suministrar
nombre
real
servidor
correo
sitio
web
libro
http://www.awl.com/kurose-ross
encon-
trar
detalles
tarea
√∫tiles
fragmentos
c√≥digo
Java
180
CAP√çTULO
CAPA
APLICACI√ìN
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
180Tarea
generador
comandos
Ping
UDP
pr√°ctica
laboratorio
implementar
servidor
cliente
Ping
basa-
UDP
funcionalidad
proporcionada
programas
similar
programa
est√°ndar
Ping
disponible
sistemas
operativos
actuales
programa
est√°ndar
Ping
env√≠a
mensajes
ECHO
ICMP
Internet
Control
Message
Protocol
m√°quina
remota
devuelve
emisor
emisor
determinar
tiempo
ida
vuelta
transcurrido
ejecuta
comando
Ping
recibe
respuesta
computadora
Java
proporciona
funcionalidad
enviar
recibir
mensajes
ICMP
raz√≥n
pr√°ctica
laboratorio
implementar
programa
Ping
capa
aplicaci√≥n
mensajes
sockets
UDP
est√°ndar
sitio
web
libro
http://www
.awl.com
kurose-ross
encontrar
detalles
tarea
√∫tiles
frag-
mentos
c√≥digo
Java
Tarea
servidor
proxy
web
pr√°ctica
laboratorio
desarrollar
servidor
proxy
web
simple
capaz
almacenar
cach√©
p√°ginas
web
servidor
aceptar√°
mensaje
GET
navegador
reenviar√°
servidor
web
destino
recibir√°
mensaje
res-
puesta
HTTP
servidor
destino
reenviar√°
mensaje
respuesta
HTTP
navega-
dor
servidor
proxy
sencillo
basta
comprenda
solicitudes
GET
simples
servidor
manejar
clase
objetos
p√°ginas
HTML
incluyendo
im√°genes
sitio
web
libro
http://www
.awl.com
kurose-ross
encontrar
detalles
tarea
√∫tiles
fragmentos
c√≥digo
Java
Pr√°cticas
laboratorio
Wireshark
Pr√°ctica
laboratorio
Wireshark
HTTP
pr√°ctica
laboratorio
familiarizado
husmeador
paquetes
snif-
fer
Wireshark
preparados
utilizar
Wireshark
investigar
funcio-
PR√ÅCTICAS
LABORATORIO
WIRESHARK
181
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
181182
CAP√çTULO
CAPA
APLICACI√ìN
namiento
protocolos
pr√°ctica
laboratorio
exploraremos
aspectos
protocolo
HTTP
interacci√≥n
b√°sica
GET
respuesta
formatos
mensajes
HTTP
recuperaci√≥n
archivos
HTML
tama√±o
recuperaci√≥n
archivos
HTML
direcciones
URL
incrustadas
conexiones
persistentes
persistentes
autentica-
ci√≥n
seguridad
HTTP
pr√°cticas
laboratorio
Wireshark
descripci√≥n
completa
pr√°ctica
sitio
web
http://www.awl.com/kurose-ross
Pr√°ctica
laboratorio
Wireshark
DNS
pr√°ctica
laboratorio
echaremos
r√°pido
vistazo
cliente
DNS
protocolo
traduce
nombres
host
Internet
direcciones
IP
visto
Secci√≥n
2.5
papel
cliente
protocolo
DNS
relativamente
simple
cliente
env√≠a
consulta
servidor
DNS
local
recibe
respuesta
cosas
suceden
invisibles
clientes
DNS
servidores
DNS
jer√°rquicos
comunican
forma
recursiva
iterativa
resolver
con-
sulta
DNS
cliente
obstante
punto
vista
cliente
DNS
protocolo
simple
plantea
consulta
servidor
DNS
local
servidor
devuelve
respuesta
pr√°ctica
laboratorio
observar
protocolo
DNS
acci√≥n
descripci√≥n
completa
pr√°ctica
laboratorio
disponible
sitio
web
libro
http://www.awl.com/kurose-ross
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
182183
ocurri√≥
idea
desarrollar
BitTorrent
experiencia
laboral
campo
redes
protocolos
TCP
UDP
implementaci√≥n
aplicaciones
comunidades
usuarios
parec√≠a
problema
resuelto
interesante
planteado
momento
decid√≠
dedicarme
c√°lculo
fundamental
basa
BitTorrent
naturaleza
trivial
cantidad
capacidad
distribuida
computadoras
mundo
personas
fijaron
cabo
implementaci√≥n
pudiera
gestionar
adecua-
damente
aspectos
log√≠sticos
implicados
problema
completamente
distinto
aspectos
complicados
desarrollo
BitTorrent
fundamental
acertar
dise√±o
global
aspectos
comunitarios
protocolo
resuelto
aspecto
conceptual
llevarlo
pr√°ctica
simple
cuesti√≥n
progra-
maci√≥n
t√©rminos
implementaci√≥n
dif√≠cil
diferencia
implementar
sistema
fiable
tratando
pares
peers
confianza
necesario
asu-
mir
cualquiera
cosa
momento
preciso
definir
tipo
comportamiento
casos
l√≠mite
Tuve
continuar
rescribiendo
amplias
sec-
ciones
BitTorrent
creando
medida
surg√≠an
problemas
dise√±o
glo-
bal
iba
clarific√°ndose
Inicialmente
descubri√≥
gente
BitTorrent
general
gente
descubri√≥
BitTorrent
dedicarse
descargas
tipo
conte-
nido
deseaban
contenido
disponible
utilizando
BitTorrent
descargaban
forma
editores
decid√≠an
utilizar
BitTorrent
simplemente
dispon√≠an
ancho
banda
necesario
distribuir
contenido
forma
Bram
Cohen
Bram
Cohen
Director
Cient√≠fico
co-fundador
BitTorrent
Inc
creador
protocolo
distribuci√≥n
archivos
P2P
BitTorrent
co-fundador
CodeCon
co-autor
Codeville
creaci√≥n
BitTorrent
Bram
trabajaba
MojoNation
MojoNation
permit√≠a
usuarios
descomponer
archivos
confidenciales
fragmentos
cifrados
distribuir
fragmentos
computadoras
estuviera
ejecutando
software
MojoNation
concepto
inspir√≥
Bram
desarrollo
BitTorrent
MojoNation
Bram
inmerso
mundo
punto
com
trabajando
empresas
Internet
mediados
finales
d√©cada
1990
Bram
creci√≥
York
gradu√≥
Escuela
Superior
Stuyvesant
curs√≥
estudios
Universidad
B√∫falo
ENTREVISTA
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
183184
decirnos
piensa
acerca
demandas
legales
planteadas
organizacio-
nes
personas
utilizan
programas
compartici√≥n
archivos
BitTorrent
distribuir
pel√≠culas
m√∫sica
demandado
desarrollar
tecnolog√≠as
distribuye
ilegalmente
material
sujeto
derechos
autor
infracci√≥n
derechos
autor
ilegal
tecnolog√≠a
demandado
involucrado
tipo
actividad
infrinja
derechos
autor
interesa
desarrollar
tecnolog√≠a
debes
limitarte
aspectos
tecnol√≥gicos
Piensa
aparecer
futuro
sistemas
distribuci√≥n
archivos
sustituyan
BitTorrent
ejemplo
Microsoft
incluir
protocolo
propietario
distribuci√≥n
archivos
futura
versi√≥n
sistema
operativo
existan
protocolos
comunes
futuro
principios
fundamentales
compartir
datos
determinados
protocolo
BitTorrent
probable
cambien
forma
probable
produzca
cambio
fundamental
produjera
modificaci√≥n
significa-
tiva
estructura
global
Internet
debida
variaci√≥n
radical
relaciones
constantes
fundamentales
medida
incrementen
velocidades
predicciones
a√±os
√∫nico
reforzar
modelo
actual
Hablando
t√©rminos
generales
cree
dirige
Internet
cree
desaf√≠os
tecnol√≥gicos
importantes
aplicaci√≥n
estrella
horizonte
Internet
tecnolog√≠a
inform√°tica
general
haci√©ndose
ubicua
iPod
nano
ganadores
especialmente
medida
vayan
bajando
precios
desaf√≠o
tecnol√≥gico
actual
interesante
recopilar
cantidad
datos
dispositivos
conectados
datos
est√©n
disponibles
forma
accesible
√∫til
ejemplo
dispositivos
port√°tiles
incluir
mecanismo
GPS
objetos
poseemos
incluyendo
ropa
juguetes
electrodom√©sticos
muebles
decirnos
perdemos
proporcionarnos
informaci√≥n
completa
histo-
rial
incluyendo
operaciones
mantenimiento
necesarias
utilidad
futura
esperada
detecci√≥n
malos
usos
etc.
podr√≠amos
obtener
informaci√≥n
acerca
pertenencias
tam-
bi√©n
acerca
ejemplo
ciclo
vida
general
producto
concreto
informaci√≥n
recopilarse
forma
precisa
coordinaci√≥n
personas
f√°cil
permitir√≠a
all√°
mejora
simple
fundamental
derivada
personas
localizarse
f√°cilmente
disponen
tel√©fonos
m√≥viles
servido
inspiraci√≥n
profesionalmente
viene
mente
caso
concreto
seguido
cerca
mitolog√≠a
general
empresas
creaci√≥n
Silicon
Valley
consejos
dar√≠a
estudiantes
inician
campo
redes
Internet
dir√≠a
encuentren
tema
momento
demasiada
actualidad
crean
efectuar
desarrollos
atractivos
encuentren
personalmente
interesantes
comiencen
trabajar
tratar
adquirir
experiencia
profe-
sional
campo
deseen
trabajar
experiencia
mundo
real
ense√±a
impor-
tante
mundo
apreciar
forma
objetiva
miran
cosas
mundo
acad√©mico
M02_KURO9675_05_SE_CH02.qxd
22/3/10
08:58
P√°gina
184CAP√çTULO
capa
transporte
capas
aplicaci√≥n
red
capa
transporte
pieza
funda-
mental
arquitectura
red
capas
Desempe√±a
papel
cr√≠tico
proporcionar
direc-
tamente
servicios
comunicaci√≥n
procesos
aplicaci√≥n
ejecutan
hosts
m√©todo
did√°ctico
aplicar
cap√≠tulo
consistir
alternar
explicaciones
principios
capa
transporte
explicaciones
acerca
principios
implementan
protocolos
existentes
haremos
especial
hincapi√©
protocolos
Internet
particular
protocolos
transporte
TCP
UDP
Comenzaremos
explicando
relaci√≥n
existente
capas
transporte
red
examinaremos
funci√≥n
cr√≠tica
capa
transporte
ampliar
servi-
cio
entrega
capa
red
sistemas
terminales
servicio
entrega
procesos
capa
aplicaci√≥n
ejecutan
sistemas
terminales
Ilustrare-
mos
funci√≥n
protocolo
transporte
conexi√≥n
Internet
UDP
Ac
importantes
redes
computadoras
entidades
comunicarse
forma
fiable
perder
corromper
datos
serie
escenarios
complejos
realistas
construiremos
conjunto
t√©c-
nicas
protocolos
transporte
emplean
resolver
problema
mostraremos
principios
integrados
TCP
protocolo
transporte
orien-
tado
conexi√≥n
Internet
pasaremos
problema
importante
redes
controlar
velocidad
transmisi√≥n
entidades
capa
transporte
evitar
recuperarse
congestiones
lugar
red
Consideraremos
causas
consecuencias
congesti√≥n
t√©cnicas
control
congesti√≥n
com√∫nmente
utilizadas
entendido
problemas
mecanismos
control
congesti√≥n
estudiaremos
m√©todo
aplica
TCP
controlar
congesti√≥n
185
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
1853.1
capa
transporte
servicios
cap√≠tulos
anteriores
visto
funci√≥n
capa
trans-
porte
servicios
proporciona
Repasemos
r√°pidamente
acerca
capa
transporte
protocolo
capa
transporte
proporciona
comunicaci√≥n
l√≥gica
pro-
cesos
aplicaci√≥n
ejecutan
hosts
comunicaci√≥n
l√≥gica
perspectiva
aplicaci√≥n
hosts
ejecutan
proce-
sos
estuvieran
conectados
directamente
realidad
hosts
encontrarse
puntos
opuestos
planeta
conectados
numerosos
routers
amplio
rango
tipos
enlace
procesos
aplicaci√≥n
utilizan
comunicaci√≥n
l√≥gica
proporcio-
capa
transporte
enviarse
mensajes
preocuparse
deta-
lles
infraestructura
f√≠sica
utilizada
transportar
mensajes
Figura
3.1
ilustra
concepto
comunicaci√≥n
l√≥gica
muestra
Figura
3.1
protocolos
capa
transporte
imple-
mentados
sistemas
terminales
routers
red
emisor
capa
transporte
convierte
mensajes
recibe
procedentes
proceso
aplica-
ci√≥n
emisor
paquetes
capa
transporte
conocidos
segmentos
capa
transporte
terminolog√≠a
Internet
posiblemente
dividiendo
mensajes
aplicaci√≥n
fragmentos
peque√±os
a√±adiendo
cabecera
capa
transporte
fragmento
crear
segmento
capa
transporte
continuaci√≥n
capa
transporte
pasa
segmento
capa
red
sistema
terminal
emisor
segmento
encapsula
paquete
capa
red
data-
grama
env√≠a
destino
importante
destacar
routers
red
act√∫an
campos
correspondientes
capa
red
datagrama
examinan
campos
segmento
capa
transporte
encapsulado
datagrama
receptor
capa
red
extrae
segmento
capa
transporte
datagrama
sube
capa
transporte
continuaci√≥n
capa
procesa
segmento
recibido
poniendo
datos
segmento
disposici√≥n
aplicaci√≥n
recepci√≥n
aplicaciones
red
protocolo
capa
transporte
disponible
ejemplo
Internet
protocolos
TCP
UDP
pro-
tocolos
proporciona
conjunto
servicios
capa
transporte
aplica-
ci√≥n
invocado
3.1.1
Relaciones
capas
transporte
red
Recuerde
capa
transporte
justo
capa
red
pila
protocolos
protocolo
capa
transporte
proporciona
comunicaci√≥n
l√≥gica
procesos
ejecutan
hosts
protocolo
capa
red
proporciona
comunicaci√≥n
l√≥gica
hosts
importante
Examinemos
distinci√≥n
ayuda
analog√≠a
Considere
viviendas
situada
costa
Unidos
costa
oeste
hogar
viven
docena
ni√±os
ni√±os
costa
primos
ni√±os
costa
oeste
ni√±os
gusta
escribirse
ni√±o
escribe
primos
semanas
enviando
carta
servicio
postal
ordinario
empleando
casa
env√≠a
144
cartas
casa
semana
ni√±os
ahorrar
dinero
utilizaran
186
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
1863.1
CAPA
TRANSPORTE
SERVICIOS
187
ISP
nacional
globalRed
m√≥vil
ISP
local
regional
Red
empresarial
Red
dom√©sticaTransporte
terminal
terminal
l√≥gicoRed
Enlace
datos
F√≠sica
Aplicaci√≥n
Transporte
Red
Enlace
datos
F√≠sica
Aplicaci√≥n
Transporte
Red
Enlace
datos
F√≠sica
Red
Enlace
datos
F√≠sica
Red
Enlace
datos
F√≠sica
Red
Enlace
datos
F√≠sica
Red
Enlace
datos
F√≠sica
Figura
3.1
capa
transporte
proporciona
comunicaci√≥n
l√≥gica
lugar
f√≠sica
procesos
aplicaci√≥n
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
187el
correo
electr√≥nico
hogares
ni√±o
Ann
costa
oeste
Bill
costa
responsable
recoger
distribuir
correo
semanas
Ann
visita
hermanos
hermanas
recoge
correo
entrega
persona
servicio
postal
pasa
diario
casa
cartas
llegan
hogar
costa
oeste
Ann
tam-
bi√©n
ocupa
distribuir
correo
resto
hermanos
hermanas
Bill
trabajo
Ann
costa
ejemplo
servicio
postal
proporciona
comunicaci√≥n
l√≥gica
casas
servicio
postal
correo
casa
persona
Ann
Bill
proporcionan
comunicaci√≥n
l√≥gica
primos
recogen
correo
entregan
hermanos
Observe
perspectiva
primos
Ann
Bill
servicio
correo
sistema
ter-
minal
proceso
entrega
terminal
terminal
ejemplo
dom√©stico
sencilla
analog√≠a
permite
explicar
relaciona
capa
transporte
capa
red
mensajes
aplicaci√≥n
cartas
introducidas
sobres
procesos
primos
hosts
denominados
sistemas
terminales
casas
protocolo
capa
transporte
Ann
Bill
protocolo
capa
red
servicio
postal
incluyendo
carteros
Continuando
analog√≠a
f√≠jese
Ann
Bill
trabajo
respectivas
casas
implicados
ejemplo
proceso
ordenaci√≥n
correo
oficina
correos
intermedia
trasladan
correo
ofi-
cina
similar
protocolos
capa
transporte
residen
siste-
terminales
sistema
terminal
protocolo
transporte
mensajes
procesos
aplicaci√≥n
frontera
red
capa
red
vice-
versa
transmiten
mensajes
n√∫cleo
red
ilustra
Figura
3.1
routers
intermedios
act√∫an
informaci√≥n
capa
transporte
a√±adir
mensajes
aplicaci√≥n
tam-
reconocen
Suponga
Ann
Bill
vacaciones
pareja
primos
ejemplo
Susan
Harvey
sustituyen
recogen
reparten
correo
respectivas
casas
Lamentablemente
familias
Susan
Harvey
recogen
reparten
correo
forma
hac√≠an
Ann
Bill
peque√±os
Susan
Harvey
recogen
entregan
correo
frecuentemente
ocasionalmente
pierden
cartas
come
perro
pareja
primos
Susan
Harvey
proporcionan
conjunto
servicios
modelo
servicio
Ann
Bill
forma
an√°loga
red
computadoras
emplear
distintos
protocolos
transporte
ofreciendo
modelo
servicio
distinto
aplicaciones
posibles
servicios
Ann
Bill
proporcionar
evidentemente
restrin-
gidos
posibles
servicios
servicio
postal
suministra
ejemplo
servicio
postal
especifica
tiempo
m√°ximo
tardar
entregar
correo
hogares
ejemplo
Ann
Bill
forma
garantizar
retardo
m√°ximo
entrega
correo
pareja
primos
servicios
protocolo
transporte
proporcionar
res-
tringidos
modelo
servicio
protocolo
capa
red
subyacente
proto-
colo
capa
red
proporciona
garant√≠as
acerca
retardo
ancho
banda
segmentos
capa
transporte
enviados
hosts
protocolo
capa
188
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
188de
transporte
proporcionar
garant√≠a
acerca
retardo
ancho
banda
mensajes
aplicaci√≥n
enviados
procesos
obstante
protocolo
transporte
ofrecer
servicios
protocolo
red
subyacente
ofrezca
servicio
correspondiente
capa
red
ejemplo
veremos
cap√≠tulo
protocolo
transporte
ofre-
cer
servicio
transferencia
datos
fiable
aplicaci√≥n
protocolo
red
subyacente
fiable
protocolo
red
pierde
altera
duplica
paquetes
ejemplo
examinaremos
Cap√≠tulo
hablemos
seguri-
dad
red
protocolo
transporte
emplear
mecanismos
cifrado
garantizar
mensajes
aplicaci√≥n
le√≠dos
intrusos
capa
red
garantizar
privacidad
segmentos
capa
transporte
3.1.2
capa
transporte
Internet
Recuerde
Internet
forma
general
redes
TCP
IP
ponen
disposici√≥n
capa
aplicaci√≥n
protocolos
capa
transporte
proto-
colos
Protocolo
datagramas
usuario
UDP
User
Datagram
Protocol
pro-
porciona
servicio
conexi√≥n
fiable
aplicaci√≥n
invoca
protocolos
Protocolo
control
transmisi√≥n
TCP
Transmission
Control
Protocol
proporciona
aplicaci√≥n
invoca
servicio
orientado
cone-
xi√≥n
fiable
dise√±ar
aplicaci√≥n
red
desarrollador
especificar
protocolos
transporte
visto
Secciones
2.7
2.8
desarrollador
aplicaci√≥n
elige
UDP
TCP
crea
sockets
simplificar
terminolog√≠a
contexto
Internet
referiremos
paque-
tes
capa
transporte
segmentos
obstante
textos
dedicados
Internet
ejemplo
RFC
emplea
t√©rmino
segmento
referencia
paquetes
capa
transporte
caso
TCP
paquetes
UDP
denomina
datagrama
resulta
textos
dedicados
Internet
utilizan
t√©rmino
datagrama
referirse
paquetes
capa
red
pensamos
libro
introducci√≥n
redes
computadoras
resultar√°
confuso
hablar
segmentos
refe-
rirse
paquetes
TCP
UDP
reservar
t√©rmino
datagrama
paquetes
capa
red
continuar
introducci√≥n
protocolos
UDP
TCP
√∫til
comentar
cosas
acerca
capa
red
Internet
Cap√≠tulo
examinaremos
detalle
capa
red
protocolo
capa
red
Internet
protocolo
IP
Inter-
net
Protocol
IP
proporciona
comunicaci√≥n
l√≥gica
hosts
modelo
servicio
IP
servicio
entrega
esfuerzo
best
effort
IP
entregar
segmentos
hosts
comunicando
garantiza
entrega
particular
garantiza
entrega
segmentos
garantiza
segmentos
entreguen
orden
garantiza
integridad
datos
contenidos
segmentos
razones
IP
servicio
fiable
sabe-
mos
hosts
direcci√≥n
capa
red
conoce
direcci√≥n
IP
Cap√≠tulo
estudia
detalle
direccionamiento
IP
momento
√∫nico
necesitamos
host
direcci√≥n
IP
asociada
echado
ojeada
modelo
servicio
IP
haremos
resumen
modelos
servicio
proporcionados
UDP
TCP
responsabilidad
3.1
CAPA
TRANSPORTE
SERVICIOS
189
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
189principal
UDP
TCP
ampliar
servicio
entrega
IP
sistemas
termina-
servicio
entrega
procesos
est√©n
ejecut√°ndose
sistemas
termi-
nales
Extender
entrega
host
host
entrega
proceso
proceso
denomina
multiplexaci√≥n
demultiplexaci√≥n
capa
transporte
tema
desarrollaremos
secci√≥n
UDP
TCP
proporcionan
servicios
comprobaci√≥n
integridad
datos
incluir
campos
detecci√≥n
errores
cabeceras
seg-
mentos
servicios
capa
transporte
entrega
datos
proceso
proceso
comprobaci√≥n
errores
√∫nicos
servicios
ofrece
UDP
particular
IP
UDP
servicio
fiable
garantiza
datos
enviados
proceso
lleguen
intactos
siquiera
lleguen
proceso
destino
Secci√≥n
3.3
aborda
detalle
protocolo
UDP
TCP
contrario
ofrece
aplicaciones
servicios
adicionales
importante
proporciona
transferencia
datos
fiable
Utilizando
t√©cnicas
control
flujo
n√∫meros
secuencia
mensajes
reconocimiento
temporizadores
t√©cnicas
estudiaremos
detalle
cap√≠tulo
TCP
garantiza
datos
transmi-
tidos
proceso
emisor
entregados
proceso
receptor
correctamente
orden
TCP
convierte
servicio
fiable
IP
sistemas
terminales
ser-
vicio
transporte
datos
fiable
procesos
TCP
proporciona
mecanismos
control
congesti√≥n
control
congesti√≥n
servicio
proporcionado
aplicaci√≥n
invocante
servicio
presta
Internet
servicio
com√∫n
palabras
mecanismos
control
congesti√≥n
TCP
evi-
conexi√≥n
TCP
inunde
cantidad
tr√°fico
excesiva
enlaces
routers
existentes
hosts
comunic√°ndose
TCP
esfuerza
proporcionar
conexi√≥n
atraviesa
enlace
congestionado
cuota
ancho
banda
enlace
regulando
velocidad
lados
emisores
cone-
xiones
TCP
enviar
tr√°fico
red
tr√°fico
UDP
contrario
regulado
aplicaci√≥n
emplee
protocolo
transporte
UDP
enviar
datos
velo-
cidad
parezca
tiempo
quiera
protocolo
proporciona
transferencia
datos
fiable
mecanismos
con-
trol
congesti√≥n
necesariamente
protocolo
complejo
necesitar
sec-
ciones
cap√≠tulo
examinar
principios
transferencia
datos
fiable
control
congesti√≥n
secciones
adicionales
dedicadas
cubrir
protocolo
TCP
temas
tratan
Secciones
3.4
3.8
m√©todo
trabajo
adoptado
cap√≠tulo
alternar
principios
b√°sicos
protocolo
TCP
ejemplo
lugar
veremos
consiste
general
transferencia
datos
fiable
veremos
espec√≠ficamente
TCP
proporciona
servicio
trans-
ferencia
datos
fiable
forma
similar
definiremos
forma
general
consiste
mecanismo
control
congesti√≥n
veremos
TCP
entrar
temas
veamos
multiplexaci√≥n
demultiplexaci√≥n
capa
transporte
3.2
Multiplexaci√≥n
demultiplexaci√≥n
secci√≥n
estudiar
multiplexaci√≥n
demultiplexaci√≥n
capa
trans-
porte
ampliaci√≥n
servicio
entrega
host
host
proporcionado
capa
red
servicio
entrega
proceso
proceso
aplicaciones
ejecutan
190
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
190Figura
3.2
Multiplexaci√≥n
demultiplexaci√≥n
capa
transporte
hosts
centrar
explicaci√≥n
servicio
b√°sico
capa
transporte
contexto
Internet
destacar
servicio
mul-
tiplexaci√≥n
demultiplexaci√≥n
necesario
redes
computadoras
host
destino
capa
transporte
recibe
segmentos
procedentes
capa
red
justo
capa
transporte
responsabilidad
entregar
datos
contenidos
segmentos
proceso
aplicaci√≥n
apropiada
ejecu-
t√°ndose
host
Veamos
ejemplo
Suponga
sentado
frente
computadora
descargando
p√°ginas
web
ejecuta
sesi√≥n
FTP
sesiones
Tel-
net
procesos
aplicaci√≥n
red
ejecuci√≥n
procesos
Telnet
proceso
FTP
proceso
HTTP
capa
transporte
computadora
recibe
datos
procedentes
capa
red
dirigir
datos
recibidos
cua-
tro
procesos
Veamos
lugar
recordemos
Secciones
2.7
2.8
proceso
aplicaci√≥n
red
sockets
puertas
pasan
datos
red
proceso
viceversa
muestra
Figura
3.2
capa
transporte
host
receptor
realmente
entrega
datos
directamente
proceso
socket
intermedio
instante
socket
host
receptor
socket
asociado
identificador
√∫nico
formato
identifi-
cador
depende
socket
UDP
socket
TCP
con-
tinuaci√≥n
Veamos
host
receptor
dirige
segmento
entrada
capa
trans-
porte
socket
apropiado
segmento
capa
transporte
contiene
conjunto
campos
destinados
prop√≥sito
extremo
receptor
capa
transporte
examina
campos
identificar
socket
receptor
continuaci√≥n
env√≠a
segmento
socket
tarea
entregar
datos
contenidos
segmento
capa
transporte
socket
correcto
denomina
demultiplexaci√≥n
tarea
reunir
fragmen-
tos
datos
host
origen
sockets
encapsulando
frag-
mento
datos
informaci√≥n
cabecera
utilizar√°
proceso
3.2
MULTIPLEXACI√ìN
DEMULTIPLEXACI√ìN
191
Red
Clave
Proceso
Socket
Enlace
datos
F√≠sica
Transporte
Aplicaci√≥n
Red
Aplicaci√≥n
Enlace
datos
F√≠sica
Transporte
Red
Enlace
datos
F√≠sica
Transporte
P3
P2P1
P4
Aplicaci√≥n
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
191Figura
3.3
campos
n√∫mero
puerto
origen
destino
segmento
capa
transporte
demultiplexaci√≥n
crear
segmentos
pasarlos
capa
red
deno-
mina
multiplexaci√≥n
Observe
capa
transporte
host
intermedio
Figura
3.2
demultiplexar
segmentos
llegan
capa
red
inferior
entre-
g√°rselos
procesos
P2
capa
superior
dirigiendo
datos
seg-
mento
entrante
correspondiente
socket
proceso
capa
transporte
host
intermedio
recopilar
datos
salientes
sockets
construir
segmentos
capa
transporte
pasar
dichos
segmentos
capa
red
presentado
multiplexaci√≥n
demultiplexaci√≥n
contexto
protocolos
transporte
Internet
importante
darse
t√©cnicas
necesarias
√∫nico
protocolo
capa
capa
transporte
utilizado
protocolos
capa
inmediatamente
superior
ilustrar
tarea
demultiplexaci√≥n
recordemos
analog√≠a
dom√©stica
sec-
cion
ni√±os
identificado
nombre
Bill
recibe
lote
cartas
servicio
correos
cabo
operaci√≥n
demultiplexaci√≥n
determinar
dirigidas
cartas
entrega
mano
hermanos
Ann
cabo
operaci√≥n
multiplexaci√≥n
recopilar
cartas
hermanos
entre-
gar
cartas
cartero
entendemos
funciones
multiplexaci√≥n
demultiplexaci√≥n
capa
transporte
examinar
realmente
host
Bas√°ndonos
explicaciones
anteriores
operaci√≥n
multiplexaci√≥n
cabo
capa
transporte
requiere
sockets
tengan
identificadores
√∫nicos
segmento
campos
especiales
indiquen
socket
entregarse
segmento
campos
especiales
mostrados
Figura
3.3
campo
n√∫mero
puerto
origen
campo
n√∫mero
puerto
destino
segmentos
UDP
TCP
contienen
campos
veremos
siguientes
secciones
cap√≠tulo
n√∫mero
puerto
n√∫mero
16
bits
comprendido
rango
65535
n√∫meros
puerto
pertenecientes
rango
1023
conocen
n√∫meros
puertos
conocidos
restringidos
significa
reserva-
empleados
protocolos
aplicaci√≥n
conocidos
ejemplo
HTTP
utiliza
n√∫mero
puerto
80
FTP
utiliza
n√∫mero
puerto
21
encontrar
lista
n√∫meros
puerto
conocidos
documento
RFC
1700
actualizaci√≥n
direcci√≥n
http://www.iana.org
RFC
3232
desarrollar
N¬∫
puerto
origen
32
bits
N¬∫
puerto
destino
campos
cabecera
Datos
aplicaci√≥n
mensaje
192
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
192aplicaci√≥n
aplicaciones
desarrolladas
Secciones
2.7
2.8
necesario
asignar
n√∫mero
puerto
aplicaci√≥n
deber√≠a
capa
transporte
implementar
servicio
demultiplexaci√≥n
socket
host
asignar
n√∫mero
puerto
llegar
segmento
host
capa
transporte
examina
n√∫mero
puerto
destino
contenido
segmento
env√≠a
socket
correspondiente
continuaci√≥n
datos
segmento
pasan
socket
entregan
proceso
asociado
veremos
b√°sica-
mente
UDP
comprobaremos
tarea
multiplexa-
ci√≥n
demultiplexaci√≥n
TCP
sutil
Multiplexaci√≥n
demultiplexaci√≥n
conexi√≥n
Recordemos
Secci√≥n
2.8
programa
Java
ejecuta
host
crear
socket
UDP
l√≠nea
c√≥digo
DatagramSocket
miSocket
new
DatagramSocket
crea
socket
UDP
capa
transporte
asigna
autom√°ticamente
n√∫mero
puerto
socket
particular
capa
transporte
asigna
n√∫mero
puerto
comprendido
rango
1024
65535
actualmente
est√©
utilizado
host
puerto
UDP
Alternativamente
programa
Java
crear
socket
ejecutando
l√≠nea
c√≥digo
DatagramSocket
miSocket
new
DatagramSocket(19157
caso
aplicaci√≥n
asigna
n√∫mero
puerto
espec√≠fico
ejemplo
19157
socket
UDP
desarrollador
aplicaci√≥n
escribe
c√≥digo
estuviera
implemen-
tando
servidor
protocolo
conocido
tendr√≠a
asignar
correspondiente
n√∫mero
puerto
conocido
Normalmente
cliente
aplicaci√≥n
permite
capa
transporte
asignar
forma
autom√°tica
transparente
n√∫mero
puerto
servidor
aplicaci√≥n
asigna
n√∫mero
puerto
espec√≠fico
asignados
n√∫meros
puerto
sockets
UDP
describir
forma
precisa
tareas
multiplexaci√≥n
demultiplexaci√≥n
UDP
Suponga
pro-
ceso
host
puerto
UDP
19157
desea
enviar
fragmento
datos
apli-
caci√≥n
proceso
puerto
UDP
46428
host
B.
capa
transporte
host
crea
segmento
capa
transporte
incluye
datos
aplicaci√≥n
n√∫mero
puerto
origen
19157
n√∫mero
puerto
destino
46428
valores
veremos
momento
importantes
tema
ocupa
capa
transporte
pasa
continuaci√≥n
segmento
resultante
capa
red
capa
red
encapsula
segmento
datagrama
IP
m√°ximo
esfuerzo
entregar
segmento
host
receptor
segmento
llega
host
receptor
capa
transporte
examina
n√∫mero
puerto
destino
especificado
segmento
46428
entrega
segmento
socket
identificado
puerto
46428
Observe
host
ejecutando
procesos
socket
UDP
n√∫mero
puerto
asociado
medida
segmentos
UDP
llegan
red
host
dirige
demultiplexa
segmento
socket
apropiado
examinando
n√∫mero
puerto
destino
segmento
3.2
MULTIPLEXACI√ìN
DEMULTIPLEXACI√ìN
193
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
193Figura
3.4
Inversi√≥n
n√∫meros
puerto
origen
destino
importante
observar
socket
UDP
queda
completamente
identificado
tupla
consta
direcci√≥n
IP
destino
n√∫mero
puerto
destino
conse-
cuencia
segmentos
UDP
direcciones
IP
n√∫meros
puerto
origen
direcci√≥n
IP
destino
n√∫mero
puerto
destino
enton-
ces
segmentos
enviar√°n
proceso
destino
socket
destino
est√©
preguntando
momento
prop√≥sito
n√∫mero
puerto
origen
muestra
Figura
3.4
segmento
n√∫mero
puerto
origen
forma
direcci√≥n
retorno
desea
devolver
segmento
puerto
destino
segmento
tomar√°
valor
valor
puerto
origen
segmento
B.
direcci√≥n
retorno
completa
n√∫mero
puerto
origen
direcci√≥n
IP
A.
ejemplo
recuerde
programa
servidor
UDP
estudiado
Secci√≥n
2.8
UDPServer.java
servidor
utiliza
m√©todo
extraer
n√∫mero
puerto
origen
segmento
recibe
cliente
continuaci√≥n
env√≠a
segmento
cliente
utilizando
n√∫mero
puerto
destino
n√∫mero
puerto
origen
extra√≠do
segmento
recibido
Multiplexaci√≥n
demultiplexaci√≥n
orientadas
conexi√≥n
entender
demultiplexaci√≥n
TCP
sockets
TCP
establecimiento
conexiones
TCP
sutil
diferencia
socket
TCP
soc-
ket
UDP
queda
identificado
tupla
elementos
direcci√≥n
IP
origen
n√∫mero
puerto
origen
direcci√≥n
IP
destino
n√∫mero
puerto
des-
tino
segmento
TCP
llega
host
procedente
red
host
emplea
valores
dirigir
demultiplexar
segmento
socket
apropiado
particu-
lar
contrario
ocurre
UDP
segmentos
TCP
entrantes
direcciones
IP
origen
n√∫meros
puerto
origen
excepci√≥n
segmento
TCP
transporte
solicitud
original
establecimiento
conexi√≥n
dirigidos
Host
Proceso
cliente
Socket
Servidor
puerto
origen
19157
puerto
destino
46428
puerto
origen
46428
puerto
destino
19157
194
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
194dos
sockets
distintos
profundizar
consideremos
ejemplo
programaci√≥n
cliente-servidor
TCP
Secci√≥n
2.7
‚Ä¢L
solicitudes
establecimiento
conexi√≥n
procedentes
clientes
TCP
puerto
6789
v√©ase
Figura
2.29
‚Ä¢E
c√≥digo
Socket
socketCliente
new
Socket(‚ÄúnombreHostServidor
6789
‚Ä¢U
n√∫mero
puerto
destino
6789
conjunto
especial
bits
establecimiento
conexi√≥n
cabecera
TCP
veremos
Secci√≥n
3.5
segmento
incluye
n√∫mero
puerto
origen
seleccionado
cliente
l√≠nea
c√≥digo
crea
socket
TCP
proceso
cliente
datos
entrar
salir
proceso
cliente
‚Ä¢C
segmento
entrada
solicitud
conexi√≥n
puerto
destino
6789
localiza
proceso
servidor
esperando
aceptar
conexi√≥n
n√∫mero
puerto
6789
proceso
servidor
crea
socket
Socket
socketConexion
socketAcogida.accept
‚Ä¢A
contenidos
segmento
solicitud
conexi√≥n
n√∫mero
puerto
origen
segmento
direcci√≥n
IP
host
origen
n√∫mero
puerto
destino
segmento
direcci√≥n
IP
socket
conexi√≥n
reci√©n
creado
queda
iden-
tificado
valores
segmentos
lleguen
cuyo
puerto
origen
direcci√≥n
IP
origen
puerto
destino
direcci√≥n
IP
destino
correspondan
valores
enviados
socket
establecida
conexi√≥n
TCP
cliente
servidor
enviarse
datos
host
servidor
soporte
sockets
TCP
simult√°neos
estando
socket
asociado
proceso
socket
identificado
tupla
elemen-
tos
segmento
TCP
llega
host
campos
direcci√≥n
IP
origen
puerto
origen
direcci√≥n
IP
destino
puerto
destino
utilizan
dirigir
demul-
tiplexar
segmento
socket
apropiado
situaci√≥n
ilustra
Figura
3.5
host
inicia
sesiones
HTTP
servidor
host
inicia
sesi√≥n
HTTP
B.
hosts
servidor
direcciones
IP
√∫nicas
respectivamente
host
asigna
n√∫meros
puerto
origen
26145
7532
conexiones
HTTP
host
seleccionando
n√∫meros
puerto
origen
independien-
temente
asignar
n√∫mero
puerto
origen
26145
conexi√≥n
HTTP
problema
servidor
demultiplexar
correcta-
mente
conexiones
n√∫mero
puerto
origen
direccio-
nes
IP
origen
3.2
MULTIPLEXACI√ìN
DEMULTIPLEXACI√ìN
195
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
195Servidores
web
TCP
terminada
secci√≥n
interesante
comentar
cosas
acerca
servidores
web
utilizan
n√∫meros
puerto
Considere
host
ejecu-
tando
servidor
web
ejemplo
servidor
web
Apache
puerto
80
clientes
ejemplo
navegadores
env√≠an
segmentos
servidor
segmen-
tos
puerto
destino
80
particular
segmentos
estableci-
miento
conexi√≥n
inicial
segmentos
transportan
mensajes
solicitud
HTTP
utilizar√°n
puerto
destino
puerto
80
acabamos
describir
servi-
dor
diferencia
segmentos
procedentes
distintos
clientes
direcciones
IP
origen
n√∫meros
puerto
origen
Figura
3.5
muestra
servidor
web
genera
proceso
conexi√≥n
muestra
figura
procesos
socket
conexi√≥n
llegan
solicitudes
HTTP
env√≠an
respuestas
HTTP
mencionado
correspondencia
196
CAP√çTULO
CAPA
TRANSPORTE
EXPLORACI√ìN
PUERTOS
visto
proceso
servidor
espera
pacientemente
puerto
abierto
contactado
cliente
remoto
puertos
reservados
aplicaciones
conocidas
ejemplo
servidores
web
FTP
DNS
SMTP
puertos
convenio
utilizados
aplicaciones
populares
ejemplo
Microsoft
2000
SQL
Server
escucha
puerto
UDP
1434
determinamos
puerto
abierto
host
capaces
corresponder
puerto
aplicaci√≥n
espec√≠fica
ejecute
host
√∫til
administrado-
res
sistemas
suelen
interesados
aplicaciones
red
eje-
cut√°ndose
hosts
redes
atacantes
detectar
brechas
muro
desean
puertos
abiertos
hosts
objetivo
localiza
host
ejecutando
aplicaci√≥n
defecto
seguridad
conocido
ejemplo
servidor
SQL
escucha
puerto
1434
objeto
desbordamiento
buffer
permitiendo
usuario
remoto
ejecutar
c√≥digo
arbitrario
host
vulnerable
defecto
explotado
gusano
Slammer
CERT
2003-04
host
estar√≠a
condiciones
recibir
ataque
Determinar
aplicaciones
escucha
puertos
tarea
relativamente
f√°cil
numerosos
programas
dominio
p√∫blico
conocidos
esc√°neres
puertos
realizan
trabajo
ampliamente
utilizado
progra-
nmap
disponible
gratuitamente
http://insecure.org/nmap
incluye
distribuciones
Linux
TCP
nmap
explora
secuencialmente
puertos
buscando
puertos
acepten
conexiones
TCP
UDP
nmap
explora
secuencialmente
puertos
buscando
puertos
UDP
respondan
segmentos
UDP
transmiti-
casos
nmap
devuelve
lista
puertos
abiertos
cerrados
inalcanzables
host
ejecute
nmap
tratar
explorar
host
objetivo
situado
cual-
quier
lugar
Internet
Secci√≥n
3.5.6
volveremos
hablar
nmap
tratar
gesti√≥n
conexiones
TCP
SEGURIDAD
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
196uno
sockets
conexi√≥n
procesos
servidores
web
actuales
altas
prestaciones
utilizan
proceso
crean
hebra
socket
conexi√≥n
conexi√≥n
cliente
hebra
especie
subproceso
baja
complejidad
tarea
programaci√≥n
Cap√≠tulo
creado
servidor
web
exactamente
servidor
instante
sockets
conexi√≥n
distintos
identificadores
asociados
proceso
cliente
servidor
utilizando
HTTP
persistente
dure
conexi√≥n
persistente
cliente
servidor
intercambiar√°n
mensajes
HTTP
socket
servidor
cliente
servidor
emplean
HTTP
persis-
tente
crear√°
cerrar√°
conexi√≥n
TCP
pareja
solicitud
res-
puesta
crear√°
cerrar√°
socket
solicitud/
respuesta
creaci√≥n
cierre
sockets
frecuente
afectar
seriamente
rendi-
miento
servidor
web
ocupado
utilizar
serie
trucos
sis-
tema
operativo
mitigar
problema
lectores
interesados
problemas
HTTP
persistente
persistente
plantea
sistemas
operativos
consul-
tar
Nielsen
1997
Nahum
2002
visto
consiste
multiplexaci√≥n
demultiplexaci√≥n
capa
transporte
pasar
tratar
protocolos
transporte
Internet
UDP
secci√≥n
veremos
UDP
a√±ade
protocolo
capa
red
servicio
multiplexaci√≥n
demultiplexaci√≥n
3.2
MULTIPLEXACI√ìN
DEMULTIPLEXACI√ìN
197
puerto
origen
7532
puerto
destino
80
IP
origen
IP
destino
puerto
origen
26145
puerto
destino
80
IP
origen
IP
destino
puerto
origen
26145
puerto
destino
80
IP
origen
IP
destino
Procesos
HTTP
conexi√≥n
Demultiplexaci√≥n
capa
transporte
Servidor
web
Cliente
web
host
Cliente
web
host
Figura
3.5
clientes
utilizando
n√∫mero
puerto
destino
80
comunicarse
aplicaci√≥n
servidor
web
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
1973.3
Transporte
conexi√≥n
UDP
secci√≥n
ocuparnos
UDP
funciona
animamos
releer
Secci√≥n
2.1
incluye
introducci√≥n
modelo
ser-
vicio
UDP
Secci√≥n
2.8
explica
programaci√≥n
sockets
UDP
iniciar
an√°lisis
UDP
suponga
dise√±ar
protocolo
transporte
simple
sofisticado
har√≠amos
lugar
con-
siderar
utilizaci√≥n
protocolo
transporte
vacuo
emisor
tomar√°
mensajes
proceso
aplicaci√≥n
pasar√°
directamente
capa
red
recepci√≥n
tomar√°
mensajes
procedentes
capa
red
pasar√°
directa-
mente
proceso
aplicaci√≥n
aprendido
secci√≥n
cosas
m√≠nimas
m√≠nimo
capa
transporte
proporcionar
servicio
multiplexaci√≥n
demultiplexaci√≥n
permita
transferir
datos
capa
red
proceso
capa
aplicaci√≥n
correcto
UDP
definido
documento
RFC
768
m√≠nimo
protocolo
transporte
funci√≥n
multiplexaci√≥n
demultiplexaci√≥n
mecanismo
comprobaci√≥n
errores
a√±ade
IP
desarrollador
aplicaci√≥n
elige
UDP
lugar
TCP
pr√°cticamente
aplicaci√≥n
comunica
directamente
IP
UDP
toma
mensajes
procedentes
proceso
apli-
caci√≥n
asocia
campos
correspondientes
n√∫meros
puerto
origen
destino
proporcionar
servicio
multiplexaci√≥n
demultiplexaci√≥n
a√±ade
campos
peque-
√±os
pasa
segmento
resultante
capa
red
capa
red
encapsula
segmento
capa
transporte
datagrama
IP
esfuerzo
entregar
segmento
host
receptor
segmento
llega
host
receptor
UDP
utiliza
n√∫mero
puerto
destino
entregar
datos
segmento
proceso
apropiado
capa
aplicaci√≥n
Observe
UDP
lugar
fase
establecimiento
conexi√≥n
entidades
capa
transporte
emisora
receptora
previa
env√≠o
segmento
UDP
protocolo
conexi√≥n
DNS
ejemplo
protocolo
capa
aplicaci√≥n
habitualmente
utiliza
UDP
aplicaci√≥n
DNS
host
desea
consulta
construye
men-
saje
consulta
DNS
pasa
UDP
cabo
proceso
establecer
conexi√≥n
entidad
UDP
ejecuta
sistema
terminal
destino
protocolo
UDP
host
a√±ade
campos
cabecera
mensaje
pasa
segmento
resultante
capa
red
encapsula
segmento
UDP
datagrama
env√≠a
servidor
nombres
aplicaci√≥n
DNS
ejecuta
host
consulta
espera
recibir
respuesta
consulta
recibe
posiblemente
red
subyacente
perdido
consulta
respuesta
intenta
enviar
consulta
servidor
nombres
informa
aplicaci√≥n
invocante
obtener
respuesta
est√©
preguntando
desarrollador
aplicaciones
decidir
crear
aplicaci√≥n
UDP
lugar
TCP
preferible
emplear
TCP
puesto
proporciona
servicio
transferencia
datos
fiable
UDP
respuesta
aplicaciones
adaptadas
UDP
siguientes
razones
control
nivel
aplicaci√≥n
datos
env√≠an
UDP
proceso
capa
aplicaci√≥n
pasa
datos
UDP
UDP
empa-
198
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
198queta
segmento
UDP
inmediatamente
entrega
segmento
capa
red
contrario
TCP
dispone
mecanismo
control
congesti√≥n
regula
flujo
emisor
TCP
capa
transporte
enlaces
existentes
hosts
origen
destino
excesivamente
congestionados
TCP
con-
tinuar√°
reenviando
segmento
recepci√≥n
confirmada
destino
independientemente
cabo
entrega
fia-
ble
Puesto
aplicaciones
tiempo
real
suelen
requerir
velocidad
m√≠nima
transmisi√≥n
permiten
retardo
excesivo
transmisi√≥n
segmentos
pue-
den
tolerar
p√©rdidas
datos
modelo
servicio
TCP
adapta
dema-
siado
necesidades
tipo
aplicaciones
veremos
aplicaciones
utilizar
UDP
implementar
aplicaci√≥n
cual-
quier
funcionalidad
adicional
necesaria
all√°
servicio
b√°sico
entrega
segmentos
UDP
establecimiento
conexi√≥n
explicar√°
TCP
cabo
proceso
establecimiento
conexi√≥n
fases
iniciar
transferen-
cia
datos
UDP
inicia
transmisi√≥n
formalidades
preliminares
UDP
a√±ade
retardo
causa
establecimiento
conexi√≥n
Probablemente
raz√≥n
principal
DNS
opera
UDP
TCP
DNS
lento
ejecutara
TCP
HTTP
utiliza
TCP
lugar
UDP
fiabilidad
cr√≠tica
p√°ginas
web
texto
comentado
bre-
vemente
Secci√≥n
2.2
retardo
establecimiento
conexi√≥n
TCP
HTTP
contribuye
forma
notable
retardos
asociados
descarga
documen-
tos
web
informaci√≥n
conexi√≥n
TCP
mantiene
informaci√≥n
acerca
conexi√≥n
sistemas
terminales
conexi√≥n
incluye
infor-
maci√≥n
acerca
buffers
recepci√≥n
env√≠o
par√°metros
control
con-
gesti√≥n
par√°metros
relativos
n√∫mero
secuencia
reconocimiento
Secci√≥n
3.5
veremos
informaci√≥n
necesaria
implementar
servicio
fiable
transferencia
datos
proporcionar
mecanismos
control
congesti√≥n
TCP
contrario
UDP
mantiene
informaci√≥n
cone-
xi√≥n
controla
par√°metros
raz√≥n
servidor
dedicado
aplicaci√≥n
concreta
suele
soportar
clientes
activos
aplicaci√≥n
ejecuta
UDP
TCP
sobrecarga
debida
cabecera
paquetes
segmentos
TCP
contienen
20
bytes
cabecera
segmento
UDP
requiere
bytes
tabla
Figura
3.6
enumera
aplicaciones
Internet
populares
protocolos
transporte
utilizan
esperar
correo
electr√≥nico
acceso
remoto
terminales
Web
transferencia
archivos
ejecutan
TCP
aplicaciones
necesitan
servicio
fiable
transferencia
datos
TCP
obstante
aplicaciones
importantes
ejecutan
UDP
lugar
TCP
UDP
utiliza
actualizaciones
tablas
enrutamiento
RIP
v√©ase
Secci√≥n
4.6.1
Puesto
actualizaciones
RIP
env√≠an
peri√≥dicamente
normalmente
minutos
actualizaciones
perdidas
reemplazan
recientes
in√∫tiles
actualizaciones
perdidas
desactualizadas
UDP
emplea
trans-
mitir
datos
administraci√≥n
red
SNMP
v√©ase
Cap√≠tulo
caso
3.3
TRANSPORTE
CONEXI√ìN
UDP
199
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
199Protocolo
Protocolo
transporte
Aplicaci√≥n
capa
aplicaci√≥n
subyacente
Correo
electr√≥nico
SMTP
TCP
Acceso
terminales
remotos
Telnet
TCP
Web
HTTP
TCP
Transferencia
archivos
FTP
TCP
Servidor
archivos
remoto
NFS
Normalmente
UDP
Flujos
multimedia
Normalmente
propietario
UDP
TCP
Telefon√≠a
Internet
Normalmente
propietario
UDP
TCP
Administraci√≥n
red
SNMP
Normalmente
UDP
Protocolo
enrutamiento
RIP
Normalmente
UDP
Traducci√≥n
nombres
DNS
Normalmente
UDP
Figura
3.6
Aplicaciones
Internet
populares
protocolos
transporte
subyacentes
UDP
preferible
TCP
aplicaciones
administraci√≥n
red
ejecutar
red
sobrecarga
precisamente
situaciones
dif√≠cil
transferencias
datos
fiables
control
congesti√≥n
mencionado
anteriormente
DNS
ejecuta
UDP
evitando
retardos
establecimiento
conexi√≥n
TCP
indica
Figura
3.6
actualmente
UDP
TCP
utilizan
apli-
caciones
multimedia
telefon√≠a
Internet
videoconferencias
tiempo
real
reproducci√≥n
flujos
v√≠deos
audios
almacenados
Cap√≠tulo
ocuparemos
aplicaciones
momento
basta
mencionar
aplicaciones
toleran
p√©rdida
peque√±a
cantidad
paquetes
transferencia
datos
fiable
absolutamente
cr√≠tica
aplicaci√≥n
funcione
correctamente
Ade-
aplicaciones
tiempo
real
telefon√≠a
Internet
videoconferencia
responden
mecanismos
control
congesti√≥n
TCP
razones
desarrolladores
aplicaciones
multimedia
elegir
ejecutar
aplicaciones
UDP
TCP
obstante
utiliza
TCP
transporte
flujos
multimedia
ejemplo
leer
Sripanidkulchai
2004
75%
flujos
multimedia
directo
carta
utilizan
TCP
tasa
p√©rdidas
paquetes
baja
teniendo
organizaciones
bloquean
tr√°fico
UDP
razones
seguridad
v√©ase
Cap√≠tulo
8)
TCP
convirtiendo
protocolo
atractivo
transporte
flujos
multimedia
com√∫n
emplear
UDP
ejecutar
aplicaciones
multimedia
contin√∫a
tema
controvertido
UDP
proporciona
meca-
nismos
control
congesti√≥n
mecanismos
necesarios
impedir
red
congesti√≥n
realice
trabajo
√∫til
mundo
deseara
reproducir
flujos
v√≠deo
alta
velocidad
utilizar
mecanismo
control
200
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
200de
congesti√≥n
producir√≠a
desbordamiento
paquetes
routers
paquetes
UDP
lograr√≠an
recorrer
√©xito
ruta
origen
destino
altas
tasas
p√©rdidas
inducidas
emisores
UDP
controlados
har√≠an
emiso-
res
TCP
veremos
reducen
velocidades
transmisi√≥n
frente
congesti√≥n
disminuyeran
dram√°ticamente
velocidades
ausencia
mecanismo
control
congesti√≥n
UDP
lugar
altas
tasas
p√©rdidas
emisor
receptor
UDP
estrangulamiento
sesiones
TCP
pro-
blema
potencialmente
serio
Floyd
1999
investigadores
propuesto
mecanismos
forzar
fuentes
datos
incluyendo
tipo
UDP
cabo
control
adaptativo
congesti√≥n
Mahdavi
1997
Floyd
2000
Kohler
2006
RFC
4340
pasar
examinar
estructura
segmentos
UDP
comentar
aplicaci√≥n
disponga
servicio
fiable
transferencia
datos
utilizando
UDP
conseguirse
caracter√≠sticas
fiabilidad
incorporan
aplicaci√≥n
ejemplo
a√±adiendo
mecanismos
reconocimiento
retransmisi√≥n
tales
secci√≥n
tarea
sen-
cilla
requiere
intensa
tarea
depuraci√≥n
aplicaciones
obstante
incorpo-
rar
mecanismos
fiabilidad
directamente
aplicaci√≥n
permite
selo
guise
coma
procesos
aplicaci√≥n
comunicarse
forma
fia-
ble
sujetos
restricciones
velocidad
transmisi√≥n
impuestas
meca-
nismo
control
congesti√≥n
TCP
3.3.1
Estructura
segmentos
UDP
estructura
segmentos
UDP
mostrada
Figura
3.7
definida
docu-
mento
RFC
768
datos
aplicaci√≥n
ocupan
campo
datos
segmento
UDP
ejemplo
DNS
campo
datos
contiene
mensaje
consulta
mensaje
respuesta
caso
aplicaci√≥n
flujo
audio
muestras
audio
llenar√°n
campo
datos
cabecera
UDP
campos
longitud
bytes
explicado
secci√≥n
n√∫meros
puerto
permiten
host
destino
pasar
datos
aplicaci√≥n
proceso
apropiado
ejecut√°ndose
sistema
terminal
destino
funci√≥n
demultiplexa-
ci√≥n
host
receptor
utiliza
suma
comprobaci√≥n
detectar
introducido
errores
segmento
realidad
suma
comprobaci√≥n
calcula
campos
cabecera
IP
segmento
UDP
momento
detalle
bosque
√°rboles
Veamos
calcula
suma
comprobaci√≥n
Secci√≥n
5.2
describen
principios
b√°sicos
detecci√≥n
errores
campo
longitud
especifica
longitud
segmento
UDP
bytes
incluyendo
cabecera
3.3.2
Suma
comprobaci√≥n
UDP
suma
comprobaci√≥n
UDP
proporciona
mecanismo
detecci√≥n
errores
utiliza
determinar
bits
contenidos
segmento
UDP
altera-
desplazaban
origen
destino
ejemplo
causa
exis-
tencia
ruido
enlaces
almacenados
router
UDP
emisor
calcula
complemento
suma
palabras
16
bits
seg-
3.3
TRANSPORTE
CONEXI√ìN
UDP
201
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
201mento
acarreando
desbordamiento
obtenido
operaci√≥n
suma
bit
menor
peso
resultado
almacena
campo
suma
comprobaci√≥n
segmento
UDP
ejemplo
sencillo
c√°lculo
suma
comprobaci√≥n
obtener
informaci√≥n
detallada
acerca
implementaci√≥n
eficiente
c√°lculo
RFC
1071
rendimiento
datos
reales
Stone
1998
Stone
2000
ejemplo
suponga
siguientes
palabras
16
bits
0110011001100000
0101010101010101
1000111100001100
suma
primeras
palabras
16
bits
0110011001100000
0101010101010101
1011101110110101
Sumando
palabra
suma
obtenemos
1011101110110101
1000111100001100
0100101011000010
Observe
suma
produce
desbordamiento
acarrea
bit
menor
peso
complemento
obtiene
convirtiendo
complemento
suma
0100101011000010
1011010100111101
suma
comprobaci√≥n
receptor
palabras
16
bits
suman
incluyendo
suma
comprobaci√≥n
introducido
errores
paquete
suma
receptor
111111111111111
bits
paquete
contiene
errores
est√©
preguntando
UDP
proporciona
suma
comproba-
ci√≥n
protocolos
capa
enlace
incluyendo
popular
protocolo
Ethernet
proporcionan
mecanismos
comprobaci√≥n
errores
raz√≥n
garant√≠a
enlaces
existentes
origen
des-
202
CAP√çTULO
CAPA
TRANSPORTE
N¬∫
puerto
origen
32
bits
N¬∫
puerto
destino
Longitud
Suma
comprobaci√≥n
Datos
aplicaci√≥n
mensaje
Figura
3.7
Estructura
segmento
UDP
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
202tino
proporcionen
mecanismo
comprobaci√≥n
errores
enlaces
utilizar
protocolo
capa
enlace
proporcione
comprobaci√≥n
erro-
res
segmentos
transfieren
correctamente
enlace
introduzcan
errores
bit
segmento
almacena
memoria
router
garantizadas
fiabilidad
enlace
enlace
detecci√≥n
errores
almacenamiento
memoria
UDP
proporcionar
mecanismo
detecci√≥n
errores
capa
transporte
terminal
terminal
servicio
trans-
ferencia
datos
terminal
terminal
proporcionar
detecci√≥n
errores
ejemplo
famoso
principio
terminal
terminal
dise√±o
sistemas
Saltzer
1984
establece
funcionalidad
caso
detecci√≥n
errores
implementarse
terminal
terminal
funciones
incluidas
niveles
inferiores
redundantes
escasamente
√∫tiles
comparan
coste
proporcionarlas
nivel
superior
IP
pensado
ejecutarse
pr√°cticamente
protocolo
capa
resulta
√∫til
capa
transporte
proporcionar
mecanismo
comprobaci√≥n
errores
medida
seguridad
UDP
proporciona
mecanismo
compro-
baci√≥n
errores
recuperarse
error
implementaciones
UDP
simplemente
descartan
segmento
da√±ado
pasan
aplicaci√≥n
advertencia
llega
exposici√≥n
UDP
veremos
TCP
ofrece
aplicaciones
servicio
transferencia
datos
fiable
servicios
UDP
proporciona
Naturalmente
TCP
complejo
UDP
abordar
TCP
resultar√°
√∫til
volver
pasos
atr√°s
ocuparnos
princi-
pios
subyacen
transferencia
datos
fiable
3.4
Principios
servicio
transferencia
datos
fiable
secci√≥n
considerar
problema
transferencia
datos
fiable
contexto
general
enfoque
conveniente
problema
implementar
servi-
cios
transferencia
datos
fiables
aparece
capa
transporte
capa
enlace
capa
aplicaci√≥n
problema
general
relevancia
redes
computadoras
efecto
tuvi√©ramos
identificar
lista
problemas
importantes
afectan
redes
candidato
liderar
dicha
lista
secci√≥n
examinaremos
TCP
concreto
mostraremos
TCP
aplica
principios
describir
Figura
3.8
ilustra
marco
trabajo
emplear
estudio
transferencia
datos
fiable
abstracci√≥n
servicio
proporcionada
entidades
capa
superior
canal
fiable
transferir
datos
Dispo-
niendo
canal
fiable
bits
datos
transferidos
corrompido
cambia
viceversa
pierde
entregan
orden
enviados
precisamente
modelo
servicio
ofrecido
TCP
aplicaciones
Internet
invocan
responsabilidad
protocolo
transferencia
datos
fiableimplementar
abstracci√≥n
servicio
tarea
complicada
capa
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
203
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
203debajo
protocolo
transferencia
datos
fiable
ejemplo
TCP
protocolo
transferencia
datos
fiable
implementa
capa
red
ter-
minal
terminal
fiable
IP
forma
general
capa
pun-
tos
terminales
comunican
forma
fiable
√∫nico
enlace
f√≠sico
caso
protocolo
transferencia
datos
nivel
enlace
interred
global
caso
protocolo
nivel
transporte
prop√≥sitos
considerar
capa
inferior
simplemente
canal
punto
punto
fiable
secci√≥n
desarrollar
forma
incremental
lados
emisor
receptor
protocolo
transferencia
datos
fiable
considerando
modelos
complejos
canal
subyacente
Figura
3.8(b
ilustra
interfaces
proto-
colo
transferencia
datos
emisor
protocolo
transferencia
datos
invocado
capa
superior
llamada
rdt_enviar
pasar√°
datos
entregar
capa
superior
receptor
rdthace
referencia
protocolo
transferencia
datos
fiable
reliable
data
transfer
enviar
indica
emisor
rdtest√°
llamado
paso
desarrollar
proto-
colo
elegir
nombre
receptor
rdt_recibir
llamado
llegue
paquete
receptor
canal
protocolo
rdtdesea
suminis-
trar
datos
capa
superior
har√°
llamando
entregar_datos
204
CAP√çTULO
CAPA
TRANSPORTE
Canal
fiable
Canal
fiable
rdt_enviar
udt_enviar
Proceso
emisor
Proceso
receptor
entregar_datos
Capa
aplicaci√≥n
Capa
transporte
a.
Servicio
proporcionado
Capa
red
Clave
Datos
Paquete
b.
Implementaci√≥n
servicio
Protocolo
transferencia
datos
fiable
emisor
Protocolo
transferencia
datos
fiable
receptor
rdt_recibir
Figura
3.8
Transferencia
datos
fiable
modelo
servicio
implementaci√≥n
servicio
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
204utilizaremos
t√©rmino
paquete
lugar
segmento
capa
transporte
Puesto
teor√≠a
desarrollada
secci√≥n
aplica
redes
computadoras
general
capa
transporte
Internet
resulte
apropiado
t√©rmino
gen√©rico
paquete
secci√≥n
√∫nicamente
consideraremos
caso
transferencia
datos
unidi-
reccional
datos
transfieren
emisor
receptor
caso
transferencia
datos
bidireccional
full-duplex
conceptualmente
dif√≠cil
considerablemente
tediosa
explicar
abordemos
trans-
ferencia
datos
unidireccional
tendremos
lados
emisor
receptor
protocolo
necesitan
transmitir
paquetes
ambas
direcciones
indica
Figura
3.8
Veremos
brevemente
intercambiar
paquetes
contengan
datos
transferirse
lados
emisor
receptor
rdttambi√©n
intercambian
paque-
tes
control
lados
emisor
receptor
derdtenv√≠an
paquetes
llamada
udt_enviar()(donde
udthace
referencia
transfe-
rencia
datos
fiable
unreliable
data
transfer
3.4.1
Construcci√≥n
protocolo
transferencia
datos
fiable
serie
protocolos
complejidad
creciente
llegar
proto-
colo
transferencia
datos
fiable
defectos
Transferencia
datos
fiable
canal
totalmente
fiable
rdt1.0
lugar
consideremos
caso
simple
canal
subyacente
comple-
tamente
fiable
protocolo
denominaremos
rdt1.0
trivial
Figura
3.9
muestran
definiciones
m√°quinas
finitos
FSM
Finite-State
Machine
emisor
receptor
rdt1.0
m√°quina
finitos
Figura
3.9(a
define
funcionamiento
emisor
FSM
Figura
3.9(b
define
funcionamiento
receptor
importante
observar
m√°quinas
esta-
finitos
separadas
emisor
receptor
m√°quinas
figura
flechas
descripci√≥n
FSM
indican
transici√≥n
pro-
tocolo
Puesto
caso
m√°quinas
Figura
3.9
necesariamente
transici√≥n
veremos
diagramas
complicados
suceso
provoca
transici√≥n
muestra
l√≠nea
horizontal
etiqueta
transici√≥n
acciones
toman
lugar
suceso
indican
l√≠nea
horizontal
lleve
cabo
nin-
guna
acci√≥n
ocurrir
suceso
produzca
suceso
realice
acci√≥n
utilizaremos
s√≠mbolo
horizontal
respectivamente
indicar
expl√≠cita
ausencia
acci√≥n
suceso
inicial
m√°quina
FSM
indicado
l√≠nea
puntos
m√°quinas
finitos
Figura
3.9
√∫nico
veremos
continuaci√≥n
m√∫l-
tiples
importante
identificar
inicial
m√°quina
FSM
emisor
rdtsimplemente
acepta
datos
capa
superior
suceso
rdt_enviar(datos
crea
paquete
contiene
datos
acci√≥n
crear
paquete(datos
env√≠a
paquete
canal
pr√°ctica
suceso
rdt_enviar
datos
resultar√≠a
llamada
procedimiento
ejemplo
rdt_enviar
reali-
zada
aplicaci√≥n
capa
superior
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
205
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
205Figura
3.9
rdt1.0
protocolo
canal
totalmente
fiable
receptor
rdt
recibe
paquete
canal
subyacente
suceso
rdt_recibir(paquete
extrae
datos
paquete
acci√≥n
extraer
paquete
datos
pasa
datos
capa
superior
acci√≥n
entregar
datos(datos
pr√°ctica
suceso
rdt_recibir(paquete
resultar√≠a
lla-
mada
procedimiento
ejemplo
rdt_recibir
protocolo
capa
inferior
protocolo
simple
diferencia
unidad
datos
paquete
flujo
paquetes
emisor
receptor
disponiendo
canal
totalmente
fiable
necesidad
receptor
proporcionar
nin-
guna
realimentaci√≥n
emisor
puesto
incorrecto
Observe
receptor
pod√≠a
recibir
datos
r√°pido
emi-
sor
enviara
necesidad
receptor
pida
emisor
Transferencia
datos
fiable
canal
errores
bit
rdt2.0
modelo
realista
canal
subyacente
bits
paquete
pudieran
corromperse
Normalmente
tales
errores
bit
producen
componentes
f√≠sicos
red
paquete
transmite
propaga
accede
buffer
momento
continuar
suponiendo
paquetes
transmitidos
recibidos
bits
corrompidos
orden
enviaron
desarrollar
protocolo
permita
comunicaci√≥n
fiable
canal
personas
enfrentan
situaci√≥n
Imagine
dicta-
r√≠a
mensaje
tel√©fono
escenario
t√≠pico
persona
escucha
mensaje
frase
escuche
comprenda
apunte
persona
escucha
mensaje
oye
frase
pedir√°
repita
proto-
colo
dictado
mensajes
utiliza
reconocimientos
positivos
reconocimientos
negativos
favor
repita
mensajes
control
permiten
Esperar
llamada
a.
rdt1.0
emisor
rdt_enviar(datos
paquete
crear_paquete(datos
udt_enviar(paquete
Esperar
llamada
abajo
b.
rdt1.0
receptor
rdt_recibir(paquete
extraer(paquete
datos
entregar_datos(datos
206
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
206receptor
emisor
recibido
correctamente
recibido
errores
repetir
red
computadoras
protocolos
transferencia
datos
fiables
basados
tales
retransmisiones
conocen
protocolos
ARQ
Automatic
Repeat
reQuest
Solicitud
autom√°tica
repetici√≥n
protocolos
ARQ
requieren
fundamentalmente
capacidades
proto-
colo
adicionales
gestionar
presencia
errores
bit
Detecci√≥n
errores
lugar
necesita
mecanismo
permita
receptor
detectar
producido
errores
bit
Recuerde
secci√≥n
UDP
utiliza
campo
suma
comprobaci√≥n
Internet
precisamente
prop√≥sito
Cap√≠tulo
examinaremos
t√©cnicas
detecci√≥n
correcci√≥n
errores
detalle
t√©cnicas
permiten
receptor
detectar
posiblemente
corregir
errores
bit
paquetes
momento
necesitamos
t√©cnicas
requie-
ren
emisor
env√≠e
receptor
bits
adicionales
bits
datos
origi-
nales
desean
transferir
dichos
bits
c√°lculo
suma
comprobaci√≥n
paquete
datos
rdt2.0
Realimentaci√≥n
receptor
emisor
receptor
normalmente
ejecutan
sistemas
terminales
posiblemente
separados
miles
kil√≥metros
√∫nica
forma
emisor
sepa
ocurre
receptor
caso
paquete
recibido
correctamente
receptor
env√≠e
expl√≠citamente
informaci√≥n
realimentaci√≥n
emisor
respuestas
acuse
recibo
reconoci-
miento
positivo
ACK
reconocimiento
negativo
NAK
escenario
dictado
mensajes
ejemplos
realimentaci√≥n
forma
similar
protocolo
rdt2.0
enviar√°
paquetes
ACK
NAK
vuelta
receptor
emisor
princi-
pio
paquetes
necesitan
longitud
bit
ejemplo
valor
indicar√≠a
reconocimiento
negativo
NAK
valor
indicar√≠a
reconocimiento
positivo
ACK
Retransmisi√≥n
paquete
recibe
errores
receptor
retransmitido
emisor
Figura
3.10
muestra
representaci√≥n
m√°quina
finitos
rdt2.0
protocolo
transferencia
datos
dispone
mecanismos
detecci√≥n
errores
paquetes
reconocimiento
positivo
negativo
emisor
rdt2.0
izquierda
proto-
colo
emisor
espera
datos
procedentes
capa
superior
produce
suceso
rdt_enviar(datos
emisor
crear√°
paquete
pqtenv
conte-
niendo
datos
transmitidos
suma
comprobaci√≥n
paquete
visto
Secci√≥n
3.3.2
ejemplo
caso
segmento
UDP
paquete
env√≠a
operaci√≥n
udt_enviar(pqtenv
derecha
protocolo
emisor
espera
paquete
reconoci-
miento
positivo
ACK
negativo
NAK
procedente
receptor
recibe
paquete
ACK
notaci√≥n
rdt_recibir(pqtrcb
esACK
pqtrcb
mostrada
Figura
3.10
corresponde
suceso
emisor
paquete
recientemente
transmitido
recibido
correctamente
protocolo
vuelve
espera
datos
procedentes
capa
superior
recibe
reconocimiento
negativo
NAK
protocolo
retransmite
paquete
espera
recibir
mensaje
ACK
NAK
receptor
res-
puesta
paquete
datos
retransmitido
importante
observar
emisor
Esperar
ACK
NAK
obtener
datos
capa
superior
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
207
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
207Figura
3.10
rdt2.0
protocolo
canal
errores
bit
suceso
rdt_enviar
ocurrir
ocurrir√°
emi-
sor
reciba
ACK
salga
emisor
enviar√°
frag-
mento
datos
seguro
receptor
recibido
correctamente
paquete
actual
comportamiento
protocolos
rdt2.0
conocen
pro-
tocolos
parada
espera
stop-and-wait
protocol
receptor
m√°quina
finitos
rdt2.0
√∫nico
llega
paquete
receptor
responde
reconocimiento
positivo
ACK
nega-
tivo
NAK
dependiendo
paquete
recibido
correcto
corrompido
Figura
3.10
notaci√≥n
rdt_recibir(pqtrcb
corrupto(pqtrcb)corresponde
suceso
recibido
paquete
resulta
err√≥neo
parecer
protocolo
rdt2.0
funciona
lamentablemente
defecto
fatal
posibilidad
paquete
ACK
NAK
corrompido
continuar
deber√≠a
pararse
pensar
resolver
problema
Lamentablemente
descuido
inocuo
pare-
cer
m√≠nimo
tendremos
a√±adir
bits
suma
comprobaci√≥n
paquetes
208
CAP√çTULO
CAPA
TRANSPORTE
Esperar
llamada
a.
rdt2.0
emisor
b.
rdt2.0
receptor
rdt_recibir(pqtrcb)&&corrupto(pqtrcb
pqtenv
crear_paquete(NAK
udt_enviar(pqtenv
rdt_recibir(pqtrcb
esNAK(pqtrcb
udt_enviar(pqtenv
rdt_recibir(pqtrcb)&&esACK(pqtrcb
rdt_enviar(datos
pqtenv
crear_paquete(datos
sumacomprobacion
udt_enviar(pqtenv
rdt_recibir(pqtrcb)&&nocorrupto(pqtrcb
extraer(pqtrcb
datos
entregar_datos(datos
pqtenv
crear_paquete(ACK
udt_enviar(pqtenv
Esperar
llamada
abajo
Esperar
ACK
NAK
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
208ACK
NAK
detectar
tales
errores
cuesti√≥n
complicada
recupe-
rarse
protocolo
errores
paquetes
ACK
NAK
dificultad
paquete
ACK
NAK
corrompido
emisor
forma
receptor
recibido
correctamente
fragmento
datos
transmitido
Consideremos
posibilidades
gestionar
paquetes
ACK
NAK
corrup-
tos
‚Ä¢P
nario
dictado
mensajes
persona
dictando
mensaje
entiende
respuesta
favor
repita
receptor
probablemente
dir√≠a
introduce
tipo
paquete
emisor
receptor
pro-
tocolo
continuaci√≥n
receptor
repetir√≠a
respuesta
ocurrir√≠a
corrompido
receptor
tendr√≠a
idea
frase
formaba
dictado
solicitud
repitiera
respuesta
probablemente
responder√≠a
dicha
respuesta
tam-
bi√©n
verse
alterada
Evidentemente
problema
complica
‚Ä¢U
ci√≥n
permitir
emisor
detectar
recuperarse
erro-
res
bit
resuelve
problema
inmediato
canal
corromper
paquetes
datos
perderlos
‚Ä¢U
actual
recibir
paquete
ACK
NAK
alterado
m√©todo
introduce
paquetes
duplicados
canal
emisor-receptor
principal
dificultad
paque-
tes
duplicados
receptor
paquete
ACK
NAK
enviado
recibido
correctamente
emisor
priori
paquete
entrante
contiene
datos
retransmisi√≥n
soluci√≥n
sencilla
problema
adoptada
pr√°cticamente
protocolos
transferencia
datos
existentes
incluido
TCP
consiste
a√±adir
campo
paquete
datos
emisor
numere
paquetes
datos
colocando
n√∫mero
secuencia
campo
bastar√°
receptor
compruebe
n√∫mero
secuencia
determinar
paquete
recibido
retransmisi√≥n
caso
protocolo
parada
espera
simple
n√∫mero
secuencia
bit
suficiente
permitir√°
receptor
emisor
retransmitiendo
paquete
previamente
transmitido
n√∫mero
secuencia
paquete
recibido
n√∫mero
secuencia
paquete
recibido
recientemente
paquete
n√∫mero
secuencia
distinto
desplazado
aritm√©tica
m√≥dulo
Puesto
suponiendo
disponemos
canal
pierde
datos
paquetes
ACK
NAK
indicar
n√∫mero
secuencia
paquete
confirmando
emisor
paquete
ACK
NAK
recibido
est√©
alterado
generado
respuesta
paquete
datos
transmitido
recientemente
Figuras
3.11
3.12
muestran
descripci√≥n
m√°quina
finitos
rdt2.1
versi√≥n
revisada
rdt2.0
m√°quinas
finitos
lados
emisor
receptor
rdt2.1
doble
protocolo
reflejar
paquete
enviando
actualmente
emisor
esperando
receptor
incluir
n√∫mero
secuencia
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
209
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
209210
CAP√çTULO
CAPA
TRANSPORTE
Esperar
llamada
rdt_recibir(pqtrcb
corrupto(pqtrcb)||
esNAK(pqtrcb
udt_enviar(pqtenv
rdt_recibir(pqtrcb
corrupto(pqtrcb)||
esNAK(pqtrcb
udt_enviar(pqtenv
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
esACK(pqtrcb
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
esACK(pqtrcb
rdt_enviar(datos
pqtenv
crear_paquete(0,datos
sumacomprobacion
udt_enviar(pqtenv
rdt_enviar(datos
pqtenv
crear_paquete(1,datos
sumacomprobacion
udt_enviar(pqtenv
Esperar
ACK
NAK
Esperar
ACK
NAK
Esperar
llamada
Figura
3.11
emisor
rdt2.1
rdt_recibir(pqtrcb
nocorrupto
pqtrcb
tiene_sec0(pqtrcb
pqtenv=
crear_paquete(ACK
sumacomprobacion
udt_enviar(pqtenv
rdt_recibir(pqtrcb
corrupto(pqtrcb
pqtenv
crear_paquete(NAK
sumacomprobacion
udt_enviar(pqtenv
rdt_recibir(pqtrcb
corrupto(pqtrcb
pqtenv
crear_paquete(NAK
sumacomprobacion
udt_enviar(pqtenv
pqtenv=
crear_paquete(ACK
sumacomprobacion
udt_enviar(pqtenv
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
tiene_sec1(pqtrcb
extraer(pqtrcb
datos
entregar_datos(datos
pqtenv
crear_paquete(ACK
sumacomprobacion
udt
enviar(pqtenv
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
tiene_sec0(pqtrcb
extraer(pqtrcb
datos
entregar_datos(datos
pqtenv=
crear_paquete(ACK
sumacomprobacion
udt_enviar(pqtenv
Esperar
abajo
Esperar
abajo
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
tiene_sec1(pqtrcb
Figura
3.12
receptor
rdt2.1
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
210a
Observe
acciones
casos
paquete
n√∫mero
secuencia
enviado
esperado
im√°genes
especulares
casos
n√∫mero
secuencia
paquete
√∫nicas
diferencias
encuen-
tran
gesti√≥n
n√∫mero
secuencia
protocolo
rdt2.1
receptor
env√≠a
respuestas
reconocimiento
positivo
negativo
emisor
recibe
paquete
secuencia
receptor
env√≠a
paquete
ACK
paquete
recibido
recibe
paquete
corrompido
receptor
env√≠a
respuesta
reconocimiento
negativo
efecto
respuesta
NAK
lugar
enviar
NAK
enviamos
respuesta
reconocimiento
positivo
ACK
paquete
recibido
correctamente
emi-
sor
recibe
respuestas
ACK
paquete
recibe
respuestas
ACK
duplicadas
receptor
recibido
correctamente
paquete
reconocido
respuesta
ACK
protocolo
transferencia
datos
fiable
respuestas
tipo
NAK
canal
errores
bit
rdt2.2
ilustra
Figuras
3.13
3.14
sutil
variaci√≥n
protocolos
rtdt2.1
rdt2.2
receptor
incluir
n√∫mero
secuencia
paquete
confirmado
mensaje
ACK
incluyendo
argumento
ACK,0o
ACK,1en
crear_paquete
m√°quina
finitos
recepci√≥n
emisor
comprobar
n√∫mero
secuencia
paquete
confirmado
mensaje
ACK
recibido
incluyendo
argumento
0o
1en
esACK
m√°quina
finitos
emisor
Transferencia
datos
fiable
canal
p√©rdidas
errores
bit
rdt3.0
Suponga
bits
corrompidos
canal
subyacente
perder
paquetes
suceso
desconocido
redes
computadoras
incluyendo
Internet
protocolo
preocuparse
problemas
detectar
p√©rdida
paquetes
pierde
paquete
suma
comprobaci√≥n
cheksum
n√∫meros
secuencia
paquetes
ACK
retransmi-
si√≥n
paquetes
t√©cnicas
desarrollado
protocolo
rdt2.2
per-
mitir
abordar
problema
tratar
necesario
a√±adir
mecanismo
protocolo
disponibles
formas
abordar
p√©rdida
paquetes
exploran
ejercicios
cap√≠tulo
Veamos
emisor
detectar
p√©rdida
paquetes
recuperarse
Suponga
emisor
trans-
mite
paquete
datos
paquete
mensaje
ACK
receptor
paquete
pierde
cualquiera
casos
emisor
llega
respuesta
procedente
receptor
emisor
dispuesto
esperar
tiempo
suficiente
seguro
perdido
paquete
simplemente
retransmitirlo
comprobar
sencillo
efectivamente
protocolo
funciona
tiempo
esperar
emisor
seguro
per-
dido
paquete
evidente
emisor
esperar
tiempo
retardo
ida
vuelta
emisor
receptor
incluir
almacenamiento
temporal
buffers
routers
intermedios
cantidad
tiempo
necesaria
procesar
paquete
receptor
redes
retardo
m√°ximo
caso
dif√≠cil
estimar
preci-
si√≥n
idealmente
protocolo
deber√≠a
recuperarse
p√©rdida
paquetes
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
211
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
211212
CAP√çTULO
CAPA
TRANSPORTE
Esperar
llamada
abajo
rdt_recibir(pqtrcb
corrupto(pqtrcb
||esACK(pqtrcb,1
udt_enviar(pqtenv
rdt_recibir(pqtrcb
corrupto(pqtrcb
||esACK(pqtrcb,0
udt_enviar(pqtenv
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
esACK(pqtrcb,0
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
esACK(pqtrcb,1
rdt_enviar(datos
pqtenv
crear_paquete(0,datos
sumacomprobacion
udt_enviar(pqtenv
rdt_enviar(datos
pqtenv
crear_paquete(1,datos
sumacomprobacion
udt_enviar(pqtenv
Esperar
ACK
Esperar
ACK
Esperar
llamada
Figura
3.13
emisor
rdt2.2
Esperar
abajo
rdt_recibir(pqtrcb
corrupto(pqtrcb)||
tiene_sec0(pqtrcb
udt_enviar(pqtenv
rdt_recibir(pqtrcb
corrupto(pqtrcb)||
tiene_sec1(pqtrcb
if(oncethru==1
udt_enviar(pqtenv
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
tiene_sec1(pqtrcb
extraer(pqtrcb
datos
entregar_datos(datos
pqtenv
crear_paquete(ACK,1,sumacomprobacion
udt_enviar(pqtenv
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
tiene_sec0(pqtrcb
extraer(pqtrcb
datos
entregar_datos(datos
pqtenv
crear_paquete(ACK,0,sumacomprobacion
udt_enviar(pqtenv
oncethru=1oncethru=0
Esperar
abajo
Figura
3.14
receptor
rdt2.2
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
2123.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
213
espera
tiempo
retardo
caso
significa
larga
espera
iniciar
mecanismo
recuperaci√≥n
errores
m√©todo
adopta
pr√°ctica
emisor
seleccione
juiciosamente
inter-
valo
tiempo
probable
paquete
perdido
seguro
p√©rdida
producido
intervalo
tiempo
recibido
ACK
paquete
retransmite
Observe
paquete
experimenta
retardo
par-
ticularmente
emisor
retransmitirlo
paquete
datos
correspondiente
ACK
hayan
perdido
introduce
posibilidad
existan
paquetes
datos
duplicados
canal
emisor-receptor
Afortunadamente
protocolo
rdt2.2
dispone
funcionalidad
n√∫meros
secuencia
afrontar
exis-
tencia
paquetes
duplicados
punto
vista
emisor
retransmisi√≥n
soluci√≥n
emisor
perdido
paquete
datos
perdido
mensaje
ACK
simplemente
paquete
ACK
retardados
casos
acci√≥n
retransmi-
tir
implementaci√≥n
mecanismo
retransmisi√≥n
basado
tiempo
requiere
temporizador
atr√°s
interrumpir
emisor
trans-
currido
determinado
periodo
tiempo
emisor
necesitar√°
iniciar
temporizador
env√≠e
paquete
retransmi-
si√≥n
responder
interrupci√≥n
temporizador
ejecutando
acciones
apropia-
das
detener
temporizador
Esperar
llamada
rdt_recibir(pqtrcb
corrupto(pqtrcb
||esACK(pqtrcb,1
fin_de_temporizaci√≥n
udt_enviar(pqtenv
iniciar_temporizador
rdt_recibir(pqtrcb
Œõrdt_recibir(pqtrcb
corrupto(pqtrcb
||esACK(pqtrcb,0
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
esACK(pqtrcb,0
detener_temporizador
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
esACK(pqtrcb,1
detener_temporizador
fin_de_temporizaci√≥n
udt_enviar(pqtenv
iniciar_temporizador
rdt_enviar(datos
pqtenv
crear_paquete(0,datos
sumacomprobacion
udt_enviar(pqtenv
iniciar_temporizador
rdt_enviar(datos
pqtenv
crear_paquete(1,datos
sumacomprobacion
udt_enviar(pqtenv
iniciar_temporizador
Esperar
ACK
Esperar
ACK
Esperar
llamada
rdt_recibir(pqtrcb
Figura
3.15
emisor
rdt3.0
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
213La
Figura
3.15
muestra
m√°quina
finitos
emisor
rdt3.0
pro-
tocolo
transfiere
datos
forma
fiable
canal
corromper
per-
der
paquetes
problemas
repaso
pedir√°
defina
m√°quina
finitos
receptor
rdt3.0
Figura
3.16
muestra
opera
protocolo
214
CAP√çTULO
CAPA
TRANSPORTE
recibir
pqt0
enviar
ACK0
recibir
pqt1
enviar
ACK1
recibir
pqt0
enviar
ACK0
Emisor
Receptor
a.
Operaci√≥n
p√©rdidas
pqt0
ACK0
pqt1
pqt0
ACK1
ACK0
perdido
b.
Paquete
perdido
recibir
pqt0
enviar
ACK0
recibir
pqt1
enviar
ACK1
c.
ACK
perdido
enviar
pqt0
recibir
ACK0
enviar
pqt1
recibir
ACK1
enviar
pqt0
enviar
pqt0
recibir
ACK0
enviar
pqt1
temporizaci√≥n
reenviar
pqt1
recibir
ACK1
enviar
pqt0
recibir
pqt0
enviar
ACK0
recibir
pqt1
detectar
duplicado
enviar
ACK1
enviar
pqt0
recibir
ACK0
enviar
pqt1
recibir
pqt0
enviar
ACK0
temporizaci√≥n
reenviar
pqt1
recibir
pqt1
enviar
ACK1
d.
temporizaci√≥n
prematuro
recibir
ACK1
enviar
pqt0
recibir
ACK1
recibir
pqt0
enviar
ACK0
recibir
pqt1
detectar
duplicado
enviar
ACK1
Emisor
Receptor
ReceptorEmisor
pqt0
ACK0
pqt1
ACK1
ACK1
ACK0
ACK1
ACK0
pqt1
pqt0
pqt0
pqt1
pqt1
pqt0
ACK1
ACK0
perdido
pqt1
recibir
pqt0
enviar
ACK0
enviar
pqt0
recibir
ACK0
enviar
pqt1
temporizaci√≥n
reenviar
pqt1
recibir
ACK1
enviar
pqt0
recibir
pqt0
enviar
ACK0
recibir
pqt1
enviar
ACK1
Emisor
Receptor
pqt0
ACK0
pqt1
pkt0
ACK1
ACK0
Figura
3.16
Operaci√≥n
rdt3.0
protocolo
bit
alternante
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
214no
pierden
retardan
paquetes
gestiona
p√©rdida
paquetes
datos
Figura
3.16
tiempo
avanzando
superior
diagrama
inferior
observe
instante
recepci√≥n
paquete
necesariamente
posterior
instante
env√≠o
paquete
consecuencia
retardos
transmi-
si√≥n
propagaci√≥n
Figuras
3.16(b)‚Äì(d
corchetes
emisor
indi-
can
instantes
inicio
temporizador
aspectos
sutiles
protocolo
ver√°n
ejercicios
incluidos
cap√≠tulo
n√∫meros
secuencia
paquetes
alternan
protocolo
rdt3.0se
denomina
ocasio-
nes
protocolo
bit
alternante
ensamblado
elementos
clave
protocolo
transferencia
datos
sumas
comprobaci√≥n
n√∫meros
secuencia
temporizadores
paquetes
reconocimiento
positivo
negativo
desempe√±an
papel
fundamental
nece-
sario
funcionamiento
protocolo
continuaci√≥n
trabajar
protocolo
transferencia
datos
fiable
3.4.2
Protocolo
transferencia
datos
fiable
procesamiento
cadena
protocolo
rdt3.0es
protocolo
funcionalmente
correcto
improbable
alguien
satisfaga
rendimiento
especialmente
redes
ata
velocidad
actuales
base
problema
rendimiento
rdt3.0se
protocolo
parada
espera
entender
impacto
rendimiento
comportamiento
parada
espera
considerar
caso
ideal
hosts
localizado
costa
oeste
Unidos
costa
muestra
Figura
3.17
retardo
propagaci√≥n
ida
vuelta
RTT
velocidad
luz
sistemas
termi-
nales
30
milisegundos
Suponga
conectados
canal
cuya
velocidad
transmisi√≥n
Gbps
10
bits
tama√±o
paquete
1.000
bytes
8.000
bits
paquete
incluyendo
campos
cabecera
datos
tiempo
necesario
transmitir
paquete
enlace
Gbps
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
215
Paquetes
datosPaquete
datos
Paquetes
ACK
a.
Funcionamiento
protocolo
parada
espera
b.
Funcionamiento
protocolo
procesamiento
cadena
Figura
3.17
Protocolo
parada
espera
protocolo
procesamiento
cadena
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
215216
CAP√çTULO
CAPA
TRANSPORTE
bit
paquete
transmitido
bit
paquete
transmitido
bit
paquete
transmitido
bit
paquete
transmitido
Llega
mensaje
ACK
env√≠a
paquete
RTT
a.
Funcionamiento
protocolo
parada
espera
Emisor
Receptor
RTT
Llega
bit
paquete
Llega
bit
paquete
env√≠o
mensaje
ACK
Llega
bit
paquete
Llega
bit
paquete
env√≠o
mensaje
ACK
Llega
mensaje
ACK
env√≠a
paquete
RTT
b.
Funcionamiento
procesamiento
cadena
Emisor
Receptor
RTT
Llega
bit
2¬∫
paquete
env√≠o
mensaje
ACK
Llega
bit
er
paquete
env√≠o
mensaje
ACK
Figura
3.18
Proceso
transmisi√≥n
protocolo
parada
espera
protocolo
procesamiento
cadena
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
216La
Figura
3.18(a
muestra
protocolo
parada
espera
emisor
comienza
transmitir
paquete
instante
instante
microsegundos
bit
entra
canal
emisor
paquete
tarda
15
milisegundos
atravesar
pa√≠s
emergiendo
bit
paquete
receptor
instante
RTT/2
15,008
milisegundos
simplificar
suponer
paquetes
reconocimiento
ACK
extremadamente
peque√±os
ignorar
tiempo
transmisi√≥n
receptor
enviar
ACK
recibido
bit
paquete
datos
llegando
ACK
emisor
RTT
30,008
mseg
situaci√≥n
emisor
transmi-
tir
mensaje
30,008
milisegundos
emisor
transmi-
tiendo
0,008
milisegundos
definimos
tasa
utilizaci√≥n
emisor
canal
fracci√≥n
tiempo
emisor
realmente
ocupado
enviando
bits
canal
an√°lisis
Figura
3.18(a
muestra
protocolo
parada
espera
tasa
utilizaci√≥n
emisor
Uemisor
mala
Uemisor
emisor
ocupado
2,7
diezmil√©simas
tiempo
palabras
emisor
podido
enviar
1.000
bytes
30,008
milisegundos
tasa
transferen-
cia
efectiva
267
kbps
disponiendo
enlace
Gbps
Imagine
infeliz
administrador
red
pagado
fortuna
enlace
capacidad
gigabit
obtener
tasa
transferencia
√∫nicamente
267
kilobits
ejemplo
gr√°fico
protocolos
red
limitar
capacidades
propor-
cionadas
hardware
red
subyacente
despreciado
tiempos
procesamiento
protocolo
capa
inferior
emisor
receptor
retardos
procesamiento
cola
lugar
cualquiera
routers
intermedios
existentes
emisor
receptor
inclusi√≥n
efectos
servir√≠a
incrementar
retardo
acentuar
p√©simo
rendimiento
soluci√≥n
problema
rendimiento
concreto
simple
lugar
operar
parada
espera
emisor
enviar
paquetes
esperar
mensajes
reconocimiento
ilustra
Figura
3.17(b
Figura
3.18(b
muestra
emisor
transmite
paquetes
esperar
paquetes
reconocimiento
utilizaci√≥n
emisor
pr√°cticamente
triplica
paquetes
tr√°nsito
emisor
receptor
visualizarse
relleno
conducto
pipeline
t√©cnica
conoce
pipelining
procesamiento
cadena
procesa-
miento
cadena
siguientes
consecuencias
protocolos
transferencia
datos
fiables
‚Ä¢E
tr√°nsito
contar
retransmisiones
n√∫mero
secuencia
√∫nico
coexistir
m√∫ltiples
paquetes
tr√°nsito
hayan
confirmados
reconocimiento
‚Ä¢L
paquete
m√≠nimo
emisor
buffer
paquetes
transmitidos
reconocidos
veremos
tam-
bi√©n
necesario
almacenar
buffer
receptor
paquetes
recibidos
correctamente
RTT
008
30
008
00027
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
217
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
217‚Ä¢E
forma
protocolo
transferencia
datos
responda
p√©rdida
paquetes
paquetes
corrompidos
excesivamente
retardados
disponibles
m√©todos
b√°sicos
permiten
recuperaci√≥n
errores
procesamiento
cadena
Retroceder
repetici√≥n
selectiva
3.4.3
Retroceder
GBN
protocolo
GBN
Go-Back-N
Retroceder
emisor
transmitir
paquetes
disponibles
esperar
reconocidos
res-
tringido
n√∫mero
m√°ximo
permitido
paquetes
reconocidos
canal
secci√≥n
describir
protocolo
GBN
detalle
seguir
leyendo
animamos
practicar
applet
GBN
applet
impresionante
disponible
sitio
web
libro
Figura
3.19
muestra
correspondiente
emisor
rango
n√∫meros
secuencia
protocolo
GBN
definimos
base
n√∫mero
secuencia
paquete
reconocido
antiguo
signumseccomo
n√∫mero
secuencia
peque√±o
utilizado
n√∫mero
secuencia
paquete
enviar
enton-
ces
identificar
intervalos
rango
n√∫meros
secuencia
n√∫me-
ros
secuencia
pertenecientes
intervalo
0,base-1]corresponden
paquetes
transmitidos
reconocidos
intervalo
base
signumsec-1]corresponde
paquetes
enviados
reconocido
n√∫meros
secuencia
intervalo
signumsec
base+N-1
emplear
paquetes
enviados
forma
inmediata
caso
lleguen
datos
procedentes
capa
superior
n√∫meros
secuencia
mayores
iguales
base+Nno
utilizados
paquete
reconocido
encuentre
actualmente
canal
reconocido
espec√≠ficamente
paquete
cuyo
n√∫mero
secuencia
base
sugiere
Figura
3.19
rango
n√∫meros
secuencia
permitidos
paquetes
transmitidos
reconocidos
visualizarse
ventana
tama√±o
rango
n√∫meros
secuencia
protocolo
opera
ven-
tana
desplaza
espacio
n√∫meros
secuencia
raz√≥n
suele
denominarse
tama√±o
ventana
protocolo
GBN
pro-
tocolo
ventana
deslizante
est√©
preguntando
empezar
debemos
limitar
n√∫mero
paquetes
reconocidos
circulaci√≥n
per-
mitir
n√∫mero
ilimitado
tales
paquetes
Secci√≥n
3.5
veremos
control
218
CAP√çTULO
CAPA
TRANSPORTE
base
signumsec
Tama√±o
ventana
Clave
reconocido
ACK
Enviado
reconocido
ACK
Utilizable
enviado
utilizable
Figure
3.19
N√∫meros
secuencia
emisor
protocolo
Retroceder
N.
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
2183.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
219
flujo
razones
imponer
l√≠mite
emisor
Secci√≥n
3.7
examina-
remos
raz√≥n
estudiar
mecanismo
control
congesti√≥n
TCP
pr√°ctica
n√∫mero
secuencia
paquete
incluye
campo
longitud
fija
cabecera
paquete
n√∫mero
bits
contenido
campo
especifica
n√∫mero
secuencia
paquete
rango
n√∫meros
secuencia
0,2k
rango
finito
n√∫meros
secuencia
operaciones
aritm√©ticas
impliquen
n√∫meros
secuencia
efectuarse
utilizando
aritm√©tica
m√≥dulo
2k
espacio
n√∫meros
secuencia
interpretarse
anillo
tama√±o
n√∫mero
secuencia
seguido
n√∫mero
secuencia
Recuerde
protocolo
rdt3.0
dispone
n√∫mero
secuencia
bit
rango
n√∫meros
secuencia
0,1
problemas
incluidos
cap√≠tulo
exploran
consecuencias
disponer
rango
finito
n√∫meros
secuen-
cia
Secci√≥n
3.5
veremos
TCP
utiliza
campo
n√∫mero
secuencia
32
bits
n√∫meros
secuencia
cuentan
bytes
flujo
datos
lugar
paquetes
Figuras
3.20
3.21
proporcionan
descripci√≥n
ampliada
m√°quina
esta-
finitos
lados
emisor
receptor
protocolo
GBN
basado
paquetes
reco-
nocimiento
ACK
emplea
paquetes
reconocimiento
NAK
referiremos
descripci√≥n
FSM
FSM
ampliada
a√±adido
variables
similares
variables
lenguaje
programaci√≥n
basey
signumsec
operaciones
dichas
variables
acciones
condicionales
implican
Observe
especificaci√≥n
FSM
ampliada
empieza
asemejarse
especificaci√≥n
lenguaje
progra-
maci√≥n
Bochman
1984
proporciona
excelente
repaso
ampliaciones
t√©c-
nicas
m√°quinas
finitos
t√©cnicas
basadas
lenguajes
programaci√≥n
especificaci√≥n
protocolos
emisor
protocolo
GBN
responder
tipos
sucesos
Invocaci√≥n
capa
superior
llama
rdt_enviar
capa
superior
emisor
ventana
llena
paquetes
reconocidos
circulaci√≥n
ventana
llena
crea
env√≠a
paquete
actualizan
variables
forma
apropiada
ventana
llena
emisor
simplemente
devuelve
datos
capa
superior
indicando
forma
impl√≠cita
ventana
llena
Probablemente
capa
superior
volver√°
intentarlo
implementaci√≥n
real
posiblemente
emisor
almacenar√≠a
buffer
datos
enviar√≠a
forma
inmediata
dispondr√≠a
meca-
nismo
sincronizaci√≥n
ejemplo
sem√°foro
indicador
permitir√≠a
capa
superior
llamar
rdt_enviar()s√≥lo
ventana
estuviera
llena
Recepci√≥n
mensaje
reconocimiento
ACK
protocolo
GBN
reco-
nocimiento
paquete
n√∫mero
secuencia
implica
reconocimiento
acumulativo
indica
paquetes
n√∫mero
correctamente
recibidos
receptor
olveremos
tema
examinar
receptor
GBN
suceso
temporizaci√≥n
nombre
protocolo
Retroceder
deriva
comportamiento
emisor
presencia
paquetes
perdidos
retarda-
protocolos
parada
espera
emplear√°
temporizador
recu-
perarse
p√©rdida
paquetes
datos
reconocimiento
paquetes
produce
temporizaci√≥n
emisor
reenv√≠a
paquetes
transmi-
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
219Figura
3.20
Descripci√≥n
FSM
ampliada
emisi√≥n
GBN
Figura
3.21
Descripci√≥n
FSM
ampliada
receptor
GBN
tido
anteriormente
hayan
reconocidos
emisor
Figura
3.20
utiliza
√∫nico
temporizador
interpretarse
temporizador
paquetes
transmitidos
reconocidos
recibe
paquete
ACK
paquetes
transmitidos
adicionales
reconocidos
reinicia
tem-
porizador
paquetes
reconocidos
circulaci√≥n
temporizador
detiene
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
conNumSec(pqtrcb
numsecesperado
extract(pqtrcb
datos
entregar_datos(datos
pqtenv
crear_paquete(numsecesperado
ACK
sumacomprobacion
udt_enviar(pqtenv
numsecesperado++
numsecesperado=1
pqtenv
crear_paquete(0,ACK
sumacomprobacion
por_defecto
udt_enviar(pqtenv
Esperar
220
CAP√çTULO
CAPA
TRANSPORTE
rdt_enviar(datos
if(signumsec
base+N
pqtenv[signumsec]=crear_paquete(signumsec
datos
sumacomprobacion
udt_enviar(pqtenv[signumsec
if(base==signumsec
iniciar_temporizador
signumsec++
else
rechazar_datos(datos
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
base
obtenernumack(pqtrcb)+1
If(base==signumsec
detener_temporizador
else
iniciar_temporizador
rdt_recibir(pqtrcb
corrupto(pqtrcb
base=1
signumsec=1
fin_de_temporizaci√≥n
iniciar_temporizador
udt_enviar(pqtenv[base
udt_enviar(pqtenv[base+1
udt_enviar(pqtenv[signumsec-1
Esperar
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
220Las
acciones
receptor
protocolo
GBN
simples
paquete
n√∫mero
secuencia
recibe
correctamente
orden
datos
entregados
capa
superior
proceden
paquete
n√∫mero
secuencia
receptor
env√≠a
paquete
ACK
paquete
entrega
datos
paquete
capa
superior
restantes
casos
receptor
descarta
paquete
reenv√≠a
mensaje
ACK
paquete
recibido
orden
recientemente
Observe
paquetes
entregan
capa
superior
paquete
recibido
entregado
paquetes
n√∫mero
secuencia
menor
entregados
confirmaciones
acumulativas
opci√≥n
natural
protocolo
GBN
protocolo
GBN
receptor
descarta
paquetes
orden
parecer
tonto
p√©rdida
tiempo
descartar
paquete
recibido
correctamente
desordenado
justificaci√≥n
Recuerde
receptor
entregar
datos
orden
capa
superior
Suponga
espera
paquete
llega
paquete
Puesto
datos
entregados
orden
receptor
podr√≠aguardar
buffer
paquete
entregar
paquete
capa
superior
recibido
entregado
paquete
n.
pierde
paquete
paquete
retransmitidos
resultado
regla
retransmisi√≥n
protocolo
GBN
emisi√≥n
receptor
simplemente
descartar
paquete
ventaja
m√©todo
simplicidad
almacenamiento
buffer
receptor
receptor
necesita
almacenar
buffer
paquetes
entregados
desordenados
emisor
mantener
l√≠mites
inferior
superior
ventana
posici√≥n
signumsecdentro
ventana
√∫nico
fragmento
informaci√≥n
receptor
mantener
n√∫mero
secuencia
paquete
orden
valor
almacena
variable
numsec-
esperado
muestra
m√°quina
finitos
receptor
Figura
3.21
desventaja
descartar
paquete
correctamente
recibido
subsi-
guiente
retransmisi√≥n
paquete
perderse
alterarse
necesa-
rias
retransmisiones
Figura
3.22
muestra
funcionamiento
protocolo
GBN
caso
tama√±o
ventana
paquetes
causa
limitaci√≥n
tama√±o
ventana
emisor
transmite
paquetes
esperar
paquetes
reconocidos
continuar
medida
reciben
sucesivos
paquetes
ACK
ejemplo
ACK0
ACK1
ventana
desplaza
emisor
transmitir
paquete
pqt4y
pqt5
respectivamente
receptor
pierde
paquete
paquetes
reciben
orden
correcto
l√≥gicamente
des-
cartan
terminar
exposici√≥n
acerca
GBN
merece
pena
destacar
implementaci√≥n
protocolo
pila
protocolos
tendr√≠a
probablemente
estructura
similar
m√°quina
finitos
ampliada
Figura
3.20
Posible-
mente
implementaci√≥n
realizar√≠a
procedimientos
implementasen
acciones
habr√≠a
respuesta
distintos
sucesos
produ-
cirse
programaci√≥n
basada
sucesos
diversos
procedimientos
llamados
invocados
procedimientos
pila
protocolos
resultado
inte-
rrupci√≥n
emisor
sucesos
llamada
entidad
capa
superior
invocar
rdt_enviar
interrupci√≥n
temporizador
lla-
mada
capa
inferior
invocar
rdt_recibir()cuando
llega
paquete
ejerci-
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
221
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
221Figura
3.22
Funcionamiento
protocolo
GBN
Retroceder
cios
programaci√≥n
incluidos
cap√≠tulo
dar√°n
oportunidad
implemen-
tar
pr√°ctica
rutinas
red
simulada
realista
Observe
protocolo
GBN
incorpora
t√©cnicas
veremos
Sec-
ci√≥n
3.5
estudiar
componentes
servicio
transferencia
datos
fiable
TCP
t√©cnicas
incluyen
n√∫meros
secuencia
reconocimientos
acumulativos
sumas
comprobaci√≥n
operaci√≥n
temporizaci√≥n
retransmisi√≥n
3.4.4
Repetici√≥n
selectiva
SR
protocolo
GBN
permite
emisor
teor√≠a
llenar
conducto
mostrado
Figura
3.17
paquetes
evitando
problemas
utilizaci√≥n
canal
visto
protocolos
parada
espera
escenarios
GBN
presenta
problemas
rendimiento
particular
tama√±o
ventana
Emisor
Receptor
enviar
pqt0
enviar
pqt1
enviar
pqt2
enviar
pqt3
esperar
recibir
ACK0
enviar
pqt4
recibir
ACK1
enviar
pqt5
enviar
pqt2
enviar
pqt3
enviar
pqt4
enviar
pqt5
temporiz
pqt2
recibir
pqt0
enviar
ACK0
recibir
pqt1
enviar
ACK1
recibir
pqt3
descartar
enviar
ACK1
recibir
pqt4
descartar
enviar
ACK1
recibir
pqt5
descartar
enviar
ACK1
recibir
pqt2
entregar
enviar
ACK2
recibir
pqt3
entregar
enviar
ACK3
perdido
222
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
222producto
ancho
banda-retardo
paquetes
canal
caso
√∫nico
paquete
err√≥neo
protocolo
GBN
retransmitiera
cantidad
paquetes
forma
innecesaria
medida
probabi-
lidad
errores
canal
aumenta
canal
comenzar
llenarse
retransmi-
siones
innecesarias
escenario
dictado
mensajes
imagine
altera
palabra
1.000
palabras
rodean
ejemplo
tama√±o
ventana
1.000
palabras
tuvieran
repetidas
dictado
ralentizar√≠a
causa
repetici√≥n
palabras
nombre
sugiere
protocolos
repetici√≥n
selectiva
evitan
retransmisio-
nes
innecesarias
emisor
√∫nicamente
retransmita
paquetes
sospeche
llegaron
receptor
error
perdieron
corrompi-
retransmisi√≥n
individualizada
necesaria
requerir√°
receptor
confirme
individualmente
paquetes
recibido
correctamente
utilizaremos
ven-
tana
tama√±o
limitar
n√∫mero
paquetes
reconocidos
circulaci√≥n
canal
diferencia
GBN
emisor
recibido
mensajes
ACK
paquetes
ventana
Figura
3.23
muestra
espacio
n√∫meros
secuencia
emisi√≥n
protocolo
SR
Figura
3.24
detalla
distintas
accio-
nes
cabo
emisor
protocolo
SR
receptor
SR
confirmar√°
paquete
recibido
correctamente
recibido
orden
correcto
paquetes
recibidos
orden
almacena-
r√°n
buffer
reciban
paquetes
faltan
paquetes
n√∫meros
secuencia
menores
momento
lote
paquetes
entregarse
orden
capa
superior
Figura
3.25
enumeran
acciones
tomadas
receptor
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
223
base_emision
signumsec
Tama√±o
ventana
Clave
Clave
reconocido
Enviado
reconocido
Utilizable
enviado
utilizable
Desordenado
buffer
reconocido
Esperado
recibido
Aceptable
ventana
utilizable
a.
N√∫meros
secuencia
emisor
b.
N√∫meros
secuencia
receptor
base_recepcion
Tama√±o
ventana
Figura
3.23
Espacios
n√∫meros
secuencia
emisor
receptor
protocolo
repetici√≥n
selectiva
SR
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
223de
SR
Figura
3.26
muestra
ejemplo
funcionamiento
SR
presencia
paque-
tes
perdidos
Observe
figura
inicialmente
receptor
almacena
buffer
paquetes
entrega
paquete
capa
superior
recibido
paquete
importante
observar
Paso
Figura
3.25
receptor
vuelve
recono-
cer
lugar
ignorar
paquetes
recibidos
determinados
n√∫meros
secuencia
inferiores
n√∫mero
base
actual
ventana
comprobar
f√°cilmente
doble
reconocimiento
necesario
ejemplo
dados
espacios
n√∫meros
secuencia
emisor
receptor
Figura
3.23
paquete
ACK
paquete
base_emision
propag√°ndose
receptor
emisor
finalmente
emisor
retransmi-
tir√°
paquete
base_emision
est√©
224
CAP√çTULO
CAPA
TRANSPORTE
Datos
recibidos
capa
superior
reciben
datos
capa
superior
emisor
SR
com-
prueba
n√∫mero
secuencia
disponible
paquete
n√∫mero
secuencia
encuen-
tra
ventana
emisor
datos
empaquetan
env√≠an
caso
contrario
almacenan
buffer
devuelven
capa
superior
transmitidos
caso
protocolo
GBN
temporizaci√≥n
paquete
temporizador
l√≥gico
transmitir√°
paquete
producirse
temporizaci√≥n
utilizar
temporizador
hardware
imitar
funcionamiento
temporizadores
l√≥gicos
Varghese
1997
ACK
recibido
recibido
est√©
ventana
n√∫mero
secuencia
paquete
base_emision
avanzar
base
ventana
situ√°ndola
paquete
reconocido
n√∫mero
secuencia
ventana
desplaza
paquetes
transmitidos
n√∫meros
secuencia
caen
ventana
paquetes
transmiten
Figura
3.24
Sucesos
acciones
emisor
protocolo
SR
recibido
correctamente
paquete
cuyo
n√∫mero
secuencia
pertenece
intervalo[base_recep-
cion
base_recepcion+N-1
caso
paquete
recibido
cae
ventana
receptor
devuelve
emisor
paquete
ACK
selectivo
paquete
recibido
anterioridad
alma-
cena
buffer
paquete
n√∫mero
secuencia
base
ventana
recepci√≥n
base_recepcionen
Figura
3.22
paquete
paquete
anteriormente
almacenado
buffer
numerado
consecutivamente
comenzando
base_recepcion
entregan
capa
supe-
rior
ventana
recepci√≥n
avanza
n√∫mero
paquetes
suministrados
entregados
capa
superior
ejemplo
Figura
3.26
recibe
paquete
n√∫mero
secuencia
base_recepcion
paquetes
entregarse
capa
superior
recibido
correctamente
paquete
cuyo
n√∫mero
secuencia
pertenece
intervalo
base_recep-
cion-N
base_recepcion
-1
caso
generar
mensaje
ACK
paquete
reconocido
anteriormente
receptor
caso
Ignorar
paquete
Figura
3.25
Sucesos
acciones
receptor
protocolo
SR
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
224emisor
receptor
recibido
paquete
receptor
hubiera
confirmado
paquete
ventana
emisor
avanzar√≠a
ejemplo
ilustra
aspecto
impor-
tante
protocolos
SR
protocolos
emisor
receptor
siem-
pre
visi√≥n
id√©ntica
recibido
correctamente
protocolos
SR
significa
ventanas
emisor
receptor
coinci-
den
falta
sincronizaci√≥n
ventanas
emisor
receptor
consecuen-
cias
importantes
enfrentamos
realidad
rango
finito
n√∫meros
secuencia
ejemplo
imagine
ocurrir√≠a
rango
n√∫meros
secuen-
cia
paquete
tama√±o
ventana
Suponga
paquetes
transmiten
recibidos
correctamente
reconocidos
receptor
situaci√≥n
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
225
pqt0
recibido
entregado
ACK0
enviado
pqt1
recibido
entregado
ACK1
enviado
pqt3
recibido
buffer
ACK3
enviado
pqt4
recibido
buffer
ACK4
enviado
pqt5
recibido
buffer
ACK5
enviado
pqt2
recibido
pqt2,pqt3,pqt4,pqt5
entregados
ACK2
enviado
pqt0
enviado
pqt1
enviado
pqt2
enviado
pqt3
enviado
ventana
completa
ACK0
recibido
pqt4
enviado
ACK1
recibido
pqt5
enviado
pqt2
TEMPOR
pqt2
reenviado
ACK3
recibido
env√≠a
perdido
Emisor
Receptor
Figura
3.26
Funcionamiento
protocolo
SR
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
225ventana
receptor
encontrar√≠a
paquetes
cuarto
quinto
sexto
n√∫meros
secuencia
respectivamente
consideremos
escenarios
mostrado
Figura
3.27(a
mensajes
ACK
paquetes
pierden
emisor
retransmite
continuaci√≥n
receptor
recibe
paquete
n√∫mero
secuencia
copia
paquete
enviado
226
CAP√çTULO
CAPA
TRANSPORTE
pqt0
temporizaci√≥n
retransmitir
paquete
pqt0
pqt1
pqt2
2ACK0
ACK1
ACK2x
Ventana
emisor
recepci√≥n
a.
b.
Ventana
receptor
recepci√≥n
recibir
paquete
n√∫mero
secuencia
2ACK0
ACK1
ACK2
Ventana
emisor
recepci√≥n
Ventana
receptor
recepci√≥n
recibir
paquete
n√∫mero
secuencia
pqt0
pqt1
pqt2
pqt3
pqt0
Figura
3.27
Dilema
receptor
protocolos
SR
ventanas
paquete
retransmisi√≥n
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
226En
escenario
mostrado
Figura
3.27(b
mensajes
ACK
correspon-
dientes
paquetes
entregan
correctamente
emisor
avanzar
ventana
env√≠a
paquetes
cuarto
quinto
sexto
n√∫mero
secuencia
respectivamente
paquete
n√∫mero
secuencia
pierde
llega
paquete
n√∫mero
secuencia
paquete
contiene
datos
Examinemos
punto
vista
receptor
Figura
3.27
cortina
imaginaria
emisor
receptor
receptor
acciones
cabo
emisor
ve
receptor
secuencia
mensajes
recibe
canal
env√≠a
respecta
receptor
escenarios
Figura
3.27
id√©nticos
forma
diferenciar
retransmi-
si√≥n
paquete
transmisi√≥n
inicial
quinto
paquete
Evidentemente
tama√±o
ventana
unidad
menor
tama√±o
espacio
n√∫meros
secuencia
funcionar
tama√±o
ventana
problemas
incluidos
cap√≠tulo
pedir√°
demuestre
tama√±o
ventana
menor
mitad
tama√±o
espacio
n√∫meros
secuencia
protocolos
SR
sitio
web
acompa√±amiento
encontrar√°
applet
simula
funcionamiento
protocolo
SR
Intente
cabo
experimentos
applet
GBN
Coinciden
resultados
cabr√≠a
esperar
terminado
exposici√≥n
protocolos
fiables
trans-
ferencia
datos
visto
numerosos
mecanismos
b√°sicos
contribu-
yen
proporcionar
transferencia
datos
fiable
Tabla
3.1
resume
mecanismos
visto
mecanismos
funcionamiento
adqui-
rido
visi√≥n
conjunto
animanos
repase
secci√≥n
mecanismos
a√±adiendo
cubrir
modelos
complejos
realistas
canal
conecta
emisor
receptor
mejorar
rendimiento
protocolos
Concluimos
exposici√≥n
protocolos
transferencia
datos
fiables
suposici√≥n
modelo
canal
subyacente
Recuerde
paquetes
reordenar
canal
existente
emisor
receptor
Generalmente
suposici√≥n
razonable
emisor
receptor
conectados
simplemente
cable
f√≠sico
canal
conecta
red
lugar
reordenaci√≥n
paquetes
manifestaci√≥n
reordenaci√≥n
paquetes
aparecer
copias
antiguas
paquete
n√∫mero
secuencia
reconocimiento
ventana
emisor
receptor
contengan
x.
reordenaci√≥n
paquetes
pensarse
canal
buffer
almacena
paquetes
espont√°neamente
transmitirlos
instante
futuro
Puesto
n√∫meros
secuencia
reutilizarse
cui-
prevenir
aparici√≥n
paquetes
duplicados
pr√°ctica
asegurarse
reutilice
n√∫mero
secuencia
emisor
est√©
seguro
paquetes
enviados
anteriormente
n√∫mero
secuencia
encuentran
red
suponiendo
paquete
vivir
red
tiempo
periodo
temporal
m√°ximo
fijo
ampliaciones
TCP
redes
alta
velocidad
supone
tiempo
vida
m√°ximo
paquete
apro-
ximadamente
minutos
RFC
1323
Sunshine
1978
describe
m√©todo
utilizar
n√∫meros
secuencia
tales
problemas
reordenaci√≥n
eliminados
completo
3.4
PRINCIPIOS
SERVICIO
TRANSFERENCIA
DATOS
FIABLE
227
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
227Mecanismo
comentarios
Suma
comprobaci√≥n
Utilizada
detectar
errores
bit
paquete
transmitido
checksum
Temporizador
emplea
detectar
temporizaci√≥n
retransmitir
paquete
posiblemente
por-
paquete
mensaje
ACK
correspondiente
perdido
canal
Puesto
producir
temporizaci√≥n
paquete
retardado
perdido
temporizaci√≥n
prematura
receptor
recibido
paquete
perdido
corres-
pondiente
ACK
receptor
emisor
ocurrir
receptor
reciba
copias
duplicadas
paquete
N√∫mero
secuencia
emplea
numerar
secuencialmente
paquetes
datos
fluyen
emisor
receptor
saltos
n√∫meros
secuencia
paquetes
recibidos
permiten
receptor
detectar
perdido
paquete
paquetes
n√∫meros
secuencia
duplicados
per-
miten
receptor
detectar
copias
duplicadas
paquete
Reconocimiento
ACK
receptor
utiliza
paquetes
indicar
emisor
paquete
conjunto
paquetes
recibido
correctamente
mensajes
reconocimiento
suelen
contener
n√∫mero
secuencia
paquete
paquetes
confirmando
Dependiendo
pro-
tocolo
mensajes
reconocimiento
individuales
acumulativos
Reconocimiento
negativo
receptor
utiliza
paquetes
indicar
emisor
paquete
recibido
NAK
correctamente
Normalmente
mensajes
reconocimiento
negativo
contienen
n√∫mero
secuencia
paquete
err√≥neo
Ventana
procesamiento
emisor
restringido
enviar
√∫nicamente
paquetes
cuyo
n√∫mero
secuencia
cadena
caiga
rango
determinado
Permitiendo
transmitan
paquetes
est√©n
reconocidos
incrementar
tasa
utilizaci√≥n
emisor
operaci√≥n
protocolos
parada
espera
Veremos
brevemente
tama-
√±o
ventana
establecer
bas√°ndose
capacidad
receptor
recibir
almacenar
buffer
mensajes
nivel
congesti√≥n
red
par√°me-
tros
Tabla
3.1
Resumen
mecanismos
transferencia
datos
fiable
3.5
Transporte
orientado
conexi√≥n
TCP
visto
principios
b√°sicos
transferencia
datos
fiable
centrarnos
TCP
protocolo
capa
transporte
Internet
fiable
orientado
conexi√≥n
secci√≥n
veremos
proporcionar
transferencia
datos
fiable
TCP
conf√≠a
principios
b√°sicos
expuestos
secci√≥n
incluyendo
mecanismos
detecci√≥n
errores
retransmisiones
reconocimientos
acumula-
tivos
temporizadores
campos
cabecera
n√∫meros
secuencia
reco-
nocimiento
protocolo
TCP
definido
documentos
RFC
793
RFC
1122
RFC
1323
RFC
2018
RFC
2581
228
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
228CASE
HISTORY
VINTON
CERF
ROBERT
KAHN
TCP
IP
principios
d√©cada
1970
comenzaron
proliferar
redes
conmutaci√≥n
paquetes
ARPAnet
red
precursora
Internet
redes
redes
utilizaba
protocolo
investigadores
Vinton
Cerf
Robert
Kahn
importancia
interconectar
redes
inventaron
protocolo
inter-red
denominado
TCP
IP
Transmission
Control
Protocol
Internet
Protocol
Cerf
Kahn
comenzaron
viendo
protocolo
entidad
dividieron
partes
TCP
IP
operaban
separado
Cerf
Kahn
publicaron
informe
TCP
IP
mayo
1974
IEEE
Transactions
on
Communications
Technology
Cerf
1974
protocolo
TCP
IP
base
Internet
actual
dise√±ado
PC
estaciones
trabajo
proliferaci√≥n
tecnolog√≠as
redes
Ethernet
redes
√°rea
local
Web
flujos
audio
chat
Cerf
Kahn
vie-
ron
necesidad
exist√≠a
protocolo
red
proporcionara
amplio
soporte
aplicaciones
definidas
permi-
tiera
interoperar
hosts
protocolos
capa
enlace
2004
Cerf
Kahn
recibieron
premio
Turing
Award
ACM
considerado
Premio
Nobel
Inform√°tica
trabajo
pionero
procesos
comu-
nicaci√≥n
redes
incluyendo
dise√±o
implementaci√≥n
protocolos
b√°sicos
comunicaci√≥n
Internet
TCP
IP
liderazgo
mundo
redes
3.5.1
conexi√≥n
TCP
TCP
orientado
conexi√≥n
proceso
capa
aplicaci√≥n
comenzar
enviar
datos
procesos
estable-
cer
comunicaci√≥n
enviarse
segmentos
prelimi-
nares
definir
par√°metros
transferencia
datos
cabo
continuaci√≥n
proceso
establecimiento
conexi√≥n
TCP
lados
iniciar√°n
variables
TCP
ver√°n
secci√≥n
Secci√≥n
3.7
asociadas
conexi√≥n
TCP
conexi√≥n
TCP
circuito
terminal
terminal
multiplexaci√≥n
TDM
FDM
red
conmutaci√≥n
circuitos
circuito
virtual
v√©ase
Cap√≠tulo
conexi√≥n
reside
completamente
siste-
terminales
protocolo
TCP
ejecuta
√∫nicamente
sistemas
termina-
elementos
intermedios
red
routers
switches
capa
enlace
elementos
intermedios
red
mantienen
conexi√≥n
TCP
routers
intermedios
completamente
inconscientes
conexiones
TCP
routers
ven
datagramas
conexiones
conexi√≥n
TCP
proporciona
servicio
full-duplex
conexi√≥n
TCP
proceso
ejecuta
host
proceso
ejecuta
host
enton-
ces
datos
capa
aplicaci√≥n
fluir
proceso
proceso
instante
datos
capa
aplicaci√≥n
fluyen
proceso
proceso
A.
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
229
HISTORIA
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
229Una
conexi√≥n
TCP
conexi√≥n
punto
punto
√∫nico
emisor
√∫nico
receptor
multidifusi√≥n
v√©ase
Secci√≥n
4.7
transferencia
datos
emisor
receptores
√∫nica
operaci√≥n
TCP
TCP
hosts
compa√±√≠a
multitud
Veamos
establece
conexi√≥n
TCP
Suponga
proceso
ejecutando
host
desea
iniciar
conexi√≥n
proceso
ejecuta
host
Recuerde
proceso
inicia
conexi√≥n
proceso
cliente
proceso
proceso
servidor
proceso
aplicaci√≥n
cliente
informa
lugar
capa
transporte
cliente
desea
establecer
conexi√≥n
proceso
servidor
Recuerde
Secci√≥n
2.7
visto
programa
cliente
Java
hac√≠a
eje-
cutando
comando
Socket
socketCliente
new
Socket(‚Äúnombrehost
N√∫meroPuerto
nombrehost
nombre
servidor
NumeroPuerto
identifica
proceso
servidor
capa
transporte
cliente
procede
establecer
conexi√≥n
TCP
TCP
servidor
finalizar
secci√≥n
veremos
detalle
procedimiento
establecimiento
conexi√≥n
momento
basta
cliente
env√≠a
segmento
TCP
especial
servidor
responde
segmento
TCP
espe-
cial
cliente
responde
tercer
segmento
especial
prime-
ros
segmentos
transportan
carga
√∫til
transportan
datos
capa
aplicaci√≥n
segmentos
carga
√∫til
Puesto
segmentos
intercambiados
hosts
procedimiento
establecimiento
conexi√≥n
suele
denominarse
fases
establecido
conexi√≥n
TCP
procesos
aplicaci√≥n
pue-
den
enviarse
datos
Consideremos
transmisi√≥n
datos
proceso
cliente
proceso
servidor
proceso
cliente
pasa
flujo
datos
socket
puerta
proceso
descrito
Secci√≥n
2.7
datos
atravie-
san
puerta
encuentran
manos
protocolo
TCP
ejecuta
cliente
muestra
Figura
3.28
TCP
dirige
datos
buffer
emisi√≥n
cone-
xi√≥n
buffers
definen
proceso
inicial
fases
TCP
tomar√°
fragmentos
datos
buffer
emisi√≥n
especi-
ficaci√≥n
TCP
RFC
793
vaga
respecta
especificar
TCP
realmente
enviar
datos
almacenados
buffer
enunciando
TCP
trans-
mitir
datos
segmentos
conveniencia
cantidad
m√°xima
datos
cogerse
colocarse
segmento
limitada
tama√±o
m√°ximo
segmento
MSS
Maximum
Segment
Size
Normalmente
MSS
queda
determinado
lugar
longitud
trama
larga
capa
enlace
host
emisor
local
enviar
unidad
m√°xima
transmisi√≥n
MTU
Maximum
Trans-
mission
Unit
MSS
establece
garantice
segmento
TCP
encapsula
datagrama
IP
ajuste
√∫nica
trama
capa
enlace
Valores
comunes
MTU
1.460
bytes
536
bytes
512
bytes
propuesto
m√©todos
descubrir
MTU
ruta
trama
larga
capa
enlace
enviarse
enlaces
origen
destino
RFC
1191
establecer
MSS
bas√°ndose
valor
MTU
ruta
Observe
MSS
cantidad
m√°xima
datos
capa
aplicaci√≥n
segmento
tama√±o
m√°ximo
segmento
TCP
incluyendo
cabeceras
terminolog√≠a
resulta
confusa
convivir
extendida
230
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
230Figura
3.28
Buffers
emisi√≥n
recepci√≥n
TCP
TCP
empareja
fragmento
datos
cliente
cabecera
TCP
formando
segmentos
TCP
segmentos
pasan
capa
red
encapsulados
separado
datagramas
IP
capa
red
datagramas
IP
env√≠an
red
TCP
recibe
segmento
extremo
datos
colocan
buffer
recepci√≥n
conexi√≥n
TCP
muestra
Figura
Figure
3.28
aplicaci√≥n
lee
flujo
datos
buffer
conexi√≥n
buf-
fer
emisi√≥n
buffer
recepci√≥n
applet
control
flujo
l√≠nea
http://www.awl.com/kurose-ross
proporciona
animaci√≥n
buffers
emisi√≥n
recepci√≥n
conexi√≥n
TCP
consta
buffers
variables
socket
conexi√≥n
proceso
host
conjunto
buffers
variables
socket
conexi√≥n
pro-
ceso
host
mencionado
anteriormente
asignan
buffers
varia-
bles
conexi√≥n
elementos
red
routers
switches
repetidores
existentes
hosts
3.5.2
Estructura
segmento
TCP
visto
forma
conexi√≥n
TCP
examinemos
estructura
segmento
TCP
segmento
TCP
consta
campos
cabecera
campo
datos
campo
datos
contiene
fragmento
datos
aplicaci√≥n
men-
cionado
anteriormente
MSS
limita
tama√±o
m√°ximo
campo
datos
seg-
mento
TCP
env√≠a
archivo
ejemplo
imagen
p√°gina
web
normalmente
divide
archivo
fragmentos
tama√±o
MSS
fragmento
normalmente
peque√±o
MSS
aplica-
ciones
interactivas
suelen
transmitir
fragmentos
datos
peque√±os
MSS
ejemplo
aplicaciones
inicio
sesi√≥n
remoto
remote
login
Telnet
campo
datos
segmento
TCP
byte
Puesto
habitualmente
cabecera
TCP
20
bytes
12
bytes
cabecera
UDP
segmentos
enviados
Telnet
longitud
21
bytes
Figura
3.29
muestra
estructura
segmento
TCP
UDP
cabe-
cera
incluye
n√∫mero
puerto
origen
destino
utilizan
multiplexar
demultiplexar
datos
aplicaciones
capa
superior
UDP
cabecera
incluye
campo
suma
comprobaci√≥n
cabecera
seg-
mento
TCP
contiene
siguientes
campos
proceso
escribe
datos
proceso
lee
datos
Buffer
emisi√≥n
TCP
Socket
Buffer
recepci√≥n
TCP
Socket
Segmento
Segmento
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
231
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
231Figura
3.29
Estructura
segmento
TCP
campo
n√∫mero
secuencia
32
bits
campo
n√∫mero
reconocimiento
tam-
bi√©n
32
bits
utilizados
emisor
receptor
TCP
implementar
ser-
vicio
transferencia
datos
fiable
explica
campo
ventana
recepci√≥n
16
bits
utiliza
control
flujo
Veremos
emplea
indicar
n√∫mero
bytes
receptor
dispuesto
aceptar
‚Ä¢E
campo
longitud
cabecera
bits
especifica
longitud
cabecera
TCP
palabras
32
bits
cabecera
TCP
longitud
variable
causa
campo
opciones
TCP
normalmente
campo
vac√≠o
longitud
cabecera
TCP
t√≠pica
20
bytes
‚Ä¢E
campo
opciones
opcional
longitud
variable
utiliza
emisor
receptor
negocian
tama√±o
m√°ximo
segmento
MSS
factor
escala
ventana
redes
alta
velocidad
define
opci√≥n
marca
tempo-
ral
Consulte
documentos
RFC
854
RFC
1323
detalles
adicionales
‚Ä¢E
campo
indicador
bits
bit
ACK
utiliza
indicar
valor
trans-
portado
campo
reconocimiento
v√°lido
segmento
contiene
reco-
nocimiento
segmento
recibido
correctamente
bits
RST
SYN
utilizan
establecimiento
cierre
conexiones
veremos
secci√≥n
activaci√≥n
bit
PSH
indica
receptor
deber√°
pasar
datos
capa
superior
forma
inmediata
bit
URG
utiliza
indicar
datos
segmento
entidad
capa
superior
emisor
marcado
urgentes
posici√≥n
byte
datos
urgentes
indica
campo
puntero
datos
urgentes
16
bits
TCP
informar
N√∫mero
puerto
origen
Suma
comprobaci√≥n
Internet
Long
cabec
usado
URG
ACK
PSH
RST
SYN
32
bits
N√∫mero
puerto
destino
Ventana
recepci√≥n
Puntero
datos
Urgente
N√∫mero
secuencia
N√∫mero
reconocimiento
Opciones
Datos
232
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
232entidad
capa
superior
receptor
datos
urgentes
pasarle
pun-
tero
posici√≥n
finalizan
datos
urgentes
pr√°ctica
PSH
URG
pun-
tero
datos
urgentes
utilizan
hablado
campos
proporcionar
lector
informaci√≥n
completa
N√∫meros
secuencia
n√∫meros
reconocimiento
campos
importantes
cabecera
segmento
TCP
campo
n√∫mero
secuencia
campo
n√∫mero
reconocimiento
campos
cr√≠tica
servicio
transferencia
datos
fiable
TCP
utili-
zan
campos
proporcionar
transferencia
datos
fiable
explicaremos
pri-
mer
lugar
pone
exactamente
TCP
campos
TCP
percibe
datos
flujo
bytes
estructurado
ordenado
TCP
n√∫meros
secuencia
refleja
punto
vista
sentido
n√∫meros
secuencia
referencia
flujo
bytes
transmitido
serie
seg-
mentos
transmitidos
n√∫mero
secuencia
segmento
n√∫mero
byte
segmento
flujo
bytes
Veamos
ejemplo
Suponga
proceso
host
desea
enviar
flujo
datos
proceso
host
conexi√≥n
TCP
protocolo
TCP
host
numerar√°
impl√≠citamente
byte
flujo
datos
Suponga
flujo
datos
consta
archivo
500.000
bytes
tama√±o
MSS
1.000
bytes
byte
flujo
datos
numerado
muestra
Figura
3.30
TCP
construye
500
segmentos
flujo
datos
segmento
asignado
n√∫mero
secuencia
segmento
asignado
n√∫mero
secuencia
1.000
asignado
n√∫mero
secuencia
2.000
etc.
n√∫mero
secuencia
inserta
campo
n√∫mero
secuencia
cabecera
segmento
TCP
apropiado
Consideremos
n√∫meros
reconocimiento
complicados
n√∫meros
secuencia
Recuerde
TCP
conexi√≥n
full-duplex
host
recibiendo
datos
host
env√≠a
datos
host
conexi√≥n
TCP
segmentos
llegan
procedentes
host
n√∫mero
secuencia
datos
fluyen
A.
n√∫mero
reconocimiento
host
incluye
segmento
n√∫mero
secuencia
byte
host
Ae
.Veamos
ejemplos
comprender
ocu-
rre
Suponga
host
recibido
bytes
numerados
535
proceden-
tes
suponga
enviando
segmento
host
B.
host
esperando
536
bytes
siguen
flujo
datos
host
B.
host
incluye
536
campo
n√∫mero
reconocimiento
segmento
env√≠a
B.
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
233
01
1.000
1.999
499.999
Archivo
Datos
1er
segmento
Datos
2¬∫
segmento
Figura
3.30
Divisi√≥n
datos
archivo
segmentos
TCP
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
233Otro
ejemplo
suponga
host
recibido
segmento
host
contiene
bytes
535
segmento
contiene
bytes
900
1.000
raz√≥n
host
recibido
bytes
536
899
ejemplo
host
esperando
byte
536
siguen
volver
crear
flujo
datos
B.
segmento
contendr√°
n√∫mero
536
campo
n√∫mero
reconocimiento
TCP
confirma
bytes
byte
falta
flujo
TCP
proporciona
reconocimientos
acumulativos
ejemplo
plantea
problema
importante
sutil
host
recibido
tercer
segmento
bytes
900
1.000
recibir
segmento
bytes
536
899
tercer
segmento
llegado
orden
sutil
problema
host
recibe
segmentos
orden
cone-
xi√≥n
TCP
Curiosamente
RFC
dedicados
TCP
imponen
regla
dejan
decisi√≥n
personas
programan
implementaciones
TCP
B√°sicamente
opciones
receptor
descarta
forma
inmediata
segmentos
llegado
orden
anteriormente
simplificar
dise√±o
receptor
receptor
mantiene
bytes
ordenados
espera
lleguen
bytes
faltan
rellenar
huecos
Evidentemente
opci√≥n
eficiente
t√©rminos
ancho
banda
red
m√©todo
utiliza
pr√°ctica
Figura
3.30
n√∫mero
secuencia
inicial
cero
pr√°ctica
lados
conexi√≥n
TCP
eligen
aleatoriamente
n√∫mero
secuencia
inicial
minimizar
posibilidad
segmento
presente
red
causa
conexi√≥n
terminado
hosts
confundido
segmento
v√°lido
conexi√≥n
posterior
mis-
mos
hosts
est√©n
usando
n√∫meros
puerto
conexi√≥n
anti-
gua
Sunshine
1978
Telnet
caso
estudio
n√∫meros
secuencia
reconocimiento
Telnet
definido
documento
RFC
854
popular
protocolo
capa
aplicaci√≥n
utilizado
inicios
sesi√≥n
remotos
ejecuta
TCP
dise√±ado
tra-
bajar
pareja
hosts
diferencia
aplicaciones
transferencia
masiva
datos
vistas
Cap√≠tulo
Telnet
aplicaci√≥n
interactiva
ejemplo
ilustra
n√∫meros
secuencia
reconocimiento
TCP
Debemos
mencionar
actualmente
usuarios
prefieren
utilizar
protocolo
SSH
lugar
Telnet
datos
enviados
conexi√≥n
Telnet
inclui-
das
contrase√±as
cifrados
Telnet
vulnerable
ataques
personas
quieran
escuchar
conexi√≥n
veremos
Secci√≥n
8.7
Supongamos
host
inicia
sesi√≥n
Telnet
host
B.
Puesto
host
inicia
sesi√≥n
etiqueta
cliente
host
servidor
car√°cter
escrito
usuario
cliente
enviar√°
host
remoto
host
remoto
devolver√°
copia
car√°cter
mostrada
pantalla
usuario
Telnet
eco
emplea
garantizar
caracteres
vistos
usuario
Telnet
recibidos
procesados
sitio
remoto
car√°cter
atraviesa
red
ins-
tante
usuario
pulsa
tecla
instante
car√°cter
muestra
monitor
usuario
Suponga
usuario
escribe
√∫nica
letra
caf√©
Examinemos
segmentos
TCP
enviados
cliente
servidor
muestra
Figura
3.31
suponemos
n√∫meros
secuencia
iniciales
234
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
234el
cliente
servidor
respectivamente
42
79
Recuerde
n√∫mero
secuencia
segmento
n√∫mero
secuencia
byte
campo
datos
segmento
enviado
cliente
n√∫mero
secuencia
42
seg-
mento
enviado
servidor
n√∫mero
secuencia
79
Recuerde
n√∫mero
reconocimiento
n√∫mero
secuencia
byte
datos
host
espe-
rando
establecido
conexi√≥n
TCP
enviado
dato
cliente
esperando
llegada
byte
79
servidor
esperando
byte
42
muestra
Figura
3.31
env√≠an
segmentos
segmento
transmite
cliente
servidor
conteniendo
representaci√≥n
ASCII
byte
letra
campo
datos
segmento
contiene
n√∫mero
42
campo
n√∫mero
secuencia
descrito
cliente
recibido
dato
procedente
servidor
segmento
contendr√°
n√∫mero
79
campo
n√∫mero
reconocimiento
segmento
env√≠a
servidor
cliente
sirve
doble
prop√≥sito
lugar
proporciona
reconocimiento
datos
recibido
servidor
incluir
n√∫mero
43
campo
n√∫mero
reconocimiento
servidor
diciendo
cliente
recibido
correctamente
byte
42
espe-
rando
bytes
43
posteriores
prop√≥sito
segmento
devolver
eco
letra
segmento
contiene
representaci√≥n
ASCII
letra
campo
datos
segmento
n√∫mero
secuencia
79
n√∫mero
secuencia
inicial
flujo
datos
servidor-cliente
conexi√≥n
TCP
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
235
Tiempo
Tiempo
Host
Host
usuario
escribe
letra
Sec=42
ACK=79
datos='C
Sec=79
ACK=43
datos='C
Sec=43
ACK=80
host
reconoce
ACK
recepci√≥n
devuelve
eco
host
reconoce
ACK
recepci√≥n
eco
Figura
3.31
N√∫meros
secuencia
reconocimiento
aplica-
ci√≥n
Telnet
simple
TCP
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
235se
byte
datos
servidor
enviando
Observe
confirmaci√≥n
datos
enviados
cliente
servidor
transporta
segmento
contiene
datos
enviados
servidor
cliente
reconocimiento
superpuesto
segmento
datos
enviado
servidor
cliente
tercer
segmento
env√≠a
cliente
servidor
√∫nico
prop√≥sito
confirmar
datos
recibido
procedentes
servidor
recuerde
segmento
con-
datos
letra
servidor
cliente
segmento
campo
datos
vac√≠o
paquete
reconocimiento
superpuesto
datos
cliente
servidor
segmento
contiene
n√∫mero
80
campo
n√∫mero
reconoci-
miento
cliente
recibido
flujo
bytes
byte
n√∫mero
secuen-
cia
79
esperando
bytes
80
subsiguientes
parezca
extra√±o
segmento
n√∫mero
secuencia
contenga
datos
segmentos
TCP
disponen
campo
n√∫mero
secuencia
necesario
incluir
campo
valor
3.5.3
Estimaci√≥n
tiempo
ida
vuelta
temporizaci√≥n
TCP
protocolo
rdt
Secci√≥n
3.4
utiliza
mecanismo
temporizaci√≥n
retransmisi√≥n
recuperarse
p√©rdida
segmentos
concep-
tualmente
simple
surgen
problemas
sutiles
implementar
mecanismo
protocolo
real
ejemplo
TCP
cuesti√≥n
obvia
longitud
intervalos
temporizaci√≥n
Evidentemente
intervalo
temporizaci√≥n
deber√≠a
tiempo
ida
vuelta
RTT
conexi√≥n
tiempo
transcurre
env√≠a
segmento
recibe
reconocimiento
enviar√≠an
retransmisiones
innecesa-
rias
deber√≠a
estimar
RTT
Deber√≠a
asociarse
temporizador
segmentos
reconocidos
Demasiadas
preguntas
secci√≥n
basar
exposici√≥n
trabajo
TCP
Jacobson
1988
recomendaciones
actuales
IETF
gestionar
temporiza-
dores
TCP
RFC
2988
Estimaci√≥n
tiempo
ida
vuelta
Comencemos
estudio
gesti√≥n
temporizador
TCP
viendo
estima
TCP
tiempo
ida
vuelta
emisor
receptor
cabo
RTT
muestra
expresado
RTTMuestra
segmento
cantidad
tiempo
transcurre
env√≠a
segmento
pasa
IP
recibe
correspondiente
paquete
reconocimiento
segmento
lugar
medir
RTT-
Muestra
segmento
transmitido
implementaciones
TCP
toman
medida
RTTMuestra
instante
RTT-
Muestrase
estima
segmentos
transmitidos
reco-
nocidos
proporciona
valor
RTTMuestra
RTT
segundos
TCP
calcula
RTTMuestra
segmento
retransmitido
mide
valor
segmentos
transmitidos
problemas
incluidos
cap√≠tulo
pedir√°
explique
comportamiento
236
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
236Obviamente
valores
RTTMuestra
fluctuar√°n
segmento
causa
congesti√≥n
routers
variaci√≥n
carga
sistemas
terminales
causa
fluctuaci√≥n
valor
RTTMuestra
at√≠pico
estimar
RTT
t√≠pico
natural
calcular
tipo
promedio
valores
RTTMuestra
TCP
mantiene
valor
promedio
denominado
RTTEstimado
valores
RTTMuestra
obtener
valor
RTTMuestra
TCP
actualiza
RTTEstimado
f√≥rmula
RTTEstimado
/H9251
RTTEstimado
/H9251‚Ä¢
RTTMuestra
escrito
f√≥rmula
instrucci√≥n
lenguaje
programaci√≥n
valor
RTTEstimado
combinaci√≥n
ponderada
valor
RTTEs-
timado
valor
RTTMuestra
valor
recomendado
/H9251es
0,125
1/8
RFC
2988
cuyo
caso
f√≥rmula
expresar√≠a
RTTEstimado
0,875
RTTEstimado
0,125
RTTMuestra
Observe
RTTEstimado
media
ponderada
valores
RTTMuestra
examina
problemas
repaso
incluidos
cap√≠tulo
media
ponderada
asigna
peso
muestras
recientes
antiguas
l√≥gico
muestras
recientes
reflejan
congesti√≥n
actual-
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
237
PRINCIPLES
IN
PRACTICE
TCP
proporciona
servicio
transferencia
datos
fiable
utilizando
mensajes
reconoci-
miento
positivos
temporizadores
forma
similar
visto
Secci√≥n
3.4
TCP
confirma
datos
recibido
correctamente
retransmite
segmentos
correspondientes
reconocimientos
piensa
perdido
corrompido
versiones
TCP
disponen
mecanismo
NAK
impl√≠cito
mecanismo
r√°pido
retransmisi√≥n
TCP
recepci√≥n
ACK
duplicados
determinado
segmen-
to
sirve
NAK
impl√≠cito
segmento
provocando
retransmisi√≥n
segmento
temporizaci√≥n
TCP
utiliza
secuencias
n√∫meros
permi-
tir
receptor
identificar
segmentos
perdidos
duplicados
caso
protocolo
transferencia
datos
fiable
rdt3.0
TCP
segmento
correspondiente
ACK
perdido
corrompido
retarda-
do
emisor
respuesta
TCP
retransmitir
segmento
cues-
ti√≥n
TCP
utiliza
procesamiento
cadena
permitiendo
emisor
m√∫ltiples
seg-
mentos
transmitidos
reconocidos
instante
Anteriormente
visto
procesamiento
cadena
mejorar
enormemente
tasa
transferencia
sesi√≥n
relaci√≥n
tama√±o
segmento
retardo
ida
vuelta
peque-
√±a
n√∫mero
espec√≠fico
segmentos
pendientes
reconocidos
emisor
determina
mecanismos
control
congesti√≥n
control
flujo
TCP
control
flujo
TCP
examina
secci√≥n
mecanismo
control
congesti√≥n
Secci√≥n
3.7
momento
basta
seamos
conscientes
emisor
TCP
utiliza
procesamiento
cadena
PR√ÅCTICA
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
237mente
red
estad√≠stica
media
denomina
Media
m√≥vil
exponen-
cialmente
ponderada
EWMA
Exponential
Weighted
Moving
Average
t√©rmino
exponencial
aparece
EWMA
peso
valor
RTTMuestra
dismi-
nuye
exponencialmente
r√°pido
lugar
actualizaciones
problemas
repaso
pedir√°
deduzca
t√©rmino
exponencial
RTTEstimado
Figura
3.32
muestra
valores
RTTMuestra
RTTEstimado
/H9251=
1/8
conexi√≥n
TCP
gaia.cs.umass.edu
Amherst
Massachusetts
fantasia
eurecom.fr
sur
Francia
Evidentemente
variaciones
RTTMuestra
suavizan
c√°lculo
RTTEstimado
estimado
RTT
importante
disponer
medida
variabilidad
RTT
RFC
2988
define
variaci√≥n
RTT
RTTDesv
estimaci√≥n
desv√≠a
t√≠picamente
RTTMuestrade
RTTEstimado
RTTDesv
/H9252)‚Ä¢R
/H9252‚Ä¢|RTTMuestra
RTTEstimado|
Observe
RTTDesv
media
EWMA
diferencia
RTTMuestra
RTTEstimado
valores
RTTMuestrapresentan
peque√±a
fluctuaci√≥n
RTTDesv
peque√±o
contrario
fluctuaci√≥n
RTTDesv
valor
recomendado
/H9252es
0,25
Definici√≥n
gesti√≥n
intervalo
temporizaci√≥n
retransmisi√≥n
Dados
valores
RTTEstimado
RTTDesv
valor
deber√≠a
utilizarse
inter-
valo
temporizaci√≥n
TCP
Evidentemente
intervalo
238
CAP√çTULO
CAPA
TRANSPORTE
RTT
milisegundos
150
200
250
300
350
100
15
22
29
36
43
50
Tiempo
segundos
RTT
muestreado
57
64
71
78
85
92
99
106
RTT
estimado
Figura
3.32
Muestreo
RTT
estimaci√≥n
RTT
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
238igual
RTTEstimado
producir√°n
retransmisiones
innecesarias
intervalo
temporizaci√≥n
deber√≠a
RTTEstimado
segmento
pierde
TCP
retransmitir√°
r√°pidamente
segmento
provocando
retardos
largos
transferencia
datos
deseable
intervalo
temporizaci√≥n
RTTEstimado
margen
margen
deber√°
fluctuaci√≥n
valores
RTTMuestra
peque√±o
fluctuaci√≥n
peque√±a
valor
RTTDesv
deber√°
tenerse
consideraciones
m√©todo
TCP
determinar
inter-
valo
temporizaci√≥n
retransmisiones
IntervaloFindeTemporizacion
RTTEstimado
RTTDesv
3.5.4
Transferencia
datos
fiable
Recuerde
servicio
capa
red
Internet
servicio
IP
fiable
IP
garantiza
entrega
datagramas
garantiza
entrega
orden
datagramas
garantiza
integridad
datos
contenidos
datagramas
servicio
IP
datagramas
desbordar
buffers
routers
llegar
destino
pue-
den
llegar
desordenados
bits
datagrama
corromperse
bascular
viceversa
Puesto
segmentos
capa
transporte
transportados
red
datagramas
IP
segmentos
capa
transporte
sufrir
tam-
bi√©n
problemas
TCP
crea
servicio
transferencia
datos
fiable
servicio
esfuerzo
fiable
IP
servicio
transferencia
datos
fiable
TCP
garantiza
flujo
datos
proceso
extrae
buffer
recepci√≥n
TCP
corrom-
pido
contiene
huecos
duplicados
orden
flujo
bytes
exacta-
mente
flujo
enviado
sistema
terminal
existente
extremo
conexi√≥n
forma
TCP
proporciona
transferencia
datos
fiable
implica
principios
estudiado
Secci√≥n
3.4
desarrollo
t√©cnicas
proporcionan
transferencia
datos
fiable
conceptualmente
f√°cil
suponer
segmento
transmi-
tido
reconocido
asociado
temporizador
individual
teor√≠a
gesti√≥n
temporizador
requerir
sobrecarga
considerable
procedimientos
gesti√≥n
temporizador
TCP
recomendados
RFC
2988
utili-
zan
√∫nico
temporizador
retransmisi√≥n
segmentos
trans-
mitidos
reconocidos
protocolo
TCP
descrito
secci√≥n
recomendaci√≥n
emplear
√∫nico
temporizador
proporciona
TCP
servicio
transferencia
datos
fiable
pasos
incrementales
lugar
presentar
descripci√≥n
extremada-
mente
simplificada
emisor
TCP
emplea
fines
temporizaci√≥n
recu-
perarse
p√©rdidas
segmentos
continuaci√≥n
veremos
descripci√≥n
completa
utiliza
mensajes
reconocimiento
duplicados
fines
tem-
porizaci√≥n
exposici√≥n
suponemos
enviando
datos
direcci√≥n
host
host
host
enviando
archivo
Figura
3.33
presenta
descripci√≥n
simplificada
emisor
TCP
Vemos
sucesos
importantes
relacionados
transmisi√≥n
retransmisi√≥n
datos
emisor
TCP
datos
recibidos
aplicaci√≥n
temporizaci√≥n
temporiza-
dor
recepci√≥n
paquetes
ACK
producirse
sucesos
importan-
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
239
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
239/
Suponga
emisor
restringido
mecanismos
control
flujo
control
congesti√≥n
TCP
tama√±o
datos
procedentes
capa
superior
menor
MSS
transferencia
datos
lugar
√∫nico
sentido
SigNumSec
NumeroSecuenciaInicial
BaseEmision
NumeroSecuenciaInicial
loop
switch(suceso
suceso
datos
recibidos
aplicaci√≥n
capa
superior
crear
segmento
TCP
n√∫mero
secuencia
SigNumSec
if
temporizador
ejecutando
actualmente
iniciar
temporizador
pasar
segmento
IP
SigNumSec
SigNumSec+longitud(datos
break
suceso
temporizaci√≥n
temporizador
retransmitir
segmento
reconocido
n√∫mero
secuencia
peque√±o
iniciar
temporizador
break
suceso
ACK
recibido
valor
campo
ACK
if
BaseEmision
BaseEmision
if
actualmente
segmentos
reconocidos
iniciar
temporizador
break
bucle
Figura
3.33
Emisor
TCP
simplificado
tes
TCP
recibe
datos
aplicaci√≥n
encapsula
datos
segmento
pasa
seg-
mento
IP
Observe
segmento
incluye
n√∫mero
secuencia
n√∫mero
byte
datos
segmento
flujo
datos
descrito
Secci√≥n
3.5.2
F√≠jese
temporizador
funcionando
segmento
TCP
inicia
momento
pasar
segmento
IP
resulta
√∫til
pensar
temporizador
estuviera
asociado
segmento
reconocido
antiguo
intervalo
caducidad
temporizador
IntervaloFindeTemporizacion
calcula
RTTEstimado
RTTDesv
descrito
Secci√≥n
3.5.3
suceso
importante
temporizaci√≥n
TCP
responde
suceso
retransmitiendo
segmento
causado
temporizaci√≥n
continuaci√≥n
rei-
nicia
temporizador
tercer
suceso
importante
gestionar
emisor
TCP
llegada
segmento
reconocimiento
ACK
procedente
receptor
espec√≠ficamente
seg-
240
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
240mento
contenga
valor
campo
ACK
v√°lido
ocurrir
suceso
TCP
compara
valor
ACK
ycon
variable
BaseEmision
variable
TCP
BaseEmisiones
n√∫mero
secuencia
byte
reconocimiento
antiguo
BaseEmi-
sion‚Äì1
n√∫mero
secuencia
byte
recibido
correc-
tamente
orden
receptor
indicado
anteriormente
TCP
utiliza
reconocimientos
acumulativos
confirma
recepci√≥n
bytes
anteriores
n√∫mero
byte
y.
BaseEmision
ACK
confirmando
segmentos
reconocidos
anteriores
emisor
actualiza
variable
BaseEmision
reinicia
temporizador
actualmente
segmentos
recono-
cidos
escenarios
interesantes
Acabamos
describir
versi√≥n
enormemente
simplificada
TCP
proporciona
servicio
transferencia
datos
fiable
versi√≥n
simplificada
sutilezas
clarificar
funciona
protocolo
analizar
algu-
escenarios
interesantes
Figura
3.34
describe
escenarios
host
env√≠a
segmento
host
B.
Suponga
segmento
n√∫mero
secuencia
92
contiene
bytes
datos
enviar
segmento
host
espera
segmento
procedente
n√∫mero
reconocimiento
100
segmento
recibe
paquete
reconocimiento
pierde
caso
produce
suceso
temporizaci√≥n
host
retransmite
seg-
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
241
Tiempo
Tiempo
Host
Host
temporizaci√≥n
Sec=92
bytes
datos
Sec=92
bytes
datos
ACK=100
ACK=100
perdido
Figura
3.34
Retransmisi√≥n
debida
p√©rdida
paquete
reconocimiento
ACK
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
241mento
host
recibe
retransmisi√≥n
comprueba
n√∫mero
secuencia
segmento
contiene
datos
recibidos
TCP
host
descartar√°
bytes
segmento
retransmitido
escenario
mostrado
Figura
3.35
host
env√≠a
segmentos
seguidos
segmento
n√∫mero
secuencia
92
bytes
datos
segmento
n√∫mero
secuencia
100
20
bytes
datos
Suponga
segmentos
llegan
intactos
env√≠a
mensajes
reconocimiento
sepa-
rados
segmentos
mensajes
n√∫mero
reconocimiento
100
n√∫mero
120
Suponga
men-
sajes
llega
host
lugar
temporizaci√≥n
produce
temporizaci√≥n
host
reenv√≠a
segmento
n√∫mero
secuencia
92
reinicia
temporizador
ACK
correspondiente
segmento
llegue
lugar
temporizaci√≥n
segmento
retransmitir√°
tercer
escenario
suponemos
host
env√≠a
segmentos
ejemplo
paquete
reconocimiento
segmento
pierde
red
justo
produzca
temporizaci√≥n
host
recibe
paquete
reconocimiento
n√∫mero
reconocimiento
120
host
host
recibido
byte
119
host
reen-
v√≠a
segmentos
escenario
ilustra
Figura
3.36
242
CAP√çTULO
CAPA
TRANSPORTE
Tiempo
Tiempo
Host
Host
intervalo
temporizaci√≥n
sec
92
Sec=92
bytes
datos
Sec=100
20
bytes
datos
ACK=100
ACK=120
ACK=120
intervalo
temporizaci√≥n
sec
92
Sec=92
bytes
datos
Figura
3.35
Segmento
100
retransmitido
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
242Duplicaci√≥n
intervalo
temporizaci√≥n
Examinemos
modificaciones
aplican
imple-
mentaciones
TCP
relacionada
duraci√≥n
intervalo
temporizaci√≥n
temporizador
caducado
modificaci√≥n
lugar
suceso
temporizaci√≥n
TCP
retransmite
segmento
reconocido
n√∫mero
secuencia
peque√±o
descrito
anteriormente
TCP
retransmite
define
intervalo
temporizaci√≥n
valor
lugar
obtenerlo
valores
RTTEstimado
RTTDesv(como
descrito
Secci√≥n
3.5.3
ejemplo
suponga
IntervaloFindeTemporizaci√≥n
asociado
segmento
reconocido
antiguo
0,75
segundos
temporizador
caduca
TCP
retransmitir√°
segmento
establecer√°
intervalo
1,5
segundos
tempori-
zador
caduca
1,5
segundos
TCP
volver√°
retransmitir
segmento
estableciendo
intervalo
caducidad
3,0
segundos
intervalos
crecen
exponencialmente
retransmisi√≥n
temporizador
inicia
cualquiera
sucesos
datos
recibidos
aplica-
ci√≥n
recepci√≥n
ACK
IntervaloFindeTemporizaci√≥n
obtiene
valores
recientes
RTTEstimadoy
RTTDesv
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
243
Tiempo
Tiempo
Host
Host
intervalo
temporizaci√≥n
sec
92
sec=92
bytes
datos
sec=100
20
bytes
datosACK=100
ACK=120
perdido
Figura
3.36
reconocimiento
acumulativo
evita
retransmisi√≥n
segmento
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
243Esta
modificaci√≥n
proporciona
forma
limitada
control
congesti√≥n
Sec-
ci√≥n
3.7
estudiaremos
formas
exhaustivas
control
congesti√≥n
TCP
caducidad
temporizador
causada
probablemente
congesti√≥n
red
llegan
demasiados
paquetes
colas
router
ruta
origen
destino
paquetes
descartados
sufran
largos
retardos
cola
congesti√≥n
or√≠genes
contin√∫an
retransmitiendo
paquetes
persistentemente
congesti√≥n
empeorar
lugar
TCP
act√∫a
forma
diplom√°tica
emisores
retransmitan
intervalos
estudiemos
CSMA
CD
Cap√≠tulo
veremos
idea
similar
emplea
Ethernet
Retransmisi√≥n
r√°pida
problemas
retransmisiones
generadas
sucesos
tempori-
zaci√≥n
periodo
temporizaci√≥n
relativamente
pierde
segmento
periodo
temporizaci√≥n
fuerza
emisor
retardar
reenv√≠o
paquete
perdido
aumentando
retardo
terminal
terminal
Afortunadamente
emisor
detectar
p√©rdida
paquetes
lugar
suceso
temporizaci√≥n
observando
ACK
duplicados
ACK
duplicado
ACK
vuelve
reconocer
segmento
emisor
recibido
reconocimiento
comprender
respuesta
emisor
ACK
duplicado
enten-
der
lugar
receptor
env√≠a
ACK
duplicado
Tabla
3.2
resume
pol√≠tica
generaci√≥n
mensajes
ACK
receptor
TCP
RFC
1122
RFC
2581
receptor
TCP
recibe
segmento
n√∫mero
secuencia
n√∫mero
secuencia
orden
esperado
detecta
hueco
flujo
datos
detecta
falta
segmento
hueco
resultado
segmentos
per-
didos
reordenados
red
TCP
utiliza
paquetes
NAK
receptor
devolver
emisor
mensaje
reconocimiento
negativo
expl√≠cito
lugar
simplemente
vuelve
reconocer
genera
ACK
duplicado
byte
datos
Suceso
Acci√≥n
receptor
TCP
Llegada
segmento
orden
n√∫mero
secuencia
ACK
retardado
Esperar
500
milisegun-
esperado
datos
n√∫mero
secuencia
esperado
llegada
segmento
orden
reconocidos
segmento
orden
llega
intervalo
enviar
ACK
Llegada
segmento
orden
n√∫mero
secuencia
Enviar
inmediatamente
√∫nico
ACK
acumulativo
esperado
segmento
orden
esperando
reconociendo
segmentos
ordenados
transmisi√≥n
ACK
Llegada
segmento
desordenado
n√∫mero
secuencia
Enviar
inmediatamente
ACK
duplicado
indicando
alto
esperado
detecta
hueco
n√∫mero
secuencia
byte
esperado
l√≠mite
inferior
hueco
Llegada
segmento
completa
parcial
completamente
Enviar
inmediatamente
ACK
suponiendo
hueco
existente
datos
recibidos
segmento
comienza
l√≠mite
inferior
hueco
Tabla
3.2
Recomendaci√≥n
generaci√≥n
mensajes
ACK
TCP
RFC
1122
RFC
2581
244
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
244en
orden
recibido
Observe
Tabla
3.2
contempla
caso
receptor
descarte
segmentos
llegan
orden
Puesto
emisor
suele
enviar
n√∫mero
segmentos
seguidos
pierde
probablemente
ACK
duplicados
seguidos
emisor
TCP
recibe
ACK
duplicados
datos
toma
indicaci√≥n
segmento
segmento
reconocido
perdido
pro-
blemas
repaso
consideraremos
cuesti√≥n
emisor
espera
ACK
duplica-
lugar
√∫nico
duplicado
caso
reciban
ACK
duplicados
emisor
TCP
realiza
retransmisi√≥n
r√°pida
RFC
2581
reenviando
segmento
falta
caduque
temporizador
segmento
muestra
Figura
3.37
pierde
segmento
retransmite
caduque
temporizador
TCP
retransmisi√≥n
r√°pida
fragmento
c√≥digo
reem-
plaza
suceso
recepci√≥n
ACK
Figura
3.33
suceso
ACK
recibido
valor
campo
ACK
if
BaseEmision
BaseEmision
if
segmentos
pendientes
reconocimiento
iniciar
temporizador
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
245
Host
Host
sec=100
20
bytes
datosFin
temporizaci√≥n
Tiempo
Tiempo
sec=100
20
bytes
datos
sec=92
bytes
datos
sec=120
15
bytes
datos
sec=135
bytes
datos
sec=141
16
bytes
datos
ack=100
ack=100
ack=100
ack=100
Figura
3.37
Retransmisi√≥n
r√°pida
retransmisi√≥n
segmento
falta
caduque
temporizador
segmento
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
245
else
ACK
duplicado
segmento
reconocido
incrementar
n√∫mero
mensajes
ACK
duplicados
recibidos
if
n√∫mero
ACK
duplicados
recibidos
y==3
TCP
retransmisi√≥n
r√°pida
reenviar
segmento
n√∫mero
secuencia
break
Anteriormente
mencionado
surgen
problemas
sutiles
implementa
mecanismo
temporizaci√≥n
retransmisi√≥n
protocolo
real
TCP
procedimientos
anteriores
desarrollado
resultado
15
a√±os
experiencia
temporizadores
TCP
deber√≠an
convencerle
punto
sutiles
problemas
Retroceder
Repetici√≥n
selectiva
Profundicemos
estudio
mecanismo
recuperaci√≥n
errores
TCP
considerando
cuesti√≥n
TCP
protocolo
GBN
protocolo
SR
Recuerde
reconocimientos
TCP
acumulativos
segmentos
correcta-
mente
recibidos
orden
reconocidos
individualmente
receptor
consecuencia
muestra
Figura
3.33
v√©ase
Figura
3.19
emisor
TCP
necesita
mantener
n√∫mero
secuencia
peque√±o
byte
transmitido
reconocido
BaseEmision
n√∫mero
secuencia
byte
enviar
SigNumSec
sentido
TCP
protocolo
tipo
GBN
obstante
diferencia
TCP
Retroceder
N.
implementacio-
nes
TCP
almacenan
buffer
segmentos
recibidos
correctamente
orden
Stevens
1994
Considere
ocurre
emisor
env√≠a
secuencia
segmentos
llegan
orden
errores
receptor
Suponga
ade-
paquete
reconocimiento
paquete
pierde
paque-
tes
reconocimiento
restantes
llegan
emisor
tengan
lugar
respectivos
fines
temporizaci√≥n
ejemplo
GBN
retransmitir√≠a
paquete
tam-
bi√©n
paquetes
subsiguientes
N.
TCP
retransmitir√≠a
segmento
segmento
n.
TCP
retransmitir√≠a
siquiera
seg-
mento
reconocimiento
segmento
llega
temporizaci√≥n
correspondiente
segmento
n.
modificaci√≥n
propuesta
TCP
denomina
reconocimiento
selectivo
RFC
2018
permite
receptor
TCP
reconocer
segmentos
ordenados
forma
selectiva
lugar
reconocimientos
acumulativos
segmento
reci-
bido
correctamente
orden
combina
retransmisi√≥n
selectiva
salt√°n-
dose
retransmisi√≥n
segmentos
reconocidos
forma
selectiva
receptor
TCP
comporta
protocolo
SR
selectivo
mecanismo
recuperaci√≥n
errores
TCP
probablemente
considerarlo
h√≠brido
protocolos
GBN
SR
3.5.5
Control
flujo
Recuerde
hosts
situados
conexi√≥n
TCP
disponen
buffer
recepci√≥n
conexi√≥n
conexi√≥n
TCP
recibe
bytes
correctos
246
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
246secuencia
coloca
datos
buffer
recepci√≥n
proceso
aplicaci√≥n
asociado
leer√°
datos
buffer
necesariamente
instante
llegan
aplicaci√≥n
receptora
ocupada
tarea
leer
datos
tiempo
hayan
llegado
aplicaci√≥n
relativa-
mente
lenta
respecta
lectura
datos
emisor
f√°cilmente
desbor-
buffer
recepci√≥n
conexi√≥n
enviando
datos
r√°pidamente
TCP
proporciona
servicio
control
flujo
aplicaciones
eliminar
posibilidad
emisor
desborde
buffer
receptor
control
flujo
servicio
adaptaci√≥n
velocidades
adapta
velocidad
emisor
trans-
mitiendo
frente
velocidad
aplicaci√≥n
receptora
leyendo
mencionado
anteriormente
emisor
TCP
atascarse
congesti√≥n
red
IP
forma
control
emisor
define
mecanismo
control
congesti√≥n
tema
exploraremos
detalle
Secciones
3.6
3.7
acciones
tomadas
controles
flujo
congesti√≥n
similares
regular
flujo
emisor
obviamente
toman
razones
Lamentablemente
auto-
res
utilizan
t√©rminos
forma
indistinta
lectores
conocedores
tema
deber√≠an
tratar
diferenciarlos
Examinemos
proporciona
TCP
servicio
control
flujo
secci√≥n
suponer
implementaci√≥n
TCP
receptor
TCP
descarta
segmentos
llegan
orden
TCP
proporciona
servicio
control
flujo
teniendo
mantener
emisor
variable
conocida
ventana
recepci√≥n
Informalmente
ventana
recepci√≥n
emplea
proporcionar
emisor
idea
espacio
libre
disponible
buffer
receptor
Puesto
TCP
conexi√≥n
full-duplex
emisor
conexi√≥n
mantiene
ventana
recepci√≥n
Estudiemos
ventana
recep-
ci√≥n
contexto
operaci√≥n
transferencia
archivo
Suponga
host
enviando
archivo
host
conexi√≥n
TCP
host
asigna
buffer
recepci√≥n
conexi√≥n
designamos
tama√±o
buffer
Buffer-
Recepci√≥n
proceso
aplicaci√≥n
host
lee
contenido
buf-
fer
Definimos
siguientes
variables
UltimoByteLeido
n√∫mero
byte
flujo
datos
buffer
le√≠do
proceso
aplicaci√≥n
host
B.
UltimoByteRecibido
n√∫mero
byte
flujo
datos
llegado
pro-
cedente
red
almacenado
buffer
recepci√≥n
host
B.
Puesto
TCP
permitido
desbordar
buffer
asignado
UltimoByteRecibido
UltimoByteLeido
/H11349BufferRecepcion
ventana
recepci√≥n
cantidad
espacio
libre
disponible
buffer
VentanaRecepcion
BufferRecepcion
UltimoByteRecibido
UltimoByteLeido
espacio
libre
var√≠a
tiempo
VentanaRecepcion
variable
din√°-
mica
ilustra
Figura
3.38
utiliza
conexi√≥n
variable
VentanaRecepcion
proporcionar
servi-
cio
control
flujo
host
host
cantidad
espacio
disponible
buffer
conexi√≥n
almacenando
valor
actual
VentanaRecepcion
campo
ventana
recepci√≥n
segmento
env√≠a
A.
Inicialmente
host
establece
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
247
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
247VentanaRecepcion
BufferRecepcion
Observe
implementar
mecanismo
host
controlar
diversas
variables
espec√≠ficas
conexi√≥n
As
Ac
UltimoByteEnviado
UltimoByteRe-
conocido
cuyos
significados
obvios
Observe
diferencia
varia-
bles
UltimoByteEnviado
UltimoByteReconocido
cantidad
datos
reconocidos
host
enviado
conexi√≥n
n√∫mero
datos
reconocidos
inferior
valor
VentanaRecepcion
host
asegu-
rarse
desbordando
buffer
recepci√≥n
host
B.
host
ase-
gura
tiempo
vida
conexi√≥n
UltimoByteEnviado
UltimoByteReconocido
/H11349VentanaRecepcion
peque√±o
problema
t√©cnico
esquema
suponga
buffer
recepci√≥n
host
lleno
VentanaRecep-
cion
anunciar
host
VentanaRecepcion
suponga
enviar
A.
Veamos
ocurre
medida
proceso
aplicaci√≥n
host
vac√≠a
buffer
TCP
env√≠a
segmentos
valores
VentanaRecepcion
host
TCP
env√≠a
segmento
host
datos
enviar
enviar
paquete
reconocimiento
host
An
host
bloqueado
transmitir
datos
resolver
problema
especificaci√≥n
TCP
requiere
host
contin√∫e
enviando
segmentos
byte
datos
longitud
ventana
recepci√≥n
cero
segmentos
reconocidos
receptor
Finalmente
buffer
comenzar√°
vaciarse
ACK
conten-
dr√°n
valor
VentanaRecepciondistinto
cero
sitio
web
libro
http://www.awl.com/kurose-ross
proporciona
applet
Java
interactivo
ilustra
funcionamiento
ventana
recepci√≥n
TCP
Debemos
comentar
descrito
servicio
control
flujo
TCP
UDP
proporciona
mecanismo
control
flujo
entender
cuesti√≥n
consideremos
transmisi√≥n
serie
segmentos
UDP
proceso
eje-
cuta
host
proceso
ejecuta
host
B.
implementaci√≥n
t√≠pica
UDP
protocolo
UDP
almacenar√°
segmentos
buffer
tama√±o
finito
pre-
248
CAP√çTULO
CAPA
TRANSPORTE
Proceso
aplicaci√≥n
Datos
IP
Datos
TCP
buffer
VentanaRecepcion
BufferRecepcion
Espacio
libre
Figura
3.38
ventana
recepci√≥n
buffer
recepci√≥n
BufferRecepcion
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
248cede
correspondiente
socket
puerta
entrada
proceso
proceso
lee
segmento
completo
buffer
proceso
lee
segmentos
buffer
sufi-
cientemente
r√°pido
desbordar√°
segmentos
descartados
3.5.6
Gesti√≥n
conexi√≥n
TCP
subsecci√≥n
establece
termina
conexi√≥n
TCP
tema
particularmente
emocionante
importancia
estable-
cimiento
conexi√≥n
TCP
aumentar
significativamente
retardo
percibido
ejemplo
navega
Web
ataques
red
comu-
nes
incluyendo
incre√≠blemente
popular
ataque
inundaci√≥n
SYN
explotan
vulne-
rabilidades
gesti√≥n
conexi√≥n
TCP
lugar
veamos
establece
conexi√≥n
TCP
Suponga
proceso
ejecuci√≥n
host
cliente
desea
iniciar
conexi√≥n
proceso
ejecuta
host
servidor
proceso
aplicaci√≥n
cliente
informa
lugar
cliente
TCP
desea
establecer
conexi√≥n
proceso
servidor
continuaci√≥n
protocolo
TCP
cliente
establece
cone-
xi√≥n
TCP
protocolo
TCP
servidor
Paso
lugar
TCP
cliente
env√≠a
segmento
TCP
especial
TCP
servidor
segmento
especial
contiene
datos
capa
aplicaci√≥n
bits
indicadores
cabecera
segmento
v√©ase
Figura
3.29
bit
SYN
pone
raz√≥n
segmento
especial
referencia
seg-
mento
SYN
cliente
selecciona
forma
aleatoria
n√∫mero
secuencia
inicial
cliente_nsi
coloca
campo
n√∫mero
secuencia
segmento
TCP
inicial
SYN
segmento
encapsula
datagrama
IP
env√≠a
servi-
dor
importante
elecci√≥n
aleatoria
valor
cliente_nsi
haga
apro-
piadamente
evitar
ataques
seguridad
CERT
2001-09
Paso
datagrama
IP
contiene
segmento
SYN
TCP
llega
host
servidor
suponiendo
llega
servidor
extrae
segmento
SYN
data-
grama
asigna
buffers
variables
TCP
conexi√≥n
env√≠a
segmento
cone-
xi√≥n
concedida
cliente
TCP
Veremos
Cap√≠tulo
asignaci√≥n
buffers
variables
completar
tercer
paso
proceso
fases
TCP
vulnerable
ataque
denegaci√≥n
servicio
conocido
ata-
inundaci√≥n
SYN
segmento
conexi√≥n
concedida
contiene
datos
capa
aplicaci√≥n
contiene
fragmentos
informaci√≥n
importantes
cabecera
segmento
bit
SYN
pone
campo
reconocimiento
cabecera
segmento
TCP
cliente_nsi+1
servidor
elige
n√∫mero
secuencia
inicial
servidor_nsi
almacena
valor
campo
n√∫mero
secuencia
cabe-
cera
segmento
TCP
segmento
conexi√≥n
concedida
diciendo
efecto
recibido
paquete
SYN
iniciar
conexi√≥n
n√∫mero
secuencia
ini-
cial
cliente_nsi
establecer
conexi√≥n
n√∫mero
secuencia
inicial
servidor_nsi
segmento
conexi√≥n
concedida
conoce
segmento
SYNACK
Paso
recibir
segmento
SYNACK
cliente
asigna
buffers
variables
conexi√≥n
host
cliente
env√≠a
servidor
segmento
seg-
mento
confirma
segmento
conexi√≥n
concedida
servidor
cliente
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
249
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
249almacenando
valor
servidor_nsi+1
campo
reconocimiento
cabecera
segmento
TCP
bit
SYN
pone
cero
conexi√≥n
establecida
etapa
proceso
fases
transportar
datos
cliente
servidor
dentra
carga
√∫til
segmento
completados
pasos
hosts
cliente
servidor
enviarse
seg-
mentos
contengan
datos
segmentos
futuros
valor
bit
SYN
cero
Observe
establecer
conexi√≥n
env√≠an
paque-
tes
hosts
ilustra
Figura
3.39
procedimiento
establecimiento
conexi√≥n
suele
denominarse
proceso
fases
problemas
repaso
exploran
aspectos
proceso
TCP
nece-
sitan
n√∫meros
secuencia
iniciales
necesita
proceso
fases
lugar
fases
interesante
observar
escalador
persona
asegura
escalador
cuya
tarea
sostener
cuerda
seguridad
utilizan
protocolo
comunicaciones
proceso
fases
id√©ntico
TCP
garantizar
ambas
partes
est√©n
pre-
paradas
escalador
inicie
ascenso
termina
aplicable
conexi√≥n
TCP
Cualquiera
procesos
participantes
conexi√≥n
TCP
teminada
dicha
cone-
xi√≥n
conexi√≥n
termina
recursos
buffers
variables
hosts
liberan
ejemplo
suponga
cliente
decide
cerrar
conexi√≥n
muestra
Figura
3.40
proceso
aplicaci√≥n
cliente
ejecuta
comando
cie-
rre
cliente
TCP
env√≠e
segmento
especial
TCP
proceso
servidor
250
CAP√çTULO
CAPA
TRANSPORTE
Tiempo
Tiempo
Host
cliente
Solicitud
conexi√≥n
Conexi√≥n
concedida
Host
servidor
SYN=1
sec
cliente_nsi
SYN=1
sec
servidor_nsi
ack
cliente_nsi+1
SYN=0
sec
cliente_nsi+1
ack
servidor_nsi+1ACK
Figura
3.39
proceso
fases
TCP
intercambio
segmentos
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
250segmento
especial
contiene
bit
indicador
cabecera
segmento
bit
v√©ase
Figura
3.29
puesto
servidor
recibe
segmento
devuelve
cliente
segmento
reconocimiento
servidor
env√≠a
segmento
descone-
xi√≥n
bit
puesto
cliente
reconoce
segmento
desco-
nexi√≥n
servidor
situaci√≥n
recursos
hosts
quedan
liberados
mantiene
conexi√≥n
TCP
protocolo
TCP
ejecuta
host
realiza
transiciones
diversos
TCP
Figura
3.41
ilustra
secuen-
cia
t√≠pica
TCP
visitados
cliente
TCP
inicia
CLO-
SED
cerrado
aplicaci√≥n
cliente
inicia
conexi√≥n
creando
objeto
Socket
ejemplos
Java
Cap√≠tulo
TCP
cliente
env√≠e
segmento
SYN
TCP
servidor
enviado
segmento
SYN
cliente
TCP
entra
SYN_SENT
SYN_enviado
cliente
TCP
espera
segmento
procedente
TCP
servidor
incluya
reco-
nocimiento
segmento
cliente
bit
SYN
puesto
recibido
segmento
cliente
TCP
entra
ESTABLISHED
establecido
cliente
TCP
enviar
recibir
segmentos
TCP
contengan
datos
carga
√∫til
datos
generados
aplicaci√≥n
Suponga
aplicaci√≥n
cliente
decide
cerrar
conexi√≥n
ser-
vidor
decidir
cerrar
conexi√≥n
cliente
TCP
env√≠a
segmento
TCP
bit
puesto
entra
FIN_WAIT_1
FIN_espera_1
cliente
TCP
queda
espera
segmento
TCP
procedente
servidor
contenga
mensaje
reconocimiento
recibe
cliente
TCP
pasa
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
251
Tiempo
Tiempo
Cliente
Cerrar
Cerrar
Servidor
ACK
ACK
Cerrado
Tiempo
espera
Figura
3.40
Cierre
conexi√≥n
TCP
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
251FIN_WAIT_2
cliente
espera
recibir
segmento
servidor
bit
puesto
recibido
cliente
TCP
reconoce
segmento
servidor
pasa
TIME_WAIT
reenviar
cliente
TCP
reconocimiento
caso
paquete
ACK
pierda
tiempo
invertido
TIME_WAIT
dependiente
aplicaci√≥n
valores
t√≠picos
30
segundos
minuto
minutos
tiempo
espera
conexi√≥n
cierra
recursos
cliente
incluyendo
n√∫meros
puerto
liberados
Figura
3.42
ilustra
serie
visita
normalmente
TCP
servidor
suponiendo
cliente
inicia
cierre
conexi√≥n
transiciones
expli-
can
diagramas
transiciones
√∫nicamente
mostrado
establece
termina
normalmente
conexi√≥n
TCP
descrito
ocurre
determinados
escenarios
problem√°ticos
ejemplo
lados
conexi√≥n
desean
iniciar
terminar
tiempo
conexi√≥n
interesado
tema
avanzados
TCP
animamos
consultar
exhaus-
tivo
libro
Stevens
1994
cliente
servidor
preparados
comunicarse
servidor
escuchando
puerto
cliente
env√≠a
segmento
SYN
Consideremos
ocurre
host
recibe
segmento
TCP
cuyo
n√∫mero
puerto
cuya
direcci√≥n
IP
origen
corresponde
soc-
kets
activos
host
ejemplo
suponga
host
recibe
paquete
TCP
SYN
cuyo
puerto
destino
n√∫mero
80
host
aceptando
conexiones
puerto
ejecutando
servidor
web
puerto
80
host
enviar√°
origen
segmento
especial
reinicio
segmento
TCP
bit
indicador
RST
v√©ase
Secci√≥n
3.5.2
puesto
host
env√≠a
segmento
reinicio
252
CAP√çTULO
CAPA
TRANSPORTE
Figura
3.41
Secuencia
t√≠pica
TCP
visitados
cliente
TCP
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
252le
diciendo
emisor
socket
segmento
favor
reenvies
segmento
host
recibe
paquete
UDP
n√∫mero
puerto
destino
corresponde
socket
UDP
activo
host
env√≠a
datagrama
ICMP
especial
explica
Cap√≠tulo
conocimientos
gestiona
cone-
xi√≥n
TCP
volver
herramienta
exploraci√≥n
puertos
nmap
detalladamente
funciona
explorar
puerto
TCP
espec√≠fico
ejem-
plo
puerto
6789
host
objetivo
nmapenviar√°
segmento
TCP
SYN
puerto
destino
6789
host
obtenerse
posibles
resultados
host
origen
recibe
segmento
TCP
SYNACK
host
objetivo
sig-
nifica
aplicaci√≥n
ejecut√°ndose
TCP
puerto
6789
host
objetivo
nmapdevuelve
open
puerto
abierto
host
origen
recibe
segmento
TCP
RST
procedente
host
objetivo
significa
segmento
SYN
alcanzado
host
objetivo
ejecu-
tando
aplicaci√≥n
TCP
puerto
6789
atacante
sabr√°
m√≠nimo
segmento
destinado
puerto
6789
host
bloqueado
corta-
fuegos
existente
ruta
hosts
origen
destino
cortafuegos
estudian
Cap√≠tulo
origen
recibe
Probablemente
significa
segmento
SYN
blo-
queado
cortafuegos
intermedio
host
objetivo
nmap
potente
herramienta
detectar
brechas
muro
relativo
puertos
TCP
abiertos
puertos
UDP
abiertos
cor-
tafuegos
configuraciones
versiones
aplicaciones
sistemas
operati-
vos
tarea
cabo
manipulando
segmentos
gesti√≥n
3.5
TRANSPORTE
ORIENTADO
CONEXI√ìN
253
Figura
3.42
Secuencia
t√≠pica
TCP
visitados
servidor
TCP
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
253254
CAP√çTULO
CAPA
TRANSPORTE
FOCUS
ON
SECURITY
ATAQUE
INUNDACI√ìN
SYN
visto
proceso
fases
TCP
servidor
asigna
inicializa
buffers
variables
conexi√≥n
respuesta
recepci√≥n
segmento
SYN
continuaci√≥n
servidor
env√≠a
respuesta
segmento
SYNACK
espera
correspondiente
segmento
reconocimiento
ACK
procedente
cliente
ter-
cer
paso
proceso
conexi√≥n
quede
completamente
establecida
cliente
env√≠a
segmento
ACK
completar
pasos
proceso
fases
minuto
ser-
vidor
terminar√°
conexi√≥n
semiabierta
reclamar√°
recursos
asignados
protocolo
gesti√≥n
conexi√≥n
TCP
establece
base
ataque
cl√°-
sico
conocido
ataque
inundaci√≥n
SYN
ataque
malos
env√≠an
n√∫mero
segmentos
SYN
TCP
completar
tercer
paso
proceso
ataque
amplificar
enviando
segmentos
SYN
or√≠genes
creando
ata-
inundaci√≥n
SYN
DDoS
Distributed
Denial
of
Service
Servicio
denegaci√≥n
distri-
buido
cantidad
segmentos
SYN
recursos
conexi√≥n
servidor
agotarse
r√°pidamente
medida
asignando
utilizan
conexiones
semiabiertas
recursos
servidor
agotados
niega
servicio
clientes
leg√≠timos
ataques
inundaci√≥n
SYN
CERT
SYN
1996
encuentran
ataques
documentados
CERT
CERT
2009
inundaci√≥n
segmentos
SYN
ataque
potencialmente
devastador
Afortunada-
mente
defensa
efectiva
denominada
cookies
SYN
Skoudis
2006
Cisco
SYN
2009
Bernstein
2009
actualmente
implantada
mayor√≠a
principales
sistemas
operativos
cookies
SYN
funcionan
servidor
recibe
segmento
SYN
segmento
procede
usuario
leg√≠timo
forma
ataque
inundaci√≥n
SYN
servidor
crea
conexi√≥n
semiabierta
TCP
segmento
SYN
lugar
servidor
crea
n√∫mero
secuencia
TCP
inicial
funci√≥n
compleja
funci√≥n
hash
direcciones
IP
origen
destino
n√∫meros
puerto
segmento
SYN
n√∫mero
secreto
√∫nicamente
conoce
servidor
servidor
utiliza
n√∫mero
secreto
n√∫mero
conexiones
n√∫mero
secuencia
ini-
cial
cuidadosamente
confeccionado
denomina
cookie
servidor
enviar
paquete
SYNACK
n√∫mero
secuencia
inicial
especial
importante
servidor
recuerde
cookie
informaci√≥n
correspon-
diente
paquete
SYN
cliente
leg√≠timo
devolver√°
segmento
ACK
servidor
recibir
ACK
verificar
corresponde
SYN
enviado
anteriormente
servidor
mantiene
memoria
acerca
segmentos
SYN
imaginado
utilizando
cookie
Concretamente
segmento
ACK
leg√≠timo
valor
contenido
campo
reconocimiento
n√∫mero
secuencia
segmento
SYNACK
v√©ase
Figura
3.39
continuaci√≥n
servidor
ejecuta
funci√≥n
utilizando
campos
segmento
ACK
SEGURIDAD
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
254la
conexi√≥n
TCP
Skoudis
2006
cerca
m√°quina
Linux
reali-
zar
pruebas
directamente
nmap
simplemente
escribiendo
nmap
l√≠nea
comandos
descargar
nmap
sistemas
operativos
direcci√≥n
http://inse-
cure.org/nmap
completamos
introducci√≥n
mecanismos
control
errores
control
flujo
TCP
Secci√≥n
3.7
volveremos
TCP
estudiaremos
detalladamente
control
congesti√≥n
TCP
paso
atr√°s
examinar
problemas
control
congesti√≥n
contexto
amplio
3.6
Principios
control
congesti√≥n
secci√≥n
examinado
principios
generales
espec√≠fi-
cos
mecanismos
TCP
utilizados
proporcionar
servicio
transferencia
datos
fiable
refiere
p√©rdida
paquetes
Anteriormente
hab√≠amos
men-
cionado
pr√°ctica
tales
p√©rdidas
normalmente
resultado
desborda-
miento
buffers
routers
medida
red
congestionando
retransmisi√≥n
paquetes
ocupa
s√≠ntoma
congesti√≥n
red
p√©rdida
segmento
espec√≠fico
capa
transporte
ocupa
causa
congesti√≥n
red
demasiados
emisores
intentando
transmitir
datos
velo-
cidad
alta
tratar
causa
congesti√≥n
red
necesarios
meca-
nismos
regulen
flujo
emisores
congesti√≥n
red
aparezca
secci√≥n
consideraremos
problema
control
congesti√≥n
contexto
general
comprender
congesti√≥n
negativo
conges-
3.6
PRINCIPIOS
CONTROL
CONGESTI√ìN
255
n√∫mero
secreto
resultado
funci√≥n
n√∫mero
reco-
nocimiento
servidor
concluye
ACK
corresponde
segmento
SYN
ante-
rior
valida
continuaci√≥n
servidor
crea
conexi√≥n
completamente
abierta
socket
contrario
cliente
devuelve
segmento
ACK
segmento
SYN
original
causa
da√±o
servidor
asignado
recurso
cookies
SYN
eliminan
forma
efectiva
amenaza
ataque
inundaci√≥n
SYN
variaci√≥n
clase
ataque
cliente
malicioso
devuelva
segmento
ACK
v√°lido
segmento
SYNACK
servidor
genera
har√°
servidor
establezca
conexiones
TCP
completamente
abiertas
sistema
operativo
emplee
cookies
SYN
decenas
miles
clientes
utilizados
ataque
DDoS
teniendo
direcci√≥n
IP
distinta
dif√≠cil
servidor
diferenciar
or√≠genes
leg√≠timos
maliciosos
ataque
completa
proceso
dif√≠cil
defenderse
ataque
cl√°sico
inun-
daci√≥n
SYN
SEGURIDAD
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
255ti√≥n
red
manifiesta
rendimiento
ofrecido
aplicaciones
capa
superior
aplicarse
diversos
m√©todos
evitar
congesti√≥n
red
reaccionar
estudio
car√°cter
general
control
congesti√≥n
apropiado
puesto
transferencia
datos
fiable
principio
lista
problemas
importantes
redes
Concluiremos
secci√≥n
exposici√≥n
acerca
control
congesti√≥n
servicio
ABR
Available
Bit-Rate
veloci-
dad
bit
disponible
redes
ATM
Asynchronous
Transfer
Mode
trans-
ferencia
as√≠ncrono
secci√≥n
cabo
estudio
detallado
algoritmo
control
congesti√≥n
TCP
3.6.1
causas
costes
congesti√≥n
Iniciemos
estudio
control
congesti√≥n
examinando
escenarios
complejidad
creciente
produce
congesti√≥n
caso
veremos
lugar
produce
congesti√≥n
coste
t√©rminos
recursos
utilizados
completo
rendimiento
ofrecido
sistemas
terminales
entrar
reaccionar
congesti√≥n
evitarla
simplemente
foco
cuesti√≥n
simple
comprender
ocurre
hosts
incrementan
velocidad
transmisi√≥n
red
comienza
congestionarse
Escenario
emisores
router
buffers
capacidad
ilimitada
Veamos
escenario
congesti√≥n
simple
hosts
dispone
conexi√≥n
comparte
√∫nico
salto
origen
destino
muestra
Figura
3.43
Supongamos
aplicaci√≥n
host
enviando
datos
conexi√≥n
ejem-
plo
pasando
datos
protocolo
capa
transporte
socket
velocidad
media
/H9261
in
bytes
datos
originales
sentido
unidad
datos
env√≠a
socket
protocolo
nivel
transporte
subya-
cente
protocolo
simple
datos
encapsulan
env√≠an
mecanismo
256
CAP√çTULO
CAPA
TRANSPORTE
Host
Buffers
enlace
salida
compartidos
limitados
Host
Host
DHost
Figura
3.43
Escenario
congesti√≥n
conexiones
comparten
√∫nico
salto
buffers
capacidad
ilimitada
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
256de
recuperaci√≥n
errores
ejemplo
retransmisiones
realiza
control
flujo
control
congesti√≥n
Ignorando
sobrecarga
adicional
debida
adici√≥n
informaci√≥n
cabecera
capas
transporte
inferiores
velocidad
host
entrega
tr√°fico
router
escenario
/H9261
in
bytes
host
opera
forma
similar
suponemos
simplificar
enviando
datos
velocidad
/H9261
in
bytes
paquetes
salen
hosts
atraviesan
router
enlace
salida
compartido
capacidad
R.
router
buffers
permiten
almacenar
paquetes
entrantes
tasa
llegada
paquetes
excede
capacidad
enlace
salida
escenario
suponemos
router
buffer
cantidad
espacio
infinita
Figura
3.44
muestra
rendimiento
conexi√≥n
host
escena-
rio
gr√°fica
izquierda
muestra
tasa
transferencia
conexi√≥n
n√∫mero
bytes
receptor
funci√≥n
velocidad
transmisi√≥n
conexi√≥n
velocidad
transmisi√≥n
comprendida
R/2
tasa
transfe-
rencia
receptor
velocidad
transmisi√≥n
emisor
env√≠a
emisor
recibido
receptor
retardo
finito
veloci-
dad
transmisi√≥n
R/2
tasa
transferencia
R/2
l√≠mite
superior
tasa
transferencia
consecuencia
compartir
conexiones
capacidad
enlace
enlace
simplemente
proporcionar
paquetes
recep-
tor
velocidad
r√©gimen
permanente
R/2
Independientemente
altas
velocidades
transmisi√≥n
hosts
ver√°n
tasa
transferencia
R/2
Alcanzar
tasa
transferencia
conexi√≥n
R/2
realmente
parecer
positivo
enlace
utiliza
completamente
suministrar
paquetes
destinos
gr√°fica
derecha
Figura
3.44
muestra
consecuencia
operar
cerca
capacidad
enlace
medida
velocidad
transmisi√≥n
aproxima
R/2
izquierda
retardo
velocidad
transmisi√≥n
excede
R/2
n√∫mero
paquetes
cola
router
limi-
tado
retardo
origen
destino
infinito
suponiendo
cone-
xiones
operan
velocidades
transmisi√≥n
periodo
tiempo
infinito
cantidad
infinita
espacio
disponible
buffer
operar
3.6
PRINCIPIOS
CONTROL
CONGESTI√ìN
257
R/2
R/2
Retardo
R/2
a.
b.
Figura
3.44
Escenario
congesti√≥n1
tasa
transferencia
retardo
funci√≥n
velocidad
transmisi√≥n
host
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
257una
tasa
transferencia
agregada
pr√≥xima
ideal
punto
vista
tasa
transferencia
ideal
absoluto
punto
vista
retardo
escenario
extremadamente
idealizado
encontrado
costes
red
congestionada
retardos
cola
experimentados
tasa
llegada
paquetes
aproxima
capacidad
enlace
Escenario
emisores
router
buffers
finitos
modificar
ligeramente
escenario
formas
v√©ase
Figura
3.45
lugar
suponemos
espacio
disponible
buffers
router
finito
consecuencia
suposici√≥n
aplicable
pr√°ctica
paquetes
des-
cartados
lleguen
buffer
est√©
lleno
lugar
suponemos
conexi√≥n
fiable
paquete
contiene
segmento
capa
transporte
descarta
router
emisor
retransmitirlo
paquetes
retransmitirse
cuidadosos
utilizar
t√©rmino
velocidad
transmisi√≥n
Espec√≠ficamente
designar
velocidad
aplicaci√≥n
env√≠a
datos
originales
socket
/H9261
in
bytes
velocidad
capa
transporte
env√≠a
segmentos
contienen
datos
originales
datos
retransmitidos
red
denotaremos
/H9261
H11032
in
bytes
ocasiones
/H9261
H11032
in
denomina
carga
ofre-
cida
red
rendimiento
escenario
depender√°
medida
realicen
retransmisiones
lugar
considere
caso
realista
host
capaz
determinar
m√°gicamente
buffer
router
libre
lleno
enviar
paquete
buffer
est√©
libre
caso
producir√≠a
p√©rdida
/H9261
in
/H9261
H11032
in
tasa
transferencia
conexi√≥n
/H9261
in
caso
muestra
Figura
3.46(a
punto
vista
258
CAP√çTULO
CAPA
TRANSPORTE
Buffers
enlace
salida
compartidos
capacidad
finita
Host
BHost
Host
DHost
Œªout
Œªin
datos
orirginales
Œª‚Äôin
datos
originales
datos
retransmitidos
Figura
3.45
Escenario
hosts
retransmisi√≥n
router
buffers
capacidad
finita
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
258de
tasa
transferencia
rendimiento
ideal
env√≠a
recibe
Observe
escenario
velocidad
media
transmisi√≥n
host
R/2
supone
lugar
p√©rdida
paquetes
Consideremos
caso
realista
emisor
retransmite
seguridad
paquete
perdido
suposici√≥n
exagerada
host
emisor
fijado
intervalo
temporizaci√≥n
valor
suficientemente
garantizar
paquete
reconocido
paquete
perdido
caso
rendi-
miento
similar
mostrado
Figura
3.46(b
apreciar
ocu-
rriendo
considere
caso
carga
ofrecida
/H9261
H11032
in
velocidad
transmisi√≥n
datos
originales
retransmisiones
R/2
Figura
3.46(b
valor
carga
ofrecida
velocidad
datos
suministrados
aplicaci√≥n
receptor
R/3
0,5
unidades
datos
transmitidos
0,333R
bytes
media
datos
originales
0,166
bytes
media
datos
retransmitidos
costes
red
con-
gestionada
emisor
retransmisiones
compensar
paque-
tes
descartados
perdidos
causa
desbordamiento
buffer
considere
caso
emisor
alcanzar
temporiza-
ci√≥n
forma
prematura
retransmitir
paquete
retardado
cola
perdido
caso
paquete
datos
original
retransmisi√≥n
llegar
receptor
receptor
necesitar√°
copia
paquete
descartar√°
retransmisi√≥n
caso
trabajo
rou-
ter
reenviar
copia
retransmitida
paquete
original
desperdicia
receptor
recibido
copia
original
paquete
router
capacidad
transmisi√≥n
enlace
enviando
lugar
paquete
distinto
costes
red
congestionada
retransmisiones
inne-
cesarias
emisor
causadas
retardos
largos
router
utilice
ancho
banda
enlace
reenviar
copias
innecesarias
paquete
Figura
3.46
muestra
tasa
transferencia
funci√≥n
carga
ofrecida
supone
router
reenv√≠a
paquete
media
paquete
reenv√≠a
tasa
transferencia
valor
asint√≥tico
R/4
carga
ofrecida
aproxime
R/2
3.6
PRINCIPIOS
CONTROL
CONGESTI√ìN
259
R/2
R/2
R/2
Œªout
a.
b.
R/2Œªout
R/3
R/2
R/2
ŒªoutR/4
c.
Œª‚Äôin
Œª‚Äôin
Œª‚Äôin
Figura
3.46
Escenario
rendimiento
buffers
capacidad
finita
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
259Escenario
emisores
routers
buffers
capacidad
finita
rutas
m√∫ltiples
saltos
escenario
dedicado
congesti√≥n
red
hosts
transmi-
ten
paquetes
rutas
solapadas
saltos
muestra
Figura
3.47
suponemos
host
utiliza
mecanismo
temporizaci√≥n
retrans-
misi√≥n
implementar
servicio
transferencia
datos
fiable
hosts
tie-
nen
valor
/H9261
in
enlaces
router
capacidad
bytes
Consideremos
conexi√≥n
host
host
pasando
routers
R1
R2
conexi√≥n
A‚ÄìC
comparte
router
R1
conexi√≥n
D‚ÄìB
comparte
router
R2
conexi√≥n
B‚ÄìD.
valores
extremadamente
peque√±os
/H9261
in
raro
buffer
des-
borde
escenarios
congesti√≥n
anteriores
tasa
transferencia
carga
ofrecida
valores
ligeramente
/H9261
in
correspondiente
tasa
transferencia
transmitiendo
datos
originales
red
entreg√°ndose
destino
desbordamientos
siguen
raros
valores
peque√±os
/H9261
in
incremento
/H9261
in
lugar
incremento
/H9261out
260
CAP√çTULO
CAPA
TRANSPORTE
Host
BHost
R1
R4
R2
R3
Host
CHost
Buffers
enlace
salida
compartidos
finitos
Œªin
datos
originales
Œª‚Äôin
datos
originales
datos
retransmitidos
Œªout
Figura
3.47
emisores
routers
buffers
finitos
rutas
saltos
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
260Una
considerado
caso
tr√°fico
extremadamente
pasemos
examinar
caso
/H9261
in
/H9261
H11032
in
extremadamente
router
R2
tr√°fico
A‚ÄìC
llega
router
R2
llega
R2
reenviado
R1
velocidad
llegada
R2
m√°ximo
capacidad
enlace
R1
R2
independientemente
valor
/H9261
in
/H9261
H11032
in
extremadamente
cone-
xiones
incluyendo
conexi√≥n
B‚ÄìD
velocidad
llegada
tr√°fico
B‚ÄìD
R2
tr√°fico
A‚ÄìC.
Puesto
tr√°ficos
A‚ÄìC
B‚ÄìD
competir
router
R2
espacio
limitado
disponible
buffer
canti-
dad
tr√°fico
A‚ÄìC
consiga
atravesar
√©xito
R2
pierda
des-
bordamiento
buffer
menor
medida
carga
ofrecida
conexi√≥n
B‚ÄìD
aumente
l√≠mite
medida
carga
ofrecida
aproxima
infinito
buffer
vac√≠o
R2
llenado
forma
inmediata
paquete
B‚ÄìD
tasa
transferencia
conexi√≥n
A‚ÄìC
R2
tiende
cero
implica
tasa
transferencia
terminal
terminal
A‚ÄìC
tiende
cero
l√≠mite
correspondiente
situaci√≥n
tr√°-
fico
intenso
consideraciones
lugar
relaci√≥n
compromiso
carga
ofrecida
tasa
transferencia
muestra
Figura
3.48
raz√≥n
eventual
decrecimiento
tasa
transferencia
aumentar
carga
ofrecida
evidente
cantidad
trabajo
desperdiciado
red
escenario
descrito
anteriormente
cantidad
tr√°fico
paquete
descartaba
router
salto
trabajo
router
salto
encaminar
paquete
router
salto
terminaba
desperdiciado
hubiera
router
simplemente
hubiera
des-
cartado
paquete
hubiera
permanecido
inactivo
modos
paquete
llegar√≠a
destino
capacidad
transmisi√≥n
utilizada
router
encaminar
paquete
router
aprovechada
hubiera
empleado
transmitir
paquete
ejemplo
seleccionar
paquete
transmitirlo
resultar
router
prioridad
paquetes
hayan
routers
anteriormente
encontramos
costes
descartar
paquete
causa
congesti√≥n
red
paquete
descarta
ruta
capacidad
transmisi√≥n
empleada
enlaces
anteriores
encaminar
paquete
punto
descartado
termina
desperdiciarse
3.6
PRINCIPIOS
CONTROL
CONGESTI√ìN
261
R/2Œªout
Œª‚Äôin
Figura
3.48
Escenario
rendimiento
buffers
finitos
rutas
multisalto
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
2613.6.2
M√©todos
controlar
congesti√≥n
Secci√≥n
3.7
examinaremos
detalle
m√©todo
espec√≠fico
TCP
controlar
congesti√≥n
identificar
m√©todos
comunes
control
con-
gesti√≥n
utilizan
pr√°ctica
abordaremos
arquitecturas
red
espec√≠ficas
protocolos
control
congesti√≥n
integran
m√©todos
nivel
general
diferenciar
t√©cnicas
control
congesti√≥n
bas√°ndonos
capa
red
proporciona
ayuda
expl√≠cita
capa
transporte
prop√≥sitos
controlar
congesti√≥n
Control
congesti√≥n
terminal
terminal
m√©todo
capa
red
propor-
ciona
soporte
expl√≠cito
capa
transporte
prop√≥sitos
control
congesti√≥n
presencia
congesti√≥n
red
inferida
sistemas
termi-
nales
bas√°ndose
√∫nicamente
comportamiento
observado
red
ejemplo
p√©rdida
paquetes
retardos
Secci√≥n
3.7
veremos
TCP
aplicar
necesariamente
m√©todo
control
congesti√≥n
terminal
terminal
capa
IP
proporciona
realimentaci√≥n
sistemas
terminales
relativa
conges-
ti√≥n
red
p√©rdida
segmentos
TCP
indicada
temporizaci√≥n
triple
paquete
ACK
duplicado
toma
indicaci√≥n
congesti√≥n
red
TCP
reduce
tama√±o
ventana
consecuencia
vere-
mos
propuesta
reciente
abordar
control
congesti√≥n
TCP
utiliza
valores
retardo
ida
vuelta
crecientes
indicadores
congesti√≥n
red
Control
congesti√≥n
asistido
red
m√©todo
control
congesti√≥n
componentes
capa
red
routers
proporcionan
realimentaci√≥n
expl√≠cita
emisor
informando
congesti√≥n
red
realimenta-
ci√≥n
simple
√∫nico
bit
indica
congesti√≥n
enlace
m√©todo
aplic√≥
tempranas
arquitecturas
SNA
IBM
Schwartz
1982
DECnet
DEC
Jain
1989
Ramakrishnan
1990
propuesto
recientemente
redes
TCP
IP
Floyd
TCP
1994
RFC
3168
utiliza
mecanismo
control
congesti√≥n
ABR
Available
bit-rate
redes
ATM
mencionado
anteriormente
proporcionar
realimentaci√≥n
red
sofisticada
ejemplo
forma
mecanismo
control
congesti√≥n
ABR
redes
ATM
estudiaremos
permite
router
informar
expl√≠cita-
mente
emisor
velocidad
transmisi√≥n
router
soportar
enlace
saliente
protocolo
XCP
Katabi
2002
proporciona
origen
cabecera
paquete
informaci√≥n
realimentaci√≥n
calculada
router
indicando
origen
incrementar
disminuir
velocidad
transmisi√≥n
mecanismo
control
congesti√≥n
asistido
red
informaci√≥n
acerca
congesti√≥n
suele
realimentada
red
emisor
formas
ve
Figura
3.49
realimentaci√≥n
directa
hacerse
router
red
emisor
forma
notificaci√≥n
normalmente
toma
forma
paquete
asfixia
bloqueo
choke
packet
esencialmente
congestionada
forma
noti-
ficaci√≥n
lugar
router
marca
actualiza
campo
paquete
trans-
mite
emisor
receptor
indicar
congesti√≥n
recibir
paquete
marcado
receptor
notifica
emisor
existencia
congesti√≥n
Observe
forma
notificaci√≥n
tarda
periodo
tiempo
ida
vuelta
completo
262
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
2623.6.3
Ejemplo
control
congestion
asistido
red
control
congesti√≥n
servicio
ABR
redes
ATM
terminar
secci√≥n
estudio
algoritmo
control
congesti√≥n
servicio
ABR
redes
ATM
protocolo
aplica
mecanismo
control
congesti√≥n
asistido
red
objetivo
caso
describir
detalle
aspectos
arquitectura
ATM
ilustrar
protocolo
aplica
m√©todo
marcadamente
mecanismo
control
congesti√≥n
utilizado
protocolo
TCP
Internet
abordaremos
aspectos
arquitectura
ATM
necesarios
comprender
control
congesti√≥n
servicio
ABR
Fundamentalmente
ATM
emplea
conmutaci√≥n
paquetes
t√©cnica
basada
circuitos
virtuales
VC
Virtual
Circuit
Recuerde
Cap√≠tulo
significa
dispositivo
conmutaci√≥n
ruta
mantiene
circuito
virtual
existente
origen
destino
informaci√≥n
VC
permite
dispositivo
conmutaci√≥n
comportamiento
emisor
individual
ejemplo
velocidad
media
transmisi√≥n
cabo
acciones
con-
trol
congesti√≥n
espec√≠ficas
origen
tales
indicar
expl√≠citamente
emisor
reducir
velocidad
conmutador
comienza
congestionarse
infor-
maci√≥n
VC
conservada
conmutadores
red
redes
ATM
est√©n
idealmente
adaptadas
control
congesti√≥n
asistido
red
ABR
dise√±ado
servicio
transferencia
datos
el√°stico
forma
recuerda
TCP
red
cargada
servicio
ABR
deber√≠a
apro-
vecharse
ancho
banda
reserva
disponible
red
congestionada
servicio
ABR
deber√≠a
reducir
velocidad
transmisi√≥n
valor
m√≠nimo
predeterminado
encontrar
tutorial
detallado
gesti√≥n
tr√°fico
control
congesti√≥n
ser-
vicio
ABR
redes
ATM
Jain
1996
Figura
3.50
muestra
marco
trabajo
mecanismo
control
congesti√≥n
servicio
ABR
redes
ATM
exposici√≥n
adoptado
terminolog√≠a
3.6
PRINCIPIOS
CONTROL
CONGESTI√ìN
263
Host
Realimentaci√≥n
red
receptor
Realimentaci√≥n
red
directa
Host
Figura
3.49
formas
realimentaci√≥n
informaci√≥n
asistido
red
acerca
congesti√≥n
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
263ATM
ejemplo
utilizando
t√©rmino
dispositivo
conmutaci√≥n
lugar
router
t√©rmino
celda
lugar
paquete
servicio
ABR
ATM
celdas
datos
transmiten
origen
destino
serie
dispositivos
conmuta-
ci√≥n
intermedios
Intercaladas
celdas
datos
encuentran
celdas
gesti√≥n
recursos
celdas
RM
Resource-Management
celdas
RM
utilizar
transportar
informaci√≥n
relativa
control
congesti√≥n
hosts
dispositivos
conmutaci√≥n
celda
RM
llega
destino
enviada
vuelta
emisor
posiblemente
destino
modificado
contenidos
celda
RM
dispositivo
conmutaci√≥n
generar
celda
RM
enviarla
directamente
origen
celdas
RM
emplearse
proporcionar
realimentaci√≥n
directa
red
receptor
muestra
Figura
3.50
mecanismo
control
congesti√≥n
servicio
ABR
ATM
m√©todo
basado
velocidad
emisor
calcula
forma
expl√≠cita
velocidad
m√°xima
transmitir
autorregula
ABR
proporciona
mecanis-
mos
se√±alizar
informaci√≥n
relativa
congesti√≥n
transmitida
dispositivos
conmutaci√≥n
receptor
Bit
EFCI
celda
datos
contiene
bit
EFCI
Explicit
Forward
Congestion
Indication
Indicaci√≥n
congesti√≥n
expl√≠cita
directa
dispositivo
conmutaci√≥n
red
congestionado
bit
EFCI
celda
datos
indicar
congesti√≥n
host
destino
comprobar
bit
EFCI
celdas
datos
recibidas
llega
celda
RM
destino
celda
datos
reci-
bida
recientemente
bit
EFCI
destino
pone
bit
indica-
ci√≥n
congesti√≥n
bit
CI
celda
RM
devuelve
celda
RM
emisor
Utilizando
bit
EFCI
celdas
datos
bit
CI
celda
RM
notifi-
car
emisor
congesti√≥n
dispositivo
conmutaci√≥n
red
Bits
CI
mencionado
anteriormente
celdas
RM
transmi-
ten
emisor
receptor
intercaladas
celdas
datos
tasa
intercalado
celdas
RM
par√°metro
ajustable
valor
predeterminado
celda
RM
32
celdas
datos
celdas
RM
disponen
bit
indicativo
con-
264
CAP√çTULO
CAPA
TRANSPORTE
Origen
Destino
Dispositivo
conmutaci√≥n
Dispositivo
conmutaci√≥n
Clave
Celdas
RM
Celdas
datos
Figura
3.50
Mecanismo
control
congesti√≥n
servicio
ABR
ATM
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
264gesti√≥n
CI
Congestion
Indication
bit
incremento
Increase
dispositivo
conmutaci√≥n
red
congestionado
configurar
Espec√≠fi-
camente
dispositivo
conmutaci√≥n
bit
celda
RM
atraviese
condiciones
congesti√≥n
leve
bit
CI
condiciones
congesti√≥n
severa
host
destino
recibe
celda
RM
devuelve
dicha
celda
RM
emisor
bits
CI
intactos
host
destino
pone
bit
CI
resultado
mecanismo
EFCI
descrito
anteriormente
Configuraci√≥n
ER
celda
RM
contiene
campo
ER
Explicit
Rate
velocidad
expl√≠cita
bytes
dispositivo
conmutaci√≥n
congestionado
reducir
valor
contenido
campo
ER
celda
RM
atraviese
forma
campo
ER
establecer√°
velocidad
m√≠nima
soportable
dispositivos
conmutaci√≥n
existentes
ruta
origen
destino
emisor
ABR
red
ATM
ajusta
velocidad
enviar
celdas
funci√≥n
valores
CI
ER
contenidos
celdas
RM
devueltas
reglas
cabo
ajuste
velocidad
complejas
tediosas
lector
interesado
tema
consultar
Jain
1996
detalles
3.7
Mecanismo
control
congesti√≥n
TCP
secci√≥n
continuar
estudio
TCP
visto
Sec-
ci√≥n
3.5
TCP
proporciona
servicio
transporte
fiable
procesos
ejecu-
hosts
componente
clave
TCP
mecanismo
control
congesti√≥n
mencionado
secci√≥n
TCP
utilizar
con-
trol
congesti√≥n
terminal
terminal
lugar
control
congesti√≥n
asistido
red
capa
IP
proporciona
realimentaci√≥n
expl√≠cita
sistemas
terminales
tocante
congesti√≥n
red
m√©todo
empleado
TCP
consiste
emisor
limite
velocidad
transmite
tr√°fico
conexi√≥n
funci√≥n
congesti√≥n
red
percibida
emisor
TCP
percibe
ruta
destino
congesti√≥n
incrementar√°
velocidad
transmisi√≥n
contario
emisor
percibe
congesti√≥n
ruta
reducir√°
velocidad
transmisi√≥n
m√©todo
plantea
cuestiones
lugar
limita
emisor
TCP
veloci-
dad
env√≠a
tr√°fico
conexi√≥n
lugar
percibe
emisor
TCP
congesti√≥n
ruta
destino
algoritmo
deber√°
emplear
emisor
variar
velocidad
transmisi√≥n
funci√≥n
congesti√≥n
percibida
terminal
terminal
Examinemos
lugar
emisor
TCP
limita
velocidad
env√≠a
tr√°fico
conexi√≥n
Secci√≥n
3.5
visto
cone-
xi√≥n
TCP
consta
buffer
recepci√≥n
buffer
transmisi√≥n
variables
UltimoByteLeido
VentanaRecepcion
etc.
mecanismo
control
congesti√≥n
TCP
opera
emisor
seguimiento
variable
adicional
ventana
congesti√≥n
ventana
indicada
VentanaCongestion
impone
restricci√≥n
velocidad
emisor
TCP
enviar
tr√°fico
red
Espec√≠ficamente
cantidad
datos
reconocidos
emisor
exceder
m√≠nimo
Ven-
tanaCongestiony
VentanaRecepcion
3.7
MECANISMO
CONTROL
CONGESTI√ìN
TCP
265
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
265UltimoByteLeido
UltimoByteReconocido
/H11349
m√≠n{VentanaCongesti√≥n
VentanaRecepcion
centrarnos
mecanismo
control
congesti√≥n
oposici√≥n
control
flujo
suponer
buffer
recepci√≥n
TCP
restricci√≥n
ventana
recepci√≥n
ignorarse
cantidad
datos
reconocidos
emisor
queda
limitada
√∫nicamente
VentanaCongestion
Supondremos
emisor
datos
enviar
segmentos
ventana
congesti√≥n
enviados
restricci√≥n
limita
cantidad
datos
reconocidos
emisor
limita
indirecta
velocidad
transmisi√≥n
emisor
comprender
imagine
conexi√≥n
p√©rdida
paquetes
retardos
trans-
misi√≥n
despreciables
situaci√≥n
ocurre
rasgos
inicio
periodo
RTT
restricci√≥n
permite
emisor
enviar
ventanacongestion
bytes
datos
conexi√≥n
periodo
RTT
emisor
recibe
paque-
tes
ACK
correspondientes
datos
velocidad
transmisi√≥n
emisor
VentanaCongestion
RTT
bytes
Ajustando
valor
ventana
congesti√≥n
emisor
ajustar
velocidad
transmite
datos
conexi√≥n
Veamos
percibe
emisor
TCP
congesti√≥n
ruta
destino
Definamos
suceso
p√©rdida
emisor
TCP
produzca
temporizaci√≥n
reciban
paquetes
ACK
duplicados
proce-
dentes
receptor
recuerde
exposici√≥n
Secci√≥n
3.5.4
suceso
temporizaci√≥n
mostrado
Figura
3.33
subsiguiente
modificaci√≥n
incluir
retransmisi√≥n
r√°pida
causa
recepci√≥n
paquetes
ACK
duplicados
congesti√≥n
severa
buffers
routers
existentes
ruta
desbordarse
dando
lugar
datagrama
contenga
seg-
mento
TCP
descartado
datagrama
descartado
lugar
suceso
p√©r-
dida
emisor
temporizaci√≥n
recepci√≥n
paquetes
ACK
duplicados
interpreta
indicaci√≥n
congesti√≥n
ruta
emisor
receptor
visto
detecta
existencia
congesti√≥n
red
considerar
casos
congesti√≥n
red
producen
p√©rdidas
paquetes
caso
emisor
TCP
recibir√°
paquetes
reconocimiento
ACK
correspondientes
segmentos
anteriormente
reconocidos
veremos
TCP
interpretar√°
llegada
paquetes
ACK
indicaci√≥n
segmentos
transmitidos
red
entregados
correctamente
destino
emplear√°
paquetes
reconoci-
miento
incrementar
tama√±o
ventana
congesti√≥n
velocidad
transmisi√≥n
Observe
velocidad
llegada
paquetes
ACK
lenta
ejemplo
ruta
terminal
terminal
presenta
retardo
contiene
enlace
ancho
banda
peque√±o
tama√±o
ventana
congesti√≥n
incremen-
tar√°
velocidad
relativamente
lenta
contrario
velocidad
llegada
paquetes
reconocimiento
alta
tama√±o
ventana
congesti√≥n
incre-
mentar√°
r√°pidamente
Puesto
TCP
utiliza
paquetes
reconocimiento
pro-
vocar
temporizar
incrementos
tama√±o
ventana
congesti√≥n
TCP
auto-temporizado
266
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
266Conocido
mecanismo
ajuste
valor
VentanaCongestion
controlar
velocidad
transmisi√≥n
cuesti√≥n
cr√≠tica
queda
deber√≠a
emisor
TCP
determinar
velocidad
transmisi√≥n
emisores
TCP
forma
colectiva
transmiten
velocidades
altas
congestionar
red
llev√°ndola
tipo
colapso
congesti√≥n
visto
Figura
3.48
versi√≥n
TCP
estudiar
continuaci√≥n
desarrollada
respuesta
colapso
congesti√≥n
observado
Internet
Jacobson
1988
versiones
anteriores
TCP
emisores
TCP
cautelosos
transmiten
informaci√≥n
lentamente
infrau-
tilizar
ancho
banda
red
emisores
TCP
transmitir
velocida-
des
altas
llegar
congestionar
red
determinar
emisores
TCP
velocidades
transmisi√≥n
congestionen
red
ancho
banda
disponible
emisores
TCP
expl√≠cita-
mente
coordinados
m√©todo
distribuido
dichos
emisores
TCP
puedan
establecer
velocidades
transmisi√≥n
bas√°ndose
√∫nicamente
informaci√≥n
local
TCP
responde
preguntas
bas√°ndose
siguientes
principios
segmento
perdido
implica
congesti√≥n
velocidad
emisor
TCP
reducirse
pierde
segmento
Recuerde
Secci√≥n
3.5.4
visto
suceso
temporizaci√≥n
recepci√≥n
paquetes
reconoci-
miento
segmento
paquete
ACK
original
duplicados
inter-
preta
indicaci√≥n
impl√≠cita
producido
suceso
p√©rdida
segmento
segmento
reconocido
activando
pro-
ceso
retransmisi√≥n
segmento
perdido
punto
vista
mecanismo
control
congesti√≥n
cuesti√≥n
emisor
TCP
disminuir
tama√±o
ventana
congesti√≥n
velocidad
transmisi√≥n
respuesta
suceso
p√©rdida
inferido
segmento
reconocido
indica
red
entregando
segmentos
emisor
receptor
velocidad
transmisi√≥n
emisor
incremen-
tarse
llega
paquete
ACK
correspondiente
segmento
reconocido
llegada
paquetes
reconocimiento
interpreta
indi-
caci√≥n
impl√≠cita
funciona
segmentos
entregados
correctamente
emisor
receptor
red
congestionada
aumentar
tama√±o
ventana
congesti√≥n
Tanteo
ancho
banda
Puesto
paquetes
ACK
indican
ruta
ori-
gen
destino
libre
congesti√≥n
p√©rdida
paquetes
indica
ruta
congestionada
estrategia
TCP
ajustar
velocidad
transmisi√≥n
consiste
incrementar
velocidad
respuesta
llegada
paquetes
ACK
pro-
duce
p√©rdida
momento
reduce
velocidad
transmisi√≥n
emisor
TCP
incrementa
velocidad
transmisi√≥n
tantear
velocidad
aparece
congesti√≥n
retrocede
punto
comienza
tantear
variado
velocidad
comienza
producirse
congesti√≥n
comportamiento
emisor
TCP
similar
ni√±o
pide
golosinas
momento
marcha
atr√°s
comienza
pedir
golosinas
Observe
red
propor-
ciona
indicaci√≥n
expl√≠cita
congesti√≥n
paquetes
ACK
p√©rdidas
utilizan
indicadores
impl√≠citos
emisor
TCP
reacciona
informa-
ci√≥n
local
forma
as√≠ncrona
emisores
TCP
3.7
MECANISMO
CONTROL
CONGESTI√ìN
TCP
267
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
267Ahora
conocemos
fundamentos
mecanismo
control
congesti√≥n
TCP
condiciones
pasar
estudiar
detalles
famoso
algoritmo
control
congesti√≥n
TCP
descrito
libro
Jacobson
1988
estandarizado
documento
RFC
2581
algoritmo
consta
componentes
principales
arranque
lento
slow
start
evitaci√≥n
congesti√≥n
congestion
avoi-
dance
recuperaci√≥n
r√°pida
fast
recovery
componentes
obliga-
torios
TCP
diferenci√°ndose
forma
aumentan
tama√±o
ventana
congesti√≥n
respuesta
paquetes
ACK
recibidos
brevemente
arranque
lento
incrementa
tama√±o
ventana
congesti√≥n
r√°pidamente
contra-
riamente
indica
nombre
evitaci√≥n
congesti√≥n
componente
recu-
peraci√≥n
r√°pida
recomendable
obligatorio
emisores
TCP
Arranque
lento
inicia
conexi√≥n
TCP
valor
ventana
congesti√≥n
VentanaCon-
gestion
normalmente
inicializa
valor
peque√±o
MSS
tama√±o
m√°ximo
segmento
RFC
3390
resultado
velocidad
transmisi√≥n
inicial
apro-
ximadamente
MSS
RTT
ejemplo
MSS
500
bytes
RTT
200
milisegun-
velocidad
transmisi√≥n
inicial
20
kbps
Puesto
ancho
banda
disponible
emisor
TCP
valor
MSS/
RTT
emisor
TCP
gustar√≠a
determinar
r√°pidamente
cantidad
ancho
banda
disponible
arranque
lento
valor
VentanaCon-
268
CAP√çTULO
CAPA
TRANSPORTE
Host
Host
segmento
segmentos
segmentos
RTT
Tiempo
Tiempo
Figura
3.51
Fase
arranque
lento
TCP
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
268gestion
establece
MSS
incrementa
MSS
produce
reconocimiento
segmento
transmitido
ejemplo
Figura
3.51
TCP
env√≠a
segmento
red
espera
correspondiente
paquete
ACK
llega
paquete
reconocimiento
emisor
TCP
incrementa
tama√±o
ventana
conges-
ti√≥n
MSS
transmite
segmentos
tama√±o
m√°ximo
segmentos
reconocidos
emisor
incrementa
tama√±o
ventana
congesti√≥n
MSS
segmentos
reconocimiento
generando
ventana
congesti√≥n
MSS
etc.
proceso
velocidad
transmisi√≥n
duplique
periodo
RTT
velocidad
transmisi√≥n
inicial
TCP
baja
crece
exponencial-
mente
fase
arranque
lento
finalizar
crecimiento
exponencial
algoritmo
arranque
lento
proporciona
respuestas
cuesti√≥n
lugar
produce
suceso
p√©rdida
paquete
congesti√≥n
se√±alado
temporizaci√≥n
emisor
TCP
establece
valor
VentanaCongestion
inicia
proceso
arranque
lento
define
valor
variable
establece
umbral
arranque
lento
denominaremos
umbralen
VentanaCongestion/2
mitad
valor
tama√±o
ventana
congesti√≥n
detectado
congesti√≥n
forma
fase
arranque
lento
terminar
direc-
tamente
ligada
valor
umbral
umbrales
mitad
valor
Ven-
tanaCongestion
detect√≥
congesti√≥n
resultar
imprudente
continuar
duplicando
valor
VentanaCongestion
alcanza
sobrepasa
valor
umbral
valor
VentanaCongestion
umbral
fase
arranque
lento
termina
transacciones
TCP
pasan
evita-
ci√≥n
congesti√≥n
veremos
TCP
incrementa
cautela
valor
Venta-
naCongestion
evitaci√≥n
congesti√≥n
forma
terminar
fase
arranque
lento
detectan
paquetes
ACK
duplica-
cuyo
caso
TCP
realiza
retransmisi√≥n
r√°pida
v√©ase
Secci√≥n
3.5.4
entra
recuperaci√≥n
r√°pida
veremos
comportamiento
TCP
fase
arranque
lento
resume
descripci√≥n
FSM
control
congesti√≥n
TCP
Figura
3.52
algoritmo
arranque
lento
ra√≠ces
Jacobson
1988
Jain
1986
propon√≠a
forma
independiente
m√©todo
similar
algoritmo
arranque
lento
Evitaci√≥n
congesti√≥n
entrar
evitaci√≥n
congesti√≥n
valor
VentanaCongestion
mitad
valor
momento
detect√≥
congesti√≥n
borde
congesti√≥n
consecuencia
lugar
duplicar
valor
VentanaCongestion
RTT
TCP
adopta
m√©todo
conservador
incrementa
valor
VentanaCongestionsolamente
MSS
RTT
RFC
2581
llevarse
cabo
maneras
m√©todo
habitual
con-
siste
emisor
TCP
aumenta
valor
VentanaCongestion
MSS
bytes
MSS
VentanaCongestion
llega
paquete
reconocimiento
ejem-
plo
MSS
1.460
bytes
VentanaCongestion
14.600
bytes
enton-
ces
enviar√°n
10
segmentos
RTT
ACK
llega
suponiendo
ACK
segmento
incrementa
tama√±o
ventana
congesti√≥n
1/10
MSS
valor
tama√±o
ventana
congesti√≥n
aumentado
MSS
ACK
correspondientes
10
segmentos
hayan
recibidos
3.7
MECANISMO
CONTROL
CONGESTI√ìN
TCP
269
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
269Pero
momento
deber√≠a
detenerse
crecimiento
lineal
MSS
RTT
evitaci√≥n
congesti√≥n
algoritmo
evitaci√≥n
congesti√≥n
TCP
comporta
lugar
temporizaci√≥n
caso
arranque
lento
valor
VentanaCongestion
fija
MSS
valor
umbral
actualiza
haci√©ndose
mitad
valor
VentanaCongestion
produce
suceso
p√©rdida
paquete
recuerde
detectarse
p√©rdida
paquete
causa
llegada
ACK
duplicados
caso
red
contin√∫a
entregando
segmentos
emisor
receptor
se√±ala
recepci√≥n
paquetes
ACK
duplicados
comportamiento
TCP
tipo
p√©rdida
deber√≠a
dr√°stico
p√©rdida
paquete
indicada
temporizaci√≥n
TCP
divide
valor
VentanaCongestion
a√±adiendo
MSS
forma
ACK
duplicados
recibido
confi-
gura
valor
umbral
mitad
valor
VentanaCongestion
recibieron
ACK
duplicados
continuaci√≥n
entra
recuperaci√≥n
r√°pida
270
CAP√çTULO
CAPA
TRANSPORTE
Arranque
lento
ACK
duplicado
contadorACKdupl++
ACK
duplicado
contadorACKdupl++
fin_de
temporizaci√≥n
umbral
VC/2
VC=1
MSS
contadorACKdupl=0
VC=1
MSS
umbral=64
KB
contadorACKdupl=0
fin_de_temporizaci√≥n
umbral
VC/2
VC=1
contadorACKdupl=0
temporizaci√≥n
umbral
VC/2
VC=1
MSS
contadorACKdupl=0
VC‚â•
umbral
Evitaci√≥n
congesti√≥n
Recuperaci√≥n
r√°pida
ACK
VC
VC+MSS
‚Ä¢(MSS
VC
contadorACKdupl=0
transmitir
segmento(s
nuevos(s
ACK
VC
VC+MSS
contadorACKdupl=0
transmitir
segmento(s
nuevos(s
retransmitir
segmento
falta
retransmitir
segmento
falta
contadorACKdupl==3
umbral
VC/2
VC
umbral+3
retransmitir
segmento
falta
ACK
duplicado
VC
VC+MSS
transmitir
segmento(s
nuevos(s
contadorACKdupl==3
umbral
VC/2
VC
umbral+3
retransmitir
segmento
falta
retransmitir
segmento
falta
ACK
VC
umbral
contadorACKdupl=0
Clave
VC
VentanaCongestion
Figura
3.52
Descripci√≥n
m√°quina
finitos
mecanismo
control
congesti√≥n
TCP
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
270Recuperaci√≥n
r√°pida
fase
recuperaci√≥n
r√°pida
valor
VentanaCongestion
incrementa
MSS
ACK
duplicado
recibido
correspondiente
segmento
falta
cau-
sado
TCP
recuperaci√≥n
r√°pida
llega
ACK
seg-
mento
falta
TCP
entra
evitaci√≥n
congesti√≥n
disminuir
valor
VentanaCongestion
produce
temporizaci√≥n
mecanismo
recuperaci√≥n
r√°pida
efect√∫a
transici√≥n
arranque
lento
des-
pu√©s
acciones
modos
arranque
lento
evitaci√≥n
congesti√≥n
valor
VentanaCongestion
establece
MSS
valor
umbral
mitad
valor
VentanaCongestion
lugar
suceso
p√©rdida
mecanismo
recuperaci√≥n
r√°pida
componente
TCP
recomendado
obligatorio
RFC
2581
interesante
resaltar
versi√≥n
TCP
cono-
cida
TCP
Tahoe
establece
incondicionalmente
tama√±o
ventana
congesti√≥n
MSS
entra
arranque
lento
suceso
p√©rdida
indicado
temporizaci√≥n
recepci√≥n
ACK
duplicados
versi√≥n
reciente
TCP
TCP
Reno
incorpora
recuperaci√≥n
r√°pida
Figura
3.53
ilustra
evoluci√≥n
ventana
congesti√≥n
TCP
Reno
Tahoe
figura
inicialmente
umbral
MSS
ciclos
transmisi√≥n
Tahoe
Reno
realizan
acciones
id√©nticas
ventana
congesti√≥n
crece
r√°pidamente
forma
exponencial
fase
arranque
lento
alcanza
umbral
cuarto
ciclo
transmisi√≥n
continuaci√≥n
ventana
congesti√≥n
crece
linealmente
produce
suceso
ACK
duplicados
justo
octavo
ciclo
transmisi√≥n
Observe
tama√±o
ventana
congesti√≥n
12
MSS
produce
suceso
p√©rdida
valor
umbral
0,5
VentanaCongestion
MSS
TCP
Reno
tama√±o
ventana
congesti√≥n
puesto
VentanaCongestion=
MSS
crece
linealmente
TCP
Tahoe
ventana
congesti√≥n
MSS
crece
exponencialmente
alcanza
valor
umbral
punto
crece
linealmente
Figura
3.52
presenta
descripci√≥n
completa
m√°quina
finitos
algoritmos
mecanismo
control
congesti√≥n
TCP
arranque
lento
evitaci√≥n
congesti√≥n
recuperaci√≥n
r√°pida
figura
indica
producirse
3.7
MECANISMO
CONTROL
CONGESTI√ìN
TCP
271
102
TCP
Tahoe
umbral
umbral
Ventana
congesti√≥n
segmentos
91
10
12
14
TCP
Reno
Figura
3.53
Evoluci√≥n
ventana
congesti√≥n
TCP
Tahoe
Reno
Ciclo
transmisi√≥n
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
271transmisiones
segmentos
retransmisiones
segmentos
importante
diferenciar
retransmisiones
control
errores
TCP
control
congesti√≥n
TCP
apreciar
aspectos
TCP
estrecha-
mente
vinculados
Control
congesti√≥n
TCP
retrospectiva
vistos
detalles
fases
arranque
lento
evitaci√≥n
congesti√≥n
recuperaci√≥n
r√°pida
merece
pena
retroceder
clarificar
cosas
Ignorando
fase
inicial
arranque
lento
establece
conexi√≥n
suponiendo
p√©r-
didas
indicadas
recepci√≥n
ACK
duplicados
lugar
fines
tem-
porizaci√≥n
control
congesti√≥n
TCP
consiste
crecimiento
lineal
aditivo
VentanaCongestiona
raz√≥n
MSS
RTT
seguido
decrecimiento
multiplica-
tivo
divisi√≥n
tama√±o
ventana
VentanaCongestion
reci-
ben
ACK
duplicados
raz√≥n
suele
decirse
control
congesti√≥n
TCP
forma
crecimiento
aditivo
decrecimiento
multiplicativo
AIMD
Additive-
Increase
Multiplicative-Decrease
control
congesti√≥n
control
congesti√≥n
AIMD
presenta
comportamiento
forma
diente
sierra
muestra
Figura
3.54
ilustra
intuici√≥n
TCP
tanteando
ancho
banda
TCP
aumenta
linealmente
tama√±o
ventana
congesti√≥n
velocidad
transmisi√≥n
lugar
recepci√≥n
ACK
duplica-
continuaci√≥n
divide
ventana
congesti√≥n
vuelve
cre-
cer
linealmente
tanteando
disponible
ancho
banda
adicional
mencionado
anteriormente
implementaciones
TCP
actuales
emplean
algoritmo
Reno
Padhye
2001
propuesto
variantes
algoritmo
Reno
RFC
3782
RFC
2018
algoritmo
TCP
Vegas
Brakmo
1995
Ahn
1995
intenta
evitar
congesti√≥n
manteniendo
tasa
transferencia
idea
b√°sica
algoritmo
Vegas
detectar
congesti√≥n
routers
existentes
origen
destino
pierda
paquete
reducir
velocidad
linealmente
detecta
p√©rdida
inminente
paquetes
p√©rdida
inminente
paquete
predice
observando
RTT
RTT
paquetes
congesti√≥n
272
CAP√çTULO
CAPA
TRANSPORTE
24
16
Tiempo
Ventana
congesti√≥n
Figura
3.54
Control
congesti√≥n
crecimiento
aditivo
decrecimiento
multiplicativo
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
272routers
Linux
soporta
serie
algoritmos
control
congesti√≥n
incluyendo
TCP
Reno
TCP
Vegas
permite
administrador
sistema
configurar
versi√≥n
TCP
utilizar
versi√≥n
predeterminada
TCP
versi√≥n
Linux
2.6.18
CUBIC
2008
versi√≥n
TCP
desarrollada
aplicaciones
ancho
banda
algoritmo
AIMD
TCP
desarrollado
bas√°ndose
enorme
trabajo
inge-
nier√≠a
experimentaci√≥n
mecanismos
control
congesti√≥n
redes
reales
a√±os
desarrollo
TCP
an√°lisis
te√≥ricos
mostraron
algoritmo
control
congesti√≥n
TCP
sirve
algoritmo
optimizaci√≥n
as√≠ncrona
distri-
buido
resultado
optimizaci√≥n
simult√°nea
diversos
aspectos
importantes
prestaciones
proporcionadas
usuario
rendimiento
red
Kelly
1998
desarrollado
aspectos
te√≥ricos
control
conges-
ti√≥n
Srikant
2004
Descripci√≥n
macrosc√≥pica
tasa
transferencia
TCP
Visto
comportamiento
diente
sierra
TCP
resulta
natural
preguntarse
tasa
transferencia
media
velocidad
media
conexi√≥n
TCP
larga
dura-
ci√≥n
an√°lisis
ignorar
fases
arranque
lento
lugar
producirse
temporizaci√≥n
fases
normalmente
cortas
emi-
sor
sale
r√°pidamente
forma
exponencial
intervalo
concreto
ida
vuelta
velocidad
TCP
env√≠a
datos
funci√≥n
tama√±o
ventana
conges-
ti√≥n
RTT
actual
tama√±o
ventana
bytes
tiempo
actual
ida
vuelta
RTT
segundos
velocidad
transmisi√≥n
TCP
RTT
TCP
comprueba
ancho
banda
adicional
incrementando
MSS
RTT
produce
p√©rdida
valor
pro-
duce
p√©rdida
Suponiendo
RTT
constantes
dura
conexi√≥n
velocidad
transmisi√≥n
TCP
var√≠a
W/(2
RTT
RTT
suposiciones
llevan
modelo
macrosc√≥pico
extremadamente
simplificado
comportamiento
r√©gimen
permanente
TCP
red
descarta
paquete
cone-
xi√≥n
velocidad
aumenta
RTT
velocidad
reduce
mitad
aumenta
MSS
RTT
RTT
alcanza
valor
RTT
pro-
ceso
repite
Puesto
tasa
transferencia
velocidad
TCP
aumenta
linealmente
valores
extremos
Utilizando
modelo
altamente
idealizado
din√°mica
r√©gimen
permanente
TCP
deducir
expresi√≥n
interesante
relaciona
tasa
p√©rdi-
das
conexi√≥n
ancho
banda
disponible
Mahdavi
1997
Dejamos
demostraci√≥n
problemas
repaso
modelo
sofisticado
comprobado
concuerda
emp√≠ricamente
datos
medidos
describe
Padhye
2000
futuro
TCP
importante
darse
control
congesti√≥n
TCP
ido
evolucionando
a√±os
evolucionando
leer
resumen
meca-
tasa
transferencia
media
conexi√≥n
75
RTT
3.7
MECANISMO
CONTROL
CONGESTI√ìN
TCP
273
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
273nismo
control
congesti√≥n
TCP
finales
d√©cada
1990
RFC
2581
desea
exposici√≥n
acerca
desarrollos
control
congesti√≥n
TCP
consulte
Floyd
2001
Internet
mayor√≠a
conexiones
TCP
transportaban
tr√°fico
SMTP
FTP
Telnet
necesariamente
Internet
actual
domina
HTTP
futura
Internet
proporcione
servi-
cios
siquiera
imaginar
necesidad
evoluci√≥n
continua
TCP
ilustrarse
considerando
cone-
xiones
TCP
alta
velocidad
necesarias
aplicaciones
computaci√≥n
reticular
grid-computing
Foster
2002
ejemplo
considere
conexi√≥n
TCP
segmentos
1.500
bytes
RTT
100
milisegundos
suponga
deseamos
enviar
datos
conexi√≥n
10
Gbps
Siguiendo
documento
RFC
3649
observamos
utilizar
f√≥rmula
tasa
transferencia
TCP
alcanzar
tasa
transferencia
10
Gbps
dar√≠a
tama√±o
ventana
congesti√≥n
83.333
segmentos
segmentos
despierta
temor
83.333
segmentos
tr√°nsito
perderse
ocurrir√≠a
produjeran
p√©rdidas
fracci√≥n
segmentos
transmitidos
perderse
permitiera
algoritmo
control
congesti√≥n
TCP
Figura
3.52
alcanzar
velocidad
deseada
10
Gbps
cuestiones
repaso
cap√≠tulo
mostraremos
derivar
f√≥rmula
expresa
tasa
transferencia
conexi√≥n
TCP
funci√≥n
tasa
p√©rdidas
tiempo
ida
vuelta
RTT
tama√±o
m√°ximo
segmento
MSS
f√≥rmula
alcanzar
tasa
transferencia
10
Gbps
actual
algoritmo
control
congesti√≥n
TCP
tolerar
probabilidad
p√©rdida
segmentos
10
10
equivalente
suceso
p√©rdida
5.000.000.000
segmentos
tasa
baja
observaci√≥n
llevado
serie
investigadores
buscar
versiones
TCP
est√©n
dise√±adas
espec√≠fica-
mente
entornos
alta
velocidad
consulte
Jin
2004
RFC
3649
Kelly
2003
2008
obtener
informaci√≥n
trabajos
3.7.1
Equidad
Considere
conexiones
TCP
ruta
terminal
terminal
dife-
rente
atravesando
enlace
cuello
botella
velocidad
trans-
misi√≥n
bps
enlace
cuello
botella
conexi√≥n
restantes
enlaces
existentes
ruta
conexi√≥n
congestio-
nados
capacidad
transmisi√≥n
comparada
capacidad
trans-
misi√≥n
enlace
cuello
botella
Suponga
conexi√≥n
transfiriendo
archivo
tama√±o
tr√°fico
UDP
atravesando
enlace
cuello
bote-
lla
mecanismo
control
congesti√≥n
equitativo
velocidad
media
transmisi√≥n
conexi√≥n
conexi√≥n
obtiene
cuota
ancho
banda
enlace
algoritmo
AIMD
TCP
equitativo
teniendo
conexio-
nes
TCP
iniciarse
instantes
distintos
distintos
tama√±os
ventana
instante
determinado
Chiu
1989
proporciona
explicaci√≥n
elegante
intuitiva
control
congesti√≥n
TCP
converge
proporcionar
tasa
transferencia
media
conexi√≥n
 12
MSS
RTT
274
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
274cuota
ancho
banda
enlace
cuello
botella
conexiones
TCP
compi-
ten
ancho
banda
Consideremos
caso
simple
conexiones
TCP
comparten
enlace
cuya
velocidad
transmisi√≥n
muestra
Figura
3.55
Suponemos
conexiones
MSS
RTT
tama√±o
ventana
congesti√≥n
tasa
transferencia
enviar
cantidad
datos
conexi√≥n
TCP
datagrama
UDP
atra-
viesan
enlace
compartido
Asimismo
ignorar
fase
arranque
lento
TCP
suponer
conexiones
TCP
operando
evitaci√≥n
congesti√≥n
AIMD
tiempo
gr√°fica
Figura
3.56
muestra
tasa
transferencia
conexiones
TCP
TCP
dise√±ado
conexiones
compartan
equitativamente
ancho
banda
enlace
tasa
transferencia
alcanzada
deber√≠a
caer
3.7
MECANISMO
CONTROL
CONGESTI√ìN
TCP
275
Cuota
equitativa
ancho
banda
Tasa
transferencia
conexi√≥n
Tasa
transferencia
conexi√≥n
L√≠nea
utilizaci√≥n
ancho
banda
completo
Figura
3.56
Tasa
transferencia
alcanzada
conexiones
TCP
Figura
3.55
conexiones
TCP
comparten
enlace
cuello
botella
Conexi√≥n
TCP
Conexi√≥n
TCP
Router
cuello
botella
capacidad
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
275flecha
sale
origen
√°ngulo
45
grados
cuota
equitativa
ancho
banda
Idealmente
suma
tasas
transferencia
evidentemente
conexi√≥n
reciba
cuota
equitativa
capacidad
enlace
cero
situaci√≥n
deseable
objetivo
deber√≠a
tasas
transferencia
alcanzadas
encuentren
punto
intersecci√≥n
l√≠nea
cuota
equi-
tativa
ancho
banda
l√≠nea
utilizaci√≥n
ancho
banda
completo
mostradas
Figura
3.56
Suponga
tama√±os
ventana
TCP
tales
instante
determinado
conexiones
alcanzan
tasas
transferencia
indicadas
punto
Figura
3.56
Puesto
cantidad
ancho
banda
enlace
conjunto
consumido
conexiones
menor
producir√°
p√©rdida
ambas
conexiones
incrementar√°n
tama√±os
ventana
MSS
RTT
resultado
algoritmo
evitaci√≥n
congesti√≥n
TCP
tasa
transferencia
conjunta
conexiones
l√≠nea
45
grados
incremento
equitativo
ambas
conexiones
partiendo
punto
A.
Finalmente
ancho
banda
enlace
consumido
conjuntamente
conexiones
terminar√°
produci√©ndose
p√©rdida
paquetes
Suponga
conexiones
experimentan
p√©rdida
paquetes
alcanzan
tasas
transferencia
indicadas
punto
B.
conexio-
nes
reducen
tama√±o
ventanas
factor
tasas
transferencia
resultantes
encuentran
punto
camino
vector
comienza
termina
origen
Puesto
ancho
banda
conjunto
utilizado
menor
punto
conexiones
incrementan
tasas
transfe-
rencia
l√≠nea
45
grados
partiendo
C.
Finalmente
terminar√°
produ-
cirse
p√©rdida
paquetes
ejemplo
punto
conexiones
reducir√°n
tama√±o
ventanas
factor
sucesivamente
Compruebe
ancho
banda
alcanzado
ambas
conexiones
fluct√∫a
l√≠nea
indica
cuota
equitativa
ancho
banda
Compruebe
conexiones
terminar√°n
convergiendo
comportamiento
independientemente
posici√≥n
inicial
espacio
bidimensional
escenario
serie
suposiciones
ideales
permite
proporcionar
idea
intuitiva
TCP
ancho
banda
reparta
forma
equitativa
conexiones
escenario
ideal
conexiones
TCP
atraviesan
enlace
cuello
botella
conexiones
valor
RTT
conexi√≥n
TCP
asociada
pareja
origen-destino
pr√°ctica
condicio-
nes
normalmente
aplicaciones
cliente-servidor
obtener
cuo-
tas
desiguales
ancho
banda
enlace
particular
demostrado
conexiones
comparten
cuello
botella
com√∫n
sesiones
valor
RTT
menor
capaces
apropiarse
r√°pidamente
ancho
banda
disponible
enlace
medida
liber√°ndose
abren
r√°pidamente
ventanas
congesti√≥n
disfrutan
tasa
transferencia
alta
conexio-
nes
cuyo
valor
RTT
Lakshman
1997
Equidad
UDP
Acabamos
control
congesti√≥n
TCP
regula
velocidad
transmisi√≥n
aplicaci√≥n
mecanismo
ventana
congesti√≥n
aplicaciones
multimedia
videoconferencias
telefon√≠a
Internet
ejecutan
TCP
precisamente
raz√≥n
desean
velocidad
transmisi√≥n
276
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
276regule
red
est√©
congestionada
lugar
aplicaciones
prefieren
ejecutarse
UDP
incorpora
mecanismo
control
congesti√≥n
ejecutarse
UDP
aplicaciones
entregar
red
datos
audio
v√≠deo
velocidad
constante
ocasionalmente
perder
paquetes
lugar
reducir
velocidades
niveles
equitativos
perder
paquete
perspectiva
TCP
aplicaciones
multimedia
ejecutan
UDP
equitativas
coope-
ran
conexiones
ajustan
velocidades
transmisi√≥n
apropiadamente
control
congesti√≥n
TCP
disminuye
velocidad
transmisi√≥n
frente
aumento
congesti√≥n
p√©rdidas
or√≠genes
datos
UDP
darse
caso
or√≠genes
UDP
terminen
expulsar
tr√°fico
TCP
√°rea
actual
investigaci√≥n
desarrollo
mecanismos
control
congesti√≥n
Internet
impidan
tr√°fico
UDP
termine
reducir
cero
tasa
transfe-
rencia
Internet
Floyd
1999
Floyd
2000
Kohler
2006
Equidad
conexiones
TCP
paralelo
pudiera
forzar
tr√°fico
UDP
comportarse
equitativamente
problema
equidad
estar√≠a
completamente
resuelto
impida
aplicaci√≥n
basada
TCP
utilizar
conexiones
paralelo
ejemplo
navegadores
web
utilizan
conexiones
TCP
paralelo
transferir
distintos
objetos
contenidos
p√°gina
web
mayor√≠a
navegadores
configurarse
n√∫mero
exacto
conexiones
m√∫ltiples
aplicaci√≥n
emplea
conexiones
paralelo
obtiene
fracci√≥n
ancho
banda
enlace
congestionado
ejemplo
considere
enlace
cuya
velocidad
soporta
aplicaciones
entrantes
cliente-servidor
utilizando
aplicaciones
conexi√≥n
TCP
llega
aplicaci√≥n
emplea
conexi√≥n
TCP
enton-
ces
conexi√≥n
velocidad
transmisi√≥n
R/10
aplicaci√≥n
utiliza
11
conexiones
TCP
paralelo
apli-
caci√≥n
obtendr√°
cuota
equitativa
R/2
tr√°fico
web
domi-
nante
Internet
conexiones
m√∫ltiples
paralelo
resultan
comunes
3.8
Resumen
comenzado
cap√≠tulo
estudiando
servicios
protocolo
capa
transporte
proporcionar
aplicaciones
red
extremos
proto-
colo
capa
transporte
simple
ofrecer
servicio
sofisticado
aplicaciones
poniendo
disposici√≥n
√∫nicamente
funci√≥n
multiplexaci√≥n
demulti-
plexaci√≥n
procesos
comunicando
protocolo
UDP
Internet
ejemplo
tipo
protocolo
capa
transporte
sofisticados
extremo
protocolo
capa
transporte
proporcionar
aplicaciones
diver-
sos
tipos
garant√≠as
ejemplo
entrega
fiable
datos
garant√≠as
retardos
garant√≠as
concernientes
ancho
banda
modos
servicios
protocolo
transporte
proporcionar
restringidos
modelo
servicio
protocolo
subyacente
capa
red
protocolo
capa
red
proporcionar
garant√≠as
retardos
ancho
banda
segmentos
capa
transporte
protocolo
capa
transporte
proporcionar
garant√≠as
retardo
ancho
banda
mensajes
intercambiados
procesos
3.8
RESUMEN
277
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
277En
Secci√≥n
3.4
visto
protocolo
capa
transporte
proporcionar
transferencia
fiable
datos
protocolo
red
subya-
cente
fiable
vimos
sutilezas
implicadas
provisi√≥n
transferencia
fiable
datos
dicha
tarea
llevarse
cabo
combi-
nando
cuidadosamente
paquetes
reconocimiento
temporizadores
retransmi-
siones
n√∫meros
secuencia
hablado
transferencia
fiable
datos
cap√≠tulo
debemos
presente
transferencia
fiable
proporcionada
protocolos
capas
enlace
red
transporte
aplicaci√≥n
Cualquiera
capas
supe-
riores
pila
protocolos
implementar
reconocimientos
temporizadores
retransmisiones
n√∫meros
secuencia
proporcionando
servicio
transfe-
rencia
datos
fiable
capa
a√±os
ingenieros
inform√°ticos
dise√±ado
implementado
independiente
protoco-
capas
enlace
red
transporte
aplicaci√≥n
proporcionan
trans-
ferencia
datos
fiable
protocolos
desaparecido
silenciosamente
escena
Secci√≥n
3.5
examinado
detalle
TCP
protocolo
fiable
orientado
conexi√≥n
capa
transporte
Internet
visto
TCP
complejo
incluyendo
t√©cnicas
gesti√≥n
conexi√≥n
control
flujo
estimaci√≥n
tiempo
ida
vuelta
transferencia
fiable
datos
TCP
complejo
descripci√≥n
deja
entrever
dejado
exposici√≥n
intencionadamente
diversos
parches
correcciones
mejoras
TCP
ampliamente
implementadas
distintas
versiones
protocolo
modos
complejidades
ocultas
ojos
aplicaci√≥n
red
cliente
host
enviar
datos
forma
fiable
servidor
implementado
host
limita
abrir
socket
TCP
servidor
bombear
datos
socket
Afortunadamente
aplicaci√≥n
cliente-servidor
completamente
inconsciente
complejidad
TCP
Secci√≥n
3.6
examinado
control
congesti√≥n
perspectiva
amplia
Secci√≥n
3.7
mostrado
implementa
mecanismo
control
congesti√≥n
TCP
vimos
control
congesti√≥n
obligatorio
parala
saluda
red
red
colapsarse
f√°cilmente
pue-
transportarse
datos
terminal
terminal
Secci√≥n
3.7
vimos
TCP
implementa
mecanismo
control
congesti√≥n
terminal
terminal
incrementa
forma
aditiva
tasa
transmisi√≥n
eval√∫a
ruta
seguida
conexi√≥n
TCP
libre
congesti√≥n
tasa
transmisi√≥n
reduce
multiplicativamente
producen
p√©rdidas
datos
mecanismo
proporcionar
cone-
xi√≥n
TCP
pasa
enlace
congestionado
equitativa
ancho
banda
enlace
examinado
profundidad
impacto
esta-
blecimiento
conexi√≥n
TCP
lento
arranque
latencia
observado
casos
importantes
establecimiento
conexi√≥n
arranque
lento
contribuyen
significativamente
retardo
terminal
terminal
Conviene
recalcar
control
congesti√≥n
TCP
ido
evolucionando
a√±os
contin√∫a
√°rea
intensiva
investigaci√≥n
probable
contin√∫e
evolucionando
a√±os
an√°lisis
cap√≠tulo
acerca
protocolos
espec√≠ficos
trans-
porte
Internet
centrado
UDP
TCP
caballos
batalla
capa
transporte
Internet
embar
go
d√©cadas
experiencia
278
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
278protocolos
permitido
identificar
serie
casos
resulta
ideal
investigadores
dedicado
esfuerzos
desarro-
llo
protocolos
adicionales
capa
transporte
actual-
mente
est√°ndares
propuestos
IETF
Protocolo
control
congesti√≥n
datagramas
DCCP
Datagram
Congestion
Control
Protocol
RFC
4340
proporciona
servicio
fiable
baja
carga
administra-
tiva
orientado
mensajes
similar
UDP
tipo
control
con-
gesti√≥n
seleccionado
aplicaci√≥n
compatible
TCP
aplicaci√≥n
necesita
transferencia
datos
fiable
semi-fiable
control
congesti√≥n
implementado
aplicaci√≥n
utilizando
mecanismos
estudiado
Secci√≥n
3.4
DCCP
previsto
utilizarlo
aplicaciones
tales
flujos
multimedia
v√©ase
Cap√≠tulo
jugar
compromisos
existentes
requisitos
temporizaci√≥n
fiabilidad
entrega
datos
quieran
responder
situaciones
congesti√≥n
red
Protocolo
transmisi√≥n
control
flujos
SCTP
Stream
Control
Transmission
Protocol
RFC
2960
RFC
3286
protocolo
fiable
orientado
mensajes
permite
multiplexar
flujos
nivel
aplicaci√≥n
√∫nica
conexi√≥n
SCTP
t√©cnica
conocida
nombre
multi-streaming
punto
vista
fiabilidad
flujos
comparten
conexi√≥n
gestionan
forma
separada
p√©rdida
paquetes
flujos
afecte
entrega
datos
SCTP
permite
transferir
datos
rutas
salida
host
conectado
redes
posibilidad
entrega
opcional
datos
orden
serie
caracter√≠sticas
interesantes
algorit-
mos
control
flujo
control
congesti√≥n
SCTP
pr√°cticamente
TCP
protocolo
Control
tasa
compatible
TCP
TFRC
TCP-Friendly
Rate
Con-
trol
RFC
5348
protocolo
control
congesti√≥n
protocolo
completo
capa
transporte
TFRC
especifica
mecanismo
control
congesti√≥n
utilizado
protocolo
transporte
DCCP
protocolos
seleccionables
aplicaci√≥n
existentes
DCCP
TFRC
obje-
tivo
TFRC
suavizar
comportamiento
t√≠pico
diente
sierra
v√©ase
Figura
3.54
experimenta
control
congesti√≥n
TCP
tiempo
man-
tasa
transmisi√≥n
plazo
razonablemente
pr√≥xima
TCP
tasa
transmisi√≥n
perfil
suave
TCP
TFRC
adaptado
aplicaciones
multimedia
tales
telefon√≠a
IP
flujos
multimedia
importante
man-
perfil
suave
tasa
transmisi√≥n
TFRC
protocolo
basado
ecuacio-
nes
utiliza
tasa
medida
p√©rdida
paquetes
entrada
ecuaci√≥n
Padhye
2000
permite
estimar
tasa
transferencia
TCP
sesi√≥n
TCP
experimentara
dicha
tasa
p√©rdidas
dicha
tasa
transferencia
adopta
objetivo
tasa
transmisi√≥n
TFRC
futuro
dir√°
DCCP
SCTP
TFRC
adoptados
ampliamente
Aun-
protocolos
proporcionan
claramente
serie
capacidades
mejoradas
TCP
UDP
protocolos
demostrado
a√±os
suficientemente
protocolos
termine
venciendo
suficientemente
depender√°
compleja
mezcla
aspectos
t√©cnicos
sociales
empresariales
Cap√≠tulo
visto
red
computadoras
dividirse
denomina
frontera
red
n√∫cleo
red
frontera
red
cubre
3.8
RESUMEN
279
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
279lo
sucede
sistemas
terminales
Habiendo
cubierto
capa
aplicaci√≥n
capa
transporte
an√°lisis
frontera
red
completo
llegado
momento
explorar
n√∫cleo
red
Comenzaremos
viaje
cap√≠tulo
analizaremos
capa
red
seguiremos
Cap√≠tulo
dedicado
capa
enlace
Problemas
cuestiones
repaso
Cap√≠tulo
Cuestiones
repaso
SECCIONES
3.1‚Äì3.3
R1
Suponga
capa
red
proporciona
servicio
capa
red
host
origen
acepta
segmento
tama√±o
m√°ximo
1.200
bytes
direcci√≥n
host
destino
capa
transporte
capa
red
garantiza
entrega
seg-
mento
capa
transporte
host
destino
Suponga
host
destino
ejecutarse
procesos
aplicaciones
red
a.
Dise√±e
protocolo
capa
transporte
simple
entregue
datos
aplicaci√≥n
proceso
deseado
host
destino
Suponga
sis-
tema
operativo
host
destino
asignado
n√∫mero
puerto
bytes
proceso
aplicaci√≥n
ejecuci√≥n
b.
Modifique
protocolo
proporcione
direcci√≥n
retorno
proceso
destino
c.
protocolos
capa
transporte
n√∫cleo
red
computadoras
R2
Imagine
sociedad
mundo
perteneciera
familia
miembros
familias
vivieran
casa
casa
tuviera
direc-
ci√≥n
√∫nica
persona
casa
tuviera
nombre
√∫nico
Imagine
sociedad
dispone
servicio
correos
transporta
cartas
vivienda
origen
vivienda
destino
servicio
correos
requiere
carta
introduzca
ii
direcci√≥n
casa
destino
est√©
claramente
escrita
Suponga
familia
delegado
asignada
tarea
recoger
distribuir
cartas
res-
tantes
miembros
familia
cartas
necesariamente
proporcionan
indica-
ci√≥n
acerca
destinatarios
a.
Partiendo
soluci√≥n
Problema
R1
describa
protocolo
delegado
familia
utilizar
entregar
cartas
miembro
familia
emisora
miembro
familia
receptora
b.
protocolo
servicio
correos
abrir
examinar
carta
proporcionar
servicio
R3
Considere
conexi√≥n
TCP
host
host
B.
Suponga
segmentos
TCP
viajan
host
host
n√∫mero
puerto
origen
n√∫mero
puerto
destino
y.
n√∫meros
puerto
origen
des-
tino
segmentos
viajan
host
host
280
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
280R4
Describa
desarrollador
aplicaciones
decidir
ejecutar
aplica-
ci√≥n
UDP
lugar
TCP
R5
raz√≥n
tr√°fico
voz
v√≠deo
suele
enviarse
TCP
lugar
UDP
Internet
Sugerencia
respuesta
buscando
mecanismo
control
congesti√≥n
TCP
R6
aplicaci√≥n
disfrute
transferencia
datos
fiable
ejecuta
UDP
caso
afirmativo
explique
R7
proceso
host
socket
UDP
n√∫mero
puerto
6789
Suponga
hosts
env√≠an
segmento
UDP
host
n√∫mero
puerto
destino
6789
dirigidos
segmentos
socket
host
caso
afirmativo
sabr√°
proceso
host
segmentos
proceden
hosts
distintos
R8
Suponga
servidor
web
ejecuta
puerto
80
host
C.
Suponga
servidor
web
utiliza
conexiones
persistentes
actualmente
reci-
biendo
solicitudes
hosts
B.
enviadas
solicitudes
socket
host
pasadas
sockets
utilizan
sockets
puerto
80
Explique
justifique
respuesta
SECCI√ìN
3.4
R9
protocolos
rdt
estudiados
necesit√°bamos
introducir
n√∫meros
secuencia
R10
protocolos
rdt
estudiados
necesit√°bamos
introducir
temporizadores
R11
Suponga
retardo
ida
vuelta
emisor
receptor
constante
conocido
emisor
necesitar√≠a
caso
temporizador
protocolo
rdt3.0
suponiendo
paquetes
perderse
Explique
respuesta
R12
Visite
applet
Java
Go-Back-N
sitio
web
libro
a.
Haga
emisor
env√≠e
paquetes
detenga
animaci√≥n
cualquiera
paquetes
alcance
destino
continuaci√≥n
elimine
pri-
mer
paquete
reanude
animaci√≥n
Describa
ocurre
b.
Repita
experimento
deje
paquete
alcance
destino
elimine
paquete
reconocimiento
Describa
ocurre
c.
terminar
pruebe
enviar
paquetes
ocurre
R13
Repita
problema
R12
utilizando
applet
Java
repetici√≥n
selec-
tiva
SR
diferencian
protocolos
SR
GBN
SECCI√ìN
3.5
R14
falso
a.
host
enviando
host
archivo
tama√±o
cone-
xi√≥n
TCP
Suponga
host
datos
enviar
host
A.
host
enviar√°
paquetes
reconocimiento
host
host
superpo-
ner
reconocimientos
datos
PROBLEMAS
CUESTIONES
REPASO
281
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
281b
tama√±o
ventana
recepci√≥n
TCP
var√≠a
dura
cone-
xi√≥n
c.
Suponga
host
enviando
host
archivo
tama√±o
conexi√≥n
TCP
n√∫mero
bytes
reconocidos
env√≠a
exceder
tama√±o
buffer
receptor
d.
Suponga
host
enviando
host
archivo
tama√±o
conexi√≥n
TCP
n√∫mero
secuencia
segmento
conexi√≥n
n√∫mero
secuencia
segmento
necesariamente
e.
segmento
TCP
contiene
campo
cabecera
VentanaRecepcion
f.
Suponga
RTTMuestraen
conexi√≥n
TCP
valor
actual
IntervaloFinDeTemporizaci√≥n
conexi√≥n
necesa-
riamente
g.
Suponga
host
env√≠a
host
segmento
n√∫mero
secuencia
38
bytes
datos
conexi√≥n
TCP
segmento
n√∫mero
reconocimiento
necesariamente
42
R15
Suponga
host
env√≠a
segmentos
TCP
seguidos
host
conexi√≥n
TCP
segmento
n√∫mero
secuencia
90
n√∫mero
secuencia
110
a.
datos
segmento
b.
Suponga
segmento
pierde
llega
B.
paquete
reconocimiento
host
env√≠a
host
n√∫mero
reconoci-
miento
R16
Considere
ejemplo
conexi√≥n
Telnet
Secci√≥n
3.5
segundos
usuario
escriba
letra
escribe
letra
escribir
letra
segmentos
env√≠an
valores
almacenan
campos
n√∫mero
secuencia
n√∫mero
reconocimiento
segmentos
SECCI√ìN
3.7
R17
Suponga
conexiones
TCP
enlace
cuello
botella
velocidad
bps
Ambas
conexiones
enviar
archivo
tama√±o
direcci√≥n
enlace
cuello
botella
transmi-
siones
archivos
inician
instante
velocidad
transmisi√≥n
proporcionar
TCP
conexiones
R18
falso
control
congesti√≥n
TCP
temporizador
emisor
caduca
valor
umbralse
mitad
valor
Problemas
P1
Suponga
cliente
inicia
sesi√≥n
Telnet
servidor
S.
instante
cliente
inicia
sesi√≥n
Telnet
servidor
S.
Proporcione
posibles
n√∫meros
puerto
origen
destino
282
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
282a
segmentos
enviados
S.
b.
segmentos
enviados
S.
c.
segmentos
enviados
A.
d.
segmento
enviados
B.
e.
hosts
n√∫mero
puerto
origen
segmentos
segmentos
f.
ocurre
host
P2
Considere
Figura
3.5
valores
puertos
origen
destino
segmentos
fluyen
servidor
vuelta
procesos
cliente
Cu√°-
direcciones
IP
datagramas
capa
red
transportan
seg-
mentos
capa
transporte
P3
UDP
TCP
utilizan
complemento
calcular
sumas
comprobaci√≥n
Suponga
bytes
bits
siguientes
01010011
01010100
01110100
complemento
suma
bytes
Observe
UDP
TCP
utilizan
palabras
16
bits
calcular
suma
comprobaci√≥n
pro-
blema
pedimos
considere
sumas
bits
Explique
funciona
UDP
utiliza
complemento
suma
simplemente
emplea
suma
esquema
complemento
detecta
receptor
errores
error
bit
detectado
ocurre
bits
err√≥neos
P4
a.
Suponga
bytes
siguientes
01011100
01010110
com-
plemento
suma
bytes
b.
Suponga
bytes
siguientes
11011010
00110110
com-
plemento
suma
bytes
c.
bytes
apartado
proporcione
ejemplo
bit
cambie
valor
bytes
complemento
var√≠e
P5
Suponga
receptor
UDP
calcula
suma
comprobaci√≥n
Internet
segmento
UDP
recibido
comprueba
corresponde
valor
almacenado
campo
suma
comprobaci√≥n
receptor
completamente
seguro
bit
err√≥neo
Explique
respuesta
P6
Recuerde
motivo
corregir
protocolo
rdt2.1
Demuestre
receptor
mos-
trado
Figura
3.57
emisor
mostrado
Figura
3.11
llegar
entrar
bloqueo
est√©
esperando
produzca
suceso
ocurrir√°
P7
protocolo
rdt3.0
paquetes
ACK
fluyen
receptor
emisor
tie-
nen
n√∫meros
secuencia
campo
ACK
contiene
n√∫mero
secuencia
paquete
reconociendo
paquetes
ACK
requieren
n√∫meros
secuencia
P8
Dibuje
m√°quina
finitos
correspondiente
receptor
protocolo
rdt3.0
PROBLEMAS
283
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
283P9
Dibuje
esquema
muestre
operaci√≥n
protocolo
rdt3.0cuando
paque-
tes
datos
paquetes
reconocimiento
corrompidos
Utilice
esquema
similar
mostrado
Figura
3.16
P10
canal
perder
paquetes
conoce
retardo
m√°ximo
Modifique
protocolo
rdt2.1
incluir
fines
temporizaci√≥n
retrans-
misiones
emisor
Argumente
informal
protocolo
comunicarse
correctamente
canal
P11
emisor
rdt3.0
simplemente
ignora
realiza
acci√≥n
paquetes
recibidos
contienen
error
presentan
valor
err√≥neo
campo
n√∫mero
reconocimiento
acknum
paquete
reconoci-
miento
Suponga
tales
circunstancias
rdt3.0
simplemente
retransmite
paquete
datos
actual
Funcionar√≠a
condiciones
protocolo
Sugerencia
piense
ocurrir√≠a
hubiera
errores
bit
producen
p√©rdidas
paquetes
ocurrir
sucesos
prematuro
temporizaci√≥n
Consi-
dere
env√≠a
paquete
tiende
infinito
P12
Considere
protocolo
rdt
3.0
Dibuje
diagrama
muestre
cone-
xi√≥n
red
emisor
receptor
reordenar
mensajes
mensajes
propagan
f√≠sico
existente
emisor
receptor
reordenados
protocolo
bit
alternante
fun-
cionar√°
correctamente
aseg√∫rese
identificar
claramente
sentido
funcionar√°
correctamente
diagrama
colocar
emisor
izquierda
receptor
derecha
eje
tiempos
inferior
p√°gina
284
CAP√çTULO
CAPA
TRANSPORTE
Esperar
capa
inferior
rdt_recibir(pqtrcb
corrupto(pqtrcb)||
tiene_sec0(pqtrcb
calcular
sumacomprobacion
crear_paquete(pqtenv
NAK
sumacomprobacion
udt_enviar(pqtenv
rdt_recibir(pqtrcb
corrupto(pqtrcb)||
tiene_sec1(pqtrcb
calcular
sumacomprobacion
crear_paquete(pqtenv
NAK
sumacomprobacion
udt_enviar(pqtenv
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
tiene_sec1(pqtrcb
extraer(pqtrcb
datos
entregar_datos(datos
calcular
sumacomprobacion
crear_paquete(pqtenv
ACK
sumacomprobacion
udt_enviar(pqtenv
rdt_recibir(pqtrcb
nocorrupto(pqtrcb
tiene_sec0(pqtrcb
extraer(pqtrcb
datos
entregar_datos(datos
calcular
sumacomprobacion
crear_paquete(pqtenv
ACK
sumacomprobacion
udt_enviar(pqtenv
Esperar
capa
inferior
Figura
3.57
receptor
incorrecto
protocolo
rdt2.1
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
284y
deber√°
mostrar
intercambio
mensajes
datos
reconocimiento
olvide
indicar
n√∫mero
secuencia
asociado
segmento
datos
reconocimiento
P13
Considere
protocolo
transferencia
datos
fiable
utiliza
paquetes
reconocimiento
negativo
Imagine
emisor
env√≠a
datos
frecuen-
cia
preferible
protocolo
emplea
paquetes
NAK
utilice
paquetes
ACK
Suponga
emisor
datos
trans-
mitir
conexi√≥n
terminal
terminal
experimenta
p√©rdidas
caso
preferible
protocolo
emplee
paquetes
NAK
utilice
paquetes
ACK
P14
Considere
ejemplo
mostrado
Figura
3.17
tama√±o
ventana
tasa
utilizaci√≥n
canal
95
ciento
Suponga
tama√±o
paquete
1.500
bytes
incluyendo
campos
cabe-
cera
datos
P15
Suponga
aplicaci√≥n
utiliza
protocolo
rdt3.0
protocolo
capa
transporte
protocolo
parada
espera
tasa
utilizaci√≥n
canal
baja
demostrado
ejemplo
conexi√≥n
atraviesa
pa√≠s
costa
costa
dise√±adores
aplicaci√≥n
permiten
receptor
devolver
serie
ACK
ACK
alternantes
correspondientes
datos
llegado
receptor
Deber√≠a
dise√±o
aumentar
tasa
utilizaci√≥n
canal
problema
potencial
t√©cnica
Explique
respuesta
P16
protocolo
SR
gen√©rico
estudiado
Secci√≥n
3.4.4
emisor
trans-
mite
mensaje
disponible
ventana
esperar
recibir
paquete
reconocimiento
Suponga
deseamos
dis-
protocolo
SR
env√≠e
mensajes
emisor
enviar√°
pareja
mensajes
enviar√°
pareja
mensajes
sepa
mensajes
pareja
recibido
correctamente
Suponga
canal
perder
mensajes
corromperlos
reorde-
narlos
Dise√±e
protocolo
control
errores
servicio
transferencia
mensajes
fiable
unidireccional
Proporcione
descripci√≥n
m√°quinas
finitos
emisor
receptor
Describa
formato
paquetes
inter-
cambiados
emisor
receptor
utiliza
llamada
procedimiento
dis-
tinta
empleadas
Secci√≥n
3.4
ejemplo
udt_enviar
iniciar
temporizador
rdt_recibir
etc.
defina
claramente
acciones
reali-
zan
Proporcione
ejemplo
gr√°fica
temporal
emisor
receptor
muestre
protocolo
recupera
p√©rdida
paquetes
P17
Considere
escenario
host
desea
enviar
simult√°neamente
paquetes
hosts
C.
host
conectado
canal
multidifusi√≥n
broadcast
paquete
enviado
transportado
canal
Suponga
canal
multidifusi√≥n
conecta
perder
corromper
independiente
paquetes
ocurrir
ejemplo
paquete
enviado
llegue
correctamente
Dise√±e
protocolo
control
errores
similar
protocolo
parada
espera
permita
PROBLEMAS
285
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
285transferir
paquetes
forma
fiable
obtendr√°
datos
capa
superior
separa
recibido
correcta-
mente
paquete
actual
Proporcione
descripciones
m√°quinas
finitos
C.
Sugerencia
FSM
pr√°cticamente
C.
Proporcione
descripci√≥n
formato
formatos
paquete
utilizados
P18
Considere
escenario
host
host
desean
enviar
mensajes
host
C.
hosts
conectados
canal
perder
corromper
reordenar
mensajes
hosts
conectados
canal
independiente
canal
conecta
propiedades
capa
transporte
host
alternar
entrega
mensajes
pasar
capa
superior
entrega
datos
paquete
datos
paquete
sucesivamente
Dise√±e
protocolo
control
errores
tipo
parada
espera
transferir
forma
fiable
paque-
tes
entrega
alternante
host
descrito
ante-
riormente
Proporcione
descripciones
FSM
C.
Sugerencia
FSM
pr√°cticamente
A.
Proporcione
descripci√≥n
formato
formatos
paquete
utilizados
P19
protocolo
GBN
ventana
emisor
rango
n√∫meros
secuencia
1.024
Suponga
instante
paquete
orden
receptor
esperando
n√∫mero
secuencia
k.
Suponga
transmisi√≥n
reordena
mensajes
Responda
siguientes
cuestiones
a.
posibles
conjuntos
n√∫meros
secuencia
den-
tro
ventana
emisor
instante
Justifique
respuesta
b.
valores
posibles
campo
ACK
posibles
men-
sajes
actualmente
propag√°ndose
vuelta
emisor
instante
Jus-
tifique
respuesta
P20
Suponga
entidades
red
B.
enviar
conjunto
mensajes
datos
cumpliendo
siguientes
convenios
recibe
soli-
citud
capa
superior
obtener
mensaje
datos
enviar
mensaje
solicitud
canal
B.
recibe
mensaje
devolver
mensaje
datos
canal
A.
entregar
exactamente
copia
mensaje
capa
superior
mensajes
perder
corromper
canal
mensajes
enviados
correctamente
entregados
retardo
canales
desconocido
variable
Dise√±e
proporcione
descripci√≥n
FSM
protocolo
incorpore
mecanismos
apropiados
compensar
p√©rdidas
canal
implemente
paso
mensajes
capa
superior
entidad
explicado
ante-
riormente
Utilice
mecanismos
absolutamente
necesarios
P21
Considere
protocolos
GBN
SR
Suponga
tama√±o
espacio
n√∫meros
secuencia
k.
m√°xima
entana
emisor
permitida
evitar√°
ocurrencia
problemas
indicados
Figura
3.27
protocolos
286
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
286P22
Responda
falso
siguientes
preguntas
justifique
brevemente
res-
puestas
a.
protocolo
SR
emisor
recibir
ACK
paquete
ventana
actual
b.
GBN
emisor
recibir
ACK
paquete
ventana
actual
c.
protocolo
bit
alternante
protocolo
SR
tama√±o
ventana
emisor
receptor
d.
protocolo
bit
alternante
protocolo
GBN
tama√±o
ventana
emisor
receptor
P23
aplicaci√≥n
elegir
UDP
protocolo
transporte
por-
UDP
ofrece
aplicaci√≥n
grado
control
TCP
relativo
datos
env√≠an
segmento
a.
aplicaci√≥n
control
datos
env√≠an
segmento
b.
aplicaci√≥n
control
env√≠a
segmento
P24
desea
transferir
archivo
tama√±o
bytes
host
host
B.
Suponga
MSS
536
bytes
a.
valor
m√°ximo
n√∫meros
secuencia
TCP
ago-
ten
Recuerde
campo
n√∫mero
secuencia
TCP
bytes
b.
valor
obtenido
apartado
calcule
tiempo
tarda
transmitirse
archivo
Suponga
segmento
a√±ade
66
bytes
cabecera
capa
transporte
red
enlace
datos
enviar
paquete
resultante
enlace
155
Mbps
Ignore
control
flujo
control
congesti√≥n
bombear
segmentos
seguidos
forma
continuada
P25
hosts
comunic√°ndose
conexi√≥n
TCP
host
recibido
bytes
byte
126
Suponga
continuaci√≥n
host
env√≠a
segmentos
seguidos
host
B.
segmentos
contienen
respectivamente
70
50
bytes
datos
segmento
n√∫mero
secuen-
cia
127
n√∫mero
puerto
origen
302
n√∫mero
puerto
destino
80
host
env√≠a
paquete
reconocimiento
recibe
segmento
host
A.
a.
segmento
enviado
host
n√∫mero
secuen-
cia
n√∫mero
puerto
origen
n√∫mero
puerto
destino
b.
segmento
llega
segmento
n√∫mero
reconocimiento
n√∫mero
puerto
origen
n√∫mero
puerto
destino
ACK
correspondiente
segmento
c.
segmento
llega
n√∫mero
recono-
cimiento
ACK
correspondiente
segmento
d.
Suponga
segmentos
enviados
llegan
orden
B.
paquete
reconocimiento
pierde
llega
transcurrido
intervalo
temporizaci√≥n
Dibuje
diagrama
temporizaci√≥n
PROBLEMAS
287
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
287muestre
segmentos
restantes
segmentos
paquetes
reconoci-
miento
enviados
Suponga
producen
p√©rdidas
paquetes
adicionales
segmentos
incluya
diagrama
especifique
n√∫mero
secuencia
n√∫mero
bytes
datos
paquetes
reco-
nocimiento
a√±ada
proporcione
n√∫mero
reconocimiento
P26
hosts
directamente
conectados
enlace
100
Mbps
conexi√≥n
TCP
hosts
host
transfiriendo
host
archivo
tama√±o
conexi√≥n
host
enviar
datos
capa
aplicaci√≥n
socket
TCP
velocidad
alta
120
Mbps
host
leer
datos
almacenados
buffer
recepci√≥n
TCP
velocidad
m√°xima
60
Mbps
Describa
efecto
control
flujo
TCP
P27
Secci√≥n
3.5.6
estudiado
cookies
SYN
a.
necesario
servidor
utilice
n√∫mero
secuencia
inicial
espe-
cial
SYNACK
b.
Suponga
atacante
host
objetivo
utiliza
cookies
SYN
atacante
crear
conexiones
semi-abiertas
completamente
abiertas
enviando
sim-
plemente
paquete
ACK
host
objetivo
c.
Suponga
atacante
recopila
cantidad
n√∫meros
secuencia
ini-
ciales
enviados
servidor
atacante
servidor
cree
conexiones
completamente
abiertas
enviando
paquetes
ACK
n√∫meros
secuencia
iniciales
P28
Considere
red
mostrada
escenario
Secci√≥n
3.6.1
Suponga
hosts
emisores
definidos
valores
temporizaci√≥n
fijos
a.
Demuestre
aumentar
tama√±o
buffer
finito
router
llegar
reduzca
tasa
transferencia
/H9261out
b.
Suponga
hosts
ajustan
din√°micamente
valores
tempo-
rizaci√≥n
TCP
bas√°ndose
retardo
buffer
router
Incre-
mentar
tama√±o
buffer
ayudar√≠a
incrementar
tasa
transferencia
P29
Considere
procedimiento
TCP
estimar
RTT
Suponga
/H9251=
0,1
RTT-
Muestra1
muestra
RTT
reciente
RTTMuestra2
muestra
RTT
reciente
sucesivamente
a.
conexi√≥n
TCP
determinada
suponga
devueltos
paquetes
reconocimiento
correspondientes
muestras
RTT
RTTMues-
tra4
RTTMuestra3
RTTMuestra2
RTTMuestra1
Exprese
RTTEstimado
funci√≥n
muestras
RTT
b.
Generalize
f√≥rmula
muestras
RTT
c.
f√≥rmula
apartado
considere
tiende
infinito
Explique
procedimiento
c√°lculo
promedio
conoce
media
m√≥vil
exponen-
cial
288
CAP√çTULO
CAPA
TRANSPORTE
P30
Secci√≥n
3.5.3
estudiado
estimaci√≥n
RTT
TCP
cree
TCP
evita
medir
RTTMuestrapara
segmentos
retransmitidos
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
288P31
relaci√≥n
variable
EnviarBase
Secci√≥n
3.5.4
variable
UltimoByteRecibidode
Secci√≥n
3.5.5
P32
relaci√≥n
variable
UltimoByteRecibido
Secci√≥n
3.5.5
variable
yde
Secci√≥n
3.5.4
P33
Secci√≥n
3.5.4
visto
TCP
espera
recibido
ACK
dupli-
cados
retransmisi√≥n
r√°pida
cree
dise√±adores
TCP
decidido
retransmisi√≥n
r√°pida
recibir
ACK
duplicado
correspondiente
segmento
P34
Compare
GBN
SR
TCP
paquetes
ACK
retardados
Suponga
valores
temporizaci√≥n
protocolos
suficientemente
segmentos
datos
consecutivos
correspondientes
ACK
puedan
reci-
bidos
producen
p√©rdidas
canal
host
receptor
host
host
emisor
host
host
respectivamente
Suponga
host
env√≠a
segmentos
datos
host
segmento
enviado
pierde
segmentos
datos
recibidos
correctamente
host
B.
a.
segmentos
enviado
host
ACK
enviado
host
n√∫meros
secuencia
Responda
pregunta
protocolos
b.
valores
temporizaci√≥n
protocolos
mayores
RTT
protocolo
entregar√°
correctamente
segmentos
datos
menor
intervalo
tiempo
P35
descripci√≥n
TCP
Figura
3.53
valor
umbral
define
umbral
VentanaCongestion/2
sitios
valor
umbral
mitad
tama√±o
ventana
produce
suceso
p√©rdida
velocidad
emisor
transmitiendo
produce
suceso
p√©rdida
VentanaCongestion
segmentos
RTT
Explique
respuesta
respuesta
sugerir
forma
fijar
valor
umbral
P36
Considere
Figura
3.46(b
/H9261
H11032
in
aumenta
R/2
/H9261out
incremen-
tarse
R/3
Explique
respuesta
Considere
Figura
3.46(c
/H9261
H11032
in
aumenta
R/2
/H9261out
aumentar
R/4
suponiendo
paquete
reenviado
media
router
receptor
Explique
respuesta
P37
Considere
Figura
3.58
Suponiendo
TCP
Reno
protocolo
presenta
comportamiento
mostrado
figura
responda
siguientes
preguntas
casos
deber√°
proporcio-
nar
explicaci√≥n
justifique
respuesta
a.
Identifique
intervalos
tiempo
TCP
operando
arranque
lento
b.
Identifique
intervalos
tiempo
TCP
operando
evi-
taci√≥n
congesti√≥n
PROBLEMAS
289
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
289c
ciclo
transmisi√≥n
16
detecta
p√©rdida
segmento
ACK
duplicados
temporizaci√≥n
d.
ciclo
transmisi√≥n
22
detecta
p√©rdida
segmento
ACK
duplicados
temporizaci√≥n
e.
valor
inicial
umbralen
ciclo
transmisi√≥n
f.
valor
umbraltranscurridos
18
ciclos
transmisi√≥n
g.
valor
umbraltranscurridos
24
ciclos
transmisi√≥n
h.
ciclo
transmisi√≥n
env√≠a
segmento
70
i.
Suponiendo
detecta
p√©rdida
paquete
ciclo
transmisi√≥n
26
causa
recepci√≥n
triple
ACK
duplicado
valores
tama√±o
ventana
congesti√≥n
umbral
j.
Suponga
utiliza
TCP
Tahoe
lugar
TCP
Reno
recibido
triples
ACK
duplicados
ciclo
transmisi√≥n
16
valores
tama√±o
ventana
congesti√≥n
umbralen
ciclo
transmisi√≥n
19
k.
Suponga
utiliza
TCP
Tahoe
produce
suceso
temporizaci√≥n
ciclo
transmisi√≥n
22
paquetes
enviados
ciclos
transmisi√≥n
17
22
inclusive
P38
Utilice
Figura
3.56
ilustra
convergencia
algoritmo
AIMD
TCP
Suponga
lugar
decrecimiento
multiplicativo
TCP
disminuye
tama√±o
ventana
cantidad
constante
Converger√≠a
algoritmo
AIAD
resultante
algoritmo
cuota
equitativa
Justifique
respuesta
utilizando
diagrama
similar
Figura
3.56
P39
Secci√≥n
3.5.4
explicado
intervalo
temporizaci√≥n
duplica
suceso
temporizaci√≥n
mecanismos
forma
290
CAP√çTULO
CAPA
TRANSPORTE
10
12
Ciclo
transmisi√≥n
14
16
18
20
22
24
26
10
15
20
25
Tama√±o
ventana
congesti√≥n
segmentos
30
35
40
45
Figura
3.58
Tama√±o
ventana
TCP
funci√≥n
tiempo
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
290de
control
congesti√≥n
TCP
necesita
mecanismo
control
conges-
ti√≥n
basado
ventana
estudiado
Secci√≥n
3.7
mecanismo
duplicaci√≥n
intervalo
temporizaci√≥n
P40
host
enviando
archivo
tama√±o
host
conexi√≥n
TCP
conexi√≥n
pierden
paquetes
temporizadores
cadu-
can
velocidad
transmisi√≥n
enlace
conecta
host
Internet
bps
Suponga
proceso
host
capaz
enviar
datos
socket
TCP
velocidad
bps
10
R.
Suponga
buffer
recepci√≥n
TCP
suficientemente
almacenar
archivo
completo
buffer
emisor
almacenar
porcentaje
archivo
impide
proceso
host
pasar
datos
forma
continua
socket
TCP
velocidad
bps
mecanismo
control
flujo
TCP
mecanismo
control
congesti√≥n
TCP
cosa
Razone
respuesta
P41
env√≠a
archivo
tama√±o
host
conexi√≥n
TCP
p√©rdidas
a.
Suponga
TCP
utiliza
algoritmo
AIMD
control
congesti√≥n
fase
arranque
lento
Suponiendo
VentanaCongestion
aumenta
MSS
recibe
lote
paquetes
ACK
suponiendo
intervalos
RTT
constantes
tiempo
tarda
VentanaCongestion
aumentar
MSS
11
MSS
producen
sucesos
p√©rdida
paquetes
b.
tasa
transferencia
media
funci√≥n
MSS
RTT
cone-
xi√≥n
llegar
periodo
RTT
n√∫mero
P42
Recuerde
descripci√≥n
macrosc√≥pica
tasa
transferencia
TCP
periodo
tiempo
velocidad
conexi√≥n
var√≠a
W/(2
RTT
RTT
pierde
paquete
justo
periodo
a.
Demuestre
tasa
p√©rdidas
fracci√≥n
paquetes
perdidos
b.
Utilice
resultado
demostrar
conexi√≥n
tasa
p√©rdidas
tasa
promedio
P43
Considere
√∫nica
conexi√≥n
TCP
Reno
emplea
enlace
10Mbps
almacena
buffer
dato
Suponga
enlace
√∫nico
enlace
conges-
tionado
hosts
emisor
receptor
Suponga
emisor
TCP
enviar
receptor
archivo
tama√±o
buffer
recepci√≥n
receptor
ventana
congesti√≥n
Haremos
siguientes
suposiciones
tama√±o
segmento
TCP
1.500
bytes
retardo
propagaci√≥n
ida
vuelta
conexi√≥n
100
milisegundos
cone-
xi√≥n
TCP
fase
evitaci√≥n
congesti√≥n
igno-
ramos
fase
arranque
lento
 1
22
MSS
RTT
WW
tasa
p√©rdidas
PROBLEMAS
291
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
291a
tama√±o
m√°ximo
ventana
segmentos
conexi√≥n
TCP
alcanzar
b.
tama√±o
ventana
segmentos
tasa
transferencia
media
bps
conexi√≥n
TCP
c.
tiempo
tarda
conexi√≥n
TCP
alcanzar
tama√±o
ven-
tana
m√°ximo
recuperarse
p√©rdida
paquete
P44
Continuando
escenario
descrito
problema
suponga
enlace
10Mbps
almacenar
buffer
n√∫mero
finito
segmentos
Razone
enlace
est√©
ocupado
enviando
datos
deber√≠amos
seleccionar
tama√±o
buffer
producto
velocidad
enlace
retardo
propagaci√≥n
ida
vuelta
emisor
receptor
P45
Repita
Problema
43
sustituyendo
enlace
10
Mbps
enlace
10
Gbps
Observe
respuesta
apartado
demostrado
tarda
tiempo
tama√±o
ventana
congesti√≥n
alcance
m√°ximo
des-
pu√©s
recuperarse
p√©rdida
paquete
Dise√±e
soluci√≥n
resuelva
problema
P46
medido
RTT
intervalo
tiempo
conexi√≥n
TCP
tarda
aumen-
tar
tama√±o
ventana
congesti√≥n
W/2
tama√±o
m√°ximo
ventana
congesti√≥n
Demuestre
funci√≥n
tasa
transferen-
cia
media
TCP
P47
Considere
algoritmo
AIMD
TCP
simplificado
tama√±o
ventana
congesti√≥n
mide
n√∫mero
segmentos
bytes
fase
incremento
aditivo
tama√±o
ventana
congesti√≥n
incrementa
segmento
RTT
fase
decrecimiento
multiplicativo
tama√±o
ventana
conges-
ti√≥n
reduce
mitad
resultado
entero
redondee
entero
Suponga
conexiones
TCP
C1
C2
comparten
enlace
congestio-
nado
cuya
velocidad
30
segmentos
Suponemos
C2
fase
evitaci√≥n
congesti√≥n
intervalo
RTT
conexi√≥n
1es
100
milisegundos
conexi√≥n
C2
200
milisegundos
Supone-
mos
velocidad
datos
enlace
excede
velocidad
enlace
conexiones
TCP
experimentan
p√©rdidas
segmentos
datos
a.
instante
t0
tama√±o
ventana
congesti√≥n
ambas
conexiones
C2
10
segmentos
tama√±os
dichas
ventanas
conges-
ti√≥n
transcurridos
2200
milisegundos
b.
Obtendr√°n
conexiones
plazo
cuota
ancho
banda
enlace
congestionado
Explique
respuesta
P48
Contin√∫e
red
descrita
problema
suponga
conexiones
TCP
C1
C2
intervalo
RTT
100
milisegundos
Suponga
instante
tama√±o
ventana
congesti√≥n
C1
15
segmentos
tama√±o
ventana
congesti√≥n
C2
10
segmentos
a.
tama√±os
ventanas
congesti√≥n
transcurridos
2200
milisegundos
292
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
292b
Obtendr√°n
conexiones
plazo
cuota
ancho
banda
enlace
congestionado
c.
Decimos
conexiones
sincronizadas
ambas
conexiones
alcanzan
tama√±o
ventana
m√°ximo
tiempo
alcanzan
tama√±o
m√≠nimo
ventana
tiempo
Terminar√°n
tiempo
sincroniz√°ndose
conexiones
caso
afirmativo
tama√±os
m√°ximos
ventana
d.
Ayudar√°
sincronizaci√≥n
mejorar
tasa
utilizaci√≥n
enlace
compar-
tido
Esboce
idea
evitar
sincronizaci√≥n
P49
Veamos
modificaci√≥n
algoritmo
control
congesti√≥n
TCP
lugar
utilizar
incremento
aditivo
emplear
incremento
multiplicativo
emisor
TCP
incrementa
tama√±o
ventana
constante
peque√±a
positiva
recibe
ACK
v√°lido
Halle
relaci√≥n
funcional
existente
tasa
p√©rdidas
tama√±o
m√°ximo
ventana
congesti√≥n
W.
Demuestre
conexi√≥n
TCP
modificada
independientemente
tasa
media
transferencia
TCP
conexi√≥n
TCP
invierte
cantidad
tiempo
incrementar
tama√±o
ventana
congesti√≥n
W/2
W.
P50
exposici√≥n
futuro
TCP
Secci√≥n
3.7
destacado
alcanzar
tasa
transferencia
10
Gbps
TCP
tolerar
proba-
bilidad
p√©rdida
segmentos
10
-10
equivalente
suceso
p√©rdida
5.000.000.000
segmentos
Indique
obtienen
valores
10
-10
5.000.000
valores
RTT
MSS
dados
Secci√≥n
3.7
TCP
tuviera
soporte
conexi√≥n
100
Gbps
tasa
p√©rdidas
tolerable
P51
exposici√≥n
control
congesti√≥n
TCP
Secci√≥n
3.7
impl√≠-
citamente
emisor
TCP
datos
enviar
Consi-
deremos
caso
emisor
TCP
env√≠a
cantidad
datos
instante
t1
queda
inactivo
puesto
datos
enviar
TCP
permanece
inactivo
periodo
tiempo
relativamente
instante
t2
enviar
datos
ventajas
desventajas
TCP
tengan
utilizar
valores
VentanaCongestion
umbral
t1
comienza
enviar
datos
instante
t2
alternativa
recomendar√≠a
P52
problema
investigar
UDP
TCP
proporcionan
grado
autenticaci√≥n
punto
terminal
a.
Considere
servidor
recibe
solicitud
paquete
UDP
res-
ponde
paquete
UDP
ejemplo
caso
servidor
DNS
cliente
direcci√≥n
IP
suplanta
direcci√≥n
direcci√≥n
enviar√°
servidor
respuesta
b.
Suponga
servidor
recibe
SYN
direcci√≥n
IP
origen
responder
SYNACK
recibe
ACK
direcci√≥n
IP
origen
n√∫mero
reconocimiento
correcto
Suponiendo
servidor
elige
n√∫mero
secuencia
inicial
aleatorio
atacante
interpuesto
man-in-the-middle
servidor
seguro
cliente
direcci√≥n
direcci√≥n
est√©
intentando
suplantar
PROBLEMAS
293
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
293P53
problema
considerar
retardo
introducido
fase
arranque
lento
TCP
cliente
servidor
web
directamente
conectados
enlace
velocidad
R.
Suponga
cliente
desea
extraer
objeto
cuyo
tama√±o
exactamente
15
tama√±o
m√°ximo
segmento
MSS
RTT
tiempo
transmisi√≥n
ida
vuelta
cliente
servidor
suponemos
constante
Ignorando
cabeceras
protocolo
determine
tiempo
necesa-
rio
recuperar
objeto
incluyendo
tiempo
establecimiento
conexi√≥n
TCP
a.
RTT
2S
b.
RTT
c.
RTT
Preguntas
discusi√≥n
D1
secuestro
conexi√≥n
TCP
D2
Secci√≥n
3.7
aplicaci√≥n
cliente-servidor
crear
forma
equitativa
conexiones
simult√°neas
paralelo
Internet
realmente
red
equitativa
D3
Consulte
literatura
investigaci√≥n
refiere
concepto
orientado
TCP
TCP
friendly
Lea
entrevista
Sally
Floyd
cap√≠tulo
Describa
p√°gina
concepto
orientaci√≥n
TCP
D4
Secci√≥n
3.7.1
abordado
aplicaci√≥n
abrir
conexiones
TCP
tasa
transferencia
alta
velocidad
transferencia
datos
r√°pida
ocurrir√≠a
aplicaciones
intentaran
mejorar
rendimiento
utilizando
conexiones
dificultades
derivadas
elemento
red
determine
aplicaci√≥n
utilizando
conexiones
TCP
D5
exploraci√≥n
puertos
TCP
UDP
funcionalidad
dispone
nmap
Recopile
trazas
intercambios
paquetes
nmap
Ethereal
analizador
paquetes
sniffer
Utilice
trazas
explicar
operan
funcionalidades
avanzadas
D6
descripci√≥n
TCP
proporcionada
Figura
3.53
valor
inicial
Venta-
naCongestiones
Consulte
libros
disponibles
RFC
Internet
comente
t√©cnicas
alternativas
propuesto
establecer
valor
ini-
cial
VentanaCongestion
D7
Consulte
documentaci√≥n
disponible
SCTP
RFC
2960
RFC
3286
aplicaciones
dise√±adores
prev√©n
SCTP
funcionalidades
SCTP
a√±adieron
satisfacer
necesidades
aplicaciones
294
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
294Tareas
programaci√≥n
Implementaci√≥n
protocolo
transporte
fiable
tarea
programaci√≥n
escribir
c√≥digo
capa
transporte
emisor
receptor
implementar
protocolo
transferencia
datos
fiable
simple
disponibles
versiones
pr√°ctica
laboratorio
versi√≥n
proto-
colo
bit
alternante
versi√≥n
protocolo
GBN
pr√°ctica
laboratorio
resul-
tar√°
entretenida
implementaci√≥n
diferir√°
necesita
situaci√≥n
real
Puesto
probablemente
dispone
m√°quinas
aut√≥nomas
sistema
opera-
tivo
modificar
c√≥digo
ejecutarse
entorno
simulado
hard-
ware
software
interfaz
programaci√≥n
proporcionada
rutinas
c√≥digo
efectuar√°
llamadas
entidades
capas
superior
inferior
similar
utiliza
entorno
UNIX
real
interfaces
soft-
ware
descritas
tarea
programaci√≥n
realistas
emisores
receptores
bucles
infinitos
describen
textos
simula
arranque
detenci√≥n
temporizadores
interrupciones
temporizadores
har√°n
active
rutina
tratamiento
temporizadores
tarea
completa
laboratorio
c√≥digo
compilar
c√≥digo
disponible
sitio
web
libro
http://www.awl.com/kurose-ross
Pr√°ctica
laboratorio
Wireshark
exploraci√≥n
TCP
pr√°ctica
laboratorio
utilizar
navegador
web
acceder
archivo
almacenado
servidor
web
pr√°cticas
laboratorio
Wires-
hark
anteriores
utilizar
Wireshark
capturar
paquetes
lleguen
computadora
diferencia
pr√°cticas
anteriores
descargar
traza
paquetes
Wireshark
leer
servidor
web
descargado
archivo
traza
servidor
encontrar√°
paquetes
generados
causa
acceso
servidor
web
Analizar√°
trazas
cliente
servidor
explorar
aspectos
TCP
particular
evaluar
rendimiento
cone-
xi√≥n
TCP
computadora
servidor
web
trazar
comportamiento
ventana
TCP
inferir√°
p√©rdida
paquetes
retransmisiones
comportamiento
control
flujo
control
congesti√≥n
tiempo
ida
vuelta
estimado
resto
pr√°cticas
laboratorio
Wireshark
descripci√≥n
com-
pleta
pr√°ctica
disponible
sitio
web
libro
http://www.awl.com/kurose-
ross
TAREAS
PROGRAMACI√ìN
295
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
295Pr√°ctica
laboratorio
Wireshark
exploraci√≥n
UDP
corta
pr√°ctica
laboratorio
realizar√°
captura
an√°lisis
paquetes
aplicaci√≥n
favorita
utilice
UDP
ejemplo
DNS
aplicaci√≥n
multimedia
Skype
visto
Secci√≥n
3.3
UDP
protocolo
transporte
simple
pr√°ctica
laboratorio
investigar
campos
cabecera
segmento
UDP
c√°lculo
suma
comprobaci√≥n
pr√°cticas
laboratorio
Wireshark
descripci√≥n
completa
pr√°ctica
disponible
sitio
web
libro
http://www.awl.com/
kurose-ross
296
CAP√çTULO
CAPA
TRANSPORTE
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
296297
decidi√≥
estudiar
Ciencias
Computaci√≥n
obtener
grado
Sociolog√≠a
tuve
decidir
ganarme
vida
acab√©
obtenien-
do
certificado
estudios
a√±os
electr√≥nica
centro
local
formaci√≥n
pas√©
a√±os
trabajando
campo
electr√≥nica
inform√°tica
incluy√≥
a√±os
ingeniero
sistemas
computadoras
equipos
controlaban
trenes
Bay
Area
Rapid
Transit
decid√≠
aprender
inform√°tica
formal
curs√©
licenciatura
Departamento
Ciencias
Computaci√≥n
UC
Berkeley
decidi√≥
especializarse
redes
licenciatura
comenc√©
interesarme
inform√°tica
te√≥rica
trabaj√©
an√°li-
sis
probabil√≠stico
algoritmos
teor√≠a
computacional
aprendizaje
tra-
bajando
LBL
Lawrence
Berkeley
Laboratory
mes
despacho
pr√≥xima
Jacobson
trabajando
algoritmos
control
congesti√≥n
TCP
pregunt√≥
gustar√≠a
trabajar
verano
analizando
serie
algorit-
mos
problema
red
implicaba
sincronizaci√≥n
deseada
mensajes
peri√≥dicos
enrutamiento
pareci√≥
interesante
dediqu√©
verano
terminar
tesis
doctoral
ofreci√≥
trabajo
tiempo
completo
conti-
nuar
investigaciones
campo
redes
planeado
pasarme
tantos
a√±os
tra-
bajando
teme
redes
investigaci√≥n
campo
redes
gratifican-
inform√°tica
te√≥rica
siento
satisfecha
trabajando
mundo
ciencia
aplicada
consecuencias
trabajo
tangibles
trabajo
industria
inform√°tica
dedicaba
empleo
BART
Bay
Area
Rapid
Transit
1975
1982
trabajando
compu-
tadoras
controlan
trenes
BART
Comenc√©
t√©cnico
manteniendo
reparando
diver-
sos
sistemas
computadoras
distribuidos
implicados
control
sistema
BART
inclu√≠a
sistema
central
computadoras
sistema
distribuido
minicomputadoras
control
movimiento
trenes
sistema
computadoras
DEC
visualizaci√≥n
anuncios
destinos
trenes
paneles
nuncios
sistema
computadoras
Modcomp
recopilar
informaci√≥n
tornos
entrada
estaciones
a√±os
Sally
Floyd
Sally
Floyd
investigadora
Centro
ICSI
investigaci√≥n
Internet
instituto
dedicado
temas
Internet
comunicaci√≥n
red
conocida
sector
trabajos
dise√±o
protocolos
Internet
particular
relativos
comunicaciones
multicast
fiables
control
congesti√≥n
TCP
planificaci√≥n
paquetes
RED
an√°lisis
protocolos
Sally
gradu√≥
Sociolog√≠a
universidad
California
Berkeley
licenci√≥n
doctor√≥
Ciencias
Computaci√≥n
universidad
ENTREVISTA
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
297BART
pas√©
trabajando
proyecto
conjunto
BART
LBLpara
dise√±ar
sustituto
bastan-
antiguo
sistema
computadoras
control
trenes
BART
atractiva
trabajo
tarea
investigaci√≥n
atrae
problemas
investigaci√≥n
incluye
explorar
problemas
futuros
relacionados
control
congesti√≥n
aplicaciones
tales
flu-
jos
multimedia
tema
resolver
impedimentos
existentes
redes
implementar
comunicaci√≥n
expl√≠cita
routers
nodos
terminales
impedi-
mentos
incluir
t√∫neles
IP
rutas
MPLS
existencia
routers
equipos
intermedios
eliminan
paquetes
contienen
opciones
IP
existencia
redes
complejas
capa
potenciales
debilidades
posibles
ataques
red
tercer
tema
activo
consis-
explorar
elecci√≥n
modelos
escenarios
an√°lisis
simulaci√≥n
experi-
mentaci√≥n
afecta
evaluaci√≥n
rendimiento
mecanismos
control
congesti√≥n
encontrar
informaci√≥n
acerca
temas
p√°ginas
web
dedicadas
DCCP
Quick-
Start
TMRG
acceder
direcci√≥n
http://www.icir.org/floyd
prev√©
futuro
redes
Internet
posibilidad
congestiones
t√≠picas
tr√°fico
Internet
pasen
problem√°ticas
medida
ancho
banda
disponible
incremente
ritmo
r√°pi-
do
demanda
tendencia
preveo
nivel
congesti√≥n
severo
imposible
plazo
encontremos
futuro
congesti√≥n
creciente
ocasionales
colapsos
debidos
congesti√≥n
futuro
Internet
arquitectura
Internet
factores
contribuyen
r√°pida
evoluci√≥n
Internet
resulta
dif√≠cil
predecir
evoluci√≥n
red
arquitectura
red
predecir
evoluci√≥n
√©xito
hora
evitar
numerosos
problemas
potenciales
ir√°n
presentando
camino
tendencia
negativa
conocida
creciente
dificultad
cambios
arqui-
tectura
Internet
arquitectura
Internet
coherente
diversos
componentes
protocolos
transporte
mecanismos
enrutamiento
cortafuegos
equilibradores
carga
mecanismos
seguridad
etc.
ocasiones
trabajan
teniendo
objetivos
contrapuestos
personas
inspirado
profesionalmente
Richard
Karp
director
tesis
doctoral
ense√±o
fundamental
cabo
investigaci√≥n
Jacobson
jefe
grupo
LBL
responsable
desarrollara
inter√©s
redes
comprensi√≥n
acerca
infraestructura
Internet
Dave
Clark
servido
inspiraci√≥n
gracias
clara
visi√≥n
arquitectura
Internet
papel
desarrollo
arquitectura
investigaciones
escritos
par-
ticipaci√≥n
IETF
foros
car√°cter
p√∫blico
Deborah
Estrin
fuente
inspiraci√≥n
gracias
capacidad
concentraci√≥n
efectividad
habilidad
tomar
decisiones
meditadas
acerca
trabajar
razones
disfrutado
trabajando
√°rea
investigaci√≥n
acerca
redes
precisamente
personas
sector
aprecio
respeto
admiro
inteligentes
trabajan
duro
comprometidas
desarrollo
Internet
excelente
compa√±√≠a
hora
tomar
cerveza
mantener
discusi√≥n
amistosa
reuniones
298
M03_KURO9675_05_SE_CH03.qxd
22/3/10
09:17
P√°gina
298CAP√çTULO
capa
red
299
estudiado
cap√≠tulo
capa
transporte
proporciona
formas
comunicaci√≥n
proceso
proceso
bas√°ndose
servicio
comunicaci√≥n
host
host
capa
red
visto
capa
transporte
cabo
tarea
capa
red
implementa
realmente
servicio
est√©
preguntando
mecanismo
subyacente
servicio
comunicaci√≥n
host
host
funcionar
cap√≠tulo
exactamente
capa
red
implementa
servicio
comunicaci√≥n
host
host
Veremos
diferencia
capa
transporte
componente
capa
red
hosts
routers
red
raz√≥n
protocolos
capa
red
encuentran
desafiantes
interesantes
pila
protocolos
capa
red
capas
complejas
pila
protocolos
cuestiones
abordar
Comenzaremos
nues-
tro
estudio
introducci√≥n
capa
red
servicios
proporcionar
continuaci√≥n
volveremos
t√©cnicas
empleadas
estructuraci√≥n
servicio
entrega
paquetes
capa
red
datagramas
modelo
circuito
virtual
hablamos
Cap√≠tulo
Asimismo
veremos
papel
fundamen-
desempe√±a
direccionamiento
entrega
paquetes
host
destino
cap√≠tulo
haremos
importante
distinci√≥n
funciones
reenv√≠o
for-
warding
enrutamiento
routing
capa
red
reenv√≠o
implica
transferencia
paquete
enlace
entrada
enlace
salida
router
enrutamiento
implica
routers
red
cuyas
interacciones
colectivas
protocolos
enrutamiento
determinan
rutas
seguir√°n
paquetes
viajes
origen
destino
importante
distinci√≥n
deber√°
presente
medida
avancemos
cap√≠tulo
profundizar
conocimientos
acerca
reenv√≠o
paquetes
echar
vistazo
interior
router
organizaci√≥n
arquitectura
hard-
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
299ware
continuaci√≥n
ocuparemos
reenv√≠o
paquetes
Internet
c√©lebre
Protocolo
Internet
IP
Estudiaremos
direccionamiento
capa
red
formato
datagramas
IPv4
exploraremos
Traducci√≥n
direcciones
red
NAT
Network
Address
Translation
fragmentaci√≥n
datagramas
Protocolo
men-
sajes
control
Internet
ICMP
Internet
Control
Message
Protocol
IPv6
volveremos
atenci√≥n
funci√≥n
enrutamiento
capa
red
Veremos
trabajo
protocolo
enrutamiento
determinar
mejores
rutas
emisores
receptores
lugar
estudiaremos
teor√≠a
algoritmos
enrutamiento
concentr√°ndonos
clases
algoritmos
importan-
tes
algoritmo
enlaces
algoritmo
vector
distancias
complejidad
algoritmos
enrutamiento
crece
considerablemente
medida
aumenta
n√∫mero
routers
red
t√©cnicas
enrutamiento
jer√°rquico
inter√©s
continuaci√≥n
veremos
teor√≠a
pr√°ctica
ocuparnos
protocolos
enrutamiento
internos
sistemas
aut√≥nomos
Internet
RIP
OSPF
IS-IS
protocolo
enrutamiento
sistemas
aut√≥nomos
BGP
Termina-
remos
cap√≠tulo
exposici√≥n
acerca
enrutamiento
difusi√≥n
broadcast
multidifusi√≥n
multicast
resumen
cap√≠tulo
consta
partes
abarca
Seccio-
nes
4.1
4.2
ocupa
funciones
servicios
capa
red
abarca
Secciones
4.3
4.4
cubre
funci√≥n
reenv√≠o
consta
Secciones
4.5
4.7
ocupa
enrutamiento
4.1
Introducci√≥n
Figura
4.1
muestra
red
simple
formada
hosts
H1
H2
routers
ruta
H1
H2
Supongamos
H1
enviando
informaci√≥n
H2
veamos
enton-
ces
papel
capa
red
hosts
routers
intervinientes
capa
red
H1
toma
segmentos
capa
transporte
H1
encapsula
segmento
data-
grama
paquete
capa
red
continuaci√≥n
env√≠a
datagramas
rou-
ter
R1
host
recepci√≥n
H2
capa
red
recibe
datagramas
router
R2
extrae
segmentos
capa
transporte
entrega
capa
transporte
H2
funci√≥n
principal
routers
reenviar
datagramas
enlaces
entrada
enlaces
salida
Observe
routers
Figura
4.1
ilustran
pila
protocolos
truncada
capas
capa
red
prop√≥sitos
control
routers
ejecutan
protocolos
capa
trans-
porte
capa
aplicaci√≥n
examinado
Cap√≠tulos
4.1.1
Reenv√≠o
enrutamiento
funci√≥n
capa
red
tremendamente
simple
transporta
paquetes
host
emisor
host
receptor
realizaci√≥n
tarea
identificar
importantes
funciones
capa
red
Reenv√≠o
forwarding
paquete
llega
enlace
entrada
router
pasar
paquete
enlace
salida
apropiado
ejemplo
paquete
llega
procedente
H1
router
R1
reenviado
router
ruta
H2
300
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3004.1
INTRODUCCI√ìN
301
Figura
4.1
capa
red
Secci√≥n
4.3
miraremos
router
examinaremos
reenv√≠a
real-
mente
paquete
enlace
entrada
router
enlaces
salida
Enrutamiento
routing
capa
red
determinar
ruta
camino
seguir
paquetes
medida
fluyen
emisor
receptor
algoritmos
calculan
rutas
conocen
algoritmos
enrutamiento
algoritmo
enrutamiento
determinar
ejemplo
ruta
fluir√°n
paquetes
H1
H2
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
301Am
t√©rminos
reenv√≠oy
enrutamiento
libro
utilizaremos
t√©rminos
precisa
reenv√≠ohace
referencia
acci√≥n
local
realiza
router
transferir
paquete
interfaz
enlace
entrada
interfaz
enlace
salida
apropiada
enrutamiento
referencia
proceso
realiza
red
conjunto
determinar
rutas
terminal
terminal
paquetes
siguen
origen
des-
tino
Veamos
analog√≠a
Recuerde
viaje
Pensilvania
Florida
nues-
tro
viajero
Secci√≥n
1.3.2
viaje
conductor
atraves√≥
intersecciones
camino
Florida
pensar
reenv√≠o
proceso
atravesar
intersecci√≥n
coche
entra
intersecci√≥n
viniendo
carretera
determina
carretera
tomar
salir
intersecci√≥n
pensar
enru-
tamiento
proceso
planificaci√≥n
viaje
Pensilvania
Florida
iniciar
viaje
conductor
consulta
mapa
elige
posibles
caminos
estando
definido
serie
tramos
carretera
conectan
intersecciones
router
tabla
reenv√≠o
router
reenv√≠a
paquete
examinando
valor
campo
cabecera
paquete
entrante
utilizando
valor
indexarlo
tabla
reenv√≠o
router
resultado
tabla
reenv√≠o
indica
interfaces
enlace
salida
router
reenviado
paquete
Dependiendo
protocolo
capa
red
valor
cabecera
paquete
direcci√≥n
destino
paquete
indicaci√≥n
conexi√≥n
pertenece
paquete
Figura
4.2
proporciona
ejemplo
figura
paquete
valor
campo
cabecera
0111
llega
router
router
busca
tabla
reenv√≠o
determina
interfaz
enlace
salida
paquete
interfaz
router
reenv√≠a
internamente
paquete
interfaz
Secci√≥n
4.3
veremos
router
examinaremos
funci√≥n
reenv√≠o
detalle
momento
configuradas
tablas
reenv√≠o
rou-
ters
cuesti√≥n
crucial
expone
importante
relaci√≥n
existente
enruta-
miento
reenv√≠o
muestra
Figura
4.2
algoritmo
enrutamiento
determina
valores
introducen
tablas
reenv√≠o
routers
algoritmo
enrutamiento
centralizado
ejemplo
algoritmo
ejecute
sitio
central
descargue
informaci√≥n
enrutamiento
router
descentra-
lizado
componente
algoritmo
enrutamiento
distribuido
ejecut√°ndose
router
caso
router
recibe
mensajes
protocolo
enrutamiento
utiliza
configurar
tabla
reenv√≠o
diferencia
prop√≥sitos
funcio-
nes
reenv√≠o
enrutamiento
ilustrarse
claramente
considerando
caso
hipot√©tico
realista
t√©cnicamente
factible
red
tablas
reenv√≠o
fueran
configuradas
directamente
operadores
red
humanos
estuvieran
f√≠sicamente
presentes
routers
caso
necesitar√≠an
protocolos
enruta-
miento
operadores
humanos
tendr√≠an
interactuar
garanti-
zar
tablas
reenv√≠o
estuvieran
configuradas
forma
paquetes
llegaran
destinos
Probablemente
configuraci√≥n
hicieran
personas
propensa
errores
lenta
responder
cambios
topolog√≠a
red
protocolo
enrutamiento
suerte
redes
dispon-
gan
funci√≥n
reenv√≠o
enrutamiento
Continuando
cuestiones
terminol√≥gicas
merece
pena
comentar
t√©rminos
emplean
indistintamente
emplearemos
cuidado
302
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
302Reservaremos
t√©rmino
conmutador
paquetes
referirnos
dispositivo
con-
mutaci√≥n
paquetes
general
transfiere
paquete
interfaz
enlace
entrada
interfaz
enlace
salida
valor
almacenado
campo
cabecera
paquete
conmutadores
paquetes
denominados
conmutado-
res
capa
enlace
switches
examinan
Cap√≠tulo
basan
decisi√≥n
reenv√≠o
valor
almacenado
campo
capa
enlace
dispositivos
conmutaci√≥n
paquetes
conocidos
routers
basan
decisi√≥n
reenv√≠o
valor
almacenado
campo
capa
red
apreciar
importante
distinci√≥n
invitamos
repase
Secci√≥n
1.5.2
abordaron
datagramas
capa
red
tramas
capa
enlace
relaciones
Puesto
cap√≠tulo
dedi-
cado
capa
red
utilizaremos
t√©rmino
router
lugar
dispositivo
conmutaci√≥n
paquetes
Emplearemos
t√©rmino
router
hablemos
conmutadores
paquetes
redes
circuitos
virtuales
Configuraci√≥n
conexi√≥n
Acabamos
capa
red
realiza
importantes
funciones
reenv√≠o
enruta-
miento
redes
computadoras
cabo
funci√≥n
capa
red
importante
configuraci√≥n
conexi√≥n
Recuerde
visto
TCP
necesario
cabo
proceso
fases
datos
pudieran
transferirse
emisor
receptor
proceso
4.1
INTRODUCCI√ìN
303
Figura
4.2
algoritmos
enrutamiento
determinan
valores
almacenados
tablas
reenv√≠o
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
303permit√≠a
emisor
receptor
configurar
informaci√≥n
necesaria
ejemplo
n√∫mero
secuencia
tama√±o
ventana
control
flujo
forma
an√°loga
arquitecturas
capa
red
ejemplo
ATM
frame-relay
Inter-
net
requieren
routers
ruta
seleccionada
origen
destino
negocien
configurar
puedan
comenzar
fluir
paque-
tes
datos
capa
red
correspondientes
determinada
conexi√≥n
origen
destino
capa
red
proceso
conoce
configuraci√≥n
conexi√≥n
estudiaremos
Secci√≥n
4.2
4.1.2
Modelos
servicio
red
profundizar
capa
red
consideremos
punto
vista
amplio
distintos
tipos
servicio
ofrecer
capa
capa
transporte
host
emisor
transmite
paquete
red
pasa
capa
red
host
emisor
capa
transporte
contar
capa
red
entregar
paquete
destino
env√≠an
paquetes
entregan
capa
transporte
host
receptor
orden
enviados
intervalo
tiempo
env√≠o
transmisio-
nes
paquetes
secuenciales
intervalo
respectivas
recepcio-
nes
Realimentar√°
red
informaci√≥n
acerca
congesti√≥n
visi√≥n
abstracta
propiedades
canal
conecta
capa
transporte
hosts
emisor
receptor
respuestas
preguntas
determinadas
modelo
servicio
proporcionado
capa
red
modelo
servicio
red
define
carac-
ter√≠sticas
transporte
terminal
terminal
paquetes
sistemas
terminales
emisor
receptor
Consideremos
posibles
servicios
proporcionar
capa
red
host
emisor
capa
transporte
pasa
paquete
capa
red
servicios
espec√≠ficos
capa
red
proporcionar
incluyen
Entrega
garantizada
servicio
garantiza
paquete
terminar√°
llegar
des-
tino
Entrega
garantizada
retardo
limitado
servicio
garantiza
entrega
paquete
dicha
entrega
l√≠mite
retardo
especificado
host
host
ejemplo
100
milisegundos
flujo
paquetes
origen
destino
dados
ofrec√©rsele
siguientes
servicios
Entrega
paquetes
orden
servicio
garantiza
paquetes
llegan
des-
tino
orden
enviados
Ancho
banda
m√≠nimo
garantizado
servicio
capa
red
emula
comporta-
miento
enlace
transmisi√≥n
velocidad
bit
espec√≠fica
ejemplo
Mbps
hosts
emisor
receptor
ruta
terminal
terminal
real
atravesar
enlaces
f√≠sicos
host
emisor
transmita
bits
paquetes
velocidad
inferior
velocidad
bit
especificada
perder√°
paquete
paquetes
llegar√°n
intervalo
retardo
host
host
pre-especificado
ejemplo
40
milisegundos
Fluctuaci√≥n
m√°xima
garantizada
servicio
garantiza
intervalo
tiempo
trans-
currido
transmisi√≥n
paquetes
sucesivos
emisor
intervalo
304
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
304tiempo
transcurre
respectiva
recepci√≥n
destino
sepa-
raci√≥n
paquetes
variar√°
cantidad
valor
especificado
Servicios
seguridad
Utilizando
clave
secreta
sesi√≥n
conocida
host
origen
host
destino
capa
red
host
origen
cifrar
carga
√∫til
datagramas
enviados
host
destino
capa
red
host
destino
responsable
descifrar
carga
√∫til
servicio
proporcionar√°
confidencialidad
segmentos
capa
transporte
TCP
UDP
hosts
origen
destino
confidencialidad
capa
red
ofrecer
servicios
integridad
datos
autenticaci√≥n
origen
lista
lista
parcial
servicios
capa
red
proporcionar
incontables
posibles
variaciones
capa
red
Internet
proporciona
√∫nico
servicio
conocido
servicio
esfuerzo
best-effort
service
Tabla
4.1
parecer
servicio
esfuerzo
utilizando
eufemismo
pro-
porciona
servicio
absoluto
servicio
esfuerzo
temporizaci√≥n
relativa
paquetes
garantizada
garantizado
paquetes
reciban
orden
emitidos
garantiza
entrega
paquetes
transmitidos
teniendo
definici√≥n
red
entregara
paquetes
destino
satisfar√≠a
definici√≥n
servicio
entrega
esfuerzo
veremos
razones
v√°lidas
modelo
minimalista
servicio
capa
red
Cap√≠tulo
veremos
modelos
ser-
vicio
Internet
adicionales
evolucionando
arquitecturas
red
definido
implementado
modelos
servicio
all√°
servicio
esfuerzo
Internet
ejemplo
arquitectura
red
ATM
MFA
Forum
2009
Black
1995
proporciona
modelos
servicio
sig-
nifica
conexiones
ofrecer
distintas
clases
servicio
red
exposici√≥n
acerca
red
ATM
proporciona
tales
servicios
queda
√°mbito
libro
√∫nicamente
destacar
alternati-
vas
modelo
esfuerzo
Internet
modelos
servicio
ATM
importantes
servicio
CBR
Constant
Bit
Rate
tasa
bit
constante
servicio
ABR
Available
Bit
Rate
tasa
bit
disponible
Arquitectura
Modelo
Garant√≠a
arant√≠a
Indicaci√≥n
red
servicio
ancho
banda
p√©rdidas
Orden
Temporizaci√≥n
congesti√≥n
Internet
esfuerzo
mantiene
orden
ATM
CBR
Velocidad
orden
constante
mantiene
produce
garantizada
congesti√≥n
ATM
ABR
M√≠nimo
orden
garantizado
mantiene
Tabla
4.1
Modelos
servicio
Internet
CBR
ABR
redes
ATM
4.1
INTRODUCCI√ìN
305
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
305‚Ä¢
Servicio
CBR
redes
ATM.Este
modelo
servicio
redes
ATM
estandarizado
refleja
inter√©s
compa√±√≠as
telef√≥nicas
tecnolog√≠a
ATM
adecuaci√≥n
servicio
CBR
transporte
tr√°fico
audio
v√≠deo
tiempo
real
tasa
bit
constante
objetivo
servicio
CBR
con-
ceptualmente
simple
proporcionar
flujo
paquetes
conocido
celdas
ter-
minolog√≠a
ATM
conducto
virtual
cuyas
propiedades
existiera
enlace
transmisi√≥n
ancho
banda
fijo
dedicado
hosts
emisor
receptor
servicio
CBR
flujo
celdas
ATM
transporta
red
forma
garantiza
retardo
terminal
terminal
celda
variabili-
dad
retardo
terminal
terminal
celda
jitter
fluctuaci√≥n
cel-
das
fracci√≥n
celdas
pierden
entregan
menores
serie
valores
previamente
especificados
host
emisor
red
ATM
acuerdan
valores
conexi√≥n
CBR
establece
Servicio
ABR
redes
ATM
Internet
ofrece
denomina
servi-
cio
esfuerzo
servicio
ABR
ATM
caracterizarse
ser-
vicio
ligeramente
superior
esfuerzo
modelo
servicio
Internet
celdas
perder
servicio
ABR
diferencia
Internet
celdas
reordenar
perderse
garantizada
velocidad
m√≠nima
transmisi√≥n
celda
MCR
Minimum
Cell
transmission
Rate
conexi√≥n
utilizando
servicio
ABR
red
suficientes
recursos
libres
instante
determinado
emisor
capaz
enviar
√©xito
cel-
das
velocidad
m√≠nima
MCR
Adicionalmente
visto
Secci√≥n
3.6
servicio
ABR
redes
ATM
proporcionar
realimenta-
ci√≥n
emisor
t√©rminos
bit
notificaci√≥n
congesti√≥n
velocidad
expl√≠cita
enviar
controla
emisor
ajusta
velocidad
MCR
valor
m√°ximo
velocidad
celda
4.2
Redes
circuitos
virtuales
datagramas
Recuerde
Cap√≠tulo
capa
transporte
ofrecer
aplicaciones
servi-
cio
conexi√≥n
servicio
orientado
conexi√≥n
ejemplo
capa
transporte
Internet
proporciona
aplicaci√≥n
posibilidad
elegir
servicios
UDP
servicio
conexi√≥n
TCP
servicio
orientado
conexi√≥n
forma
similar
capa
red
proporcionar
servicio
conexi√≥n
servicio
cone-
xi√≥n
servicios
capa
red
conexi√≥n
paralelos
sentidos
servicios
capa
transporte
orientados
conexi√≥n
conexi√≥n
ejemplo
servicio
capa
red
orientado
conexi√≥n
comienza
proceso
hosts
origen
destino
servicio
capa
red
conexi√≥n
realiza
tarea
preliminar
servicios
conexi√≥n
capa
red
presentan
paralelis-
mos
correspondientes
servicios
capa
transporte
presentan
diferen-
cias
importantes
‚Ä¢E
red
capa
transporte
capa
transporte
servicios
servicios
proceso
proceso
proporcionados
capa
transporte
capa
aplicaci√≥n
306
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
306‚Ä¢
principales
arquitecturas
redes
computadoras
utilizadas
fecha
Inter-
net
ATM
frame
relay
etc.
capa
red
proporciona
servicio
conexi√≥n
host
host
servicio
orientado
conexi√≥n
host
host
redes
computadoras
proporcionan
servicio
conexi√≥n
capa
red
cono-
cen
redes
circuitos
virtuales
VC
redes
proporcionan
servicio
conexi√≥n
capa
red
denominan
redes
datagramas
‚Ä¢L
servicio
conexi√≥n
capa
red
fundamentalmente
distintos
cap√≠tulo
servicio
capa
transporte
orientado
conexi√≥n
imple-
menta
frontera
red
sistemas
terminales
veremos
servi-
cio
conexi√≥n
capa
red
implementa
routers
n√∫cleo
red
sistemas
terminales
redes
circuitos
virtuales
datagramas
clases
fundamentales
redes
computadoras
Utilizan
informaci√≥n
hora
tomar
decisiones
reenv√≠o
Veamos
continuaci√≥n
implementaciones
4.2.1
Redes
circuitos
virtuales
estudiado
Internet
red
datagramas
arquitecturas
red
alternativas
incluyendo
ATM
frame
relay
redes
circuitos
virtuales
utilizan
conexiones
capa
red
conexiones
capa
red
deno-
minan
circuitos
virtuales
VC
Veamos
implementar
servicio
VC
red
computadoras
circuito
virtual
consta
ruta
serie
enlaces
routers
hosts
origen
destino
n√∫meros
VC
n√∫mero
enlace
ruta
entradas
tabla
reenv√≠o
router
existente
ruta
paquete
pertenece
circuito
virtual
transportar√°
n√∫mero
VC
cabe-
cera
circuito
virtual
n√∫mero
VC
enlace
router
interviniente
sustituir
n√∫mero
VC
paquete
atra-
viesa
n√∫mero
VC
n√∫mero
VC
obtiene
tabla
reen-
v√≠o
ilustrar
concepto
considere
red
mostrada
Figura
4.3
n√∫meros
enlaces
R1
figura
n√∫meros
interfaz
enlace
Suponga
host
solicita
red
establezca
VC
host
B.
Suponga
tam-
bi√©n
red
elige
camino
A-R1-R2-B
asigna
n√∫meros
VC
12
22
32
4.2
REDES
CIRCUITOS
VIRTUALES
DATAGRAMAS
307
Figura
4.3
red
simple
circuitos
virtuales
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
307tres
enlaces
camino
circuito
virtual
caso
paquete
circuito
virtual
abandona
host
valor
almacenado
campo
n√∫mero
VC
cabecera
paquete
12
sale
R1
valor
22
sale
R2
32
determina
router
n√∫mero
VC
sustituci√≥n
paquete
atra-
viesa
red
circuitos
virtuales
tabla
reenv√≠o
router
incluye
traduc-
ci√≥n
n√∫mero
VC
ejemplo
tabla
reenv√≠o
R1
similar
Interfaz
entrada
N¬∫
VC
entrada
Interfaz
salida
N¬∫
VC
salida
11
222
26
311
37
19
738
configura
n√∫mero
VC
router
a√±ade
entrada
tabla
reenv√≠o
forma
similar
VC
termina
entradas
apropiadas
tabla
ruta
eliminan
est√©
preguntando
paquete
mantiene
n√∫mero
VC
enlaces
ruta
raz√≥n
doble
lugar
reemplazar
n√∫mero
enlace
reduce
longitud
campo
n√∫mero
VC
cabecera
paquete
raz√≥n
importante
configuraci√≥n
VC
simplifica
considerablemente
permitiendo
n√∫mero
VC
enlace
ruta
circuito
virtual
Espec√≠ficamente
m√∫ltiples
n√∫meros
VC
enlace
ruta
elegir
n√∫mero
VC
independientemente
n√∫meros
VC
elegidos
restantes
enlaces
ruta
precisara
n√∫mero
VC
com√∫n
enlaces
ruta
routers
tendr√≠an
intercambiar
procesar
n√∫mero
sustancial
mensajes
acordar
n√∫mero
VC
com√∫n
ejemplo
estuviera
utilizado
VC
existente
routers
utilizar
cone-
xi√≥n
red
circuitos
virtuales
routers
red
mantener
informaci√≥n
conexi√≥n
conexiones
activas
Espec√≠ficamente
establece
conexi√≥n
router
a√±adirse
entrada
cone-
xi√≥n
tabla
reenv√≠o
router
conexi√≥n
libera
entrada
borrarse
tabla
Observe
mecanismo
traducci√≥n
n√∫meros
VC
seguir√°
necesario
mantener
informaci√≥n
conexi√≥n
permita
asociar
n√∫meros
VC
n√∫meros
interfaces
salida
pro-
blema
router
mantiene
informaci√≥n
conexi√≥n
cone-
xi√≥n
activa
crucial
volveremos
repetidamente
cuesti√≥n
libro
circuito
virtual
fases
identificables
Configuraci√≥n
VC
fase
configuraci√≥n
capa
transporte
emisor
contacta
capa
red
especifica
direcci√≥n
receptor
espera
red
con-
figure
circuito
virtual
capa
red
determina
ruta
emisor
receptor
serie
enlaces
routers
paquetes
VC
viajar
capa
red
determina
n√∫mero
VC
enlace
308
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3084.2
REDES
CIRCUITOS
VIRTUALES
DATAGRAMAS
309
ruta
capa
red
a√±ade
entrada
tabla
reenv√≠o
router
existente
ruta
configuraci√≥n
VC
capa
red
reservar
recursos
ejemplo
ancho
banda
ruta
VC
Transferencia
datos
muestra
Figura
4.4
establecido
circuito
virtual
paquetes
comenzar
fluir
Terminaci√≥n
VC
fase
inicia
emisor
receptor
informa
capa
red
deseo
terminar
circuito
virtual
Normalmente
capa
red
informar√°
sistema
terminal
red
terminaci√≥n
llamada
actualizar√°
tablas
reenv√≠o
routers
ruta
indicar
circuito
virtual
sutil
importante
distinci√≥n
configuraci√≥n
VC
capa
red
configuraci√≥n
conexi√≥n
capa
transporte
ejemplo
proceso
fases
TCP
estudiado
Cap√≠tulo
configuraci√≥n
conexi√≥n
capa
transporte
implica
sistemas
terminales
con-
figuraci√≥n
conexi√≥n
capa
transporte
sistemas
terminales
determi-
nan
par√°metros
ejemplo
n√∫mero
secuencia
inicial
tama√±o
ventana
control
flujo
conexi√≥n
capa
transporte
sistemas
terminales
conscientes
conexi√≥n
capa
transporte
routers
red
ignoran
completo
contrario
capa
red
circuito
virtual
routers
existentes
ruta
sistemas
terminales
implicados
configuraci√≥n
VC
router
completamente
consciente
VC
pasan
mensajes
sistemas
terminales
env√≠an
red
iniciar
terminar
VC
mensajes
pasados
routers
configurar
VC
modificar
conexi√≥n
tablas
routers
conocen
mensajes
se√±alizaci√≥n
protocolos
empleados
intercambiar
mensajes
denominan
pro-
tocolos
se√±alizaci√≥n
Figura
4.4
muestra
gr√°ficamente
configuraci√≥n
VC
libro
estudiar
protocolos
se√±alizaci√≥n
circuitos
virtuales
consultar
Black
1997
exposici√≥n
general
se√±alizaci√≥n
redes
orientadas
conexi√≥n
ITU-T
Q.2931
1994
especificaci√≥n
proto-
colo
se√±alizaci√≥n
Q.2931
ATM
Red
inicia
flujo
Figura
4.4
Configuraci√≥n
circuito
virtual
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3094.2.2
Redes
datagramas
red
datagramas
sistema
terminal
desea
enviar
paquete
marca
paquete
direcci√≥n
sistema
terminal
destino
introduce
paquete
red
muestra
Figura
4.5
configurar
cir-
cuito
virtual
routers
red
datagramas
mantienen
informaci√≥n
acerca
circuitos
virtuales
circuito
virtual
paquete
transmite
origen
destino
pasa
serie
routers
routers
utiliza
direcci√≥n
destino
paquete
reen-
viar
paquete
Espec√≠ficamente
router
tabla
reenv√≠o
asigna
direc-
ciones
destino
interfaces
enlace
paquete
llega
router
utiliza
direcci√≥n
destino
paquete
buscar
interfaz
enlace
salida
apropiado
tabla
reenv√≠o
router
reenv√≠a
intencionadamente
paquete
interfaz
enlace
salida
Profundicemos
operaci√≥n
b√∫squeda
ejemplo
concreto
Suponga
direcciones
destino
longitud
32
bits
longi-
tud
direcci√≥n
destino
datagrama
IP
implementaci√≥n
fuerza
bruta
tabla
reenv√≠o
tendr√≠a
entrada
posibles
direcciones
destino
4.000
millones
posibles
direcciones
opci√≥n
totalmente
lugar
requerir√≠a
tabla
reenv√≠o
enormemente
Supongamos
router
enlaces
numerados
paquetes
reenviados
interfaces
enlace
Rango
direcciones
destino
Interfaz
enlace
11001000
00010111
00010000
00000000
11001000
00010111
00010111
11111111
11001000
00010111
00011000
00000000
11001000
00010111
00011000
11111111
11001000
00010111
00011001
00000000
11001000
00010111
00011111
11111111
caso
Evidentemente
ejemplo
necesario
disponer
4.000
millones
entradas
tabla
reenv√≠o
router
Podr√≠amos
ejemplo
tabla
reenv√≠o
entradas
Coincidencia
prefijo
Interfaz
enlace
11001000
00010111
00010
11001000
00010111
00011000
11001000
00010111
00011
caso
310
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
310Con
tipo
tabla
reenv√≠o
router
busca
coincidencia
prefijo
direc-
ci√≥n
destino
paquete
entradas
tabla
coincidencia
router
reenv√≠a
paquete
enlace
asociado
coincidencia
ejemplo
suponga
direcci√≥n
destino
paquete
11001000
00010111
00010110
10100001
puesto
prefijo
21
bits
direcci√≥n
coincide
entrada
tabla
router
reen-
v√≠a
paquete
interfaz
enlace
prefijo
corresponde
primeras
entradas
router
reenv√≠a
paquete
interfaz
m√©todo
parecer
simple
esconde
importante
sutileza
direcci√≥n
destino
corresponderse
entrada
ejemplo
24
bits
direcci√≥n
11001000
00010111
00011000
10101010
coinciden
entrada
tabla
21
bits
entrada
tabla
coincidencias
router
aplica
regla
coinci-
dencia
prefijo
busca
entrada
larga
tabla
exista
coincidencia
reenv√≠a
paquete
interfaz
enlace
asociada
prefijo
estudiemos
detalle
Secci√≥n
4.4
direccionamiento
Internet
veremos
utiliza
regla
coincidencia
prefijo
routers
redes
datagramas
mantienen
informaci√≥n
conexi√≥n
mantienen
informaci√≥n
reenv√≠o
tablas
reenv√≠o
escala
tiempo
informaci√≥n
reenv√≠o
cambia
rela-
tivamente
lenta
red
datagramas
tablas
reenv√≠o
modificadas
algoritmos
enrutamiento
normalmente
actualizan
tabla
reenv√≠o
intervalos
aproximados
minutos
red
circuitos
virtuales
tabla
reenv√≠o
router
modifica
configura
conexi√≥n
router
conexi√≥n
existente
router
termina
proceso
lugar
escala
tiempo
orden
microsegundos
router
troncal
nivel
Puesto
tablas
reenv√≠o
redes
datagramas
modificadas
instante
serie
paquetes
enviados
sistema
terminal
seguir
caminos
distintos
red
llegar
desordenados
Paxson
1997
Jaiswal
2003
presentan
estudios
interesantes
medici√≥n
reordenaci√≥n
paquetes
fen√≥menos
Internet
4.2
REDES
CIRCUITOS
VIRTUALES
DATAGRAMAS
311
Figura
4.5
Red
datagramas
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3114.2.3
Or√≠genes
redes
circuitos
virtuales
datagramas
evoluci√≥n
redes
datagramas
circuitos
virtuales
refleja
or√≠genes
idea
circuito
virtual
principio
organizaci√≥n
central
ra√≠ces
mundo
telefon√≠a
utiliza
circuitos
reales
mantenerse
configuraci√≥n
llamadas
routers
red
red
circuitos
virtuales
indiscutiblemente
compleja
red
datagramas
consultar
Molinero-Fern√°ndez
2002
interesante
comparaci√≥n
complejidad
redes
circuitos
redes
conmutaci√≥n
paquetes
herencia
campo
telefon√≠a
redes
telef√≥nicas
necesidad
manten√≠an
complejidad
red
esta-
ban
conectadas
dispositivos
terminales
inteligentes
tel√©fonos
disco
j√≥venes
saberlo
tel√©fono
disco
tel√©fono
anal√≥gico
teclas
dial
Internet
red
datagramas
creci√≥
necesidad
conectar
computadoras
dispositivos
terminales
sofisticados
arquitectos
Internet
prefirieron
modelo
servicio
capa
red
simple
visto
Cap√≠tulos
funcionalidades
adicionales
ejemplo
entrega
datos
orden
transferencia
datos
fiable
control
congesti√≥n
resoluci√≥n
nombres
DNS
implementan
capa
alta
sistemas
terminales
invierte
modelo
redes
telefon√≠a
consecuencias
interesantes
‚Ä¢P
servicio
m√≠nimas
impone
requisitos
m√≠nimos
capa
red
f√°cil
interconectar
redes
utilizan
tecnolog√≠as
capa
enlace
ejemplo
conexi√≥n
v√≠a
sat√©lite
Ethernet
fibra
radio
presen-
caracter√≠sticas
p√©rdidas
velocidades
transmisi√≥n
distintas
Veremos
detalle
interconexi√≥n
redes
IP
Secci√≥n
4.4
‚Ä¢C
Web
servicio
DNS
centralizado
capa
red
implemen-
hosts
servidores
situados
frontera
red
capacidad
a√±adir
servicio
simplemente
conectando
host
red
definiendo
protocolo
capa
aplicaci√≥n
HTTP
permitido
aplicaciones
Web
implantarse
Internet
periodo
tiempo
extremadamente
corto
veremos
Cap√≠tulo
debate
importante
comunidad
Inter-
net
acerca
deber√≠a
evolucionar
arquitectura
capa
red
Internet
soporte
servicios
tiempo
real
ejemplo
multimedia
Crowcroft
1995
encontrar
interesante
comparaci√≥n
arquitectura
red
ATM
orientada
circuitos
virtuales
arquitectura
propuesta
Internet
generaci√≥n
4.3
interior
router
visto
introducci√≥n
funciones
servicios
capa
red
prestar
atenci√≥n
funci√≥n
reenv√≠o
capa
red
transferencia
real
paquetes
enlaces
entrada
router
apropiados
enlaces
salida
hablado
brevemente
problemas
funci√≥n
reenv√≠o
Sec-
312
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
312ci√≥n
4.2
concreto
direccionamiento
coincidencia
prefijo
secci√≥n
veremos
arquitecturas
router
espec√≠ficas
transferencia
paquetes
enlaces
entrada
enlaces
salida
exposici√≥n
necesaria-
mente
necesitar√≠a
curso
completo
cubrir
profundidad
dise√±o
router
consecuencia
haremos
esfuerzo
especial
secci√≥n
proporcio-
nar
referencias
textos
abordan
tema
detalle
comentado
profesionales
investigadores
dedicados
mundo
redes
computadoras
suelen
emplear
indistintamente
t√©rminos
reenv√≠oy
conmutaci√≥n
utilizare-
mos
t√©rminos
libro
Figura
4.6
muestra
esquema
general
arquitectura
router
gen√©-
rico
router
identificar
componentes
siguientes
Puertos
entrada
puerto
entrada
realiza
funciones
cabo
fun-
ciones
capa
f√≠sica
representadas
recuadro
situado
izquierda
puerto
entrada
recuadro
derecha
puerto
salida
Figura
4.6
consistentes
terminaci√≥n
enlace
f√≠sico
entrada
router
Realiza
fun-
ciones
capa
enlace
datos
representadas
recuadros
centrales
puertos
entrada
salida
necesarias
interoperar
funciones
capa
enlace
datos
remoto
enlace
entrada
realiza
funci√≥n
b√∫squeda
reenv√≠o
recuadro
derecha
puerto
entrada
recuadro
izquierda
puerto
salida
paquete
reenviado
entramado
conmutaci√≥n
router
emerge
puerto
salida
apropiado
paquetes
control
ejemplo
paquetes
transportan
informaci√≥n
protocolo
enrutamiento
reenviados
puerto
entrada
procesador
enruta-
miento
pr√°ctica
suelen
agruparse
puertos
√∫nica
tarjeta
l√≠nea
line
card
router
Entramado
conmutaci√≥n
entramado
conmutaci√≥n
conecta
puertos
entrada
router
puertos
salida
entramado
conmutaci√≥n
completa-
mente
contenido
router
red
router
red
4.3
INTERIOR
ROUTER
313
Figura
4.6
Arquitectura
router
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
313‚Ä¢
Puertos
salida
puerto
salida
almacena
paquetes
reenviados
entramado
conmutaci√≥n
transmite
enlace
salida
puerto
salida
cabo
funci√≥n
inversa
capa
f√≠sica
capa
enlace
datos
puerto
entrada
enlace
bidireccional
transporta
tr√°fico
ambas
direcciones
puerto
salida
enlace
normalmente
emparejado
puerto
entrada
enlace
tarjeta
l√≠nea
Procesador
enrutamiento
procesador
enrutamiento
ejecuta
protocolos
enrutamiento
ejemplo
protocolos
estudian
Secci√≥n
4.6
mantiene
informaci√≥n
enrutamiento
tablas
reenv√≠o
realiza
funciones
gesti√≥n
red
v√©ase
Cap√≠tulo
router
siguientes
subsecciones
veremos
puertos
entrada
entramado
conmu-
taci√≥n
puertos
salida
detalle
Chuang
2005
Keslassy
2003
Chao
2001
Tur-
ner
1988
Giacopelli
1990
McKeown
1997a
Partridge
1998
proporcionan
informaci√≥n
acerca
arquitecturas
router
espec√≠ficas
McKeown
1997b
proporciona
introducci√≥n
particularmente
f√°cil
comprender
arquitecturas
router
actuales
uti-
lizando
router
12000
Cisco
ejemplo
concretar
exposici√≥n
suponemos
red
computadoras
red
paquetes
decisiones
reen-
v√≠o
basadas
direcci√≥n
paquetes
lugar
n√∫mero
VC
red
circuitos
virtuales
obstante
conceptos
t√©cnicas
similares
red
circuitos
virtuales
4.3.1
Puertos
entrada
Figura
4.7
muestra
esquema
detallado
funcionalidad
puerto
entrada
comentado
anteriormente
funci√≥n
terminaci√≥n
l√≠nea
pro-
cesamiento
enlace
datos
puerto
entrada
implementan
capas
f√≠sica
enlace
datos
asociadas
enlace
individual
entrada
router
m√≥dulo
b√∫squeda/
reenv√≠o
puerto
entrada
resulta
crucial
funci√≥n
reenv√≠o
router
routers
router
determina
puerto
salida
reenviado
paquete
entrante
entramado
conmutaci√≥n
elecci√≥n
puerto
salida
cabo
utilizando
informaci√≥n
almacenada
tabla
reenv√≠o
pro-
cesador
enrutamiento
calcula
tabla
reenv√≠o
suele
almacenarse
copia
puerto
entrada
actualizada
necesario
procesa-
dor
enrutamiento
copias
locales
tabla
reenv√≠o
decisi√≥n
reenv√≠o
tomarse
localmente
puerto
entrada
invocar
procesador
enruta-
314
CAP√çTULO
CAPA
RED
Figura
4.7
Procesamiento
puerto
entrada
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
314miento
centralizado
Tales
reenv√≠os
descentralizados
evitan
formen
cuellos
botella
procesamiento
reenv√≠os
√∫nico
punto
router
routers
capacidades
procesamiento
limitadas
puerto
entrada
simplemente
reenviar
paquete
procesador
enrutamiento
centralizado
har√°
b√∫squeda
tabla
reenv√≠o
transmite
paquete
puerto
salida
apropiado
t√©cnica
aplica
estaci√≥n
trabajo
servidor
emplea
router
caso
procesador
enrutamiento
realmente
CPU
estaci√≥n
trabajo
puerto
entrada
tarjeta
interfaz
red
ejemplo
tarjeta
Ethernet
Disponiendo
tabla
reenv√≠o
operaci√≥n
b√∫squeda
resulta
conceptualmente
simple
basta
recorrer
tabla
reenv√≠o
localizar
coincidencia
prefijo
descrito
Secci√≥n
4.2.2
pr√°ctica
cosas
sencillas
factor
importante
complica
routers
troncales
operar
velocidades
altas
realizando
millones
b√∫squedas
deseable
procesamiento
puerto
entrada
rea-
lizarse
velocidad
l√≠nea
b√∫squeda
lleve
cabo
tiempo
necesario
recibir
paquete
puerto
entrada
4.3
INTERIOR
ROUTER
315
CISCO
SYSTEMS
DOMINIO
N√öCLEO
RED
momento
escribir
octubre
2008
Cisco
emplea
65.000
personas
Actualmente
Cisco
domina
mercado
routers
Internet
a√±os
entrado
mercado
telefon√≠a
Internet
compite
empresas
l√≠deres
dedi-
cadas
equipos
telefon√≠a
Lucent
Alcatel
Nortel
Siemens
naci√≥
monstruo
empresa
dedicada
redes
empez√≥
1984
cuarto
apartamento
Silicon
Valley
Len
Bosak
esposa
Sandy
Lerner
trabajando
Universidad
Stanford
tuvieron
idea
crear
vender
routers
Internet
instituciones
acad√©micas
investigaci√≥n
Sandy
Lerner
invent√≥
nombre
Cisco
abreviatura
San
Francisco
dise√±√≥
logotipo
puente
identifica
empresa
oficinas
corporativas
cuarto
financiaron
proyecto
tarjetas
cr√©dito
trabajos
consultor√≠a
horas
libres
finales
1986
ingresos
Cisco
alcanzaban
250.000
d√≥lares
mensuales
finales
1987
Cisco
logr√≥
atraer
inversores
capital
riesgo
millones
d√≥lares
Sequoia
Capital
cambio
compa√±√≠a
a√±os
siguientes
Cisco
continu√≥
creciendo
consiguiendo
cuota
mercado
tiempo
relaciones
Bosak
Lerner
direcci√≥n
Cisco
comenzaron
tensarse
Cisco
empez√≥
cotizar
bolsa
1990
a√±o
Lerner
Bosak
dejaban
compa√±√≠a
a√±os
Cisco
expandido
all√°
mercado
routers
vende
servicios
productos
seguridad
inal√°mbricos
voz
IP
Cisco
enfrenta
creciente
competencia
internacional
incluye
Huawei
compa√±√≠a
china
r√°pido
crecimiento
dedicada
mercado
redes
empresas
competidoras
Cisco
campo
routers
redes
Ethernet
conmutadas
Alcatel-Lucent
Juniper
HISTORIA
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
315caso
procesamiento
entrada
paquete
recibido
completarse
concluya
operaci√≥n
recepci√≥n
hacerse
idea
requisitos
ren-
dimiento
b√∫squeda
considere
enlace
OC-48
opera
2,5
Gbps
paquetes
cuya
longitud
256
bytes
implica
velocidad
b√∫squeda
mill√≥n
b√∫squedas
necesidad
actual
operar
velocidades
enlace
altas
b√∫squeda
lineal
tabla
reenv√≠o
imposible
t√©cnica
razonable
con-
siste
almacenar
entradas
tabla
reenv√≠o
estructura
datos
√°rbol
nivel
√°rbol
interpretarse
correspondiente
bit
direcci√≥n
destino
buscar
direcci√≥n
simplemente
comienza
nodo
ra√≠z
√°rbol
bit
direcci√≥n
cero
sub√°rbol
izquierda
contendr√°
entrada
tabla
reenv√≠o
correspondiente
direcci√≥n
destino
caso
encontrar√°
sub√°rbol
derecha
continuaci√≥n
recorre
sub√°rbol
apropiado
utilizando
restantes
bits
direcci√≥n
bit
cero
elegir√°
sub√°rbol
izquierdo
sub√°rbol
inicial
caso
seleccionar√°
sub√°rbol
derecho
sub√°rbol
inicial
forma
buscar
entrada
tabla
reenv√≠o
pasos
n√∫mero
bits
direcci√≥n
observe
b√∫squeda
binaria
espacio
direcciones
tama√±o
Srinivasan
1999
describe
mejora
t√©cnicas
b√∫squeda
binaria
encontrar
estudio
general
algo-
ritmos
clasificaci√≥n
paquetes
Gupta
2001
32
pasos
ejemplo
direcci√≥n
IP
32
bits
veloci-
dad
b√∫squeda
binaria
suficientemente
r√°pida
requisitos
enruta-
miento
red
troncal
actual
ejemplo
suponiendo
acceso
memoria
paso
mill√≥n
b√∫squedas
direcciones
tiempo
acceso
memoria
40
ns
necesario
explorar
t√©cnicas
incrementar
velocidades
b√∫squeda
memorias
direccionables
contenido
CAM
Content
Addressable
Memory
permiten
acceder
memoria
direcci√≥n
IP
32
bits
devolviendo
memoria
contenido
correspondiente
entrada
tabla
reenv√≠o
tiempo
pr√°cticamente
constante
routers
serie
8500
Cisco
utilizan
CAM
64k
puerto
entrada
t√©cnica
permite
acelerar
b√∫squedas
consiste
mantener
entradas
tabla
reenv√≠o
accedido
recientemente
cach√©
Feldmeier
1988
caso
problema
tama√±o
potencial
cach√©
propuesto
estructuras
datos
r√°pidas
permiten
localizar
entradas
tabla
reen-
v√≠o
log(N
pasos
Waldvogel
1997
comprimen
tablas
reenv√≠o
formas
ori-
ginales
Brodnik
1997
Gupta
1998
expone
t√©cnica
hardware
b√∫squeda
optimizada
caso
com√∫n
direcciones
localizarse
tie-
nen
24
bits
significativos
estudio
taxonom√≠a
algoritmos
b√∫squeda
direcciones
IP
alta
velocidad
consulte
Ruiz-S√°nchez
2001
determinado
puerto
salida
paquete
b√∫s-
queda
paquete
reenviado
entramado
conmutaci√≥n
paquete
temporalmente
bloqueada
entrada
entramado
conmutaci√≥n
paquetes
puertos
entrada
utilizando
momento
entramado
caso
paquete
bloqueado
deber√°
ponerse
cola
puerto
entrada
planificarse
cruzar
entramado
conmutaci√≥n
momento
posterior
Secci√≥n
4.3.4
veremos
detalle
proceso
bloqueo
puesta
cola
planifi-
caci√≥n
paquetes
puertos
entrada
salida
router
316
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3164.3.2
Entramado
conmutaci√≥n
entramado
conmutaci√≥n
coraz√≥n
router
entramado
paquetes
realmente
conmutados
reenviados
puerto
entrada
puerto
salida
conmutaci√≥n
llevarse
cabo
for-
muestra
Figura
4.8
Conmutaci√≥n
v√≠a
memoria
routers
simples
computadoras
tradi-
cionales
conmutaci√≥n
puertos
entrada
salida
realizaba
control
directo
CPU
procesador
enrutamiento
puertos
entrada
salida
funcionaban
dispositivos
tradicionales
sistema
operativo
tra-
dicional
puerto
entrada
llegaba
paquete
enviaba
se√±al
lugar
procesador
enrutamiento
interrupci√≥n
continuaci√≥n
paquete
copiaba
puerto
entrada
memoria
procesador
procesador
enrutamiento
extra√≠a
direcci√≥n
destino
cabecera
buscaba
tabla
reenv√≠o
puerto
salida
apropiado
copiaba
paquete
buffers
puerto
salida
Observe
ancho
banda
memoria
escri-
birse
leerse
memoria
paquetes
tasa
transferen-
cia
global
reenv√≠o
velocidad
paquetes
transfieren
puertos
entrada
salida
menor
B/2
routers
modernos
realizan
conmutaci√≥n
v√≠a
memoria
diferencia
importante
routers
procesadores
tarjetas
4.3
INTERIOR
ROUTER
317
Figura
4.8
t√©cnicas
conmutaci√≥n
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
317de
l√≠nea
entrada
encargan
b√∫squeda
direcci√≥n
destino
almacenar
paquete
posici√≥n
memoria
adecuada
forma
routers
conmutan
v√≠a
memoria
parecen
multiprocesadores
memoria
com-
partida
encarg√°ndose
procesadores
tarjeta
l√≠nea
conmutar
paquetes
memoria
puerto
salida
apropiado
dispositivos
conmutaci√≥n
swit-
ches
serie
Catalyst
8500
Cisco
Cisco
8500
2009
reenv√≠an
paquetes
memoria
compartida
encontrar
modelo
abstracto
estu-
propiedades
conmutaci√≥n
basada
memoria
comparaci√≥n
m√©todos
conmutaci√≥n
Iyer
2002
Conmutaci√≥n
v√≠a
bus
t√©cnica
puerto
entrada
transfiere
directamente
paquete
puerto
salida
bus
compartido
intervenci√≥n
procesa-
dor
enrutamiento
observe
conmutaci√≥n
v√≠a
memoria
paquete
atravesar
bus
sistema
venir
memoria
proce-
sador
enrutamiento
implicado
transferencia
bus
puesto
bus
compartido
transferir
paquete
bus
paquete
llega
puerto
entrada
bus
ocupado
transferencia
paquete
queda
bloqueado
permite
atravesar
entramado
conmutaci√≥n
poni√©ndose
cola
puerto
entrada
Puesto
paquetes
atravesar
√∫nico
bus
ancho
banda
conmuta-
ci√≥n
router
limitado
velocidad
bus
Puesto
tecnolog√≠a
actual
disponer
anchos
banda
bus
Gbps
conmutaci√≥n
v√≠a
bus
suele
suficiente
routers
operan
redes
acceso
empresariales
ejemplo
redes
locales
corporati-
vas
conmutaci√≥n
basada
bus
adoptada
bastantes
routers
actuales
inclu-
yendo
Cisco
5600
Cisco
Switches
2009
conmutan
paquetes
bus
tipo
backplane
32
Gbps
Conmutaci√≥n
v√≠a
red
interconexi√≥n
forma
soslayar
limitaci√≥n
ancho
banda
√∫nico
bus
compartido
consiste
emplear
red
interconexi√≥n
sofisticada
empleado
interconectar
procesadores
arquitectura
computadora
multiprocesador
conmutador
malla
crossbar
switch
red
interconexi√≥n
consta
buses
conectan
puertos
entrada
puertos
salida
muestra
Figura
4.8
paquete
llega
puerto
entrada
viaja
bus
horizontal
conectado
puerto
entrada
intersectar
bus
vertical
dirige
puerto
salida
deseado
bus
vertical
libre
paquete
transfiere
puerto
salida
bus
vertical
utilizado
transferir
paquete
procedente
puerto
entrada
puerto
salida
paquete
entrante
quedar√°
bloqueado
cola
puerto
entrada
entramados
conmutaci√≥n
Delta
Omega
propuestos
red
interconexi√≥n
puertos
entrada
salida
Consulte
Tobagi
1990
estudio
arquitecturas
conmutadores
conmutadores
switches
familia
12000
Cisco
Cisco
12000
2009
utilizan
red
intercone-
xi√≥n
proporcionando
60
Gbps
entramado
conmutaci√≥n
tendencia
dise√±o
redes
interconexi√≥n
Keshav
1998
fragmentar
paquete
IP
lon-
gitud
variable
celdas
longitud
fija
etiquetar
conmutar
dichas
celdas
red
interconexi√≥n
celdas
reensambladas
volver
formar
paquete
original
puerto
salida
celdas
longitud
fija
etique-
318
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
318tas
internas
simplificar
acelerar
considerablemente
conmutaci√≥n
paquete
red
interconexi√≥n
4.3.3
Puertos
salida
procesamiento
puertos
salida
muestra
Figura
4.9
toma
paque-
tes
hayan
almacenados
memoria
puerto
salida
transmite
enlace
salida
procesamiento
protocolo
enlace
datos
terminaci√≥n
l√≠nea
funcionalidades
capas
f√≠sica
enlace
emisor
interact√∫an
puerto
entrada
extremo
enlace
salida
visto
Secci√≥n
4.3.1
funcionalidad
gesti√≥n
cola
buffer
necesaria
entramado
conmutaci√≥n
suministra
paquetes
puerto
salida
velocidad
velo-
cidad
enlace
salida
veremos
gesti√≥n
cola
puertos
salida
4.3.4
crean
colas
fijamos
funcionalidad
puertos
entrada
salida
configura-
ciones
mostradas
Figura
4.8
evidente
formarse
colas
paquetes
puertos
entrada
puertos
salida
importante
estudiar
colas
detalle
medida
colas
crecen
espacio
disponible
buffer
router
terminar√°
agot√°ndose
producir√°
p√©rdida
paquetes
Recuerde
explicaciones
anteriores
paquetes
perd√≠an
red
descartados
router
colas
routers
paquetes
realmente
descartan
pierden
lugar
pierde
paquete
colas
puerto
entrada
colas
puerto
salida
depender√°
carga
tr√°fico
velocidad
relativa
entramado
conmutaci√≥n
velocidad
l√≠nea
veremos
Suponga
velocidades
l√≠nea
entrada
velocidades
l√≠nea
salida
id√©nticas
puertos
entrada
puertos
salida
Definimos
velocidad
entramado
conmutaci√≥n
velocidad
entramado
mover
paquetes
puertos
entrada
puertos
salida
velo-
cidad
entramado
conmutaci√≥n
velocidad
l√≠nea
entrada
colas
puertos
entrada
caso
l√≠neas
entrada
est√©n
recibiendo
paquetes
conmutador
transferir
paquetes
puerto
entrada
salida
tiempo
tarda
puertos
entrada
recibir
simult√°neamente
√∫nico
paquete
4.3
INTERIOR
ROUTER
319
Figura
4.9
Procesamiento
puerto
salida
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
319ocurrir
puertos
salida
Supongamos
estructura
conmutaci√≥n
r√°pida
velocidades
l√≠nea
caso
paquetes
entran-
tes
puertos
entrada
estar√°n
destinados
puerto
salida
caso
tiempo
tarda
recibir
enviar
√∫nico
paquete
llegar√°n
paquetes
puerto
salida
puerto
salida
transmitir
√∫nico
paquete
unidad
tiempo
tiempo
transmisi√≥n
paquete
paquetes
entrantes
pondr√°n
cola
esperar
transmitidos
enlace
salida
continuaci√≥n
posiblemente
puedan
llegar
paquetes
tiempo
tarda
trans-
mitir
paquetes
previamente
introducido
cola
sucesi-
vamente
Finalmente
n√∫mero
paquetes
cola
crecer
suficiente
agotar
espacio
memoria
puerto
salida
cuyo
caso
paquetes
descarta-
cola
puerto
salida
muestra
Figura
4.10
instante
llegado
paquete
puertos
entrada
destinados
puerto
salida
situado
Suponiendo
velocidades
l√≠nea
id√©nticas
conmutador
ope-
rando
velocidad
l√≠nea
unidad
tiempo
tiempo
necesita
recibir
enviar
paquete
paquetes
originales
habr√°n
transferidos
puerto
salida
estar√°n
cola
esperando
transmitidos
unidad
tiempo
paquetes
transmitido
enlace
salida
ejemplo
llegan
paquetes
entrada
dispositivo
conmutaci√≥n
paquetes
destino
puerto
salida
320
CAP√çTULO
CAPA
RED
Figura
4.10
Puesta
cola
puerto
salida
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
320Dado
buffers
routers
necesarios
absorber
fluctuaciones
carga
tr√°fico
natural
plantearse
espacio
buffer
necesario
a√±os
regla
heur√≠stica
RFC
3439
empleaba
determinar
tama√±o
buffer
cantidad
espacio
buffer
deb√≠a
valor
tiempo
ida
vuelta
RTT
digamos
250
milisegundos
capacidad
enlace
resultado
basado
an√°lisis
din√°mica
colas
n√∫mero
relativamente
peque√±o
flujos
TCP
Villamizar
1994
enlace
10
Gbps
RTT
250
milise-
gundos
necesitar√≠a
espacio
buffer
RTT
2,5
Gbits
recientes
esfuerzos
te√≥ricos
experimentales
Appenzeller
2004
sugieren
n√∫mero
flujos
TCP
atravesando
enlace
cantidad
espacio
buffer
necesaria
RTT
C/ 
cantidad
flujos
atravesando
enla-
ces
router
troncales
v√©ase
ejemplo
Fraleigh
2003
valor
reducci√≥n
tama√±o
buffer
necesario
significativa
Appenzellar
2004
Wischik
2005
Beheshti
2008
proporcionan
serie
estudios
com-
prensibles
acerca
problema
tama√±o
buffer
puntos
vista
te√≥rico
implementaci√≥n
operacional
consecuencia
colas
puertos
salida
planificador
paquetes
puerto
deber√°
elegir
paquete
cola
espe-
rando
transmitidos
selecci√≥n
llevarse
cabo
bas√°ndose
simple
ejemplo
planificaci√≥n
FCFS
First-Come-First-Served
llega
sirve
planificaci√≥n
sofisticada
ejemplo
colas
ponderadas
equitativas
WFQ
Weighted
Fair
Queuing
comparten
enlace
salida
equitativamente
distintas
conexiones
terminal
terminal
paquetes
cola
esperando
transmitidos
planificaci√≥n
paquetes
desempe√±a
papel
fun-
damental
proporcionar
garant√≠as
calidad
servicio
Cap√≠tulo
cubre
ampliamente
planificaci√≥n
paquetes
encontrar
exposici√≥n
disci-
plinas
planificaci√≥n
paquetes
puertos
salida
Cisco
Queue
2009
forma
similar
disponible
memoria
almacenar
buffer
paquete
entrante
tomarse
decisi√≥n
descartar
paquete
pol√≠tica
conocida
drop-tail
eliminaci√≥n
eliminar
paquetes
cola
sitio
paquete
acaba
llegar
casos
ventaja
descartar
marcar
cabecera
paquete
buffer
est√©
lleno
proporcionar
indicaci√≥n
congesti√≥n
emisor
Labrador
1999
Hollot
2002
proponen
analizan
serie
pol√≠ticas
descartar
marcar
paquetes
colectivamente
conocen
algoritmos
AQM
Active
Queue
Manage-
ment
Gesti√≥n
activa
colas
algoritmos
AQM
ampliamente
estudiados
implementados
algoritmo
RED
Random
Early
Detection
Detecci√≥n
aleatoria
tem-
prana
RED
mantiene
media
ponderada
longitud
cola
salida
longitud
media
cola
menor
umbral
m√≠nimo
minth
llega
paquete
admitido
cola
Inversamente
cola
llena
longitud
media
umbral
m√°ximo
maxth
llega
paquete
marca
descarta
llega
paquete
longitud
media
cola
intervalo
minth
maxth
paquete
marca
descarta
probabilidad
nor-
malmente
funci√≥n
longitud
media
cola
minth
maxth
pro-
puesto
diversas
funciones
probabil√≠sticas
marcado
descarte
versiones
RED
modeladas
anal√≠ticamente
simuladas
implementadas
Christiansen
2001
Floyd
2009
proporcionan
panor√°micas
referencias
lecturas
adicionales
4.3
INTERIOR
ROUTER
321
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
321Si
entramado
conmutaci√≥n
suficiente
r√°pido
velocida-
des
l√≠nea
entrada
transferir
paquetes
llegan
producir
retardos
crearse
colas
paquetes
puertos
entrada
paquetes
ir√°n
a√±adiendo
colas
puertos
entrada
esperar
turno
transferidos
entramado
conmutaci√≥n
puerto
salida
ilustrar
importante
consecuencia
colas
considere
estructura
conmutadores
malla
suponga
velocidades
l√≠nea
id√©nticas
paquete
transferido
puerto
entrada
puerto
salida
intervalo
tiempo
tarda
paquete
recibido
enlace
entrada
paquetes
pasan
cola
entrada
dada
cola
salida
deseada
siguiendo
planificaci√≥n
FCFS
M√∫ltiples
paquetes
transferi-
paralelo
puertos
salida
paquetes
situados
lugar
colas
entrada
destinados
cola
salida
paquetes
quedar√°
bloqueado
esperar
cola
entrada
entramado
conmutaci√≥n
transferir
paquete
determinado
puerto
salida
Figura
4.11
muestra
ejemplo
paquetes
oscuros
encuen-
tran
frente
respectivas
colas
entrada
destinados
puerto
salida
Suponga
entramado
conmutaci√≥n
elige
transferir
322
CAP√çTULO
CAPA
RED
Figura
4.11
Bloqueo
HOL
cola
entrada
conmutador
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
322paquete
cabecera
cola
superior
izquierda
caso
paquete
oscuro
cola
inferior
izquierda
esperar
paquete
oscuro
esperar
paquete
sombreado
cola
paquete
cola
inferior
izquierda
exista
contenci√≥n
puerto
salida
intermedio
destino
paquete
fen√≥meno
conoce
bloqueo
HOL
Head-of-the-line
Cabeza
l√≠nea
conmutador
cola
entrada
paquete
cola
entrada
esperar
transfe-
rido
entramado
conmutaci√≥n
puerto
salida
est√©
libre
bloqueado
paquete
cabeza
l√≠nea
Karol
1987
demuestra
causa
bloqueo
HOL
cola
entrada
crecer√°
longitud
ili-
mitada
informalmente
equivalente
producir√°
p√©rdida
paquetes
significativa
suposiciones
tasa
llegada
paquetes
enlaces
entrada
alcance
58
ciento
capacidad
McKeown
1997b
exponen
serie
soluciones
bloqueo
HOL
4.4
Protocolo
Internet
IP
reenv√≠o
direccionamiento
Internet
referencia
red
computadoras
espec√≠fica
hablar
reenv√≠o
direccionamiento
capa
red
secci√≥n
fijar
atenci√≥n
llevan
cabo
tareas
reenv√≠o
direccionamiento
Internet
Veremos
reenv√≠o
direccionamiento
Internet
componentes
importantes
Protocolo
Internet
IP
Actualmente
versiones
IP
lugar
examinaremos
ampliamente
utilizado
protocolo
IP
versi√≥n
habitual-
mente
denomina
IPv4
RFC
791
secci√≥n
abordaremos
versi√≥n
IP
RFC
2460
RFC
4291
protocolo
propuesto
sustituir
IPv4
entrar
lleno
IP
demos
paso
atr√°s
consideremos
componen-
tes
forman
capa
red
Internet
muestra
Figura
4.12
capa
red
Internet
componentes
principales
protocolo
IP
tema
secci√≥n
componente
enrutamiento
determina
ruta
datagrama
origen
destino
mencionado
anteriormente
protocolos
enrutamiento
calculan
tablas
reenv√≠o
utilizan
trans-
mitir
paquetes
red
Estudiaremos
protocolos
enrutamiento
Inter-
net
Secci√≥n
4.6
componente
capa
red
facilidad
permite
informar
existencia
errores
datagramas
contesta
solicitudes
deter-
minada
informaci√≥n
capa
red
Secci√≥n
4.4.3
abordaremos
protocolo
informaci√≥n
control
errores
capa
red
Internet
protocolo
ICMP
Inter-
net
Control
Message
Protocol
4.4.1
Formato
datagramas
Recuerde
referiremos
paquetes
capa
red
datagramas
Iniciamos
estudio
protocolo
IP
introducci√≥n
sintaxis
sem√°ntica
data-
grama
IPv4
est√©
pensando
√°rido
sin-
taxis
sem√°ntica
bits
paquete
datagramas
desempe√±an
papel
central
Internet
estudiantes
profesionales
redes
necesitan
com-
4.4
PROTOCOLO
INTERNET
IP
323
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
323prenderlos
dominarlos
formato
datagramas
IPv4
muestra
Figura
4.13
campos
clave
datagramas
IPv4
siguientes
N√∫mero
versi√≥n
bits
especifican
versi√≥n
protocolo
IP
datagrama
n√∫mero
versi√≥n
router
determinar
interpretar
resto
datagrama
IP
distintas
versiones
IP
utilizan
distintos
formatos
datagrama
formato
datagrama
versi√≥n
actual
IP
IPv4
mostrado
Figura
4.13
324
CAP√çTULO
CAPA
RED
li
i√≥
se√±alizaci√≥n
router
Figura
4.12
Capa
red
Internet
Figura
4.13
Formato
datagramas
IPv4
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
324Al
secci√≥n
veremos
formato
datagrama
correspondiente
ver-
si√≥n
IP
IPv6
Longitud
cabecera
Puesto
datagrama
IPv4
contener
n√∫mero
varia-
ble
opciones
incluyen
cabecera
datagrama
IPv4
bits
necesarios
determinar
comienzan
realmente
datos
datagrama
IP
mayor√≠a
datagramas
IP
contienen
opciones
datagrama
IP
t√≠pico
cabecera
20
bytes
Tipo
servicio
bits
tipo
servicio
TOS
Type
of
service
incluyeron
cabecera
IPv4
diferenciar
distintos
tipos
datagramas
IP
ejemplo
datagramas
requieran
particular
retardo
alta
tasa
transferencia
entrega
fiable
ejemplo
resultar
√∫til
diferenciar
datagra-
tiempo
real
utilizados
aplicaciones
telefon√≠a
IP
tr√°fico
tiempo
real
ejemplo
tr√°fico
FTP
nivel
espec√≠fico
servicio
proporcione
pol√≠tica
determinar√°
administrador
router
Estudia-
remos
detalle
tema
servicios
diferenciados
Cap√≠tulo
Longitud
datagrama
longitud
datagrama
IP
cabecera
datos
bytes
Puesto
campo
longitud
16
bits
tama√±o
m√°ximo
te√≥rico
datagrama
IP
65.535
bytes
datagramas
rara
longitud
1.500
bytes
Identificador
indicadores
desplazamiento
fragmentaci√≥n
campos
denomina
fragmentaci√≥n
IP
tema
estudiaremos
profun-
didad
interesante
comentar
versi√≥n
IP
IPv6
permite
fragmentaci√≥n
routers
Tiempo
vida
campo
Tiempo
vida
TTL
Time-To-Live
incluye
garantizar
datagramas
estar√°n
eternamente
circulaci√≥n
red
ejemplo
bucle
enrutamiento
larga
duraci√≥n
campo
decrementa
unidad
router
procesa
datagrama
campo
TTL
alcanza
valor
datagrama
descartado
Protocolo
campo
emplea
datagrama
IP
alcanza
destino
valor
campo
indica
protocolo
espec√≠fico
capa
transporte
pasar√°n
datos
contenidos
datagrama
IP
ejemplo
valor
indica
datos
pasan
TCP
valor
17
indica
datos
pasan
UDP
obtener
lista
valores
posibles
IANA
Protocol
Numbers
2009
Observe
n√∫mero
protocolo
especificado
datagrama
IP
desempe√±a
papel
an√°logo
campo
almacena
n√∫mero
puerto
segmento
capa
transporte
n√∫mero
protocolo
elemento
enlaza
capas
red
transporte
n√∫mero
puerto
componente
enlaza
capas
transporte
aplicaci√≥n
Cap√≠tulo
veremos
trama
capa
enlace
contiene
campo
especial
enlaza
capa
enlace
capa
red
Suma
comprobaci√≥n
cabecera
suma
comprobaci√≥n
cabecera
ayuda
routers
detectar
errores
bit
datagrama
IP
recibido
suma
comprobaci√≥n
calcula
tratando
pareja
bytes
cabecera
n√∫mero
sumando
dichos
n√∫meros
utilizando
aritm√©tica
complemento
visto
Secci√≥n
3.3
complemento
suma
conocida
suma
comprobaci√≥n
Internet
almacena
campo
Suma
comprobaci√≥n
router
calcula
suma
comprobaci√≥n
cabecera
datagrama
IP
recibido
detecta
condici√≥n
4.4
PROTOCOLO
INTERNET
IP
325
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
325de
error
suma
comprobaci√≥n
incluida
cabecera
datagrama
coincide
suma
comprobaci√≥n
calculada
Normalmente
routers
descartan
datagra-
detectado
error
Observe
suma
comproba-
ci√≥n
volver
calcularse
almacenarse
router
campo
TTL
posiblemente
campo
opciones
cambiar
interesante
exposi-
ci√≥n
acerca
algoritmos
r√°pidos
c√°lculo
suma
comprobaci√≥n
Internet
verse
RFC
1071
cuesti√≥n
suele
plantearse
punto
TCP
IP
cabo
comprobaci√≥n
errores
capa
transporte
capa
red
razones
redundancia
lugar
f√≠jese
capa
IP
calcula
suma
comprobaci√≥n
cabecera
IP
suma
comprobaci√≥n
TCP
UDP
calcula
segmento
TCP
UDP
com-
pleto
lugar
TCP
UDP
IP
necesariamente
pertenecer
pila
protocolos
principio
TCP
ejecutarse
protocolo
dife-
rente
ejemplo
ATM
IP
transportar
datos
pasar√°n
TCP
UDP
Direcciones
IP
origen
destino
origen
crea
datagrama
inserta
direcci√≥n
IP
campo
direcci√≥n
IP
origen
inserta
direcci√≥n
destino
campo
direcci√≥n
IP
destino
host
origen
determina
direc-
ci√≥n
destino
b√∫squeda
DNS
explicado
Cap√≠tulo
Secci√≥n
4.4.2
veremos
detalle
direccionamiento
IP
Opciones
campo
opciones
permite
ampliar
cabecera
IP
idea
original
opciones
cabecera
rara
emplearan
decisi√≥n
ahorrar
recur-
sos
incluyendo
informaci√≥n
campos
opcionales
cabecera
datagramas
mera
existencia
opciones
complica
cosas
cabeceras
datagrama
longitud
variable
determi-
narse
priori
comenzar√°
campo
datos
datagra-
requerir
procesamiento
opciones
cantidad
tiempo
necesario
procesar
datagrama
IP
router
variar
enormemente
consideraciones
cobran
particular
importancia
procesamiento
IP
hosts
routers
altas
prestaciones
razones
opciones
IP
eliminadas
cabecera
IPv6
veremos
Secci√≥n
4.4.4
Datos
carga
√∫til
Finalmente
llegamos
campo
importante
raz√≥n
datagrama
mayor√≠a
circunstancias
campo
datos
data-
grama
IP
contiene
segmento
capa
transporte
TCP
UDP
entre-
garse
destino
campo
datos
transportar
tipos
datos
ejemplo
mensajes
ICMP
veremos
Secci√≥n
4.4.3
Observe
datagrama
IP
20
bytes
cabecera
suponiendo
con-
opciones
datagrama
transporta
segmento
TCP
datagrama
fragmentado
transporta
40
bytes
cabecera
20
bytes
cabecera
IP
20
bytes
cabecera
TCP
mensaje
capa
aplicaci√≥n
Fragmentaci√≥n
datagrama
IP
Cap√≠tulo
veremos
protocolos
capa
enlace
transpor-
tar
paquetes
capa
red
tama√±o
protocolos
transportar
datagramas
transportan
datagramas
peque√±os
ejemplo
tramas
Ethernet
transportar
1.500
bytes
datos
tramas
326
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
326para
enlaces
√°rea
extensa
transportar
576
bytes
cantidad
m√°xima
datos
trama
capa
enlace
transportar
conoce
uni-
dad
m√°xima
transmisi√≥n
MTU
Maximum
Transmission
Unit
Puesto
data-
grama
IP
encapsula
trama
capa
enlace
router
MTU
protocolo
capa
enlace
impone
l√≠mite
estricto
longitud
datagrama
IP
limitaci√≥n
tama√±o
datagrama
IP
supone
problema
importante
realmente
problema
enlaces
existentes
ruta
emisor
destino
utilizar
protocolos
capa
enlace
protocolos
utilizar
MTU
comprender
cuesti√≥n
reenv√≠o
imagine
router
interconecta
enlaces
ejecutan
distintos
protocolos
capa
enlace
MTU
Suponga
recibe
datagrama
IP
procedente
enlace
Comprueba
tabla
reenv√≠o
determinar
enlace
salida
enlace
salida
MTU
menor
longitud
datagrama
IP
plantearnos
pregunta
meter
datagrama
IP
sobredimensionado
campo
carga
√∫til
trama
capa
enlace
soluci√≥n
consiste
fragmentar
datos
datagrama
IP
datagramas
IP
peque√±os
encapsular
datagramas
IP
peque√±os
trama
capa
enlace
distinta
enviar
dichas
tramas
enlace
salida
datagramas
peque√±os
conocen
fragmentos
fragmentos
reensamblados
llegar
capa
transporte
destino
TCP
UDP
esperando
recibir
segmentos
completos
fragmentos
capa
red
dise√±adores
IPv4
pensaron
reensamblar
data-
gramas
routers
a√±adir√≠a
complejidad
significativa
protocolo
reducir√≠a
ren-
dimiento
router
querr√≠a
reensamblar
fragmentos
Siguiendo
principio
mantener
n√∫cleo
red
simple
dise-
√±adores
IPv4
decidieron
trabajo
reensamblar
datagramas
sistemas
ter-
minales
lugar
routers
red
host
destino
recibe
serie
datagramas
procedentes
ori-
gen
determinar
datagramas
fragmentos
data-
grama
original
datagramas
fragmentos
determinar
recibido
fragmento
ensamblar
fragmentos
recibido
formar
datagrama
original
host
destino
lle-
var
cabo
tareas
reensamblado
dise√±adores
IP
versi√≥n
incluyeron
campos
identificaci√≥n
indicador
desplazamiento
fragmentaci√≥n
cabecera
datagrama
IP
crea
datagrama
host
emisor
marca
datagrama
n√∫mero
identificaci√≥n
direcciones
origen
destino
Normal-
mente
host
emisor
incrementa
n√∫mero
identificaci√≥n
datagrama
env√≠a
router
necesita
fragmentar
datagrama
datagrama
resultante
fragmento
marca
direcci√≥n
origen
direcci√≥n
destino
n√∫mero
identificaci√≥n
datagrama
original
destino
recibe
serie
datagramas
procedentes
host
emisor
examinar
n√∫meros
identifi-
caci√≥n
datagramas
determinar
fragmentos
datagrama
Puesto
IP
servicio
fiable
fragmentos
lleguen
destino
raz√≥n
host
des-
tino
est√©
absolutamente
seguro
recibido
fragmento
datagrama
ori-
ginal
fragmento
bit
indicador
puesto
fragmentos
bit
indicador
puesto
host
destino
deter-
4.4
PROTOCOLO
INTERNET
IP
327
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
327mine
falta
fragmento
reensamblar
fragmentos
orden
apropiado
utiliza
campo
desplazamiento
especificar
posici√≥n
datagrama
IP
original
encaja
fragmento
Figura
4.14
ilustra
ejemplo
datagrama
4.000
bytes
20
bytes
cabecera
IP
3.980
bytes
carga
√∫til
IP
llega
router
reenviado
enlace
MTU
1.500
bytes
implica
3.980
bytes
datos
datagrama
ori-
ginal
alojados
fragmentos
distintos
datagrama
IP
Suponga
datagrama
original
marcado
n√∫mero
identi-
ficaci√≥n
777
caracter√≠sticas
fragmentos
muestran
Tabla
4.2
valores
tabla
reflejan
requisito
cantidad
datos
√∫tiles
originales
fragmentos
m√∫ltiplo
bytes
valor
desplazamiento
especificarse
unidades
fragmentos
bytes
destino
carga
√∫til
datagrama
pasa
capa
transporte
capa
IP
reconstruido
completamente
datagrama
IP
original
fragmentos
llegan
destino
datagrama
incompleto
descarta
pasa
capa
transporte
visto
cap√≠tulo
utilizando
TCP
capa
transporte
TCP
recuperar√°
p√©rdida
origen
retransmita
datos
datagrama
original
Acabamos
fragmentaci√≥n
IP
desempe√±a
papel
importante
ensam-
blado
dispares
tecnolog√≠as
capa
enlace
fragmentaci√≥n
tam-
bi√©n
costes
lugar
a√±ade
complejidad
routers
sistemas
terminales
dise√±ados
acomodar
fragmentaci√≥n
reensamblado
data
328
CAP√çTULO
CAPA
RED
Figura
4.14
Fragmentaci√≥n
reensamblado
IP
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
328Fragmento
Bytes
ID
Desplazamiento
Indicador
fragmento
1.480
bytes
Identificaci√≥n
777
Desplaz
significa
Indicador
campo
datos
datos
insertarse
datagrama
IP
comenzando
byte
fragmentos
fragmento
1.480
bytes
Identificaci√≥n
777
Desplaz
185
significa
Indicador
datos
datos
insertarse
comenzando
byte
fragmentos
1.480
Observe
185
1.480
Tercer
fragmento
1.020
bytes
Identificaci√≥n
777
Desplaz
370
significa
Indicador
3.980‚Äì1.480
datos
insertarse
1.480)de
datos
comenzando
byte
fragmento
2.960
Observe
370
2.960
Tabla
4.2
Fragmentos
IP
gramas
lugar
fragmentaci√≥n
utilizar
crear
ataques
letales
atacante
env√≠a
serie
fragmentos
extra√±os
inesperados
ejemplo
cl√°-
sico
ataque
Jolt2
atacante
env√≠a
flujo
fragmentos
peque√±os
host
objetivo
desplazamiento
cero
host
objetivo
colapsar
intentar
reconstruir
datagramas
paquetes
degenerados
tipo
ataque
env√≠a
fragmentos
IP
solapados
fragmentos
cuyos
valores
desplaza-
miento
establecido
fragmentos
alinean
apropiadamente
sistemas
operativos
vulnerables
fragmentos
solapados
dejar
funcionar
Skoudis
2006
veremos
secci√≥n
versi√≥n
protocolo
IP
IPv6
admite
fragmentaci√≥n
simplificando
procesamiento
paquetes
IP
IP
vulnerable
ataques
sitio
web
libro
proporcionamos
applet
Java
genera
fragmentos
proporcionar
tama√±o
datagrama
entrada
MTU
identificaci√≥n
datagrama
entrada
applet
genera
autom√°ticamente
fragmentos
Visite
sitio
http://
www.awl.com/kurose-ross
4.4.2
Direccionamiento
IPv4
ocuparnos
direccionamiento
IPv4
piense
direccionamiento
tema
sencillo
esperanza
terminar
cap√≠tulo
convencido
direccionamiento
Internet
tema
interesante
sutil
importancia
Internet
3Com
Addressing
2009
cap√≠tulo
Stewart
1999
proporcionan
excelente
tratamiento
direccionamiento
IPv4
abordar
direccionamiento
IP
necesitamos
dedicar
palabras
hosts
routers
conectados
red
Normalmente
host
dispone
√∫nico
enlace
red
IP
host
desea
enviar
datagrama
4.4
PROTOCOLO
INTERNET
IP
329
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
329hace
enlace
l√≠mite
host
enlace
f√≠sico
denomina
interfaz
Consideremos
continuaci√≥n
router
interfaces
Puesto
tarea
router
consiste
recibir
datagrama
enlace
reenviarlo
enlace
router
necesariamente
conectado
enlaces
l√≠mite
router
cualquiera
enlaces
conoce
interfaz
router
interfaces
enlaces
Puesto
hosts
routers
capaces
enviar
recibir
datagramas
IP
IP
requiere
interfaz
host
router
pro-
pia
direcci√≥n
IP
t√©cnicamente
direcci√≥n
IP
asociada
interfaz
lugar
host
router
contiene
dicha
interfaz
direcciones
IP
longitud
32
bits
equivale
bytes
32
direcciones
IP
posibles
Aproximando
10
103
f√°cil
4.000
millones
direcciones
IP
posibles
direcciones
normalmente
expresan
uti-
lizando
notaci√≥n
decimal
punto
byte
direcci√≥n
escribe
formato
decimal
separada
punto
resto
bytes
direcci√≥n
ejemplo
considere
direcci√≥n
IP
193.32.216.9
193
n√∫mero
decimal
equivalente
bits
direcci√≥n
32
equivalente
decimal
segundos
bits
direcci√≥n
sucesivamente
direcci√≥n
193.32.216.9
notaci√≥n
bina-
ria
expresa
11000001
00100000
11011000
00001001
interfaces
host
router
Internet
asociada
direcci√≥n
IP
globalmente
√∫nica
caso
interfaces
utilizadas
NAT
veremos
secci√≥n
obstante
direcciones
ele-
gir
tontas
locas
direcci√≥n
IP
interfaz
determinada
subred
conectada
Figura
4.15
proporciona
ejemplo
interfaces
direccionamiento
IP
figura
utiliza
router
interfaces
interconectar
hosts
Echemos
330
CAP√çTULO
CAPA
RED
Figura
4.15
Subredes
direcciones
interfaces
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3304.4
PROTOCOLO
INTERNET
IP
331
vistazo
direcciones
IP
asignadas
interfaces
hosts
router
puntos
merece
pena
destacar
hosts
superior
izquierda
Figura
4.15
interfaz
router
conectados
direcci√≥n
IP
formato
223.1.1.xxx
24
bits
izquierda
direcci√≥n
IP
iguales
interfaces
interconectadas
red
contiene
routers
red
ejemplo
LAN
Ethernet
cuyo
caso
interfaces
estar√≠an
interconectadas
hub
Ethernet
switch
Ethernet
v√©ase
Cap√≠tulo
t√©rminos
IP
red
interconecta
interfaces
host
interfaz
router
forma
subred
RFC
950
subred
conoce
red
IP
simplemente
red
literatura
dedicada
Internet
direccionamiento
IP
asigna
direcci√≥n
subred
223.1.1.0/24
notaci√≥n
/24
ocasiones
deno-
mina
m√°scara
subred
indica
24
bits
izquierda
magnitud
32
bits
define
direcci√≥n
subred
subred
223.1.1.0/24
consta
interfaces
host
223.1.1.1
223.1.1.2
223.1.1.3
interfaz
router
223.1.1.4
host
adicional
conectado
subred
223.1.1.0/24
requerir√≠a
direcci√≥n
forma
223.1.1.xxx
Figura
4.15
muestran
subredes
adicionales
red
223.1.2.0/24
subred
223.1.3.0/24
Figura
4.16
ilustra
subredes
IP
presentes
Figura
4.15
definici√≥n
IP
subred
restringida
segmentos
Ethernet
conec-
hosts
interfaz
router
Profundicemos
cuesti√≥n
Consi-
dere
Figura
4.17
muestra
routers
interconectados
enlaces
punto
punto
router
interfaces
enlace
punto
punto
enlace
difusi√≥n
conecta
directamente
router
pareja
hosts
subredes
presentes
223.1.1.0/24
223.1.2.0/24
223.1.3.0/24
similares
subredes
Figura
4.15
f√≠jese
ejemplo
subredes
adicionales
subred
223.1.9.0/24
interfaces
conectan
routers
R1
R2
subred
223.1.8.0/24
interfaces
conectan
routers
R2
R3
Figura
4.16
Direcciones
subred
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
331una
subred
223.1.7.0/24
interfaces
conectan
routers
R3
R1
sistema
interconectado
general
routers
hosts
utilizar
receta
definir
subredes
existentes
sistema
determinar
subredes
desconecte
interfaz
host
router
creando
islas
redes
aisladas
interfaces
acaban
puntos
terminales
redes
aisladas
redes
aisladas
subred
aplicamos
procedimiento
sistema
interconectado
Figura
4.17
obtenemos
islas
subredes
Ap
empresa
instituci√≥n
acad√©mica
m√∫ltiples
segmentos
Ethernet
enlaces
punto
punto
subredes
teniendo
dispositivos
subred
dada
direcci√≥n
subred
principio
distintas
subredes
direcciones
subred
pr√°ctica
direcciones
subred
com√∫n
entender
veamos
gestiona
direccionamiento
Internet
global
estrategia
asignaci√≥n
direcciones
Internet
conoce
Enrutamiento
dominios
clase
CIDR
Classless
Interdomain
Routing
RFC
4632
CIDR
generaliza
noci√≥n
direccionamiento
subred
sucede
subredes
IP
direcci√≥n
IP
32
bits
divide
partes
expresa
notaci√≥n
deci-
punto
a.b.c.d
indica
n√∫mero
bits
direcci√≥n
332
CAP√çTULO
CAPA
RED
Figura
4.17
routers
interconectan
subredes
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
332Los
bits
significativos
direcci√≥n
formato
a.b.c.d
constituyen
red
direcci√≥n
IP
referencia
prefijo
prefijo
red)d
direciones
contiguas
rango
direcciones
prefijo
com√∫n
v√©anse
principios
recuadro
Pr√°ctica
caso
direcciones
IP
dispositi-
vos
encuentran
organizaci√≥n
compartir√°n
prefijo
estudiemos
protocolo
enrutamiento
BGP
Internet
Secci√≥n
4.6
veremos
routers
externos
red
organizaci√≥n
bits
prefijo
router
externo
organizaci√≥n
reenv√≠a
datagrama
cuya
direcci√≥n
destino
organizaci√≥n
√∫nicamente
necesita
bits
direcci√≥n
reduce
considerablemente
tama√±o
tabla
reenv√≠o
routers
√∫nica
entrada
formato
a.b.c.d
bastar√°
reenviar
paquetes
destino
organizaci√≥n
32-x
bits
restantes
direcci√≥n
emplearse
diferenciar
disposi-
tivos
internos
organizaci√≥n
teniendo
prefijo
red
4.4
PROTOCOLO
INTERNET
IP
333
PRINCIPLES
IN
PRACTICE
ejemplo
ISP
conecta
organizaciones
Internet
ilustra
asignaci√≥n
cuidadosa
direcciones
CIDR
facilita
enrutamiento
Suponga
muestra
Figura
4.18
ISP
llamaremos
ISP
anuncia
mundo
exterior
enviar√°
data-
grama
cuyos
20
bits
direcci√≥n
correspondan
200.23.16.0/20
resto
mundo
necesita
bloque
direcciones
200.23.16.0/20
reali-
dad
organizaciones
subredes
capacidad
emplear
prefijo
anunciar
m√∫ltiples
redes
suele
denominarse
agregaci√≥n
direcciones
agregaci√≥n
rutas
resumen
rutas
t√©cnica
agregaci√≥n
direcciones
funciona
extraordinariamente
direc-
ciones
asignan
bloques
ISP
asignan
bloque
organizaciones
cliente
ocurre
direcciones
asignadas
forma
jer√°rquica
ocurrir√≠a
ejemplo
ISP
adquiere
ISP
Organizaci√≥n
conecte
Internet
ISP
subsidario
muestra
Figura
4.18
ISP
subsidario
posee
bloque
direcciones
199.31.0.0/16
direcciones
IP
Organizaci√≥n
lamentablemente
pertenecen
bloque
direcciones
habr√≠a
caso
Realmente
Organizaci√≥n
renumerar
routers
hosts
disponer
direcciones
contenidas
bloque
direcciones
ISP
B.
soluci√≥n
costosa
Organizaci√≥n
reasignada
futuro
ISP
subsidiario
soluci√≥n
normalmente
adoptar√°
Organizaci√≥n
mantener
direcciones
200.23.18.0/23
caso
muestra
Figura
4.19
ISP
contin√∫a
anuncian-
do
bloque
direcciones
200.23.16.0/20
ISP
contin√∫a
anunciando
bloque
199.31.0.0/16
ISP
anuncia
bloque
direcciones
Organizaci√≥n
200.23.18.0/23
routers
Internet
vean
bloques
direc-
ciones
200.23.16.0/20
ISP
200.23.18.0/23
ISP
deseen
enrutar
direcci√≥n
contenida
bloque
200.23.18.0/23
utilizar√°n
regla
coincidencia
prefijo
v√©ase
Secci√≥n
4.2.2
enviar√°n
ISP
anuncia
prefijo
direcci√≥n
espec√≠fico
corresponde
direcci√≥n
destino
PR√ÅCTICA
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
333bits
considerar
reenviar
paquetes
routers
internos
organiza-
ci√≥n
bits
menor
peso
estructura
subred
adicional
visto
anteriormente
ejemplo
suponga
21
bits
direc-
ci√≥n
CIDR
a.b.c.d/21
especifican
prefijo
red
organizaci√≥n
comunes
direcciones
IP
dispositivos
dicha
organizaci√≥n
restantes
11
bits
iden-
tifican
hosts
espec√≠ficos
organizaci√≥n
estructura
interna
orga-
nizaci√≥n
11
bits
derecha
empleen
dividir
334
CAP√çTULO
CAPA
RED
Figura
4.18
Agregaci√≥n
rutas
direccionamiento
jer√°rquicos
Figura
4.19
ISP
ruta
espec√≠fica
Organizaci√≥n
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
334subredes
organizaci√≥n
viso
anteriormente
ejemplo
a.b.c.d/24
referencia
subred
espec√≠fica
organizaci√≥n
adoptara
enrutamiento
CIDR
red
direcci√≥n
IP
restringida
longitudes
16
24
bits
esquema
direccionamiento
conocido
direccionamiento
clases
subredes
direcciones
16
24
bits
conoc√≠an
respectivamente
redes
clase
C.
requisito
subred
direcci√≥n
IP
tuviera
exactamente
longitud
bytes
volvi√≥
pro-
blem√°tico
hora
soporte
r√°pido
crecimiento
n√∫mero
organizaciones
subredes
tama√±o
peque√±o
subred
clase
/24
acomodar
28
254
hosts
28
256
direcciones
reservadas
usos
especia-
organizaciones
subred
clase
/16
soporte
65.634
hosts
direccionamiento
clases
organizaci√≥n
ejemplo
2.000
hosts
asignada
normalmente
direcci√≥n
subred
clase
/16
llev√≥
r√°pido
agotamiento
espacio
direcciones
clase
pobre
utilizaci√≥n
espacio
direcciones
asignado
ejemplo
organizaci√≥n
empleaba
direcci√≥n
clase
2.000
hosts
asignado
espacio
suficiente
65.534
interfaces
dejando
bloqueadas
63.000
direcciones
pod√≠an
utilizadas
organizaciones
Ser√≠amos
negligentes
mencion√°ramos
tipo
direcci√≥n
IP
direc-
ci√≥n
IP
difusi√≥n
255.255.255.255
host
env√≠a
datagrama
cuya
direcci√≥n
destino
255.255.255.255
mensaje
entrega
hosts
existentes
subred
Opcionalmente
routers
reenv√≠an
mensaje
subredes
vecinas
aun-
habitualmente
estudiado
detalle
direccionamiento
IP
necesitamos
hosts
subredes
obtienen
direcciones
Comenzaremos
viendo
organi-
zaci√≥n
obtiene
bloque
direcciones
dispositivos
veremos
asigna
direcci√≥n
bloque
direcciones
organizaci√≥n
dispositivo
ejemplo
host
obtener
bloque
direcciones
obtener
bloque
direcciones
IP
utilizado
subred
organizaci√≥n
administrador
red
contactar
lugar
ISP
proporcionar√°
direcciones
extraidas
bloque
direcciones
asignado
ISP
ejemplo
ISP
haberle
asignado
bloque
direcciones
200.23.16.0/20
ISP
dividir
bloque
direcciones
bloques
direcciones
contiguos
tama√±o
asignar
bloques
direcciones
organizaciones
prestar
servicio
muestra
continua-
ci√≥n
subrayado
subred
direcciones
Bloque
ISP
200.23.16.0/20
1001000
00010111
00010000
00000000
Organizaci√≥n
200.23.16.0/23
1001000
00010111
00010000
00000000
Organizaci√≥n
200.23.18.0/23
1001000
00010111
00010010
00000000
Organizaci√≥n
200.23.20.0/23
1001000
00010111
00010100
00000000
Organizaci√≥n
200.23.30.0/23
1001000
00010111
00011110
00000000
4.4
PROTOCOLO
INTERNET
IP
335
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
335Obtener
conjunto
direcciones
ISP
forma
bloque
direcciones
√∫nica
forma
Evidentemente
existir
forma
ISP
obtener
bloque
direcciones
entidad
autoritativa
global
cuya
responsabilidad
gestionar
espacio
direcciones
IP
asignar
bloques
direcciones
ISP
organizaciones
direcciones
IP
gestionadas
entidad
ICANN
Internet
Corporation
for
Assigned
Names
and
Num-
bers
Corporaci√≥n
Internet
n√∫meros
nombres
asignados
ICANN
2009
bas√°ndose
directrices
establecidas
RFC
2050
papel
organizaci√≥n
√°nimo
lucro
ICANN
NTIA
1998
asignar
direcciones
IP
gestionar
servidores
ra√≠z
DNS
pol√©mico
trabajo
asignar
nombres
dominio
resolver
disputas
dichos
nombres
organizaci√≥n
ICANN
asigna
direcciones
registros
regionales
Internet
ejemplo
ARIN
RIPE
APNIC
LAC-
NIC
forman
Organizaci√≥n
Soporte
Direcciones
ICANN
ASO-ICANN
2009
gestionan
asignaci√≥n
administraci√≥n
direcciones
regiones
obtener
direcci√≥n
host
Protocolo
configuraci√≥n
din√°mica
host
organizaci√≥n
obtenido
bloque
direcciones
asignar
direc-
ciones
IP
individuales
interfaces
hosts
routers
Normalmente
administra-
dor
sistemas
configura
manualmente
direcciones
IP
router
forma
remota
herramienta
gesti√≥n
red
direcciones
host
configurar
manualmente
frecuentemente
tarea
cabo
uti-
lizando
Protocolo
configuraci√≥n
din√°mica
host
DHCP
Dynamic
Host
Confi-
guration
Protocol
RFC
2131
DHCP
permite
host
obtener
permite
asigne
autom√°ticamente
direcci√≥n
IP
administrador
red
configurar
DHCP
host
reciba
direcci√≥n
IP
conecte
red
host
asignado
direcci√≥n
IP
temporal
host
conecte
red
asignaci√≥n
direcciones
IP
hosts
DHCP
permite
host
obtenga
informaci√≥n
adicional
ejemplo
m√°scara
subred
direcci√≥n
router
salto
denominado
router
pasarela
gateway
predeterminado
direcci√≥n
servidor
DNS
local
Gracias
capacidad
DHCP
automatizar
proceso
conexi√≥n
host
red
protocolo
plug-and-play
capacidad
atrac-
tivo
administrador
red
caso
tendr√≠a
tareas
manualmente
DHCP
disfruta
amplio
redes
acceso
Internet
residenciales
redes
LAN
inal√°mbricas
hosts
unen
red
salen
frecuentemente
Considere
ejemplo
estudiante
traslada
computadora
port√°til
casa
biblioteca
clase
Probablemente
localizaci√≥n
estudiante
conectar√°
subred
necesitar√°
direcci√≥n
IP
lugar
DHCP
idealmente
adaptado
situaciones
usua-
rios
vienen
necesitan
direcciones
periodo
tiempo
limi-
tado
DHCP
resulta
√∫til
redes
acceso
ISP
trabajan
mercado
residencial
Considere
ejemplo
ISP
residencial
2.000
clientes
400
clientes
l√≠nea
tiempo
caso
lugar
nece-
sitar
bloque
2.048
direcciones
servidor
DHCP
asigne
direcciones
forma
din√°mica
necesitar√°
bloque
512
direcciones
ejemplo
bloque
for-
336
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3364.4
PROTOCOLO
INTERNET
IP
337
mato
direcci√≥n
a.b.c.d/23
medida
hosts
unen
red
salen
ser-
vidor
DHCP
necesita
actualizar
lista
direcciones
IP
disponibles
host
une
red
servidor
DHCP
asigna
direcci√≥n
arbitraria
conjunto
actual
direcciones
disponibles
host
abandona
red
direcci√≥n
devuelta
conjunto
DHCP
protocolo
cliente-servidor
Normalmente
cliente
host
reci√©n
lle-
gado
desea
obtener
informaci√≥n
configuraci√≥n
red
incluyendo
direcci√≥n
IP
caso
simple
subred
sentido
direccionamiento
mos-
trado
Figura
4.17
servidor
DHCP
subred
servidor
necesario
agente
retransmisi√≥n
DHCP
normalmente
router
conozca
direc-
ci√≥n
servidor
DHCP
dicha
red
Figura
4.20
muestra
servidor
DHCP
conec-
tado
subred
223.1.2/24
router
actuando
agente
retransmisi√≥n
clientes
reci√©n
llegados
conectan
subredes
223.1.1/24
223.1.3/24
exposici√≥n
supondremos
disponible
servidor
DHCP
subred
host
reci√©n
llegado
red
protocolo
DHCP
proceso
pasos
muestra
Figura
4.21
configuraci√≥n
red
mostrada
Figura
4.20
figura
sudirI
direcci√≥n
Internet
indica
direcci√≥n
asigna
cliente
acaba
llegar
pasos
siguientes
Descubrimiento
servidor
DHCP
tarea
host
reci√©n
llegado
encontrar
servidor
DHCP
interactuar
mensaje
descubrimiento
DHCP
env√≠a
cliente
paquete
UDP
puerto
Figura
4.20
Escenario
cliente-servidor
DHCP
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
33767
paquete
UDP
encapsula
datagrama
IP
deber√≠a
enviarse
datagrama
host
siquiera
conoce
direcci√≥n
IP
red
conectando
direcci√≥n
servidor
DHCP
red
situa-
ci√≥n
cliente
DHCP
crea
datagrama
IP
contiene
mensaje
descubrimiento
DHCP
direcci√≥n
IP
difusi√≥n
255.255.255.255
direcci√≥n
IP
ori-
gen
host
0.0.0.0
cliente
DHCP
pasa
datagrama
IP
capa
enlace
difunde
trama
nodos
conectados
subred
Sec-
ci√≥n
5.4
estudiaremos
detalle
proceso
difusi√≥n
capa
enlace
Oferta(s
servidor
DHCP
servidor
DHCP
recibe
mensaje
descubri-
miento
DHCP
responde
cliente
mensaje
oferta
DHCP
difunde
nodos
subred
utilizando
direcci√≥n
IP
difusi√≥n
255.255
255.255
pregunte
respuesta
servidor
difundirse
Puesto
subred
existir
servidores
DHCP
cliente
encontrarse
situaci√≥n
envidiable
elegir
ofertas
mensaje
oferta
servidor
contiene
ID
transacci√≥n
mensaje
descubri-
338
CAP√çTULO
CAPA
RED
segundos
segundos
3.600
segundos
Figura
4.21
Interacci√≥n
cliente-servidor
DHCP
Cliente
llega
Servidor
DHCP
223.1.2.5
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
338miento
recibido
direcci√≥n
IP
propuesta
cliente
m√°scara
red
tiempo
arrendamiento
direcci√≥n
IP
tiempo
direcci√≥n
IP
v√°lida
habitual
servidor
defina
tiempo
arrendamiento
horas
Droms
2002
Solicitud
DHCP
.El
cliente
reci√©n
llegado
seleccionar√°
ofertas
servidor
responder√°
oferta
seleccionada
mensaje
solicitud
DHCP
devolviendo
par√°metros
configuraci√≥n
ACK
DHCP
.El
servidor
contesta
mensaje
solicitud
DHCP
mensaje
ACK
DHCP
confirma
par√°metros
solicitados
cliente
recibe
mensaje
reconocimiento
ACK
DHCP
interac-
ci√≥n
completa
cliente
utilizar
direcci√≥n
IP
asignada
DHCP
tiempo
arrendamiento
cliente
desear
utilizar
direcci√≥n
tiempo
arrendado
DHCP
proporciona
mecanismo
permite
cliente
renovar
tiempo
arrendamiento
direcci√≥n
IP
valor
capacidad
plug-and-play
DHCP
considerando
alternativa
configurar
manualmente
direcci√≥n
IP
host
Recuerde
estu-
diante
clase
biblioteca
dormitorio
port√°til
uni√©ndose
subred
obtiene
direcci√≥n
IP
ubicaci√≥n
inimagi-
nable
administrador
sistemas
tuviera
reconfigurar
computadoras
port√°tiles
ubicaci√≥n
estudiantes
asisten
clases
redes
suficientemente
expertos
configurar
manualmente
port√°tiles
respecta
movilidad
DHCP
presenta
deficiencias
Puesto
obtiene
direcci√≥n
IP
DHCP
nodo
conecta
subred
conexi√≥n
TCP
aplicaci√≥n
remota
mantenerse
nodo
m√≥vil
subredes
Cap√≠tulo
examinaremos
infraestructura
IP
m√≥vil
extensi√≥n
reciente
infraestructura
IP
permite
nodo
m√≥vil
utilizar
direcci√≥n
permanente
desplazado
subredes
encontrar
informaci√≥n
adicional
DHCP
Droms
2002
dhc
2009
Internet
Systems
Consortium
ISC
2009
disponible
implementaci√≥n
referencia
c√≥digo
fuente
abierto
DHCP
Traducci√≥n
direcciones
red
NAT
estudiado
direcciones
Internet
formato
datagramas
IPv4
completamente
conscientes
dispositivo
IP
necesita
direcci√≥n
IP
proliferaci√≥n
subredes
dom√©sticas
oficina
peque√±a
SOHO
Small
Office
Home
Office
parecer
implica
red
SOHO
desea
instalar
LAN
conectar
m√°quinas
ISP
deber√≠a
asignar
rango
direcciones
cubrir
m√°quinas
red
SOHO
subred
creciera
ejemplo
ni√±os
casa
disponen
computadoras
dis-
positivos
PDA
tel√©fonos
IP
Game
Boys
conectadas
red
habr√≠a
asignar
bloque
direcciones
enorme
ocurre
ISP
asignado
porciones
adyacentes
rango
direcciones
actualmente
red
SOHO
persona
normal
querr√≠a
necesitar√≠a
gestionar
direcciones
IP
red
casa
Afortunada-
mente
forma
simple
asignar
direcciones
encontrado
4.4
PROTOCOLO
INTERNET
IP
339
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
339vez
amplio
escenarios
tipo
traducci√≥n
direcciones
red
NAT
Net-
work
Address
Translation
RFC
2663
RFC
3022
Figura
4.22
muestra
funcionamiento
router
NAT
router
encuen-
tra
vivienda
interfaz
red
dom√©stica
situada
derecha
Figura
4.22
direccionamiento
red
dom√©stica
exactamente
visto
anteriormente
interfaces
red
direcci√≥n
subred
10.0.0/24
espacio
direcciones
10.0.0.0/8
corresponde
par-
tes
espacio
direcciones
IP
reservado
RFC
1918
red
privada
√°mbito
direcciones
privadas
red
dom√©stica
Figura
4.22
√°mbito
direcciones
privadas
referencia
red
cuyas
direcciones
sig-
nificado
dispositivos
internos
dicha
red
Veamos
importante
Considere
cientos
miles
redes
dom√©sticas
utili-
zan
espacio
direcciones
10.0.0.0/24
dispositivos
red
dom√©stica
dada
enviarse
paquetes
utilizando
direccionamiento
10.0.0.0/24
paquetes
reenviados
red
dom√©stica
Internet
evidente-
mente
utilizar
direcciones
direcci√≥n
origen
direcci√≥n
destino
cientos
miles
redes
emplean
bloque
direccio-
nes
direcciones
10.0.0.0/24
significado
red
dom√©s-
tica
dada
direcciones
privadas
significado
red
direccionan
paquetes
env√≠an
Internet
reciben
Internet
necesa-
riamente
direcciones
√∫nicas
entender
comprender
funciona
NAT
router
NATno
router
ojos
mundo
exterior
lugar
router
NAT
comporta
cara
exterior
√∫nico
dispositivo
direcci√≥n
IP
√∫nica
Figura
4.22
tr√°fico
sale
router
dom√©stico
Internet
direcci√≥n
IP
origen
138.76.29.7
tr√°fico
entra
direc-
ci√≥n
destino
138.76.29.7
resumen
router
NAT
oculta
detalles
red
dom√©s-
tica
mundo
exterior
nota
margen
posiblemente
est√©
preguntando
obtienen
computadoras
red
dom√©stica
direcciones
obtiene
router
direcci√≥n
IP
√∫nica
respuesta
ambas
preguntas
DHCP
rou-
ter
obtiene
direcci√≥n
servidor
DHCP
ISP
router
ejecuta
servidor
DHCP
proporcionar
direcciones
computadoras
espacio
direcciones
red
dom√©stica
controlada
router
NAT-DHCP
datagramas
llegan
router
NAT
procedentes
WAN
direcci√≥n
IP
destino
espec√≠ficamente
interfaz
WAN
router
NAT
router
host
interno
deber√≠a
reenviar
datagrama
truco
consiste
utilizar
tabla
traducciones
NAT
almacenada
router
NAT
incluir
n√∫meros
puerto
direcciones
IP
entradas
tabla
Considere
ejemplo
Figura
4.22
Suponga
usuario
red
dom√©stica
utiliza
host
direcci√≥n
10.0.0.1
solicita
p√°gina
web
almacenada
ser-
vidor
web
puerto
80
direcci√≥n
IP
128.119.40.186
host
10.0.0.1
asigna
n√∫mero
puerto
origen
arbitrario
3345
env√≠a
datagrama
LAN
router
NAT
recibe
datagrama
genera
n√∫mero
puerto
origen
5001
datagrama
sustituye
direcci√≥n
IP
origen
direcci√≥n
IP
red
WAN
138.76.29.7
susti-
tuye
n√∫mero
puerto
origen
original
3345
n√∫mero
puerto
origen
5001
generar
n√∫mero
puerto
origen
router
NAT
seleccionar
n√∫mero
puerto
origen
actualmente
encuentre
tabla
tra-
340
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
340ducciones
NAT
Observe
puesto
longitud
campo
n√∫mero
puerto
16
bits
protocolo
NAT
soporte
60.000
conexiones
simult√°neas
utilizando
√∫nica
direcci√≥n
IP
WAN
router
router
NAT
a√±ade
entrada
tabla
traducciones
servidor
web
afortunadamente
consciente
data-
grama
entrante
contiene
solicitud
HTTP
manipulado
router
NAT
res-
ponde
datagrama
cuya
direcci√≥n
destino
direcci√≥n
IP
router
NAT
cuyo
n√∫mero
puerto
destino
5001
datagrama
llega
router
NAT
indexa
tabla
traducciones
NAT
utilizando
direcci√≥n
IP
destino
n√∫mero
puerto
destino
obtener
direcci√≥n
IP
10.0.0.1
n√∫mero
puerto
destino
3345
apropiados
navegador
red
dom√©stica
continuaci√≥n
router
rees-
cribe
direcci√≥n
destino
n√∫mero
puerto
destino
datagrama
reenv√≠a
red
dom√©stica
NAT
disfrutado
difusi√≥n
a√±os
tene-
mos
puristas
comunidad
IETF
ponen
bastantes
objeciones
NAT
lugar
argumentan
n√∫meros
puerto
emplearse
direccionar
procesos
direccionar
hosts
violaci√≥n
causar
problemas
servidores
ejecuci√≥n
red
dom√©stica
visto
Cap√≠tulo
procesos
servidor
espera
solicitudes
entrantes
puertos
conocidos
lugar
argumentan
routers
pensa-
procesar
paquetes
capa
tercer
lugar
opinan
protocolo
NAT
viola
venido
denominar
enfoque
terminal
terminal
hosts
comunicarse
directamente
nodos
intermedios
modifi-
quen
direcciones
IP
n√∫meros
puerto
cuarto
lugar
creen
deber√≠a
uti-
lizarse
IPv6
v√©ase
Secci√≥n
4.4.4
resolver
carest√≠a
direcciones
IP
lugar
parchear
problema
soluci√≥n
milagrosa
NAT
guste
NAT
convertido
componente
importante
Internet
4.4
PROTOCOLO
INTERNET
IP
341
Figura
4.22
Traducci√≥n
direcciones
red
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
341Otro
problema
importante
NAT
interfiere
aplicaciones
P2P
inclu-
yendo
aplicaciones
compartici√≥n
archivos
P2P
aplicaciones
voz
IP
P2P.
Recuerde
Cap√≠tulo
aplicaci√≥n
P2P
par
participante
debe-
r√≠a
iniciar
conexi√≥n
TCP
par
participante
esencia
pro-
blema
par
situado
traductor
NAT
actuar
servidor
aceptar
conexiones
TCP
veremos
problemas
repaso
pro-
blema
NAT
soslayarse
par
situado
traductor
NAT
caso
par
contactar
par
par
intermedio
est√©
situado
traductor
NAT
establecida
conexi√≥n
TCP
activa
par
pedir
par
inicie
conexi√≥n
TCP
directamente
par
A.
conexi√≥n
TCP
directa
P2P
establecido
pares
intercambiar
mensajes
archivos
t√©cnica
conocida
nombre
inversi√≥n
conexi√≥n
connection
reversal
utilizada
aplicaciones
P2P
NAT
transversal
NAT
Traversal
par
par
utilizan
NAT
situaci√≥n
compleja
solventarse
utilizando
re-
transmisores
aplicaci√≥n
visto
retransmisores
Skype
Cap√≠tulo
UPnP
mecanismo
NAT
transversal
proporcionado
frecuentemente
Uni-
versal
Plug
and
Play
UPnP
protocolo
permite
host
descubrir
configu-
rar
traductor
NAT
UPnP
Forum
2009
UPnP
requiere
host
traductor
NAT
compatibles
UPnP.
UPnP
aplicaci√≥n
ejecuta
host
solicitar
correspondencia
NAT
tupla
direcci√≥n
IP
privada
n√∫mero
puerto
privado
tupla
direcci√≥n
IP
p√∫blica
n√∫mero
puerto
p√∫blico
n√∫mero
puerto
p√∫blico
solicitado
traductor
NAT
acepta
solicitud
crea
corres-
pondencia
nodos
exterior
iniciar
conexiones
TCP
direcci√≥n
IP
privada
n√∫mero
puerto
privado
UPnP
permite
aplicaci√≥n
valor
direcci√≥n
IP
p√∫blica
n√∫mero
puerto
p√∫blico
aplicaci√≥n
anunciarse
mundo
exterior
ejemplo
suponga
host
situado
traductor
NAT
compatible
UPnP
direcci√≥n
privada
10.0.0.1
ejecutando
BitTorrent
puerto
3345
Suponga
direcci√≥n
IP
p√∫blica
traductor
NA
138.76.29.7
Natural-
mente
aplicaci√≥n
BitTorrent
desea
aceptar
conexiones
hosts
intercambiar
fragmentos
situaci√≥n
aplicaci√≥n
BitTorrent
host
pide
traductor
NAT
cree
t√∫nel
asigne
10.0.0.1
3345
138.76.29.7
5001
aplicaci√≥n
elige
n√∫mero
puerto
p√∫blico
5001
aplicaci√≥n
BitTorrent
host
anunciar
tracker
disponible
138.76.29.7
5001
host
externo
est√©
ejecutando
BitTorrent
contactar
tracker
determinar
aplicaci√≥n
BitTorrent
ejecut√°ndose
138.76.29.7
5001
host
externo
enviar
paquete
SYN
TCP
138.76.29.7
5001
traductor
NAT
recibe
paquete
SYN
cambiar√°
direcci√≥n
IP
destino
n√∫mero
puerto
paquete
10.0.0.1
3345
reenviar√°
NAT
resumen
UPnP
permite
hosts
externos
iniciar
sesiones
comunicaci√≥n
hosts
conectados
traductor
NAT
utilizando
TCP
UDP
NAT
tiempo
aut√©ntico
quebradero
cabeza
aplicaciones
P2P
UPnP
proporciona
soluci√≥n
efectiva
robusta
NAT
transversal
salvador
exposici√≥n
acerca
NAT
UPnP
necesariamente
desea
acerca
NAT
consulte
Huston
2004
Cisco
NAT
2009
342
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3424.4.3
Protocolo
mensajes
control
Internet
ICMP
Recuerde
capa
red
Internet
componentes
principales
protocolo
IP
estudiado
secci√≥n
protocolos
enrutamiento
Internet
incluyendo
RIP
OSPF
BGP
abordan
Secci√≥n
4.6
ICMP
objeto
secci√≥n
hosts
routers
utilizan
ICMP
especificado
RFC
792
intercambiarse
informaci√≥n
acerca
capa
red
t√≠pico
ICMP
generaci√≥n
infor-
mes
error
ejemplo
ejecutar
sesi√≥n
Telnet
FTP
HTTP
encontrarse
mensaje
error
Red
destino
inalcanzable
mensaje
origen
ICMP
momento
router
IP
podido
encontrar
ruta
host
especi-
ficado
aplicaci√≥n
Telnet
FTP
HTTP
router
creado
enviado
mensaje
ICMP
tipo
host
informarle
error
ICMP
IP
sentido
arquitect√≥nico
justo
IP
mensajes
ICMP
transportados
datagramas
IP
mensajes
ICMP
transportados
carga
√∫til
IP
seg-
mentos
TCP
UDP
transportados
carga
√∫til
IP
forma
similar
host
recibe
datagrama
IP
ICMP
especificado
protocolo
capa
superior
demultiplexa
contenido
datagrama
ICMP
demultiplexar√≠a
conte-
nido
datagrama
TCP
UDP
mensajes
ICMP
campo
tipo
campo
c√≥digo
contienen
cabecera
bytes
datagrama
IP
lugar
generaci√≥n
men-
saje
ICMP
lugar
emisor
determinar
datagrama
pro-
ducido
error
Figura
4.23
muestran
serie
tipos
mensajes
seleccionados
Observe
mensajes
ICMP
emplean
indicar
condiciones
error
Tipo
ICMP
C√≥digo
Descripci√≥n
respuesta
eco
ping
red
destino
inalcanzable
host
destino
inalcanzable
protocolo
destino
inalcanzable
puerto
destino
inalcanzable
red
destino
desconocida
host
destino
desconocido
regulaci√≥n
origen
control
congesti√≥n
solicitud
eco
anuncio
router
10
descubrimiento
router
11
TTL
caducado
12
Cabecera
IP
err√≥nea
Figura
4.23
Tipos
mensajes
ICMP
4.4
PROTOCOLO
INTERNET
IP
343
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
343El
programa
conocido
ping
env√≠a
mensaje
ICMP
tipo
c√≥digo
host
especificado
host
destino
solicitud
eco
devuelve
respuesta
eco
ICMP
tipo
c√≥digo
mayor√≠a
implementaciones
TCP
IP
soportan
ser-
vidor
ping
directamente
sistema
operativo
servidor
proceso
Cap√≠tulo
11
Stevens
1990
proporciona
c√≥digo
fuente
programa
cliente
ping
344
CAP√çTULO
CAPA
RED
INSPECCI√ìN
DATAGRAMAS
CORTAFUEGOS
SISTEMAS
DETECCI√ìN
INTRUSIONES
Suponga
asignado
tarea
administrar
red
dom√©stica
departamental
univer-
sataria
corporativa
atacantes
rango
direcciones
IP
red
enviar
f√°cilmente
datagramas
IP
direcciones
rango
datagramas
pue-
den
clase
cosas
retorcidas
incluyendo
confeccionar
mapas
red
barridos
ping
escaneo
puertos
da√±ar
hosts
vulnerables
paquetes
err√≥neos
inun-
servidores
enrome
cantidad
paquetes
ICMP
infectar
hosts
incluyendo
software
malicioso
paquetes
administrador
red
har√°
malvados
capaces
enviar
paquetes
maliciosos
red
disponibles
mecanismos
defensa
populares
ataques
paquetes
maliciosos
cortafuegos
sistemas
detecci√≥n
intrusiones
IDS
Intrusion
Detection
System
administrador
red
lugar
probar
instalar
cortafuegos
red
Internet
mayor√≠a
routers
actuales
acceso
disponen
cortafue-
gos
cortafuegos
inspeccionan
campos
cabecera
segmentos
datagramas
denegando
acceso
red
interna
datagramas
sospechosos
ejemplo
corta-
fuegos
configurarse
bloquear
paquetes
solicitud
eco
ICMP
impidiendo
atacante
lleve
cabo
tradicional
barrido
ping
rango
direcciones
IP
cortafuegos
bloquear
paquetes
bas√°ndose
direcciones
IP
origen
destino
n√∫meros
puerto
cortafue-
gos
configurar
controlar
conexiones
TCP
dejando
entrar
datagramas
pertenecen
conexiones
aprobadas
sistema
IDS
proporcionarse
protecci√≥n
adicional
IDS
colocado
normal-
mente
frontera
red
realiza
inspecci√≥n
profunda
paquetes
examinando
campos
cabecera
cargas
√∫tiles
datagramas
incluyendo
datos
capa
aplicaci√≥n
IDS
dispone
base
datos
signaturas
paquete
forman
ataques
base
datos
actualiza
autom√°tica-
mente
descubren
tipos
ataque
medida
paquetes
atraviesan
sistema
IDS
intenta
encontrar
coincidencia
campos
cabecera
cargas
√∫tiles
signaturas
almacena
base
datos
coincidencia
genera
alerta
sistema
prevenci√≥n
intrusiones
IPS
Intrusion
Prevention
System
similar
sistema
IDS
generar
alerta
bloquea
paquetes
Cap√≠tulo
estudiaremos
cortafuegos
sistemas
IDS
detalle
cortafuegos
sistemas
IDS
proteger
completamente
red
frente
ataques
Evidentemente
respuesta
atacantes
encuentran
continua-
mente
ataques
signaturas
disponibles
obstante
cortafuegos
IDS
tradicionales
basados
signaturas
√∫tiles
proteger
redes
ataques
conocidos
SEGURIDAD
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
344Observe
programa
cliente
necesita
instruir
sistema
operativo
generar
mensaje
ICMP
tipo
c√≥digo
interesante
mensaje
ICMP
mensaje
regulaci√≥n
origen
mensaje
rara
emplea
pr√°ctica
prop√≥sito
original
cabo
control
con-
gesti√≥n
permitir
router
congestionado
enviar
mensaje
ICMP
tipo
host
forzarle
reducir
velocidad
transmisi√≥n
visto
Cap√≠tulo
TCP
dispone
mecanismo
control
congesti√≥n
opera
capa
transporte
utilizar
realimentaci√≥n
capa
red
mensaje
ICMP
regulaci√≥n
origen
Cap√≠tulo
introducido
programa
Traceroute
permite
tra-
zar
ruta
host
host
mundo
frecuentemente
Traceroute
implementa
mensajes
ICMP
determinar
nombres
direccio-
nes
routers
existentes
origen
destino
Tracerouteen
origen
env√≠a
serie
datagramas
IP
ordinarios
destino
datagramas
transporta
segmento
UDP
n√∫mero
puerto
UDP
probable
datagra-
TTL
sucesivamente
origen
tam-
bi√©n
inicia
temporizadores
datagramas
datagrama
n-√©simo
llega
router
n-√©simo
observa
TTL
datagrama
acaba
caducar
reglas
protocolo
IP
router
descarta
datagrama
env√≠a
origen
mensaje
advertencia
ICMP
tipo
11
c√≥digo
mensaje
advertencia
incluye
nombre
router
direcci√≥n
IP
mensaje
ICMP
llega
vuelta
origen
obtiene
tiempo
ida
vuelta
temporizador
nombre
direcci√≥n
IP
router
n-√©simo
mensaje
ICMP
origen
Traceroutecu√°ndo
dejar
enviar
segmentos
UDP
Recuerde
origen
incrementa
valor
campo
TTL
env√≠a
datagrama
datagramas
terminar√°
recorriendo
camino
completo
host
des-
tino
datagrama
contiene
segmento
UDP
n√∫mero
puerto
impro-
bable
host
destino
devuelve
origen
mensaje
ICMP
puerto
inalcanzable
tipo
c√≥digo
host
origen
recibe
mensaje
ICMP
enviar
paquetes
prueba
Realmente
programa
est√°ndar
Traceroute
env√≠a
con-
juntos
paquetes
TTL
salida
Traceroute
propor-
ciona
resultados
TTL
forma
host
origen
obtiene
n√∫mero
identidad
routers
exis-
ten
host
destino
tiempo
ida
vuelta
hosts
Observe
programa
cliente
Traceroute
instruir
sistema
operativo
generar
datagramas
UDP
valores
TTL
espec√≠ficos
sistema
operativo
tam-
bi√©n
capaz
notificarle
llegada
mensajes
ICMP
funciona
Traceroute
volver
atr√°s
pr√°cticar
4.4.4
IPv6
Ap
Internet
Engineering
Task
Force
comenz√≥
desarro-
llar
sucesor
protocolo
IPv4
principal
motivaci√≥n
iniciativa
espacio
direcciones
IP
32
bits
comenzando
agotarse
causa
subredes
nodos
IP
conect√°ndose
Internet
asignando
direcciones
IP
√∫nicas
velocidad
sobrecogedora
responder
necesidad
espacio
direcciones
IP
desarroll√≥
proto-
4.4
PROTOCOLO
INTERNET
IP
345
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
345colo
IP
protocolo
IPv6
dise√±adores
IPv6
vieron
oportunidad
ajustar
aumentar
aspectos
IPv4
bas√°ndose
experiencia
acumulada
funcionamiento
IPv4
momento
direcciones
IPv4
habr√≠an
asignadas
nin-
guna
subred
conectarse
Internet
objeto
importante
debate
estimaciones
l√≠deres
grupo
trabajo
Address
Lifetime
Expectations
Expec-
tativas
tiempo
vida
direcciones
IETF
direcciones
comenza-
r√≠an
agotarse
2008
2018
respectivamente
Solensky
1996
an√°lisis
reciente
Huston
2008
sit√∫a
fecha
agotamiento
torno
2010
1996
Registro
ameri-
cano
n√∫meros
Internet
ARIN
American
Registry
for
Internet
Numbers
direcciones
clase
IPv4
asignadas
62
ciento
direc-
ciones
clase
asignadas
37
ciento
direcciones
clase
tam-
bi√©n
asignadas
ARIN
1996
desea
informe
reciente
asignaci√≥n
espacio
direcciones
IPv4
consulte
Hain
2005
estimacio-
nes
datos
suger√≠an
quedaba
tiempo
espacio
direcciones
IPv4
agotara
necesitar√≠a
tiempo
considerable
implan-
tar
tecnolog√≠a
escala
comenz√≥
trabajar
IPng
Next
Generation
IP
IP
generaci√≥n
Bradner
1996
RFC
1752
resultado
esfuerzo
especificaci√≥n
versi√≥n
IP
IPv6
RFC
2460
pregunta
plantea
ocurri√≥
IPv5
Inicialmente
pens√≥
protocolo
ST-2
convertir√≠a
IPv5
ST-2
descartado
favor
protocolo
RSVP
estudiaremos
Cap√≠tulo
encontrar
fuentes
informaci√≥n
excelentes
acerca
IPv6
Huitema
1998
IPv6
2009
Fomato
datagrama
IPv6
formato
datagrama
IPv6
muestra
Figura
4.24
cambios
importantes
introducidos
IPv6
evidentes
formato
datagrama
Capacidades
ampliadas
direccionamiento
IPv6
aumenta
tama√±o
direcci√≥n
IP
32
128
bits
asegura
mundo
quedar√°
direccio-
346
CAP√çTULO
CAPA
RED
Figura
4.24
Formato
datagrama
IPv6
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
346nes
IP
grano
arena
planeta
asignada
direcci√≥n
IP
direcciones
unidifusi√≥n
multidifusi√≥n
IPv6
introducido
tipo
direcci√≥n
denominado
direcci√≥n
anycast
permite
entregar
data-
grama
cualquiera
grupo
hosts
funcionalidad
utilizarse
ejemplo
enviar
mensaje
GET
HTTP
serie
sitios
espejo
contengan
determinado
documento
cabecera
40
bytes
simplificada
mencionado
anteriormente
campos
IPv4
eliminado
opcionales
cabecera
lon-
gitud
fija
40
bytes
permite
procesamiento
r√°pido
datagrama
IP
codificaci√≥n
opciones
permite
procesamiento
flexible
Prioridad
etiquetado
flujo
IPv6
utiliza
definici√≥n
amplia
flujo
documentos
RFC
1752
RFC
2460
establecen
permite
etiquetar
paquetes
pertenecen
determinados
flujos
emisor
solicita
tratamiento
espe-
cial
servicio
tiempo
real
calidad
servicio
predeterminados
ejemplo
transmisi√≥n
audio
v√≠deo
posiblemente
tratarse
flujo
contrario
aplicaciones
tradicionales
transferencia
archivos
correo
electr√≥nico
tratar
flujos
tr√°fico
transpor-
tado
usuario
alta
prioridad
ejemplo
alguien
paga
obtener
servicio
tr√°fico
tratado
flujo
dise√±adores
IPv6
prev√©n
eventual
necesidad
diferenciar
flujos
significado
exacto
flujo
determinado
cabecera
IPv6
campo
bits
definir
clase
tr√°fico
campo
campo
TOS
IPv4
utilizar
prioridad
determi-
nados
datagramas
flujo
emplear
prioridad
datagramas
aplicaciones
ejemplo
ICMP
datagramas
aplicacio-
nes
ejemplo
noticias
red
mencionado
anteriormente
comparaci√≥n
Figura
4.24
Figura
4.13
revela
estructura
simple
estilizada
datagrama
IPv6
IPv6
definen
siguientes
campos
Versi√≥n
campo
bits
identifica
n√∫mero
versi√≥n
IP
sorprendente-
mente
IPv6
transporta
valor
campo
Observe
incluir
campo
valor
implica
cree
datagrama
IPv4
v√°lido
hiciera
vida
simple
v√©ase
exposici√≥n
transici√≥n
IPv4
IPv6
Clase
tr√°fico
campo
bits
similar
esp√≠ritu
campo
TOS
visto
IPv4
Etiqueta
flujo
mencionado
anteriormente
campo
20
bits
uti-
liza
identificar
flujo
datagramas
Longitud
carga
√∫til
valor
16
bits
entero
signo
pro-
porciona
n√∫mero
bytes
datagrama
IPv6
incluidos
continuaci√≥n
cabecera
datagrama
40
bytes
longitud
fija
cabecera
campo
identifica
protocolo
entregar√°
contenido
campo
datos
datagrama
ejemplo
TCP
UDP
campo
utiliza
valores
campo
protocolo
cabecera
IPv4
4.4
PROTOCOLO
INTERNET
IP
347
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
347‚Ä¢
L√≠mite
saltos
router
reenv√≠a
datagrama
decrementa
contenido
campo
unidad
l√≠mite
saltos
alcanza
valor
cero
datagrama
des-
carta
Direcciones
origen
destino
distintos
formatos
direcci√≥n
128
bits
IPv6
describen
documento
RFC
4291
Datos
carga
√∫til
datagrama
IPv6
datagrama
lle-
gue
destino
carga
√∫til
extraer√°
datagrama
IP
pasar√°
protocolo
espe-
cificado
campo
cabecera
identificado
prop√≥sito
campos
incluidos
datagramas
IPv6
Comparando
formato
datagrama
IPv6
Figura
4.24
formato
datagrama
IPv4
visto
Figura
4.13
observar
campos
datagrama
IPv4
aparecen
IPv6
Fragmentaci√≥n
Reensamblado
IPv6
permite
fragmentaci√≥n
reensamblado
routers
intermedios
operaciones
realizadas
origen
destino
router
recibe
datagrama
IPv6
reenviado
enlace
salida
router
simplemente
descarta
env√≠a
vuelta
emisor
mensaje
error
ICMP
Paquete
v√©ase
emisor
reenviar
datos
utilizando
tama√±o
datagrama
IP
peque√±o
fragmentaci√≥n
reensamblado
operaciones
consumen
tiempo
eliminando
funcionalidad
routers
incluy√©ndola
directamente
sistemas
terminales
acelera
considerablemente
reenv√≠o
IP
red
Suma
comprobaci√≥n
cabecera
Puesto
protocolos
capa
transporte
ejemplo
TCP
UDP
capa
enlace
datos
ejemplo
Ethernet
capas
Internet
realizan
sumas
comprobaci√≥n
dise√±adores
IP
probablemente
pensaron
funcionalidad
suficientemente
redundante
capa
red
pod√≠a
eliminarse
procesamiento
r√°pido
paquetes
IP
preocu-
paci√≥n
principal
Recuerde
Secci√≥n
4.4.1
visto
cabecera
IPv4
contiene
campo
TTL
similar
campo
l√≠mite
saltos
IPv6
suma
comprobaci√≥n
cabecera
IPv4
necesitaba
recalculada
router
fragmentaci√≥n
reensamblado
operaci√≥n
costosa
IPv4
Opciones
cabecera
IP
est√°ndar
incluye
campo
opciones
opciones
desaparecido
lugar
campo
opciones
po-
sibles
siguientes
cabeceras
apuntadas
cabecera
IPv6
cabeceras
protocolos
TCP
UDP
cabecera
paquete
IP
serlo
campo
opciones
eliminaci√≥n
campo
opciones
resultado
cabecera
IP
40
bytes
longitud
fija
Recuerde
Secci√≥n
4.4.3
visto
nodos
IP
utilizan
protocolo
ICMP
informar
condiciones
error
proporcionar
informaci√≥n
limitada
ejemplo
respuesta
eco
mensaje
ping
sistema
terminal
documento
RFC
4443
definido
versi√≥n
ICMP
IPv6
reorganizar
definiciones
tipos
c√≥digos
ICMP
existentes
ICMPv6
tipos
c√≥digos
reque-
ridos
funcionalidad
IPv6
incluyen
tipo
Paquete
dema-
siado
c√≥digo
error
Opciones
IPv6
reconocidas
ICMPv6
348
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
348incluye
funcionalidad
Protocolo
gesti√≥n
grupos
Internet
IGMP
Internet
Group
Management
Protocol
estudiaremos
Secci√≥n
4.7
IGMP
emplea
gestionar
host
une
grupo
multidifusi√≥n
abandona
anteriormente
protocolo
separado
ICMP
IPv4
Transici√≥n
IPv4
IPv6
visto
detalles
t√©cnicos
IPv6
considerar
cuesti√≥n
pr√°c-
tica
Internet
basada
IPv4
transici√≥n
IPv6
problema
sistemas
IPv6
compatibles
sentido
descendente
enviar
enrutar
recibir
datagramas
IPv4
sistemas
IPv4
implantados
capaces
manejar
datagramas
IPv6
posibles
soluciones
opci√≥n
declarar
fecha
hora
m√°quinas
conectadas
Internet
apagaran
actualizaran
IPv4
IPv6
transici√≥n
importante
tecnolog√≠a
NCP
TCP
servicio
transporte
fiable
25
a√±os
RFC
801
Internet
peque√±a
administrada
n√∫mero
peque√±o
magos
establecer
implique
cientos
millones
m√°quinas
millones
administradores
usuarios
red
impensable
docu-
mento
RFC
4213
describe
m√©todos
utilizarse
juntos
separado
integrar
forma
gradual
hosts
routers
IPv6
mundo
IPv4
objetivo
plazo
nodos
IPv4
hagan
transici√≥n
IPv6
Probablemente
forma
directa
introducir
nodos
IPv6
m√©todo
pila
dual
nodos
IPv6
disponen
implementaci√≥n
IPv4
com-
pleta
nodo
conocido
nodo
IPv6
IPv4
RFC
4213
capacidad
enviar
recibir
datagramas
IPv4
IPv6
interoperar
nodo
IPv4
nodo
IPv6
IPv4
utilizar
datagramas
IPv4
interoperar
nodo
IPv6
hablar
IPv6
nodos
IPv6
IPv4
direcciones
IPv6
IPv4
capaces
determinar
nodo
nodo
IPv6
IPv4
problema
resolverse
utilizando
DNS
v√©ase
Cap√≠tulo
devolver
direcci√≥n
IPv6
nombre
nodo
resolviendo
IPv6
caso
devolver
direcci√≥n
IPv4
nodo
env√≠a
solicitud
DNS
nodo
exclusiva-
mente
IPv4
DNS
devuelve
direcci√≥n
IPv4
m√©todo
pila
dual
emisor
receptor
nodos
exclusivamente
IPv4
utilizarse
datagrama
IPv4
resultado
nodos
IPv6
pue-
terminar
envi√°ndose
datagramas
IPv4
ilustra
Figura
4.25
Suponga
nodo
nodo
IPv6
desea
enviar
datagrama
IP
nodo
tam-
bi√©n
nodo
IPv6
nodos
intercambiarse
datagrama
IPv6
nodo
crear
datagrama
IPv4
envi√°rselo
nodo
C.
Real-
mente
campo
datos
datagrama
IPv6
copiar
campo
datos
data-
grama
IPv4
establecer
correspondencia
apropiada
direcciones
conversi√≥n
IPv6
IPv4
campos
espec√≠ficos
IPv6
datagrama
IPv6
ejemplo
campo
identificador
flujo
contrapartida
IPv4
informaci√≥n
campos
pierde
puedan
intercam-
biar
datagramas
IPv6
datagramas
IPv4
llegan
procedentes
contienen
campos
datagrama
IPv6
original
enviado
A.
4.4
PROTOCOLO
INTERNET
IP
349
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
349Una
alternativa
m√©todo
pila
dual
incluida
RFC
4213
conoce
tunelizaci√≥n
tunelizaci√≥n
resolver
problema
anteriormente
mencionado
permitiendo
ejemplo
reciba
datagramas
IPv6
originados
nodo
A.
idea
b√°sica
descansa
m√©todo
tunelizaci√≥n
suponga
nodos
IPv6
ejemplo
nodos
Figura
4.25
desean
interoperar
utilizando
datagramas
IPv6
conectados
routers
IPv4
referiremos
conjunto
routers
intermedios
IPv4
existentes
routers
IPv6
t√∫nel
ilustra
Figura
4.26
tunelizaci√≥n
nodo
IPv6
emisor
350
CAP√çTULO
CAPA
RED
Figura
4.25
M√©todo
pila
dual
Figura
4.26
Tunelizaci√≥n
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
350t√∫nel
ejemplo
toma
datagrama
IPv6
completo
incluye
campo
datos
carga
√∫til
datagrama
IPv4
datagrama
IPv4
direcciona
nodo
IPv6
receptor
t√∫nel
ejemplo
env√≠a
nodo
t√∫nel
ejemplo
routers
IPv4
existentes
t√∫nel
enrutan
datagrama
IPv4
datagrama
totalmente
inconscientes
datagrama
IPv4
contiene
datagrama
IPv6
completo
nodo
IPv6
recepci√≥n
t√∫nel
termina
recibiendo
datagrama
IPv4
destino
datagrama
IPv4
deter-
mina
datagrama
IPv4
contiene
datagrama
IPv6
extrae
datagrama
IPv6
con-
tinuaci√≥n
enruta
exactamente
hubiera
recibido
datagrama
IPv6
vecino
IPv6
directamente
conectado
terminar
secci√≥n
diremos
adopci√≥n
IPv6
inicialmente
lenta
Lawton
2001
recientemente
empezando
tomar
impulso
Consulte
Huston
2008b
obtener
informaci√≥n
acerca
grado
implantaci√≥n
IPv6
2008
Office
of
Management
and
Budget
Unidos
ordenado
routers
tronca-
redes
gobierno
capaces
soportar
IPv6
mediados
2008
agencias
gubernamentales
cumplido
mandato
momento
escribir
libro
noviembre
2008
proliferaci√≥n
dispositivos
tel√©fonos
IP
dispositivos
port√°tiles
proporciona
motivos
implantaci√≥n
extensa
IPv6
programa
europeo
Third
Generation
Partnership
Program
3GPP
2009
especificado
IPv6
esquema
direccionamiento
est√°ndar
dispositivos
multimedia
m√≥viles
IPv6
implantado
ampliamente
10
a√±os
corta
vida
evidentemente
enjuiciar
√©xito
plazo
sis-
tema
numeraci√≥n
telef√≥nico
actual
tard√≥
d√©cadas
asentarse
siglo
signos
desaparecer
forma
similar
adopci√≥n
IPv6
lle-
var√°
tiempo
tecnolog√≠a
tiempo
Brian
Carpenter
antiguo
jefe
Internet
Architecture
Board
IAB
2009
autor
RFC
relativos
IPv6
visto
proceso
15
a√±os
comenz√≥
1995
Lawton
2001
fechas
Carpenter
proceso
inicial
implantaci√≥n
lecci√≥n
importante
aprender
experiencia
IPv6
enormemente
complicado
cambiar
protocolos
capa
red
principios
d√©cada
1990
numerosos
protocolos
capa
red
promulgado
revoluci√≥n
importante
Internet
mayor√≠a
procotolos
penetraci√≥n
limitada
fecha
protocolos
incluyen
IPv6
protocolos
mutlidifusi√≥n
Secci√≥n
4.7
protocolos
reserva
recursos
Cap√≠tulo
introducci√≥n
protocolos
capa
red
sustituir
cimientos
casa
dif√≠cil
tirar
abajo
casa
reubicar
temporalmente
habitantes
Internet
testigo
r√°pida
implan-
taci√≥n
protocolos
capa
aplicaci√≥n
Ejemplos
cl√°sicos
Web
mensajer√≠a
instant√°nea
compartici√≥n
archivos
P2P.
ejem-
plos
flujos
audio
v√≠deo
juegos
distribuidos
Introducir
protocolos
capa
aplicaci√≥n
a√±adir
capa
pintura
paredes
casa
relativamente
f√°cil
elige
color
atractivo
personas
vecindario
copiar√°n
resumen
futuro
esperar
cambios
capa
red
Internet
probablemente
cambios
producir√°n
escala
temporal
lenta
cambios
producir√°n
capa
aplicaci√≥n
4.4
PROTOCOLO
INTERNET
IP
351
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3514.4.5
incursi√≥n
seguridad
IP
Secci√≥n
4.4.3
visto
detalle
IPv4
incluyendo
servicios
proporciona
implementan
dichos
servicios
leer
secci√≥n
mencionado
servicios
seguridad
IPv4
dise√±ado
√©poca
d√©cada
1970
Internet
utilizada
principalmente
investi-
gadores
dedicados
redes
confiaban
Crear
red
computadoras
integrara
multitud
tecnolog√≠as
capa
enlace
constitu√≠a
enorme
reto
preocuparse
seguridad
actualmente
seguridad
problemas
importantes
inves-
tigadores
Internet
dise√±ar
protocolos
capa
red
propor-
cionen
amplia
variedad
servicios
seguridad
protocolos
IPsec
protocolos
capa
red
seguros
populares
ampliamente
imple-
mentado
redes
privadas
virtuales
VPN
Virtual
Private
Network
IPsec
fundamentos
criptogr√°ficos
cubren
detalle
Cap√≠tulo
proporcionamos
secci√≥n
introducci√≥n
car√°cter
general
servicios
IPsec
IPsec
dise√±ado
compatible
abajo
IPv4
IPv6
concreto
recoger
beneficios
IPsec
necesitamos
sustituir
pilas
protocolos
routers
hosts
Internet
ejemplo
transporte
modos
IPsec
hosts
desean
comunicarse
forma
segura
basta
IPsec
est√©
disponible
hosts
routers
hosts
continuar
ejecu-
tando
IPv4
normal
corriente
Concretando
centrarnos
transporte
IPsec
lugar
hosts
establecen
sesi√≥n
IPsec
IPsec
pro-
tocolo
orientado
conexi√≥n
establecida
conexi√≥n
segmentos
TCP
UDP
enviados
hosts
disfrutan
servicios
seguridad
proporcionados
IPsec
emisor
capa
transporte
pasa
segmento
IPsec
continua-
ci√≥n
IPsec
cifra
segmento
a√±ade
segmento
campos
seguridad
adicionales
encap-
sula
carga
√∫til
resultante
datagrama
IP
ordinario
realmente
complicado
veremos
Cap√≠tulo
host
emisor
env√≠a
datagrama
Internet
transporta
host
destino
IPsec
descifra
segmento
pasa
segmento
cifrado
capa
transporte
servicios
proporcionados
sesi√≥n
IPsec
incluyen
Negociaci√≥n
criptogr√°fica
Mecanismos
permiten
hosts
comu-
nicando
acordar
claves
algoritmos
criptogr√°ficos
Cifrado
carga
√∫til
datagramas
IP
host
emisor
recibe
segmento
capa
transporte
IPsec
cifra
carga
√∫til
carga
√∫til
descifrada
IPsec
host
receptor
Integridad
datos
IPsec
permite
host
receptor
verificar
campos
cabe-
cera
datagrama
carga
√∫til
cifrada
modificados
datagrama
ruta
origen
destino
Autenticaci√≥n
origen
host
recibe
datagrama
IPsec
origen
confianza
clave
segura
v√©ase
Cap√≠tulo
8)
host
seguro
direc-
ci√≥n
IP
origen
datagrama
origen
real
hosts
establecido
sesi√≥n
IPsec
segmentos
TCP
UDP
enviados
cifrados
autenticados
IPsec
proporciona
352
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
352cobertura
riesgo
garantizando
seguridad
comunicaciones
hosts
aplicaciones
red
empresa
utilizar
IPsec
comunicarse
forma
segura
red
Internet
p√∫blica
segura
prop√≥sitos
ilustrativos
veamos
ejemplo
sencillo
empresa
cantidad
personal
comercial
viaja
comercial
posee
computadora
port√°til
Suponga
comerciales
necesitan
consultar
fre-
cuencia
informaci√≥n
confidencial
empresa
ejemplo
precios
datos
pro-
ductos
almacenada
servidor
situado
oficina
central
empresa
Suponga
comerciales
necesitan
enviar
documentos
confidenciales
hacerse
utilizando
IPsec
imaginado
instalamos
IPsec
servidor
computadoras
port√°tiles
comerciales
IPsec
instalado
hosts
comercial
necesita
comunicarse
servidor
comercial
sesi√≥n
comunicaci√≥n
segura
4.5
Algoritmos
enrutamiento
ocupado
principalmente
funci√≥n
reenv√≠o
capa
red
visto
paquete
llega
router
busca
tabla
reenv√≠o
determina
interfaz
enlace
dirigir
paquete
visto
algoritmos
enrutamiento
operan
routers
red
intercambian
calcu-
lan
informaci√≥n
utiliza
configurar
tablas
reenv√≠o
Figura
4.2
mostrado
relaci√≥n
existente
algoritmos
enrutamiento
tablas
reen-
v√≠o
estudiado
profundidad
funci√≥n
reenv√≠o
pasar
tema
central
cap√≠tulo
cr√≠tica
funci√≥n
enrutamiento
capa
red
capa
red
proporciona
servicio
datagramas
cuyo
caso
paquetes
intercambiados
pareja
determinada
origen-destino
tomar
distin-
tas
rutas
servicio
circuito
virtual
cuyo
caso
paquetes
intercambia-
origen
destino
dados
seguir√°n
ruta
capa
red
determinar
ruta
seguir√°n
paquetes
emisores
receptores
Veremos
trabajo
enrutamiento
consiste
determinar
rutas
emisores
receptores
red
routers
Normalmente
host
conectado
directamente
router
router
predetermi-
nado
host
denominado
router
salto
host
host
env√≠a
paquete
transfiere
router
predeterminado
referiremos
rou-
ter
predeterminado
host
origen
router
origen
router
predeterminado
host
destino
router
destino
problema
enrutar
paquete
host
origen
host
destino
evidentemente
reduce
problema
enrutar
paquete
router
origen
router
destino
foco
secci√≥n
prop√≥sito
algoritmo
enrutamiento
simple
con-
routers
enlaces
conectan
dichos
routers
algoritmo
enrutamiento
determina
ruta
router
origen
router
destino
Normalmente
ruta
coste
m√≠nimo
veremos
pr√°ctica
problemas
mundo
real
pol√≠ticas
utilizadas
ejemplo
regla
esta-
blezca
router
pertenece
organizaci√≥n
deber√≠a
reenviar
paquete
cuyo
origen
red
organizaci√≥n
entran
juego
compli-
4.5
ALGORITMOS
ENRUTAMIENTO
353
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
353car
conceptualmente
simples
elegantes
algoritmos
cuya
teor√≠a
subyace
pr√°cticas
enrutamiento
utilizadas
redes
actuales
formular
problemas
enrutamiento
utilizan
grafos
Recuerde
grafo
conjunto
nodos
colecci√≥n
aristas
arista
pareja
nodos
N.
contexto
enrutamiento
capa
red
nodos
grafo
representan
routers
puntos
toman
decisiones
acerca
reenv√≠o
paquetes
aristas
conectan
nodos
representan
enlaces
f√≠sicos
routers
Figura
4.27
muestra
abstracci√≥n
grafo
red
computadoras
desea
grafos
representan
mapas
redes
reales
consulte
Dodge
2007
Cheswick
2000
estudio
modelos
basados
grafos
permi-
ten
modelar
Internet
consulte
Zegura
1997
Faloutsos
1999
Li
2004
muestra
Figura
4.27
arista
valor
representa
coste
Normalmente
coste
arista
reflejar
longitud
f√≠sica
enlace
corres-
pondiente
ejemplo
enlace
transoce√°nico
tendr√≠a
coste
enlace
terrestre
corto
alcance
velocidad
enlace
coste
monetario
asociado
enlace
prop√≥sitos
simplemente
utilizaremos
coste
enlace
viene
preocuparnos
determina
arista
designamos
c(x
coste
arista
nodos
y.
par
perte-
nece
c(x
/H11009
considerar
grafos
dirigidos
gra-
fos
cuyas
aristas
direcci√≥n
arista
arista
c(x
c(y
nodo
vecino
nodo
pertenece
E.
distintas
aristas
abstracci√≥n
grafo
costes
asignados
objetivo
natural
algoritmo
enrutamiento
identificar
rutas
coste
m√≠nimo
or√≠genes
destinos
definir
problema
precisa
recuerde
ruta
grafo
secuencia
nodos
x1
x2
xp
parejas
x1,x2
x2,x3),
,(xp-1,xp
aristas
pertenecientes
E.
coste
ruta
x1,x2
xp
simplemente
suma
coste
aristas
ruta
c(x1,x2
c(x2,x3
c(xp-1,xp
Dados
nodos
cualesquiera
nor-
malmente
rutas
nodos
teniendo
coste
rutas
ruta
coste
m√≠nimo
problema
coste
m√≠nimo
hallar
ruta
origen
destino
coste
m√≠nimo
ejem-
plo
Figura
4.27
ruta
coste
m√≠nimo
nodo
origen
nodo
destino
354
CAP√çTULO
CAPA
RED
Figura
4.27
Modelo
grafo
red
computadoras
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
354w
coste
ruta
Observe
aristas
grafo
tie-
nen
coste
ruta
coste
m√≠nimo
ruta
corta
ruta
n√∫mero
m√≠nimo
enlaces
origen
destino
ejercicio
intente
encontrar
ruta
coste
m√≠nimo
nodo
Figura
4.27
reflexione
calculado
ruta
gente
determinado
ruta
examinando
Figura
4.27
trazando
rutas
llegando
convencimiento
ruta
elegido
coste
m√≠nimo
posibles
rutas
comprobado
17
rutas
posibles
Probablemente
c√°lculo
ejemplo
algoritmo
enrutamiento
centralizado
algoritmo
enrutamiento
ejecut√≥
lugar
cerebro
dispone
informaci√≥n
completa
red
t√©rminos
generales
forma
cla-
sificar
algoritmos
enrutamiento
dependiendo
globales
descentralizados
algoritmo
enrutamiento
global
calcula
ruta
coste
m√≠nimo
origen
destino
utilizando
conocimiento
global
completo
acerca
red
algoritmo
toma
entradas
conectividad
nodos
costes
enlace
requiere
algoritmo
forma
obtenga
informa-
ci√≥n
realmente
c√°lculo
c√°lculo
hacerse
sitio
algoritmo
enrutamiento
global
centralizado
replicarse
sitios
caracte-
r√≠stica
distintiva
algoritmo
global
dispone
infor-
maci√≥n
acerca
conectividad
costes
enlaces
pr√°ctica
algoritmos
informaci√≥n
global
denominan
algoritmos
enlaces
LS
Link-State
algoritmo
consciente
coste
enlace
red
Estudiaremos
algoritmos
LS
Secci√≥n
4.5.1
‚Ä¢E
algoritmo
enrutamiento
descentralizado
c√°lculo
ruta
coste
m√≠nimo
realiza
iterativa
distribuida
nodo
informa-
ci√≥n
acerca
coste
enlaces
red
lugar
principio
nodo
conoce
costes
enlaces
directamente
conectados
proceso
iterativo
c√°lculo
intercambio
informaci√≥n
nodos
vecinos
nodos
extremo
enlaces
conectado
nodo
calcula
gradualmente
ruta
coste
m√≠nimo
destino
conjunto
destinos
algoritmo
enrutamiento
descentralizado
estudiaremos
Secci√≥n
4.5.2
denomina
algoritmo
vector
dis-
tancias
DV
Distance-Vector
nodo
mantiene
vector
estimaciones
costes
distancias
nodos
red
forma
general
clasificar
algoritmos
enrutamiento
est√°ticos
din√°micos
algoritmos
enrutamiento
est√°tico
rutas
cambian
lentamente
tiempo
frecuencia
resultado
intervenci√≥n
humana
ejemplo
persona
edita
manualmente
tabla
reenv√≠o
router
algoritmos
enrutamiento
din√°mico
modifican
caminos
enrutamiento
medida
carga
tr√°fico
topolog√≠a
red
cambian
algoritmo
din√°mico
ejecu-
tarse
peri√≥dicamente
respuesta
directa
cambios
topolog√≠a
coste
enlaces
algoritmos
din√°micos
responden
cambios
red
susceptibles
problemas
bucles
enrutamiento
oscilaci√≥n
rutas
forma
clasificar
algoritmos
enrutamiento
sensibles
carga
algoritmo
sensible
carga
costes
enlace
var√≠an
forma
din√°mica
reflejar
nivel
actual
congesti√≥n
enlace
subyacente
asocia
4.5
ALGORITMOS
ENRUTAMIENTO
355
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
355coste
alto
enlace
actualmente
est√©
congestionado
algoritmo
enrutamiento
tender√°
elegir
rutas
eviten
enlace
congestionado
algoritmos
enrutamiento
ARPAnet
sensibles
carga
McQuillan
1980
encontr√≥
serie
dificultades
Huitema
1998
algoritmos
enrutamiento
actuales
Internet
RIP
OSPF
BGP
sensibles
carga
coste
enlace
refleja
expl√≠citamente
nivel
actual
reciente
congesti√≥n
4.5.1
Algoritmo
enrutamiento
enlaces
LS
Recuerde
algoritmo
enlaces
topolog√≠a
red
coste
enlaces
conocidos
disponibles
entradas
algoritmo
LS
pr√°ctica
nodo
difunda
paquetes
enlaces
nodos
red
paquete
enlace
conteniendo
identidades
costes
enlaces
conectados
pr√°ctica
ejemplo
protocolo
enrutamiento
OSPF
Internet
estudiaremos
Secci√≥n
4.6.1
suele
conseguirse
algoritmo
difusi√≥n
enlaces
Perlman
1999
Veremos
algoritmos
difusi√≥n
Secci√≥n
4.7
resultado
difundir
informa-
ci√≥n
nodos
nodos
visi√≥n
completa
id√©ntica
red
nodo
ejecutar
algoritmo
LS
calcular
conjunto
rutas
coste
m√≠nimo
nodo
algoritmo
enrutamiento
enlaces
presentamos
continuaci√≥n
conoce
algoritmo
Dijkstra
honor
inventor
algorimo
estrechamente
relacionado
algoritmo
Prim
consulte
Cormen
2001
exposici√≥n
car√°cter
general
algoritmos
grafos
algoritmo
Dijkstra
calcula
ruta
coste
m√≠nimo
nodo
origen
denominaremos
nodos
red
algoritmo
Dijkstra
iterativo
propiedad
k-√©sima
iteraci√≥n
algoritmo
conocen
rutas
coste
m√≠nimo
nodos
destino
rutas
coste
m√≠nimo
nodos
destino
rutas
costes
peque√±os
Definimos
notaci√≥n
D(v
coste
ruta
coste
m√≠nimo
nodo
origen
destino
ite-
raci√≥n
algoritmo
p(v
nodo
vecino
ruta
coste
m√≠nimo
origen
v.
H11032
subconjunto
nodos
pertenece
H11032si
ruta
coste
m√≠nimo
origen
conoce
forma
definitiva
algoritmo
enrutamiento
global
consta
paso
inicializaci√≥n
seguido
bucle
n√∫mero
ejecuta
bucle
n√∫mero
nodos
red
terminar
algoritmo
calculado
rutas
cortas
nodo
origen
nodo
red
Algoritmo
enlaces
LS
nodo
origen
Inicializaci√≥n
2N
3f
4i
356
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3565
then
D(v
c(u
else
D(v
/H11009
Bucle
9e
10
sumar
11
actualizar
D(v
vecino
pertenezca
12
D(v
min
D(v
D(w
c(w
13
coste
antiguo
coste
coste
14
ruta
coste
m√≠nimo
coste
15
until
N‚Äô=
ejemplo
considere
red
Figura
4.27
calcule
rutas
coste
m√≠nimo
destinos
posibles
Tabla
4.3
muestra
tabla
resumen
c√°lculos
algoritmo
l√≠nea
tabla
proporciona
valores
variables
algoritmo
iteraci√≥n
Veamos
detalle
pasos
‚Ä¢E
vecinos
conectados
directamente
inicializan
respectivamente
particular
f√≠jese
coste
veremos
ruta
coste
peque√±o
coste
enlace
directo
salto
w.
costes
infinito
directa-
mente
conectados
u.
‚Ä¢E
conjunto
H11032y
localizamos
nodo
coste
m√≠nimo
finalizar
ite-
raci√≥n
previa
nodo
coste
a√±ade
conjunto
H11032
l√≠nea
12
algoritmo
LS
ejecuta
actualizar
D(v
nodos
proporcionando
resultados
mostrados
l√≠nea
Paso
Tabla
4.3
coste
ruta
var√≠a
determina
coste
ruta
inicializaci√≥n
nodo
coste
selec-
ciona
ruta
coste
m√≠nimo
predecesor
ruta
corta
establece
x.
forma
similar
calcula
coste
obtiene
tabla
actualiza
‚Ä¢E
rutas
coste
m√≠nimo
deshacemos
empate
arbitrariamente
a√±adiendo
conjunto
H11032
H11032contiene
y.
H11032
nodos
resultados
mostrados
fila
Tabla
4.3
‚Ä¢Y
algoritmo
LS
termina
nodo
predecesor
ruta
coste
m√≠nimo
nodo
origen
predecesor
predecesor
construir
ruta
completa
origen
destinos
tabla
reenv√≠o
nodo
ejemplo
nodo
reconstruirse
informaci√≥n
almacenando
destino
nodo
salto
ruta
coste
m√≠nimo
destino
Figura
4.28
muestra
rutas
coste
m√≠nimo
resultantes
tabla
reenv√≠o
red
Figura
4.27
4.5
ALGORITMOS
ENRUTAMIENTO
357
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
357paso
D(v),p(v
D(w),p(w
D(x),p(x
D(y),p(y
D(z),p(z
0u
2,u
5,u
1,u
‚àû‚àû
ux
2,u
4,x
2,x
uxy
2,u
3,y
4,y
uxyv
3,y
4,y
uxyvw
4,y
uxyvwz
Tabla
4.3
Ejecuci√≥n
algoritmo
enlaces
red
Figura
4.27
complejidad
c√°lculo
algoritmo
dados
nodos
con-
tar
origen
caso
c√°lculos
determinar
rutas
coste
m√≠nimo
origen
destinos
iteraci√≥n
bus-
car
nodos
determinar
nodo
pertenece
H11032y
coste
m√≠nimo
iteraci√≥n
comprobar
nodos
determinar
coste
m√≠nimo
iteraci√≥n
comprobar
nodos
sucesiva-
mente
general
n√∫mero
nodos
buscar
teniendo
iteraciones
n(n
1)/2
decimos
implementa-
ci√≥n
algoritmo
LS
caso
complejidad
orden
cua-
drado
O(n2
implementaci√≥n
sofisticada
algoritmo
utiliza
estructura
datos
conocida
mont√≥n
heap
calcular
m√≠nimo
l√≠nea
tiempo
logar√≠tmico
lugar
lineal
reduciendo
complejidad
terminar
estudio
algoritmo
LS
consideremos
patolog√≠a
surgir
Figura
4.29
muestra
topolog√≠a
red
simple
coste
enlace
carga
transportada
enlace
reflejando
ejemplo
retardo
experimentado
enlace
ejemplo
costes
enlaces
sim√©tricos
c(u
c(v
carga
transportada
ambas
direcciones
enlace
ejemplo
nodo
origina
unidad
tr√°fico
destinada
nodo
origina
unidad
tr√°fico
destinada
nodo
inyecta
cantidad
tr√°fico
destinado
w.
enrutamiento
inicial
muestra
Figura
4.29(a
costes
enlace
correspondientes
cantidad
tr√°fico
transportado
vuelve
ejecutar
algoritmo
LS
nodo
determina
bas√°ndose
costes
enlace
mostrados
Figura
4.29(a
ruta
sentido
horario
358
CAP√çTULO
CAPA
RED
Figura
4.28
Rutas
coste
m√≠nimo
tabla
reenv√≠o
nodo
u.
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
358coste
ruta
sentido
antihorario
utili-
zando
coste
e.
ruta
coste
m√≠nimo
sen-
tido
horario
forma
similar
determina
ruta
coste
m√≠nimo
sentido
horario
dando
resultado
costes
mostrados
Figura
4.29(b
algoritmo
LS
ejecuta
nodos
detectan
ruta
coste
cero
sentido
antihorario
env√≠an
tr√°fico
rutas
sentido
antihorario
ejecuta
algoritmo
LS
enrutan
tr√°fico
rutas
sentido
horario
evitar
tales
oscilaciones
producirse
algoritmo
utilice
m√©trica
enlace
basada
congesti√≥n
retardo
algoritmo
LS
soluci√≥n
obligar
costes
enlace
dependie-
ran
cantidad
tr√°fico
transportado
soluci√≥n
inaceptable
objetivos
enrutamiento
evitar
enlaces
altamente
congestionados
ejemplo
enlaces
alto
retardo
soluci√≥n
consiste
garantizar
routers
ejecuten
algoritmo
LS
tiempo
soluci√≥n
razo-
nable
podr√≠amos
esperar
routers
ejecuten
algoritmo
LS
periodicidad
instancia
ejecuci√≥n
algoritmo
nodos
interesante
investigadores
comprobado
rou-
4.5
ALGORITMOS
ENRUTAMIENTO
359
Figura
4.29
Oscilaciones
enrutamiento
sensible
congesti√≥n
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
359ters
Internet
auto-sincronizarse
Floyd
Synchronization
1994
inicialmente
ejecuten
algoritmo
periodo
distintos
instantes
tiempo
instancia
ejecuci√≥n
algoritmo
llegar
sin-
cronizarse
routers
permanecer
sincronizada
forma
evitar
auto-sin-
cronizaci√≥n
router
elija
aleatoriamente
instante
enviar
anuncio
enlace
estudiado
algoritmo
LS
abordar
algoritmo
enrutamiento
importante
utiliza
actualmente
pr√°ctica
algoritmo
enruta-
miento
vector
distancias
4.5.2
Algoritmo
enrutamiento
vector
distancias
DV
algoritmo
LS
algoritmo
emplea
informaci√≥n
global
algoritmo
vector
distancias
DV
iterativo
as√≠ncrono
distribuido
distribuido
sentido
nodo
recibe
informaci√≥n
vecinos
directamente
conectados
realiza
c√°lculo
distribuye
resultados
c√°lculo
vuelta
vecinos
iterativo
proceso
contin√∫a
disponible
informacion
intercambiada
vecinos
algoritmo
finaliza
se√±al
indique
c√°lculos
deber√≠an
detenerse
simplemente
detienen
algoritmo
as√≠ncrono
sentido
requiere
nodos
operen
sincronizados
tendremos
oportunidad
algoritmo
as√≠ncrono
iterativo
distribuido
finaliza
interesante
divertido
algoritmo
centralizado
presentar
algoritmo
vector
distancias
conveniente
veamos
relaci√≥n
importante
costes
rutas
coste
m√≠nimo
dx(y
coste
ruta
coste
m√≠nimo
nodo
nodo
y.
costes
m√≠nimos
relacionados
conocida
ecuaci√≥n
Bellman-Ford
dx(y
m√≠nv{c(x
dv(y
4.1
minv
calcula
vecinos
x.
ecuaci√≥n
Bellman-Ford
intuitiva
viajar
tomamos
ruta
coste
m√≠nimo
coste
ruta
c(x
dv(y
Puesto
comenzar
viajando
vecino
coste
m√≠nimo
m√≠nimo
c(x
dv(y
calculado
vecinos
v.
esc√©pticos
validez
ecuaci√≥n
comprobarla
nodo
origen
nodo
destino
Figura
4.27
nodo
origen
vecinos
nodos
w.
Recorriendo
distintas
rutas
grafo
f√°cil
dv(z
dx(z
dw(z
Introduciendo
valores
Ecuaci√≥n
4.1
costes
c(u
c(u
c(u
obtiene
du(z
m√≠n{2
obviamente
exactamente
proporciona
algoritmo
Dijskstra
red
r√°pida
verificaci√≥n
deber√≠a
ayudarle
disipar
duda
ecuaci√≥n
Bellman-Ford
√∫nicamente
curiosidad
intelectual
realmente
importancia
pr√°ctica
significativa
concreto
soluci√≥n
ecuaci√≥n
Bell-
man-Ford
proporciona
entradas
tabla
reenv√≠o
nodo
x.
nodo
vecino
alcanza
m√≠nimo
Ecuaci√≥n
4.1
nodo
desea
enviar
paquete
nodo
ruta
coste
m√≠nimo
deber√≠a
lugar
reenviar
paquete
nodo
tabla
reenv√≠o
nodo
especificar√≠a
360
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
360nodo
router
salto
destino
y.
importante
contribu-
ci√≥n
pr√°ctica
ecuaci√≥n
Bellman-Ford
sugiere
forma
lugar
comunicaci√≥n
vecino
vecino
algoritmo
vector
distancias
idea
b√°sica
nodo
comienza
Dx(y
estimaci√≥n
coste
ruta
coste
m√≠nimo
nodo
nodos
N.
Dx
Dx(y
perteneciente
vector
distancias
nodo
vector
coste
esti-
mado
nodos
pertenecientes
N.
algoritmo
vector
distancias
nodo
mantiene
informaci√≥n
enrutamiento
‚Ä¢P
coste
c(x
vecino
directamente
conectado
v.
‚Ä¢E
Dx
Dx(y
perteneciente
con-
estimaci√≥n
coste
destinos
N.
‚Ä¢L
Dv
Dv(y
pertene-
ciente
vecino
x.
algoritmo
as√≠ncrono
distribuido
nodo
env√≠a
copia
vector
distancias
vecinos
nodo
recibe
vector
distancias
procedente
cualquiera
vecinos
guarda
vector
uti-
liza
ecuaci√≥n
Bellman-Ford
actualizar
vector
distancias
Dx(y
m√≠nv{c(x
Dv(y
nodo
vector
distancias
nodo
cambiado
resultado
paso
actualiza-
ci√≥n
nodo
enviar√°
vector
distancias
actualizado
veci-
actualizar
vectores
distancia
forma
milagrosa
nodos
contin√∫en
intercambiando
vectores
distan-
cia
forma
as√≠ncrona
coste
estimado
Dx(y
converge
dx(y
coste
real
ruta
coste
m√≠nimo
nodo
nodo
Bertsekas
1991
Algoritmo
vector
distancias
DV
nodo
Inicializaci√≥n
2f
3D
x(y
c(x
vecino
c(x
/H11009*/
4f
5D
w(y
destinos
pertenecientes
6f
7e
Dx
Dx(y
perteneciente
bucle
10
wait
variaci√≥n
coste
enlace
vecino
11
recibir
vector
distancias
vecino
12
13
for
perteneciente
14
Dx(y
minv{c(x
Dv(y
15
16
if
Dx(y
var√≠a
destino
4.5
ALGORITMOS
ENRUTAMIENTO
361
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
36117
enviar
vector
distancia
Dx
Dx(y
perteneciente
18
vecinos
19
20
forever
algoritmo
vector
distancias
nodo
actualiza
estimaci√≥n
vector
distancias
produce
cambio
coste
enlaces
directamente
conec-
tados
recibe
actualizaci√≥n
vector
distancias
vecino
actualizar
tabla
reenv√≠o
determinado
destino
realmente
nece-
sita
nodo
distancia
ruta
corta
nodo
vecino
v*(y
router
salto
ruta
corta
y.
l√≥gico
router
salto
v*(y
vecino
alcanza
m√≠nimo
l√≠nea
14
algoritmo
DV
vecinos
alcanzan
m√≠nimo
v*(y
cual-
quiera
vecinos
l√≠neas
13‚Äì14
destino
nodo
determina
v*(y
actualiza
tabla
reenv√≠o
destino
y.
Recuerde
algoritmo
LS
algoritmo
global
sentido
requiere
nodo
obtenga
lugar
mapa
completo
red
ejecutar
algo-
ritmo
Dijkstra
algoritmo
DV
algoritmo
descentralizado
utiliza
dicha
infor-
maci√≥n
global
√∫nica
informaci√≥n
nodo
coste
enlaces
vecinos
directamente
conectado
recibe
vecinos
nodo
espera
actualizaci√≥n
vecino
l√≠neas
10‚Äì11
calcula
vector
distancias
recibe
actualizaci√≥n
l√≠nea
14
distribuye
vector
dis-
tancias
vecinos
l√≠neas
16‚Äì18
pr√°ctica
algoritmos
tipo
vector
distan-
cias
utilizan
protocolos
enrutamiento
incluyen
RIP
BGP
ISO
IDRP
Novell
IPX
ARPAnet
original
Figura
4.30
ilustra
funcionamiento
algoritmo
DV
caso
red
simple
nodos
mostrada
superior
figura
funcionamiento
algoritmo
ilustra
caso
s√≠ncrono
nodos
reciben
simult√°neamente
vectores
dis-
tancia
vecinos
calculan
vectores
distancia
informan
vecinos
vectores
distancias
cambiado
estudiar
ejemplo
comprobar
algoritmo
funciona
correctamente
as√≠ncrono
efectu√°ndose
c√°lculos
nodos
gener√°ndose
recibi√©ndose
actualizaciones
instante
columna
izquierda
figura
muestra
tablas
enrutamiento
inicia-
nodos
ejemplo
tabla
esquina
superior
izquierda
corresponde
tabla
enrutamiento
inicial
nodo
x.
tabla
enruta-
miento
concreta
fila
vector
distancias
espec√≠ficamente
tabla
enruta-
miento
nodo
incluye
vector
distancias
vecinos
fila
tabla
enrutamiento
inicial
nodo
Dx
Dx(x
Dx(y
Dx(z
filas
tabla
vectores
distancia
recibidos
recientemente
nodos
respectivamente
Puesto
inicializaci√≥n
nodo
recibido
nodo
entradas
ter-
cera
filas
inicializan
infinito
inicializaci√≥n
nodo
env√≠a
vector
distancias
vecinos
indica
Figura
4.30
flechas
salen
columna
tablas
columna
ejemplo
nodo
env√≠a
vec-
tor
distancias
Dx
nodos
z.
recibir
actualizaciones
nodo
recalcula
vector
distancias
ejemplo
nodo
calcula
362
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
362Dx(x
Dx(y
m√≠n{c(x
Dy(y
c(x
Dz(y
m√≠n{2
Dx(z
m√≠n{c(x
Dy(z
c(x
Dz(z
m√≠n{2
columna
muestra
nodo
vector
distancias
nodo
vectores
distancia
acaba
recibir
vecinos
Observe
ejemplo
estimaci√≥n
nodo
coste
m√≠nimo
nodo
Dx(z
cambiado
F√≠jese
nodo
nodo
vecino
alcanza
m√≠nimo
l√≠nea
14
algoritmo
vector
distancias
etapa
algoritmo
nodo
v*(y
v*(z
y.
nodos
recalculan
vectores
distancia
env√≠an
valores
actualizados
vecinos
producido
cambio
indica
Figura
4.30
4.5
ALGORITMOS
ENRUTAMIENTO
363
Figura
4.30
Algoritmo
vector
distancias
DV
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
363mediante
flechas
columna
columna
tablas
Observe
√∫nicamente
nodos
env√≠an
actualizaciones
vector
distancias
nodo
cambiado
env√≠a
actualizaci√≥n
recibir
actualizaciones
nodos
recalculan
vectores
distancia
actualizan
tablas
enru-
tamiento
muestra
columna
proceso
recibir
vectores
distancia
actualizados
vecinos
recalcular
entra-
das
tabla
enrutamiento
informar
vecinos
costes
modificados
ruta
coste
m√≠nimo
destino
contin√∫a
env√≠an
mensajes
actualiza-
ci√≥n
situaci√≥n
puesto
env√≠an
mensajes
actualizaci√≥n
realizar√°n
c√°lculos
tabla
enrutamiento
algoritmo
entrar√°
reposo
nodos
encontrar√°n
espera
indicada
l√≠neas
10‚Äì11
algoritmo
vector
distancias
algoritmo
permanece
reposo
coste
enlace
cambia
explica
continuaci√≥n
Algoritmo
vector
distancias
cambios
coste
enlaces
fallo
enlaces
nodo
ejecuta
algoritmo
DV
detecta
cambio
coste
enlace
vecino
l√≠neas
10‚Äì11
actualiza
vector
distancias
l√≠neas
13‚Äì14
cambio
coste
ruta
coste
m√≠nimo
informa
vecinos
l√≠neas
16‚Äì18
vector
distancias
Figura
4.31(a
ilustra
escenario
coste
enlace
cambia
centrarnos
√∫nicamente
entradas
tabla
distancias
destino
x.
algoritmo
vector
distancias
lugar
secuencia
sucesos
‚Ä¢E
t0
detecta
cambio
coste
enlace
coste
cambiado
actualiza
vector
distancias
informa
vecinos
cambio
puesto
vector
distancias
cambiado
instante
t1
recibe
actualizaci√≥n
actualiza
tabla
Calcula
coste
m√≠nimo
disminuido
coste
coste
env√≠a
vector
distancias
vecinos
‚Ä¢E
t2
recibe
actualizaci√≥n
actualiza
tabla
distancias
coste
m√≠nimo
cambia
env√≠a
mensaje
z.
algoritmo
entra
reposo
364
CAP√çTULO
CAPA
RED
Figura
4.31
Cambios
coste
enlace
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
364As√≠
necesitado
iteraciones
algoritmo
DV
alcance
reposo
noticias
acerca
disminuci√≥n
coste
propagado
r√°pidamente
red
Consideremos
ocurre
coste
enlace
aumenta
Suponga
coste
enlace
aumenta
60
muestra
Figura
4.31(b
coste
enlace
var√≠e
Dy(x
Dy(z
Dz(y
Dz(x
instante
t0
detecta
cambio
coste
enlace
coste
variado
60
nodo
calcula
ruta
coste
m√≠nimo
obteniendo
coste
Dy(x
m√≠n{c(y
Dx(x
c(y
Dz(x
m√≠n{60
visi√≥n
global
red
coste
err√≥neo
√∫nica
informaci√≥n
nodo
coste
directo
60
alcanzar
coste
llegar
enrutar√≠a
confiando
plenamente
capaz
llegar
coste
t1
bucle
enrutamiento
llegar
enruta
enruta
bucle
enrutamiento
agujero
negro
paquete
destinado
llega
t1
rebotar√°
nodos
permanentemente
tablas
reen-
v√≠o
cambien
nodo
calculado
coste
m√≠nimo
informa
vector
distancias
instante
t1
momento
posterior
t1
recibe
vector
distancias
indica
coste
m√≠nimo
llegar
coste
calcula
coste
m√≠nimo
Dz(x
min{50
Puesto
coste
m√≠nimo
aumentado
informa
vector
dis-
tancias
t2
forma
similar
recibir
vector
distancias
determina
Dy(x
env√≠a
vector
distancias
nodo
determina
Dz(x
env√≠a
vector
distancias
sucesivamente
tiempo
continuar√°
proceso
comprobar
bucle
mantendr√°
44
iteraciones
intercambios
mensajes
final-
mente
calcule
coste
ruta
50
situaci√≥n
finalmente
determinar√°
ruta
coste
m√≠nimo
conexi√≥n
directa
x.
nodo
enrutar√°
z.
malas
noticias
acerca
aumento
coste
enlace
tardado
propagarse
habr√≠a
ocu-
rrido
coste
enlace
c(y
hubiera
cambiado
10.000
coste
c(z
hubiera
9.999
causa
escenarios
tipo
ocasiones
designa
problema
nombre
problema
infinito
Algoritmo
vector
distancias
t√©cnica
inversa
envenenada
escenario
concreto
bucles
acabamos
describir
evitarse
utilizando
t√©cnica
conocida
inversa
envenenada
poisoned
reverse
idea
simple
enruta
llegar
destino
anunciar√°
distancia
infinita
anunciar√°
Dz(x
/H11009(incluso
sepa
realidad
Dz(x
mantendr√°
peque√±a
mentira
destinada
contin√∫e
enrutando
4.5
ALGORITMOS
ENRUTAMIENTO
365
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
365hacia
y.
cree
dispone
ruta
nodo
intentar√°
enrutar
contin√∫e
enrutando
mintiendo
acerca
Veamos
inversa
envenenada
resuelve
problema
concreto
bucle
encontrado
Figura
4.31(b
resultado
inversa
envenenada
tabla
distancias
indica
Dz(x
/H11009
coste
enlace
cambia
60
instante
t0
actualiza
tabla
contin√∫a
enrutando
directamente
alto
coste
60
informa
coste
Dy(x
60
recibir
actualizaci√≥n
t1
cambia
inmediatamente
ruta
enlace
directo
coste
50
Puesto
ruta
coste
m√≠nimo
ruta
pasa
t2
informa
Dz(x
50
recibir
actualizaci√≥n
actualiza
tabla
distancias
Dy(x
51
ruta
coste
m√≠nimo
nodo
envenena
ruta
inversa
informando
instante
t3
Dy(x
/H11009(aunque
sepa
realidad
Dy(x
51
Resuelve
inversa
envenenada
problema
general
infinito
comprobar
bucles
implican
nodos
lugar
simplemente
nodos
vecinos
detectados
t√©cnica
inversa
envenenada
Comparaci√≥n
algoritmos
enrutamiento
LS
DV
algoritmos
vector
distancias
enlaces
utilizan
m√©todos
complemen-
tarios
c√°lculo
rutas
algoritmo
vector
distancias
nodo
comunica
vecinos
directamente
conectados
proporciona
estimaciones
coste
m√≠nimo
nodos
conocidos
red
algo-
ritmo
enlaces
nodo
comunica
restantes
nodos
v√≠a
difu-
si√≥n
informa
costes
enlaces
directamente
conectados
terminar
estudio
algoritmos
enlaces
vector
distancias
r√°pida
comparaci√≥n
atributos
Recuerde
con-
nodos
routers
conjunto
aristas
enlaces
Complejidad
mensaje
visto
algoritmo
LS
requiere
nodo
conozca
coste
enlace
red
requiere
env√≠o
O(|N|
|E|
mensajes
coste
enlace
cambia
coste
enviarse
nodos
algoritmo
vector
distancias
requiere
intercambios
mensajes
vecinos
directamente
conectados
iteraci√≥n
visto
tiempo
nece-
sario
algoritmo
converja
depender
factores
cos-
tes
enlaces
cambian
algoritmo
vector
distancias
propagar√°
resultados
coste
enlace
cambiado
coste
enlace
lugar
ruta
coste
m√≠nimo
distinta
nodos
conectados
enlace
Velocidad
convergencia
visto
implementaci√≥n
algoritmo
enlaces
algoritmo
O(|N|
requiere
enviar
O(|N|
|E|
mensajes
algoritmo
vector
distancias
converger
lentamente
aparecer
bucles
enrutamiento
convergiendo
algoritmo
sufre
problema
infinito
Robustez
ocurrir
router
falla
funciona
saboteado
algoritmo
enlaces
router
difundir
coste
incorrecto
enlaces
conectados
nodo
corromper
eli-
366
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3664.5
ALGORITMOS
ENRUTAMIENTO
367
minar
paquete
recibido
mensaje
difusi√≥n
LS
algoritmo
LS
nodo
calcula
tabla
reenv√≠o
nodos
realizan
c√°lculos
similares
significa
c√°lculos
rutas
independientes
LS
proporcionando
grado
robustez
algo-
ritmo
vector
distancias
nodo
anunciar
rutas
coste
m√≠nimo
incorrectas
cualquiera
destinos
1997
router
funcionaba
peque√±o
ISP
proporcion√≥
routers
troncales
nacionales
informaci√≥n
enruta-
miento
err√≥nea
routers
inundaran
cantidad
tr√°fico
router
funcionaba
amplias
partes
Internet
estuvieran
desconecta-
das
horas
Neumann
1997
sentido
general
observamos
iteraci√≥n
c√°lculos
nodo
algoritmo
vector
distancias
pasan
vecinos
indirectamente
vecino
vecino
itera-
ci√≥n
sentido
algoritmo
vector
distancias
c√°lculo
nodo
inco-
rrecto
difundirse
red
resumen
algoritmo
ganador
evidente
algoritmos
utili-
zan
Internet
algoritmos
enrutamiento
algoritmos
LS
DV
estudiado
emplean
ampliamente
pr√°c-
tica
pr√°cticamente
√∫nicos
algoritmos
enrutamiento
empleados
actualmente
Internet
obstante
investigadores
propuesto
algoritmos
enrutamiento
30
a√±os
extremadamente
simples
realmente
complejos
sofisticados
clase
amplia
algoritmos
enrutamiento
basada
interpretar
tr√°fico
paquetes
serie
flujos
or√≠genes
destinos
red
m√©todo
problema
enrutamiento
formularse
matem√°ticamente
problema
optimizaci√≥n
restricciones
cono-
cido
problema
flujo
red
Bertsekas
1991
conjunto
algo-
ritmos
enrutamiento
derivan
mundo
telefon√≠a
algoritmos
basados
conmutaci√≥n
circuitos
interesantes
redes
datos
conmutaci√≥n
paquetes
casos
reservar
recursos
enlace
ejemplo
buffers
fracci√≥n
ancho
banda
enlace
conexi√≥n
enrutada
enlace
formulaci√≥n
problema
enruta-
miento
parecer
formulaci√≥n
enrutamiento
coste
m√≠nimo
visto
cap√≠tulo
n√∫mero
similitudes
respecta
algoritmo
determinaci√≥n
ruta
algoritmo
enrutamiento
Consulte
Ash
1998
Ross
1995
Girard
1990
obtener
informaci√≥n
detallada
acerca
√°rea
investigaci√≥n
4.5.3
Enrutamiento
jer√°rquico
estudio
algoritmos
enlaces
vector
distancias
visto
red
simplemente
colecci√≥n
routers
interconectados
router
indis-
tinguible
sentido
routers
ejecutaban
algoritmo
enruta-
miento
calcular
rutas
red
completa
pr√°ctica
modelo
imagen
conjunto
homog√©neo
routers
ejecutan
algoritmo
enrutamiento
simplista
razones
importantes
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
367‚Ä¢
Escala
n√∫mero
routers
comienza
hacerse
sobrecarga
impli-
c√°lculos
almacenamiento
comunicaci√≥n
informaci√≥n
enruta-
miento
ejemplo
actualizaciones
cambios
rutas
coste
m√≠nimo
LS
prohibitiva
Actualmente
Internet
consta
cientos
millones
hosts
Almacenar
informaci√≥n
enrutamiento
hosts
evidentemente
requerir√≠a
enormes
cantidades
memoria
sobrecarga
requerida
difundir
actualizaciones
LS
routers
Internet
dejar√≠a
ancho
banda
disponi-
ble
transmisi√≥n
paquetes
datos
Seguramente
algoritmo
vector
dis-
tancias
iterara
enorme
cantidad
routers
llegar√≠a
converger
Evidentemente
preciso
reducir
complejidad
c√°lculo
rutas
redes
Internet
Autonom√≠a
administrativa
investigadores
tienden
ignorar
problemas
tales
deseo
empresas
operar
routers
antojo
ejemplo
emplear
algoritmo
enrutamiento
elijan
ocultar
aspectos
orga-
nizaci√≥n
interna
red
mundo
exterior
consideraciones
extremadamente
importantes
Idealmente
organizaci√≥n
deber√≠a
operar
administrar
red
deseara
conectar
red
redes
externas
problemas
resolverse
organizando
routers
sistemas
aut√≥nomos
AS
Autonomous
System
AS
formado
grupo
routers
normalmente
encuentran
control
administrativo
ejemplo
operados
ISP
pertenecientes
red
empresarial
routers
AS
ejecutan
algoritmo
enrutamiento
ejemplo
algoritmo
LS
DV
dis-
ponen
informaci√≥n
acerca
exactamente
caso
modelo
ideal
secci√≥n
algoritmo
enrutamiento
ejecuta
sistema
aut√≥nomo
conoce
protocolo
enrutamiento
interno
sistema
aut√≥nomo
necesario
conectar
sistemas
aut√≥nomos
routers
sistema
aut√≥nomo
tarea
adicional
responsables
reenv√≠o
paquetes
destinos
externos
sistema
aut√≥nomo
routers
conocen
routers
gateway
pasarela
Figura
4.32
proporciona
ejemplo
simple
sistemas
aut√≥nomos
AS1
AS2
AS3
figura
l√≠neas
gruesas
representan
conexiones
enlaces
direc-
tos
parejas
routers
l√≠neas
finas
salen
routers
representan
subre-
des
conectadas
directamente
routers
AS1
routers
1a
1b
1c
1d
ejecutan
protocolo
enrutamiento
interno
sistema
aut√≥nomo
utilizado
AS1
routers
reenviar
paquetes
ruta
√≥ptima
destino
AS1
forma
similar
sistemas
aut√≥no-
mos
AS2
AS3
routers
Observe
protocolo
enrutamiento
interno
sistema
aut√≥nomo
sistemas
AS1
AS2
AS3
Observe
routers
1b
1c
2a
3a
routers
pasarela
deber√≠a
routers
sistema
aut√≥nomo
determinan
rutas
parejas
origen-destino
internas
AS
falta
pieza
importante
enrutamiento
terminal
terminal
router
AS
enrutar
paquete
cuyo
destino
sistema
aut√≥nomo
Responder
pre-
gunta
f√°cil
AS
dispone
router
pasarela
conectarse
sistema
aut√≥nomo
caso
puesto
algoritmo
enrutamiento
interno
sistema
aut√≥-
nomo
determinado
ruta
coste
m√≠nimo
router
interno
router
pasa-
368
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
368rela
router
interno
reenviar
paquete
router
pasarela
recibido
paquete
reenv√≠a
enlace
conecta
exterior
AS
sis-
tema
aut√≥nomo
enlace
toma
responsabilidad
enrutar
paquete
destino
ejemplo
suponga
router
2b
Figura
4.32
recibe
paquete
cuyo
destino
AS2
router
2b
reenviar√°
paquete
router
2a
2c
especifica
tabla
reenv√≠o
router
2b
configurada
protocolo
enrutamiento
interno
AS2
paquete
finalmente
llegar√°
router
pasarela
2a
reenviar√°
paquete
1b
paquete
abandonado
rou-
ter
2a
trabajo
AS2
paquete
problema
f√°cil
sistema
aut√≥nomo
origen
enlace
comunica
exterior
ocurre
AS
origen
enlaces
routers
pasarela
llevan
AS
problema
reenviar
paquete
significativamente
complicado
ejemplo
considere
router
AS1
suponga
recibe
paquete
cuyo
destino
sistema
aut√≥nomo
Evidentemente
router
reenviar
paquete
routers
pasarela
1b
1c
resolver
problema
AS1
aprender
destinos
alcanzables
AS2
destinos
alcanzables
tra-
v√©s
AS3
propagar
informaci√≥n
alcanzabilidad
routers
AS1
router
configurar
tabla
reenv√≠o
gestionar
destinos
externos
AS
tareas
obtener
informaci√≥n
alcanzabilidad
AS
vecinos
propagar
dicha
informaci√≥n
alcanzabilidad
routers
internos
AS
rea-
lizadas
protocolo
enrutamiento
sistemas
aut√≥nomos
Puesto
proto-
colo
enrutamiento
interno
sistema
aut√≥nomo
implica
comunicaci√≥n
AS
AS
comunicarse
utilizar
protocolo
enrutamiento
interno
Internet
sistemas
aut√≥nomos
ejecutan
protocolo
enrutamiento
interno
protocolo
BGP4
veremos
secci√≥n
muestra
Figura
4.32
router
recibe
informaci√≥n
protocolo
enrutamiento
4.5
ALGORITMOS
ENRUTAMIENTO
369
Figura
4.32
Ejemplo
sistemas
aut√≥nomos
interconectados
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
369interno
sistema
aut√≥nomo
protocolo
enrutamiento
sistemas
aut√≥nomos
emplea
informaci√≥n
protocolos
configurar
tabla
reenv√≠o
Veamos
ejemplo
Considere
subred
identificada
direcci√≥n
CIDR
suponga
AS1
aprende
protocolo
enrutamiento
interno
AS
subred
alcanzable
AS3
AS2
AS1
propaga
informaci√≥n
routers
router
1d
aprende
subred
alcanzable
AS3
router
pasarela
1c
determina
informaci√≥n
proporcionada
protocolo
enrutamiento
interno
AS
interfaz
router
ruta
coste
m√≠nimo
router
1d
router
pasarela
1c
Supongamos
interfaz
I.
router
1d
incluir
entrada
tabla
reenv√≠o
ejemplo
presentados
secci√≥n
proporciona
ideas
generales
simplificaci√≥n
realmente
ocurre
Internet
secci√≥n
ofrece-
mos
descripci√≥n
detallada
compleja
abordar
protocolo
BGP
Siguiendo
ejemplo
supongamos
AS2
AS3
conectados
sistemas
aut√≥nomos
mostrado
diagrama
Suponga
AS1
aprende
protocolo
enrutamiento
interno
subred
alcanzable
AS2
router
pasarela
1b
AS3
router
pasa-
rela
1c
AS1
tendr√≠a
propagar
informaci√≥n
routers
incluyendo
router
1d
configurar
tabla
reenv√≠o
router
1d
tendr√≠a
determinar
router
pasarela
1b
1c
enviar√°
paquetes
cuyo
destino
subred
x.
m√©todo
suele
utilizar
pr√°ctica
consistir√≠a
utilizar
enrutamiento
patata
caliente
tipo
enrutamiento
sistema
aut√≥nomo
suelta
paquete
patata
caliente
r√°pido
forma
precisa
forma
barata
router
env√≠a
paquete
router
pasarela
coste
peque√±o
router
origen
router
pasarela
routers
pasarela
cuentan
ruta
destino
ejemplo
enrutamiento
patata
caliente
ejecuta
1d
utilizar√≠a
informaci√≥n
protocolo
enrutamiento
interno
AS
determinar
costes
rutas
1b
1c
seleccionar√≠a
ruta
coste
m√≠nimo
elegido
ruta
router
1d
a√±ade
entrada
subred
tabla
reenv√≠o
Figura
4.33
resume
acciones
realizadas
router
1d
a√±adir
entrada
tabla
reenv√≠o
sistema
aut√≥nomo
obtiene
informaci√≥n
acerca
destino
AS
vecino
anunciar
informaci√≥n
enrutamiento
sistemas
aut√≥nomos
vecinos
ejemplo
suponga
AS1
aprende
AS2
subred
alcan-
zable
AS2
AS1
comunicar
AS3
alcanzable
AS1
forma
AS3
necesita
enrutar
paquete
destinado
AS3
reenviar√°
paquete
AS1
reenviar√°
AS2
veremos
estudiar
protocolo
370
CAP√çTULO
CAPA
RED
Figura
4.33
Pasos
a√±adir
tabla
reenv√≠o
router
destino
externo
sistema
aut√≥nomo
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
370BGP
sistema
aut√≥nomo
flexibilidad
hora
decidir
destinos
anun-
ciar
sistemas
aut√≥nomos
vecinos
decisi√≥n
pol√≠tica
normalmente
depende
cuestiones
econ√≥micas
cuestiones
t√©cnicas
Recuerde
Secci√≥n
1.5
Internet
formado
jerarqu√≠a
proveedores
ISP
interconectados
relaci√≥n
ISP
sistemas
aut√≥nomos
pensarse
routers
ISP
enlaces
interconectan
constituyen
sistema
aut√≥nomo
suele
caso
ISP
dividen
red
siste-
aut√≥nomos
ejemplo
ISP
nivel
utilizan
√∫nico
sistema
aut√≥nomo
red
dividen
red
decenas
sistemas
aut√≥nomos
interconectados
Resumiento
problemas
escala
autoridad
administrativa
resuelven
definiendo
sistemas
aut√≥nomos
sistema
aut√≥nomo
routers
ejecutan
protocolo
enrutamiento
interno
AS
ejecutan
protocolo
enru-
tamiento
AS
problema
escala
resuelve
router
interno
AS
necesita
informaci√≥n
acerca
routers
AS
problema
autoridad
administrativa
resuelto
organizaci√≥n
ejecutar
protocolo
enrutamiento
interno
sistema
aut√≥nomo
prefiera
pareja
sis-
temas
aut√≥nomos
conectados
ejecutar
protocolo
enrutamiento
sis-
temas
aut√≥nomos
intercambiar
informaci√≥n
alcanzabilidad
secci√≥n
examinaremos
protocolos
enrutamiento
internos
sis-
tema
aut√≥nomo
RIP
OSPF
protocolo
enrutamiento
sistemas
aut√≥nomos
BGP
emplean
actualmente
Internet
casos
estudio
permitir√°n
com-
pletar
adecuadamente
an√°lisis
enrutamiento
jer√°rquico
4.6
Enrutamiento
Internet
estudiados
direccionamiento
Internet
protocolo
IP
pasar
protocolos
enrutamiento
Internet
trabajo
consiste
determinar
ruta
datagrama
origen
destino
Veremos
protocolos
enrutamiento
Internet
basan
principios
aprendido
anteriormente
cap√≠-
tulo
algoritmos
enlaces
vector
distancias
estudiados
Seccio-
nes
4.5.1
4.5.2
concepto
sistema
aut√≥nomo
tratado
Secci√≥n
4.5.3
fundamentales
forma
cabo
enrutamiento
red
Internet
actual
Recuerde
Secci√≥n
4.5.3
sistema
aut√≥nomo
AS
colecci√≥n
rou-
ters
control
t√©cnico
administrativo
ejecutan
pro-
tocolo
enrutamiento
comunicarse
sistema
aut√≥nomo
normalmente
contiene
subredes
entendiendo
t√©rmino
subred
sentido
preciso
direccionamiento
explica
Secci√≥n
4.4.2
4.6.1
Enrutamiento
interno
sistema
aut√≥nomo
Internet
RIP
protocolo
enrutamiento
interno
AS
utiliza
determinar
cabo
enrutamiento
sistema
aut√≥nomo
protocolos
enrutamiento
inter-
AS
conocen
protocolos
pasarela
interior
Hist√≥ricamente
enrutamiento
sistemas
aut√≥nomos
Internet
llevado
cabo
principal-
mente
protocolos
enrutamiento
Protocolo
informaci√≥n
enrutamiento
4.6
ENRUTAMIENTO
INTERNET
371
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
371(RIP
Routing
Information
Protocol
protocolo
ruta
abierta
corta
OSPF
Open
Shortest
Path
First
protocolo
enrutamiento
estrechamente
relacio-
nado
OSPF
protocolo
IS-IS
RFC
1142
Perlman
1999
lugar
protocolo
RIP
OSPF
RIP
protocolos
enrutamiento
Internet
internos
AS
ampliamente
utilizado
or√≠genes
arquitectura
XNS
Xerox
Network
Systems
Sistemas
red
Xerox
nombre
extensa
implantaci√≥n
RIP
inclusi√≥n
1982
versi√≥n
BSD
Berkeley
Software
Distribution
UNIX
soportaba
TCP
IP
versi√≥n
RIP
definida
RFC
1058
versi√≥n
compatible
abajo
definida
RFC
2453
RIP
protocolo
vector
distancias
opera
forma
parecida
pro-
tocolo
DV
ideal
examinado
Secci√≥n
4.5.2
versi√≥n
RIP
especificada
documento
RFC
1058
utiliza
m√©trica
coste
recuento
saltos
enlace
coste
algoritmo
vector
distancias
Secci√≥n
4.5.2
simplificar
costes
definieron
parejas
routers
RIP
OSPF
costes
definen
realmente
router
origen
subred
destino
RIP
utiliza
t√©rmino
salto
hop
n√∫mero
subredes
atraviesan
seguir
ruta
corta
router
origen
subred
destino
incluyendo
Figura
4.34
ilustra
sistema
aut√≥nomo
subredes
terminales
tabla
incluida
figu-
ra
indica
n√∫mero
saltos
origen
subredes
terminales
coste
m√°ximo
ruta
limitado
15
RIP
sistemas
aut√≥nomos
limitado
sistemas
aut√≥nomos
di√°metro
15
saltos
Recuerde
protocolos
vector
distancias
routers
vecinos
intercambian
vectores
distancia
vector
distancias
router
estimaci√≥n
actual
ruta
corta
router
subredes
AS
RIP
actualiza-
ciones
enrutamiento
intercambiadas
vecinos
30
segundos
mensaje
respuesta
RIP
mensaje
respuesta
enviado
router
host
contiene
lista
25
subredes
destino
pertenecientes
sistema
aut√≥nomo
distancia
emisor
subredes
mensajes
respuesta
conocen
anuncios
RIP
Veamos
ejemplo
simple
funcionan
anuncios
RIP
Considere
sistema
aut√≥nomo
mostrada
Figura
4.35
figura
l√≠neas
conectan
routers
indican
subredes
etiquetado
routers
subredes
l√≠neas
puntos
indican
sistema
aut√≥nomo
contin√∫a
sis-
tema
aut√≥nomo
routers
enlaces
mostrados
372
CAP√çTULO
CAPA
RED
Figura
4.34
N√∫mero
saltos
router
origen
subredes
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
372Cada
router
mantiene
tabla
RIP
conocida
tabla
enrutamiento
tabla
enrutamiento
router
incluye
vector
distancias
router
tabla
reenv√≠o
Figura
4.36
muestra
tabla
enrutamiento
router
D.
Observe
tabla
columnas
especifica
subred
destino
columna
detalla
identidad
router
ruta
corta
subred
destino
columna
especifica
n√∫mero
saltos
n√∫mero
subredes
atravesar
incluyendo
subred
destino
llegar
subred
destino
siguiendo
camino
corto
ejemplo
tabla
indica
enviar
datagrama
router
subred
destino
lugar
datagrama
reenviarse
router
vecino
tabla
especifica
subred
des-
tino
saltos
ruta
corta
tabla
indica
subred
saltos
pasando
router
B.
principio
tabla
enrutamiento
fila
subred
forma
sistema
aut√≥nomo
versi√≥n
RIP
permite
a√±adir
entradas
subred
utilizando
t√©cnicas
agregaci√≥n
rutas
similares
examinado
Secci√≥n
4.4
tabla
Figura
4.36
tablas
siguen
completado
parcialmente
Suponga
30
segundos
router
recibe
router
anuncio
mostrado
Figura
4.37
Observe
anuncio
cosa
informaci√≥n
tabla
enrutamiento
router
A.
informaci√≥n
indica
particular
subred
saltos
router
A.
router
recibido
anuncio
com-
bina
anuncio
Figura
4.37
tabla
enrutamiento
antigua
Figura
4.36
particu-
lar
ruta
router
subred
corta
ruta
router
B.
actualiza
tabla
enrutamiento
ruta
corta
muestra
Figura
4.38
preguntando
Subred
destino
router
N√∫mero
saltos
destino
wA
yB
zB
Figura
4.36
Tabla
enrutamiento
router
recibir
anuncio
router
A.
4.6
ENRUTAMIENTO
INTERNET
373
Figura
4.35
sistema
aut√≥nomo
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
373Subred
destino
router
N√∫mero
saltos
destino
zC
Figura
4.37
Anuncio
router
A.
Subred
destino
router
N√∫mero
saltos
destino
wA
yB
zA
Figura
4.38
Tabla
enrutamiento
router
recibir
anuncio
router
A.
ruta
corta
subred
peque√±a
Posiblemente
algoritmo
descentralizado
vector
distancias
proceso
con-
vergencia
v√©ase
Secci√≥n
4.5.2
a√±adido
enlaces
routers
nue-
vos
sistema
aut√≥nomo
cambiando
rutas
cortas
AS
Veamos
continuaci√≥n
aspectos
implementaci√≥n
RIP
Recuerde
routers
RIP
intercambian
anuncios
30
segundos
router
noticias
vecino
180
segundos
vecino
alcanzable
vecino
muerto
enlace
conectaba
fallado
ocurre
RIP
modifica
tabla
enrutamiento
local
propaga
informaci√≥n
enviando
anuncios
routers
vecinos
alcan-
zables
router
solicitar
informaci√≥n
vecinos
mensaje
solicitud
RIP
acerca
coste
destino
routers
env√≠an
solicitu-
des
mensajes
respuesta
RIP
utilizando
UDP
n√∫mero
puerto
520
segmento
UDP
transportado
routers
datagrama
IP
est√°ndar
RIP
uti-
lice
protocolo
capa
transporte
UDP
protocolo
capa
red
IP
implementar
funcionalidad
capa
red
algoritmo
enrutamiento
parecer
enrevesado
Examinar
profundidad
implementa
RIP
ayudar√°
clarificar
cuesti√≥n
Figura
4.39
esboza
implementa
RIP
normalmente
sistema
UNIX
ejemplo
estaci√≥n
trabajo
UNIX
act√∫a
router
proceso
conocido
routed
ejecuta
RIP
mantiene
informaci√≥n
enrutamiento
intercambia
mensajes
procesos
routed
ejecutan
routers
vecinos
RIP
implementa
proceso
capa
aplicaci√≥n
proceso
especial
capaz
manipular
tablas
enrutamiento
kernel
UNIX
enviar
recibir
mensajes
socket
est√°ndar
utilizar
protocolo
transporte
est√°n-
muestra
figura
RIP
implementa
protocolo
capa
apli-
caci√≥n
v√©ase
Cap√≠tulo
ejecuta
UDP
374
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
374Figura
4.39
Implementaci√≥n
RIP
demonio
routed
4.6.2
Enrutamiento
interno
AS
Internet
OSPF
RIP
enrutamiento
OSPF
utiliza
ampliamente
enrutamiento
interno
sistemas
aut√≥nomos
Internet
OSPF
pariente
IS-IS
normalmente
implantan
ISP
nivel
superior
RIP
implanta
ISP
nivel
inferior
redes
empresariales
t√©rmino
Abierto
Open
OSPF
indica
especificaci√≥n
protocolo
enrutamiento
disponible
p√∫blicamente
ejemplo
oposici√≥n
protocolo
EIGRP
Cisco
versi√≥n
reciente
OSPF
versi√≥n
definida
RFC
2328
documento
p√∫blico
OSPF
concebido
sucesor
RIP
ofrece
serie
funcionali-
dades
avanzadas
OSPF
b√°sicamente
protocolo
enlaces
utiliza
t√©cnica
inundaci√≥n
informaci√≥n
enlaces
algoritmo
c√°lculo
ruta
coste
m√≠nimo
Dijkstra
OSPF
router
construye
mapa
topol√≥gico
completo
grafo
sistema
aut√≥nomo
entero
continuaci√≥n
router
ejecuta
localmente
algoritmo
ruta
corta
Dijkstra
determinar
√°rbol
rutas
cortas
subredes
nodo
ra√≠z
administra-
dor
red
configura
costes
enlaces
individuales
consulte
recuadro
Pr√°ctica
configuraci√≥n
pesos
enlaces
OSPF
administrador
decidir
coste
enlaces
proporcionando
enrutamiento
n√∫mero
m√≠nimo
saltos
definir
pesos
enlaces
inversamente
proporciona-
capacidad
disuadir
tr√°fico
utilizar
enlaces
peque√±o
ancho
banda
OSPF
establece
pol√≠tica
definir
peso
enlaces
tarea
corresponde
administrador
red
proporciona
mecanismos
protocolo
determinar
enrutamiento
coste
m√≠nimo
conjunto
pesos
enlaces
OSPF
router
difunde
informaci√≥n
enrutamiento
routers
sistema
aut√≥nomo
routers
vecinos
router
difunde
informaci√≥n
enlaces
producido
cambio
enlace
ejem-
plo
cambio
coste
activo
inactivo
up
down
difunde
peri√≥-
dicamente
enlace
30
minutos
cambiado
documento
RFC
2328
destaca
actualiza-
ci√≥n
peri√≥dica
anuncios
enlaces
a√±ade
robustez
algoritmo
LS
4.6
ENRUTAMIENTO
INTERNET
375
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
375Los
anuncios
OSPF
contenidos
mensajes
OSPF
transportados
directamente
IP
n√∫mero
protocolo
capa
superior
OSPF
89
pro-
tocolo
OSPF
implementar
funcionalidades
tales
transfe-
rencia
fiable
mensajes
env√≠o
mensajes
difusi√≥n
acerca
enlaces
protocolo
OSPF
comprueba
enlaces
est√©n
operativos
mensaje
HELLO
env√≠a
vecino
conectado
permite
router
OSPF
obtener
vecino
base
datos
enlaces
red
funcionalidades
avanzadas
incluidas
OSPF
siguientes
Seguridad
intercambios
routers
OSPF
ejemplo
actualizaciones
enlaces
autenticados
autenticaci√≥n
participar
protocolo
OSPF
routers
confianza
sistema
aut√≥nomo
impidiendo
intrusos
maliciosos
estudiantes
redes
apliquen
conocimientos
reci√©n
adqui-
ridos
permiso
inyecten
informaci√≥n
incorrecta
tablas
router
defecto
paquetes
OSPF
routers
autenticados
alterados
con-
figurarse
tipos
mecanismo
autenticaci√≥n
simple
MD5
consulte
Cap√≠tulo
8p
ci√≥n
simple
configura
contrase√±a
routers
router
env√≠a
paquete
OSPF
incluye
contrase√±a
texto
legible
Evidentemente
auten-
ticaci√≥n
simple
segura
autenticaci√≥n
MD5
basada
claves
secretas
compartidas
configuradas
routers
paquete
OSPF
env√≠a
router
calcula
hash
MD5
contenido
paquete
OSPF
a√±ade
clave
secreta
consulte
Cap√≠tulo
explicaci√≥n
acerca
c√≥digos
autenticaci√≥n
mensajes
continuaci√≥n
router
incluye
valor
hash
resultante
paquete
OSPF
router
receptor
utilizando
clave
secreta
preconfigurada
calcular√°
hash
MD5
paquete
comparar√°
valor
hash
transporta
paquete
verificando
autenticidad
autenticaci√≥n
MD5
utilizan
n√∫meros
secuencia
protegerse
frente
ataques
repetici√≥n
rutas
coste
rutas
destino
coste
OSPF
permite
utilizar
rutas
necesario
elegir
ruta
transportar
tr√°fico
rutas
coste
Soporte
integrado
enrutamiento
unidifusi√≥n
multidifusi√≥n
OSPF
multidi-
fusi√≥n
MOSPF
Multicast
OSPF
RFC
1584
a√±ade
extensiones
simples
OSPF
proporcionar
enrutamiento
multidifusi√≥n
tema
cubriremos
detalle
Secci√≥n
4.7.2
MOSPF
utiliza
base
datos
enlaces
OSPF
existente
a√±ade
tipo
anuncio
enlaces
mecanismo
difusi√≥n
existente
OSPF
difundir
enlaces
Soporte
definir
jerarqu√≠a
dominio
enrutamiento
avance
significativo
OSPF
capacidad
estructurar
sistemas
aut√≥no-
mos
forma
jer√°rquica
Secci√≥n
4.5.3
visto
ventajas
estructuras
enrutamiento
jer√°rquicas
Veremos
implementaci√≥n
enrutamiento
jer√°rquico
OSPF
resto
secci√≥n
sistema
aut√≥nomo
OSPF
configurarse
jer√°rquicamente
√°reas
√°rea
ejecuta
algoritmo
enrutamiento
enlaces
OSPF
router
√°rea
difundiendo
enlaces
routers
√°rea
√°rea
routers
frontera
√°rea
responsables
enrutar
paquetes
376
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
376fuera
√°rea
√∫nica
√°rea
OSPF
sistema
aut√≥nomo
configura
actuar
√°rea
troncal
bakbone
funci√≥n
principal
√°rea
troncal
enrutar
tr√°-
fico
√°reas
sistema
aut√≥nomo
√°rea
troncal
contiene
routers
frontera
sistema
aut√≥nomo
contener
routers
frontera
enrutamiento
√°reas
sistema
aut√≥nomo
requiere
paquete
enrutado
lugar
router
frontera
√°rea
enrutamiento
√°rea
√°rea
troncal
router
frontera
√°rea
destino
enrutarse
destino
OSPF
protocolo
relativamente
complejo
cubierto
breve-
mente
Huitema
1998
Moy
1998
RFC
2328
proporcionan
detalles
adicionales
4.6.3
Enrutamiento
sistemas
aut√≥nomos
BGP
Acabamos
ISP
utilizan
protocolos
RIP
OSPF
determinar
rutas
√≥ptimas
parejas
origen-destino
encuentran
sistema
aut√≥nomo
4.6
ENRUTAMIENTO
INTERNET
377
CONFIGURACI√ìN
PESOS
ENLACES
OSPF
exposici√≥n
enrutamiento
enlaces
impl√≠citamente
pesos
enlaces
definidos
ejecutando
algoritmo
enrutamiento
OSPF
tr√°fico
fluye
tablas
enrutamiento
calculadas
algoritmo
LS
t√©rminos
causa
efecto
pesos
enlaces
vienen
dados
conocen
antemano
resultado
algoritmo
Dijkstra
rutas
minimizan
coste
global
punto
vista
pesos
enlaces
reflejan
coste
utilizar
enlace
ejemplo
pesos
inversamente
proporcionales
capacidad
enlaces
alta
capacidad
tendr√≠an
asociados
pesos
peque√±os
ser√≠an
atractivos
punto
vista
enrutamiento
algoritmo
Disjkstra
sirve
minimizar
coste
global
pr√°ctica
relaci√≥n
causa-efecto
peso
enlaces
rutas
invertir-
operadores
red
configuran
pesos
enlaces
obten-
gan
rutas
permitan
alcanzar
determinados
objetivos
ingenier√≠a
tr√°fico
Fortz
2000
Fortz
2002
ejemplo
suponga
operador
red
estimaci√≥n
flujo
tr√°fi-
co
entra
red
punto
entrada
sale
punto
sali-
operador
implementar
enrutamiento
espec√≠fico
flujos
entrada-a-salida
minimice
tasa
m√°xima
utilizaci√≥n
enlaces
red
algoritmo
enrutamiento
OSPF
principal
herramienta
dispone
operador
optimizar
enrutamiento
flujos
red
pesos
enlaces
alcanzar
objetivo
minimizar
tasa
m√°xima
utilizaci√≥n
enlaces
ope-
rador
encontrar
conjunto
pesos
enlaces
permita
alcanzar
objetivo
constituye
inversi√≥n
relaci√≥n
causa-efecto
enrutamiento
deseado
flujos
conocido
determinarse
pesos
enlaces
OSPF
algoritmo
enrutamiento
OSPF
d√©
resultado
enrutamiento
flujos
deseado
PR√ÅCTICA
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
377Ahora
examinar
determinan
rutas
parejas
origen-destino
encuentran
sistemas
aut√≥nomos
versi√≥n
Protocolo
pasarela
frontera
BPG
Border
Gateway
Protocol
especificado
documento
RFC
4271
v√©ase
RFC
4274
RFC
4276
actualmente
protocolo
enrutamiento
siste-
aut√≥nomos
est√°ndar
facto
Internet
Com√∫nmente
conoce
BGP4
sim-
plemente
BGP
protocolo
enrutamiento
sistemas
aut√≥nomos
v√©ase
Secci√≥n
4.5.3
BGP
proporciona
sistema
aut√≥nomo
mecanismos
Obtener
informaci√≥n
acerca
alcanzabilidad
subredes
sistemas
aut√≥-
nomos
vecinos
Propagar
informaci√≥n
alcanzabilidad
routers
internos
sistema
aut√≥-
nomo
Determinar
rutas
subredes
bas√°ndose
informaci√≥n
alcanzabili-
dad
pol√≠tica
sistema
aut√≥nomo
importante
BGP
permite
subred
anunciar
existencia
resto
Internet
subred
vocifera
Existo
BGP
garantiza
sistemas
aut√≥nomos
Internet
sabr√°n
subred
llegar
BGP
subredes
estar√≠an
aisladas
resultando
desconocidas
resto
Internet
Fundamentos
BGP
BGP
extremadamente
complejo
dedicado
libros
completos
tema
cuestiones
comprenden
Yannuzzi
2005
le√≠do
libros
documentos
RFC
dif√≠cil
dominar
completa-
mente
BGP
practicado
meses
a√±os
dise√±ador
administrador
ISP
nivel
superior
obstante
BGP
protocolo
absolutamente
cr√≠tico
Internet
b√°sicamente
protocolo
permite
unir
componentes
necesitamos
adquirir
conocimientos
rudimentarios
acerca
funciona
Comenzaremos
describiendo
funcionar
BGP
contexto
red
ejemplo
Figura
4.32
estudiado
anteriormente
descripci√≥n
basaremos
exposici√≥n
acerca
enrutamiento
jer√°rquico
Secci√≥n
4.5.3
recomendamos
repase
material
BGP
parejas
routers
intercambian
informaci√≥n
enrutamiento
conexiones
TCP
semipermanentes
utilizando
puerto
179
conexiones
TCP
semiper-
manentes
red
Figura
4.32
muestran
Figura
4.40
Normalmente
conexi√≥n
TCP
BGP
enlace
conecta
directamente
routers
encuentran
sistemas
aut√≥nomos
Figura
4.40
cone-
xi√≥n
TCP
routers
pasarela
3a
1c
conexi√≥n
TCP
routers
pasarela
1b
2a
conexiones
TCP
BGP
semipermanentes
routers
internos
sistema
aut√≥nomo
particular
Figura
4.40
muestra
configuraci√≥n
habitual
conexi√≥n
TCP
pareja
routers
internos
sistema
aut√≥nomo
creando
malla
conexiones
TCP
sistema
aut√≥nomo
conexi√≥n
TCP
routers
situados
extremos
conexi√≥n
denominan
pares
BGP
conexi√≥n
TCP
mensajes
BGP
enviados
conexi√≥n
denomina
sesi√≥n
BGP
sesi√≥n
BGP
abarca
sistemas
aut√≥nomos
conoce
se-
si√≥n
externa
BGP
eBGP
sesi√≥n
BGP
routers
sistema
aut√≥nomo
conoce
sesi√≥n
interna
BGP
iBGP
Figura
4.40
sesiones
eBGP
378
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
378indicadas
l√≠neas
trazo
sesiones
iBGP
l√≠neas
trazo
corto
Observe
l√≠neas
sesi√≥n
BGP
Figura
4.40
corresponden
enlaces
f√≠sicos
Figura
4.32
BGP
permite
sistema
aut√≥nomo
aprenda
destinos
alcanzables
sistemas
aut√≥nomos
vecinos
BGP
destinos
hosts
prefijos
CIDR
representando
prefijo
subred
colecci√≥n
subredes
ejemplo
su-
ponga
subredes
conectadas
AS2
138.16.64/24
138.16.65/24
138.16.66/24
138.16.67/24
AS2
agrupar
prefijos
subredes
utilizar
BGP
anunciar
√∫nico
prefijo
138.16.64/22
AS1
Veamos
ejemplo
suponga
primeras
subredes
AS2
cuarta
subred
138.16.67/24
AS3
describe
recuadro
Pr√°ctica
Secci√≥n
4.4.2
routers
utilizan
coincidencias
prefijo
reenviar
datagramas
AS3
anunciar
AS1
prefijo
espec√≠fico
138.16.67/24
AS2
todav√≠apodr√≠a
anunciar
AS1
prefijo
agregado
138.16.64/22
Examinemos
BGP
distribuir√≠a
informaci√≥n
alcanzabilidad
prefijos
sesiones
BGP
mostradas
Figura
4.40
l√≥gico
utilizando
sesi√≥n
eBGP
routers
pasarela
3a
1c
AS3
env√≠a
AS1
lista
prefijos
alcanzables
AS3
AS1
env√≠a
AS3
lista
prefijos
alcanzables
AS1
forma
similar
AS1
AS2
intercambian
informaci√≥n
alcanzabilidad
routers
pasarela
1b
2a
esperar
router
pasarela
sistema
aut√≥nomo
recibe
prefijos
aprendidos
eBGP
router
pasarela
utiliza
sesiones
iBGP
distribuir
prefijos
routers
sistema
aut√≥nomo
routers
AS1
aprenden
prefijos
AS3
incluyendo
router
pasarela
1b
router
AS1
volver
anunciar
prefijos
AS3
AS2
router
pasarela
aprende
prefijo
crea
entrada
tabla
reenv√≠o
descrito
Secci√≥n
4.5.3
Atributos
ruta
rutas
BGP
conocimientos
b√°sicos
BGP
profundizar
omitiendo
detalles
importantes
BGP
sistema
aut√≥nomo
identifica
n√∫mero
sistema
aut√≥nomo
ASN
Autonomous
System
Num-
ber
globalmente
√∫nico
RFC
1930
T√©cnicamente
sistemas
aut√≥nomos
tie-
4.6
ENRUTAMIENTO
INTERNET
379
Clave
Figura
4.40
Sesiones
eBGP
iBGP
Sesi√≥n
eBGP
Sesi√≥n
iBGP
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
379nen
ASN
concreto
sistema
aut√≥nomo
tipo
terminal
stub
AS
transporta
tr√°fico
origen
destino
normalmente
ASN
ignora-
remos
tecnicismo
exposici√≥n
claros
n√∫meros
AS
direcciones
IP
asignados
registros
regionales
ICANN
ICANN
2009
router
anuncia
prefijo
sesi√≥n
BGP
incluye
prefijo
serie
atributos
BGP
jerga
BGP
prefijo
atributos
denomina
ruta
pares
BGP
anuncian
rutas
atributos
importantes
AS-PATH
NEXT-HOP
AS-P
ATH
atributo
contiene
sistemas
aut√≥nomos
anuncio
prefijo
prefijo
sistema
aut√≥nomo
sistema
a√±ade
ASN
atributo
AS-PATH
ejemplo
considere
Figura
4.40
suponga
prefijo
138.16.64/24
anuncia
AS2
AS1
continua-
ci√≥n
AS1
anuncia
prefijo
AS3
valor
AS-PATH
AS2
AS1
routers
uti-
lizan
atributo
AS-PATH
detectar
impedir
bucles
anuncio
concreto
router
ve
sistema
aut√≥nomo
lista
rutas
rechazar√°
anuncio
explicaremos
routers
utilizan
atributo
AS-PATH
selec-
cionar
rutas
prefijo
‚Ä¢E
miento
interno
sistema
aut√≥nomo
protocolo
enrutamiento
sistemas
aut√≥nomos
sutil
importante
salto
NEXT-HOP
interfaz
router
inicia
secuencia
sistemas
aut√≥nomos
AS-P
ATH
com-
prender
atributo
referencia
Figura
4.40
Con-
sidere
ocurre
router
pasarela
3a
AS3
anuncia
ruta
router
pasarela
1c
AS1
utilizando
sesi√≥n
eBGP
ruta
incluye
prefijo
anunciado
denominaremos
secuencia
sistemas
aut√≥nomos
AS-PATH
seguir
alcanzar
prefijo
anuncio
incluye
salto
NEXT-
HOP
direcci√≥n
IP
interfaz
router
3a
1c
recuerde
router
m√∫ltiples
direcciones
IP
interfaces
Considere-
mos
ocurre
router
1d
aprende
acerca
ruta
gracias
iBGP
aprender
ruta
router
1d
querer
reenviar
paquetes
ruta
router
1d
querer
incluir
entrada
tabla
reenv√≠o
interfaz
inicia
ruta
coste
m√≠nimo
1d
router
pasarela
1c
determinar
1d
proporciona
direcci√≥n
IP
atributo
NEXT-HOP
m√≥dulo
enrutamiento
interno
sistema
aut√≥nomo
Observe
algoritmo
enrutamiento
interno
sistema
aut√≥nomo
determinado
ruta
coste
m√≠nimo
subredes
conectadas
routers
AS1
incluyendo
subred
enlace
1c
3a
ruta
coste
m√≠nimo
1d
subred
1c-3a
1d
deter-
mina
interfaz
router
comienzo
ruta
a√±ade
entrada
tabla
reenv√≠o
resumen
routers
utilizan
atributo
AS-PATH
configu-
rar
apropiadamente
tablas
reenv√≠o
‚Ä¢L
figura
AS1
AS2
conectados
enlaces
pares
router
AS1
aprender
rutas
prefijo
x.
rutas
seguir
secuencia
sistemas
aut√≥nomos
AS-PATH
distintos
valores
NEXT-HOP
correspondientes
enlaces
pares
Uti-
380
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
380lizando
valores
AS-PATH
algoritmo
enrutamiento
interno
sistema
aut√≥-
nomo
router
determinar
coste
ruta
enlace
pares
apli-
car
enrutamiento
patata
caliente
v√©ase
Secci√≥n
4.5.3
determinar
interfaz
apropiada
BGP
incluye
atributos
permiten
routers
asignar
m√©tricas
preferen-
cia
rutas
atributo
indica
insert√≥
prefijo
BGP
sistema
aut√≥-
nomo
origen
obtener
informaci√≥n
acerca
atributos
ruta
consulte
Griffin
2009
Stewart
1999
Halabi
2000
Feamster
2004
RFC
4271
router
pasarela
recibe
anuncio
router
utiliza
pol√≠tica
importaci√≥n
decidir
aceptar
filtrar
ruta
definir
determinados
atributos
ejemplo
m√©tricas
preferencia
router
pol√≠tica
importaci√≥n
filtrar
ruta
sistema
aut√≥nomo
querer
enviar
tr√°fico
sistemas
aut√≥nomos
contenidos
secuencia
AS-PATH
ruta
router
pasa-
rela
filtrar
ruta
disponga
ruta
preferible
prefijo
Selecci√≥n
ruta
BGP
descrito
anteriormente
secci√≥n
BGP
utiliza
sesiones
eBGP
iBGP
distribuir
rutas
routers
forman
sistemas
aut√≥nomos
distribuci√≥n
router
aprender
acerca
ruta
prefijo
cuyo
caso
seleccionar
posibles
rutas
entradas
proceso
selecci√≥n
ruta
conjunto
rutas
aprendidas
aceptadas
router
rutas
prefijo
BGP
invoca
secuencialmente
siguientes
reglas
eliminaci√≥n
quedarse
ruta
4.6
ENRUTAMIENTO
INTERNET
381
Figura
4.41
atributos
NEXT-HOP
anuncios
utilizan
determinar
enlace
pares
utilizar
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
381‚Ä¢S
rencia
local
ruta
definida
router
aprendida
router
perteneciente
sistema
aut√≥nomo
decisi√≥n
pol√≠tica
deja
administrador
red
sistema
aut√≥nomo
veremos
detalle
pol√≠ticas
BGP
eligen
rutas
valores
preferencia
local
altos
‚Ä¢D
ciona
ruta
camino
sistemas
aut√≥nomos
AS-PATH
corto
regla
√∫nica
seleccionar
ruta
BGP
estar√≠a
aplicando
algoritmo
vector
distancias
determinar
ruta
m√©trica
distancia
utilizada
n√∫mero
saltos
sistemas
aut√≥nomos
lugar
n√∫mero
saltos
routers
restantes
rutas
valor
preferencia
local
longitud
AS-PATH
selecciona
ruta
router
salto
NEXT-HOP
caso
router
coste
ruta
coste
m√≠nimo
determinado
algoritmo
interno
sistema
aut√≥nomo
peque√±o
visto
Secci√≥n
4.5.3
proceso
conoce
enruta-
miento
patata
caliente
queda
ruta
router
utiliza
identificadores
BGP
seleccio-
nar
ruta
consulte
Stewart
1999
reglas
eliminaci√≥n
complejas
acabamos
describir
evi-
tar
pesadillas
BGP
estudiar
reglas
selecci√≥n
BGP
peque-
√±as
dosis
Pol√≠tica
enrutamiento
ilustrar
conceptos
b√°sicos
pol√≠tica
enrutamiento
BGP
ejemplo
sencillo
Figura
4.42
muestra
sistemas
aut√≥nomos
interconectados
importante
observar
sistemas
aut√≥nomos
rou-
ters
Supongamos
sistemas
aut√≥nomos
redes
terminales
stub
redes
troncales
proveedores
Supongamos
inter-
conectados
proporcionan
informaci√≥n
completa
BGP
redes
cliente
tr√°fico
entra
red
terminal
destinado
red
tr√°fico
sale
red
terminal
originado
red
cla-
ramente
redes
terminales
red
terminal
multiconectada
multihomed
conectada
resto
red
proveedores
escenario
382
CAP√çTULO
CAPA
RED
Figura
4.42
escenario
BGP
simple
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
3824.6
ENRUTAMIENTO
INTERNET
383
PRINCIPLES
IN
PRACTICE
SISTEMAS
AUT√ìNOMOS
DISPONEN
PROTOCOLOS
ENRUTAMIENTO
INTERNO
COMUNICARSE
estudiados
detalles
protocolos
enrutamiento
internos
comunicarse
utilizados
sistemas
aut√≥nomos
implantados
actualmente
Internet
con-
cluir
considerando
cuesti√≥n
importante
podr√≠amos
plantearnos
acerca
protocolos
esperamos
surgido
duda
cap√≠tulo
utilizan
protocolos
enrutamiento
distintos
sistemas
aut√≥nomos
comunicarse
respuesta
pregunta
diferencias
objetivos
enrutamien-
to
sistema
aut√≥nomo
sistemas
aut√≥nomos
Pol√≠tica
sistemas
aut√≥nomos
prevalecen
pol√≠ticas
importante
tr√°fico
originado
determinado
sistema
aut√≥nomo
atravesar
sistema
aut√≥nomo
espec√≠fico
forma
similar
sistema
aut√≥nomo
desear
controlar
tr√°fico
tr√°nsito
transportado
sistemas
aut√≥nomos
pasa
visto
BGP
transporta
atributos
ruta
permite
distribuci√≥n
controlada
informaci√≥n
enruta-
miento
tomarse
tipo
decisiones
enrutamiento
basadas
pol√≠ti-
cas
sistema
aut√≥nomo
control
administrativo
pol√≠ticas
desempe√±an
papel
importante
elecci√≥n
rutas
den-
tro
sistema
aut√≥nomo
Escala
capacidad
algoritmo
enrutamiento
estructuras
datos
ampliarse
gestionar
enrutamiento
cantidad
redes
problema
cr√≠tico
enrutamiento
sistemas
aut√≥nomos
sistema
aut√≥no-
mo
escalabilidad
problema
menor
dominio
adminis-
trativo
dividirlo
sistemas
aut√≥nomos
enrutamiento
sistemas
Recuerde
OSPF
permite
crear
jerarqu√≠a
dividiendo
sistema
aut√≥nomo
√°reas
Rendimiento
Puesto
enrutamiento
sistemas
aut√≥nomos
orientado
pol√≠ticas
calidad
ejemplo
rendimiento
rutas
utilizadas
suele
cuesti√≥n
secundaria
ruta
larga
costosa
satisfaga
determinados
criterios
pol√≠ticos
emplearse
ruta
corta
cumpla
dichos
criterios
visto
sistemas
aut√≥nomos
siquiera
concepto
coste
asociado
rutas
recuento
saltos
sistemas
aut√≥nomos
sistema
aut√≥nomo
tales
cuestiones
pol√≠ticas
importancia
menor
permite
enrutamiento
centrarse
nivel
rendimiento
alcanzar
ruta
PR√ÅCTICA
com√∫n
pr√°ctica
caracter√≠sica
tr√°fico
entra
sale
origen
destino
X.
implementar
comportamiento
red
terminal
impedir√°
reenv√≠e
tr√°fico
f√°cilmente
controlando
forma
anunciadas
rutas
BGP
concreto
operar√°
red
terminal
anuncia
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
383sus
vecinos
ruta
destino
determinada
ruta
ejemplo
XCY
llegar
red
anunciar√°
camino
B.
Puesto
consciente
dispone
camino
reenviar√°
tr√°fico
destinado
X.
senci-
llo
ejemplo
ilustra
utilizar
pol√≠tica
selectiva
anuncio
rutas
implementar
relaciones
enrutamiento
cliente
proveedor
Ac
tema
aut√≥nomo
B.
Suponga
aprendido
dispone
camino
AW
W.
incluir
ruta
BAW
base
informaci√≥n
enrutamiento
Evi-
dentemente
anunciar
ruta
BAW
cliente
llegar
B.
deber√≠a
anunciar
ruta
BAW
enviar
tr√°fico
CBAW
proveedores
tron-
cales
pensar
raz√≥n
tendr√≠a
asumir
carga
coste
transportar
tr√°fico
tr√°nsito
C.
pensar
justamente
trabajo
coste
asegurarse
enrutar
clientes
conexi√≥n
directa
C.
Actualmente
est√°ndar
oficial
gobierne
ISP
troncales
cabo
enrutamiento
regla
heur√≠stica
seguida
ISP
comerciales
tr√°fico
fluya
red
troncal
ISP
origen
destino
red
cliente
ISP
caso
tr√°fico
deber√°
expulsado
red
ISP
acuerdos
pares
individuales
gobernar√≠an
cues-
tiones
mencionadas
normalmente
negociados
parejas
proveedores
ISP
suelen
confidenciales
Huston
1999a
proporciona
interesante
informaci√≥n
acerca
acuerdos
pares
desea
descripci√≥n
detallada
pol√≠ticas
enrutamiento
reflejan
relaciones
comerciales
ISP
con-
sulte
Gao
2001
Dmitiropoulos
2007
descripci√≥n
reciente
pol√≠ticas
enrutamiento
BGP
punto
vista
ISP
consulte
Caesar
2005
mencionado
anteriormente
BGP
est√°ndar
facto
enruta-
miento
sistemas
aut√≥nomos
Internet
contenido
tablas
enru-
tamiento
BGP
extra√≠das
routers
ISP
nivel
consulte
http://
www.routeviews.org
Frecuentemente
tablas
enrutamiento
BGP
contienen
decenas
miles
prefijos
atributos
correspondientes
estad√≠sticas
acerca
tama√±o
caracter√≠sticas
tablas
enrutamiento
BGP
Huston
2001
Meng
2005
Potaroo
2009
terminamos
introducci√≥n
protocolo
BGP
entender
BGP
importante
desempe√±a
papel
central
Internet
animamos
con-
sulte
siguientes
referencias
Griffin
2002
Stewart
1999
Labovitz
1997
Halabi
2000
Huitema
1998
Gao
2001
Feamster
2004
Caesar
2005
Li
2007
aprender
BGP
4.7
Enrutamiento
difusi√≥n
multidifusi√≥n
centrado
protocolos
enrutamiento
soportan
comuni-
caciones
unicast
unidifusi√≥n
ejemplo
comunicaciones
punto
punto
√∫nico
nodo
origen
env√≠a
paquete
√∫nico
nodo
destino
sec-
ci√≥n
ocuparnos
protocolos
enrutamiento
difusi√≥n
multidifusi√≥n
384
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
384En
enrutamiento
difusi√≥n
capa
red
proporciona
servicio
entrega
paquete
enviado
nodo
origen
nodos
red
enrutamiento
multidifusi√≥n
permite
√∫nico
nodo
origen
enviar
copia
paquete
subconjunto
restantes
nodos
red
Secci√≥n
4.7.1
abordaremos
algoritmos
enrutamiento
difusi√≥n
plasmaci√≥n
protocolos
enruta-
miento
Secci√≥n
4.7.2
examinaremos
enrutamiento
multidifusi√≥n
4.7.1
Algoritmos
enrutamiento
difusi√≥n
forma
directa
cabo
comunicaci√≥n
difusi√≥n
nodo
emisor
env√≠e
copia
distinta
paquete
destino
muestra
Figura
4.43(a
Dados
nodos
destino
nodo
origen
simplemente
copias
paquete
direcciona
copia
destino
transmite
copias
destinos
utilizando
enrutamiento
unidifusi√≥n
m√©todo
unidifusi√≥n
v√≠aspara
cabo
difusi√≥n
simple
necesita
protocolo
enru-
tamiento
capa
red
duplicaci√≥n
paquetes
funcionalidad
reenv√≠o
m√©todo
presenta
inconvenientes
inefi-
ciencia
nodo
origen
conectado
resto
red
√∫nico
enlace
copias
distintas
paquete
atravesar√°n
enlace
Evidente-
mente
eficiente
enviar
√∫nica
copia
paquete
salto
nodo
extremo
salto
creara
reenviara
copias
adicionales
necesarias
eficiente
nodos
red
lugar
nodo
origen
crear
copias
duplicadas
paquete
ejem-
plo
Figura
4.43(b
√∫nica
copia
paquete
atraviesa
enlace
R1-R2
Des-
pu√©s
paquete
duplica
R2
envi√°ndose
√∫nica
copia
enlaces
R2-R3
R2-R4
inconvenientes
unidifusi√≥n
v√≠as
sutiles
importantes
suposici√≥n
impl√≠cita
unidifusi√≥n
v√≠as
recep-
tores
paquete
difusi√≥n
direcciones
conocidas
emisor
obtenido
informaci√≥n
probablemente
necesarios
mecanismos
pro-
tocolo
adicionales
tales
protocolo
pertenencia
dominio
difusi√≥n
registro
destinos
a√±adir√≠a
sobrecarga
importante
complejidad
adicional
protocolo
inicialmente
parec√≠a
simple
4.7
ENRUTAMIENTO
DIFUSI√ìN
MULTIDIFUSI√ìN
385
Figura
4.43
Duplicaci√≥n
origen
frente
duplicaci√≥n
red
Creaci√≥n
transmisi√≥n
duplicado
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
385√∫ltimo
inconveniente
unidifusi√≥n
v√≠as
relacionado
prop√≥sitos
utiliza
difusi√≥n
Secci√≥n
4.5
vimos
protocolos
enrutamiento
enlaces
utilizan
difusi√≥n
diseminar
informaci√≥n
enlaces
utiliza
calcular
rutas
unidifusi√≥n
Evidentemente
situaciones
emplea
difusi√≥n
crear
actualizar
rutas
unidifusi√≥n
pru-
dente
basarse
infraestructura
enrutamiento
unidifusi√≥n
con-
seguir
comunicaci√≥n
difusi√≥n
Dados
diversos
inconvenientes
comunicaci√≥n
difusi√≥n
utilizando
unidifusi√≥n
v√≠as
interesantes
m√©todos
nodos
red
desempe√±en
papel
activo
duplicaci√≥n
reenv√≠o
paquetes
c√°lculo
rutas
difusi√≥n
examinar
m√©todos
adoptaremos
notaci√≥n
grafos
presentada
Secci√≥n
4.5
modelar
red
grafo
conjunto
nodos
colecci√≥n
aristas
arista
par
nodos
N.
permisivos
notaci√≥n
utilizaremos
referencia
conjunto
nodos
cardi-
nalidad
|N|
tama√±o
conjunto
exista
ambig√ºedad
Inundaci√≥n
controlada
t√©cnica
obvia
cabo
difusi√≥n
m√©todo
inundaci√≥n
flooding
nodo
origen
env√≠a
copia
paquete
vecinos
nodo
recibe
paquete
difusi√≥n
duplica
reenv√≠a
vecinos
vecino
recibido
paquete
Evidentemente
grafo
conec-
tado
esquema
permitir√°
terminar
entregando
copia
paquete
difusi√≥n
nodos
grafo
esquema
sencillo
elegante
presenta
error
fatal
leerlo
imagine
error
fatal
grafo
presenta
ciclos
copias
paquete
difusi√≥n
dando
vueltas
indefinidamente
ejemplo
Figura
4.43
R2
inundar√°
R3
R3
inundar√°
R4
R4
inundar√°
R2
R2
inundar√°
R3
sucesivamente
sencillo
escenario
lugar
bucle
paquetes
difusi√≥n
sentido
agujas
reloj
sentido
contrario
darse
caso
error
fatal
nodo
conec-
tado
nodos
crear√°
reenviar√°
m√∫ltiples
copias
paquete
difusi√≥n
crear√°n
m√∫ltiples
copias
nodos
vecinos
sucesivamente
tormenta
difusi√≥n
resulta
multiplicaci√≥n
paquetes
difusi√≥n
terminar√≠a
creando
tantos
paquetes
difusi√≥n
red
quedar√≠a
inu-
tilizada
Consulte
cuestiones
repaso
cap√≠tulo
problema
analiza
velocidad
crece
tormenta
difusi√≥n
Inundaci√≥n
controlada
clave
evitar
tormenta
difusi√≥n
nodo
decida
juiciosamente
inundar
paquete
ejemplo
recibido
inundado
copia
paquete
inundaci√≥n
pr√°ctica
hacerse
formas
inundaci√≥n
controlada
n√∫mero
secuencia
nodo
origen
incluye
direcci√≥n
identificador
√∫nico
n√∫mero
secuencia
difusi√≥n
paquete
difusi√≥n
continuaci√≥n
env√≠a
paquete
vecinos
nodo
mantiene
lista
direcci√≥n
origen
n√∫mero
secuencia
paquete
386
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
386difusi√≥n
recibido
duplicado
reenviado
nodo
recibe
paquete
difusi√≥n
comprueba
paquete
lista
paquete
eli-
mina
caso
contrario
duplica
reenv√≠a
paquete
nodos
vecinos
nodo
acaba
recibir
paquete
protocolo
Gnutella
utiliza
inundaci√≥n
con-
trolada
n√∫mero
secuencia
difundir
consultas
difusi√≥n
red
solapada
Gnutella
duplicaci√≥n
reenv√≠o
mensajes
cabo
capa
aplicaci√≥n
lugar
capa
red
m√©todo
inundaci√≥n
controlada
m√©todo
conocido
reenv√≠o
camino
inverso
RPF
Reverse
Path
Forwarding
Dalal
1978
ocasiones
denominado
difusi√≥n
camino
inverso
RPB
Reverse
Path
Broadcast
idea
subyace
RPF
simple
elegante
router
recibe
paquete
difu-
si√≥n
determinada
direcci√≥n
origen
transmite
paquete
enlaces
salida
enlace
recibido
paquete
llegado
enlace
pertenece
ruta
unidifusi√≥n
corta
conecta
ori-
gen
caso
router
simplemente
descarta
paquete
entrante
reenviarlo
nin-
guno
enlaces
salida
paquete
eliminado
router
recibir√°
recibido
copia
paquete
enlace
ruta
corta
conecta
emisor
comprobar
producir√°n
bucles
tormentas
difusi√≥n
Observe
RPF
uti-
liza
enrutamiento
unidifusi√≥n
entregar
realmente
paquete
destino
requiere
router
conozca
ruta
completa
corta
origen
RPF
necesita
vecino
ruta
unidifusi√≥n
corta
emi-
sor
utiliza
identidad
vecino
determinar
inundar
paquete
difusi√≥n
recibido
Figura
4.44
ilustra
RPF
Suponga
enlaces
dibujados
l√≠neas
gruesas
representan
rutas
coste
m√≠nimo
receptores
origen
Inicialmente
nodo
difunde
paquete
origen
nodos
B.
nodo
reenviar√°
paquete
origen
recibido
ruta
coste
m√≠nimo
D.
ignorar√°
eliminar√°
reenviar
paquete
4.7
ENRUTAMIENTO
DIFUSI√ìN
MULTIDIFUSI√ìN
387
Figura
4.44
Reenv√≠o
camino
inverso
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
387cuyo
origen
recibido
nodo
ejemplo
routers
Con-
sideremos
nodo
recibe
paquete
origen
directamente
B.
Puesto
ruta
corta
ignorar√°
paquetes
origen
recibidos
B.
contrario
reciba
paquete
origen
directamente
reenviar√°
paquetes
nodos
F.
Difusi√≥n
√°rbol
recubrimiento
inundaci√≥n
controlada
n√∫mero
secuencia
RPF
evitan
tormentas
difusi√≥n
evitan
completamente
transmisi√≥n
paquetes
difusi√≥n
redundantes
ejemplo
Figura
4.45
nodos
reciben
paquetes
redundantes
Idealmente
nodo
tendr√≠a
recibir
copia
paquete
difusi√≥n
Exami-
nando
√°rbol
formado
nodos
conectados
l√≠neas
gruesas
Figura
4.45(a
paquetes
difusi√≥n
fueran
reenviados
enlaces
√°rbol
nodos
red
recibir√≠an
exactamente
copia
paquete
difu-
si√≥n
exactamente
soluci√≥n
est√°bamos
buscando
√°rbol
ejemplo
√°rbol
recubrimiento
spanning
tree
√°rbol
contiene
nodos
grafo
formal
√°rbol
recubrimiento
grafo
grafo
H11032=
H11032
H11032es
subconjunto
H11032est√°
conectado
H11032no
contiene
ciclos
H11032contiene
nodos
originales
G.
enlace
coste
asociado
coste
√°rbol
suma
costes
enlaces
√°rbol
recubri-
miento
cuyo
coste
m√≠nimo
√°rboles
recubrimiento
grafo
sorprendentemente
√°rbol
recubrimiento
m√≠nimo
m√©todo
permite
difusi√≥n
consiste
nodos
red
constru-
yan
lugar
√°rbol
recubrimiento
nodo
origen
desea
enviar
paquete
difusi√≥n
env√≠a
enlaces
incidentes
pertenecen
√°rbol
recubrimiento
nodo
recibe
paquete
difusi√≥n
reenv√≠a
paquete
vecinos
√°rbol
recubrimiento
vecino
recibido
paquete
√°rbol
recubrimiento
elimina
paquetes
difusi√≥n
redundantes
definido
utilizado
nodo
iniciar
difusi√≥n
muestra
Figuras
4.45(a
4.45(b
Observe
nodo
nece-
388
CAP√çTULO
CAPA
RED
Figura
4.45
Difusi√≥n
√°rbol
recubrimiento
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
388sita
consciente
√°rbol
completo
simplemente
necesita
vecinos
vecinos
√°rbol
recubrimiento
principal
complejidad
asociada
m√©todo
√°rbol
recubrimiento
crea-
ci√≥n
mantenimiento
√°rbol
recubrimiento
desarrollado
algoritmos
distribuidos
√°rbol
recubrimiento
Gallager
1983
Gartner
2003
considerar
algoritmo
simple
m√©todo
basado
nodo
centralpara
construir
√°rbol
recubrimiento
define
nodo
central
conocido
punto
cita
rendezvous
n√∫cleo
continuaci√≥n
nodos
env√≠an
nodo
central
mensajes
uni-
difusi√≥n
uni√≥n
√°rbol
mensajes
uni√≥n
√°rbol
reenv√≠an
nodo
central
utilizando
enrutamiento
unidifusi√≥n
llegan
nodo
pertenece
√°rbol
recubrimiento
llegan
centro
casos
ruta
mensaje
uni√≥n
√°rbol
seguido
define
rama
√°rbol
recubrimiento
cen-
tro
nodo
arista
inici√≥
mensaje
uni√≥n
√°rbol
ruta
hubiera
agregada
√°rbol
recubrimiento
existente
Figura
4.46
ilustra
construcci√≥n
√°rbol
recubrimiento
basado
no-
do
central
Suponga
selecciona
nodo
centro
√°rbol
Suponga
nodo
une
√°rbol
reenv√≠a
mensaje
uni√≥n
√°rbol
E.
√∫nico
enlace
EF
convierte
√°rbol
recubrimiento
inicial
nodo
une
continuaci√≥n
√°rbol
recubrimiento
enviando
mensajes
uni√≥n
√°rbol
Suponga
ruta
unidifusi√≥n
D.
caso
mensaje
uni√≥n
√°rbol
lugar
ruta
BDE
agrega
√°rbol
recubrimiento
existente
continuaci√≥n
nodo
une
grupo
recubrimiento
reenviando
mensaje
uni√≥n
√°rbol
E.
ruta
unidifusi√≥n
puesto
unido
√°rbol
recubrimiento
llegada
mensaje
uni√≥n
√°rbol
procedente
har√°
enlace
AB
a√±ada
forma
inmediata
√°rbol
recubrimiento
nodo
une
con-
tinuaci√≥n
√°rbol
recubrimiento
reenviando
mensaje
uni√≥n
√°rbol
directamente
E.
Finalmente
enrutamiento
unidifusi√≥n
hacerse
env√≠a
mensaje
uni√≥n
√°rbol
inserta
enlace
GD
√°rbol
recubrimiento
altura
nodo
D.
4.7
ENRUTAMIENTO
DIFUSI√ìN
MULTIDIFUSI√ìN
389
Figura
4.46
Construcci√≥n
√°rbol
recubrimiento
basada
nodo
central
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
389Algoritmos
difusi√≥n
pr√°ctica
protocolos
difusi√≥n
utilizan
pr√°ctica
capa
aplicaci√≥n
red
Gnutella
Gnutella
2009
utiliza
difusi√≥n
nivel
aplicaci√≥n
difundir
consultas
contenido
pares
Gnutella
enlace
pares
proce-
sos
distribuidos
nivel
aplicaci√≥n
red
Gnutella
realmente
conexi√≥n
TCP
Gnutella
utiliza
forma
inundaci√≥n
controlada
n√∫mero
secuencia
emplean
identificador
16
bits
descriptor
carga
√∫til
16
bits
iden-
tifica
tipo
mensaje
Gnutella
detectar
consulta
difusi√≥n
recibida
recibida
duplicada
reenviada
anteriormente
Gnutella
emplea
campo
establecer
tiempo
vida
TTL
Time-To-Live
limitar
n√∫mero
saltos
reenviada
consulta
inundaci√≥n
proceso
Gnutella
recibe
duplica
consulta
decrementa
campo
TTL
reenviar
consulta
consulta
Gnutella
inundaci√≥n
alcanzar√°
pares
est√©n
n√∫mero
valor
inicial
TTL
saltos
nivel
aplicaci√≥n
iniciador
consulta
mecanismo
inundaci√≥n
Gnutella
denomina
inundaci√≥n
√°mbito
limitado
utiliza
forma
inundaci√≥n
controlada
n√∫mero
secuencia
difundir
anuncios
enlaces
LSA
Link-State
Advertisements
algoritmo
enrutamiento
OSPF
RFC
2328
Perlman
1999
algoritmo
enrutamiento
sis-
tema
intermedio
sistema
intermedio
IS-IS
Intermediate-System-to-Intermediate-System
RFC
1142
Perlman
1999
OSPF
utiliza
n√∫mero
secuencia
32
bits
campo
antig√ºedad
16
bits
identificar
anuncios
LSA
Recuerde
nodo
OSPF
utiliza
comunicaci√≥n
difusi√≥n
enviar
peri√≥dicamente
LSA
enla-
ces
conectados
coste
enlace
vecino
cambia
enlace
pasa
activo
inactivo
n√∫meros
secuencia
LSA
emplean
detectar
anuncios
LSA
duplicados
sirven
funci√≥n
importante
OSPF
inundaci√≥n
LSA
generado
origen
instante
llegue
LSA
reciente
generado
origen
instante
n√∫meros
secuencia
utilizados
nodo
origen
permiten
diferenciar
LSA
antiguo
LSA
reciente
campo
antig√ºedad
sirve
prop√≥sito
similar
sirve
valor
TTL
valor
inicial
campo
antig√ºedad
pone
cero
incrementa
salto
medida
lugar
inundaci√≥n
incrementa
retenido
memoria
router
esperando
reenviado
Aun-
descrito
brevemente
algoritmo
inundaci√≥n
LSA
dise√±o
protocolos
difusi√≥n
LSA
resultar
complicado
RFC
789
Perl-
man
1999
describen
incidente
anuncios
LSA
incorrectamente
transmitidos
routers
funcionaban
lugar
versi√≥n
temprana
algo-
ritmo
inundaci√≥n
anuncios
LSA
provocara
ca√≠da
red
ARPAnet
4.7.2
Multidifusi√≥n
visto
secci√≥n
servicio
difusi√≥n
paquetes
sumi-
nistrados
nodos
red
secci√≥n
ocuparnos
servicio
multidifusi√≥n
multicast
paquete
multidifusi√≥n
entrega
subconjunto
nodos
red
serie
aplicaciones
red
emergentes
requiere
entrega
paquetes
procedentes
emisores
grupo
recepto-
390
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
390res
aplicaciones
incluyen
transferencia
masiva
datos
ejemplo
transferen-
cia
actualizaci√≥n
software
desarrollador
usuarios
precisan
actualizaci√≥n
flujos
multimedia
continuos
ejemplo
transferencia
audio
v√≠deo
texto
conferencia
vivo
conjunto
participantes
conferencia
geogr√°ficamente
distribuidos
aplicaciones
datos
compartidos
aplicaci√≥n
teleconferencia
pizarra
electr√≥nica
comparte
participantes
distribuidos
alimentadores
datos
ejemplo
cotizaciones
bolsa
actua-
lizaciones
cach√©
Web
juegos
interactivos
ejemplo
entornos
virtuales
inte-
ractivos
distribuidos
juegos
multijugador
mutlidifusi√≥n
enfrentamos
problemas
identificar
receptores
paquete
multidifusi√≥n
dirigir
paquete
enviado
receptores
caso
unidifusi√≥n
direcci√≥n
IP
receptor
destino
transporta
data-
grama
IP
unidifusi√≥n
identifica
√∫nico
receptor
caso
comunicaci√≥n
difusi√≥n
nodos
recibir
paquete
difusi√≥n
necesita
direcci√≥n
destino
caso
multidifusi√≥n
receptores
sentido
paquete
multidifusi√≥n
transporte
direcciones
IP
receptores
m√©todo
adecuado
n√∫mero
peque√±o
recep-
tores
escalar√≠a
caso
cientos
miles
receptores
cantidad
informaci√≥n
direccionamiento
incluida
datagrama
eclipsar√≠a
datos
reales
trans-
portados
campo
carga
√∫til
paquete
emisor
haga
identificaci√≥n
expl√≠-
cita
receptores
requiere
conozca
identidades
direcciones
receptores
Veremos
casos
requisito
deseable
razones
arquitectura
Internet
arquitecturas
ATM
Black
1995
paquete
multidifusi√≥n
direcciona
utilizando
indirecci√≥n
direc-
ciones
utiliza
√∫nico
identificador
grupo
receptores
receptores
multidifusi√≥n
asociados
grupo
entrega
copia
paquete
dirigido
grupo
utilizando
identificador
Internet
identificador
√∫nico
representa
grupo
receptores
direcci√≥n
IP
multidifusi√≥n
clase
D.
grupo
receptores
asociados
direcci√≥n
clase
conoce
grupo
mul-
tidifusi√≥n
abstracci√≥n
grupo
multidifusi√≥n
ilustra
Figura
4.47
ejemplo
hosts
entran
salen
flechas
asociados
direcci√≥n
grupo
multidifusi√≥n
226.17.30.197
recibir√°n
datagramas
dirigidos
direcci√≥n
multidifusi√≥n
dificultad
superar
host
direcci√≥n
IP
unidifusi√≥n
√∫nica
completamente
independiente
direc-
ci√≥n
grupo
multidifusi√≥n
participa
abstracci√≥n
grupo
multidifusi√≥n
simple
plantea
mont√≥n
pre-
guntas
inicia
termina
grupo
elige
direcci√≥n
grupo
a√±aden
hosts
grupo
emisores
receptores
alguien
unirse
grupo
enviar
grupo
recibir
grupo
pertenencia
grupo
restringida
restringe
Conocen
miembros
grupo
identidades
miembros
grupo
protocolo
capa
red
interoperan
nodos
red
entregar
datagrama
multidifusi√≥n
miembros
grupo
Internet
respuestas
preguntas
implican
Protocolo
ges-
ti√≥n
grupos
Internet
IGMP
Internet
Group
Management
Protocol
RFC
3376
continuaci√≥n
brevemente
protocolo
IGMP
volveremos
preguntas
4.7
ENRUTAMIENTO
DIFUSI√ìN
MULTIDIFUSI√ìN
391
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
391Protocolo
gesti√≥n
grupos
Internet
IGMP
versi√≥n
protocolo
IGMP
RFC
3376
opera
host
router
directamente
conectado
informalmente
pensar
router
directamente
conectado
router
salto
host
ver√≠a
ruta
host
red
local
router
salto
ruta
host
muestra
Figura
4.48
Figura
4.48
muestra
routers
multidifusi√≥n
salto
conectado
hosts
interfaz
local
salida
ejemplo
interfaz
local
conectada
LAN
LAN
hosts
conectados
normalmente
m√°ximo
hosts
pertenecer√°n
grupo
multidifusi√≥n
instante
determinado
IGMP
proporciona
medios
host
informar
router
conectado
aplicaci√≥n
ejecuta
host
desea
unirse
grupo
multidifusi√≥n
especificado
Puesto
√°mbito
interacci√≥n
IGMP
limitado
host
router
conectado
requiere
protocolo
coordinar
routers
multidifu-
si√≥n
incluyendo
routers
conectados
Internet
enrutar
data-
gramas
multidifusi√≥n
destinos
finales
funcionalidad
algoritmos
enrutamiento
multidifusi√≥n
capa
red
tales
392
CAP√çTULO
CAPA
RED
Figura
4.47
Grupo
multidifusi√≥n
datagrama
dirigido
grupo
entre-
ga
miembros
grupo
multidifusi√≥n
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
392veremos
continuaci√≥n
multidifusi√≥n
capa
red
Internet
componentes
complementarios
IGMP
protocolos
enrutamiento
multidifusi√≥n
IGMP
dispone
tipos
mensajes
ICMP
mensajes
IGMP
transportados
encapsulados
datagrama
IP
n√∫mero
protocolo
IP
mensaje
membership_query
env√≠a
router
hosts
situados
interfaz
conectada
ejemplo
hosts
red
√°rea
local
deter-
minar
conjunto
grupos
multidifusi√≥n
unido
hosts
conec-
tados
dicha
interfaz
hosts
responden
mensaje
membership_querycon
mensaje
IGMP
membership_report
host
generar
mensajes
mem-
bership_report
aplicaci√≥n
une
grupo
multidifu-
si√≥n
esperar
mensaje
membership_query
procedente
router
tipo
mensaje
IGMP
mensaje
leave_group
Curiosamente
mensaje
opcional
opcional
detecta
router
host
abandona
grupo
multidi-
fusi√≥n
respuesta
pregunta
router
infiere
host
grupo
multidifusi√≥n
responde
mensaje
membership_query
direcci√≥n
determinado
grupo
ejemplo
ocasiones
denomina
fr√°gil
soft-state
protocolo
Internet
protocolo
fr√°gil
caso
IGMP
existan
hosts
unidos
determinado
grupo
multidifusi√≥n
desaparece
suceso
temporizaci√≥n
caso
mensaje
membership_query
peri√≥dico
router
refresca
expl√≠cita-
mente
caso
mensaje
membership_report
procedente
host
conectado
protocolos
fr√°gil
proporcionan
control
simple
protocolos
firme
hard-state
requieren
expl√≠citamente
a√±adido
eliminado
necesitan
mecanismos
recu-
perarse
situaci√≥n
entidad
responsable
eliminar
terminado
forma
prematura
fallado
encontrar
interesante
exposici√≥n
tema
fr√°gil
Raman
1999
Ji
2003
Lui
2004
4.7
ENRUTAMIENTO
DIFUSI√ìN
MULTIDIFUSI√ìN
393
Figura
4.48
componentes
multidifusi√≥n
capa
red
Internet
IGMP
protocolos
enrutamiento
multidifusi√≥n
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
393Algoritmo
enrutamiento
multidifusi√≥n
Figura
4.49
ilustra
problema
enrutamiento
multidifusi√≥n
hosts
unidos
grupo
multidifusi√≥n
bordeados
negro
router
inmediata-
mente
conectado
muestra
Figura
4.49
subconjunto
routers
aque-
llos
hosts
conectados
unidos
grupo
multidifusi√≥n
necesita
realmente
recibir
tr√°fico
multidifusi√≥n
Figura
4.49
routers
reci-
bir
tr√°fico
multidifusi√≥n
hosts
conectados
router
unido
grupo
multidifusi√≥n
puesto
router
hosts
conectados
necesitan
recibir
tr√°fico
grupo
multidifusi√≥n
objetivo
enrutamiento
mutlidifusi√≥n
encontrar
√°rbol
enlaces
conecte
routers
hosts
conectados
pertenecen
grupo
multidifusi√≥n
paquetes
multidi-
fusi√≥n
enrutados
√°rbol
emisor
hosts
pertenecen
√°rbol
multidifusi√≥n
√°rbol
contener
routers
tengan
hosts
conectados
pertenezcan
grupo
multidifusi√≥n
ejemplo
Figura
4.49
imposible
conectar
routers
√°rbol
implicar
rou-
ter
router
pr√°ctica
adoptado
m√©todos
determinar
√°rbol
enrutamiento
multidifusi√≥n
estudiado
contexto
enrutamiento
difusi√≥n
mencionar
m√©todos
difieren
dependiendo
utiliza
√∫nico
√°rbol
compartido
grupo
distribuir
tr√°fico
emisores
grupo
construye
√°rbol
enrutamiento
espec√≠fico
origen
emisor
individual
394
CAP√çTULO
CAPA
RED
Figura
4.49
Hosts
multidifusi√≥n
routers
conectados
routers
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
394‚Ä¢
Enrutamiento
multidifusi√≥n
utiliza
√°rbol
compartido
grupo
caso
difusi√≥n
√°rbol
recubrimiento
enrutamiento
multidifusi√≥n
√°rbol
compartido
grupo
basado
construcci√≥n
√°rbol
incluye
routers
frontera
hosts
conectados
pertenecen
grupo
multidifusi√≥n
pr√°ctica
utiliza
m√©todo
basado
nodo
central
construir
√°rbol
enrutamiento
multidifusi√≥n
encarg√°ndose
routers
frontera
hosts
conectados
pertenecientes
grupo
multidifusi√≥n
enviar
v√≠a
unidifusi√≥n
mensajes
uni√≥n
√°rbol
dirigidos
nodo
central
caso
difusi√≥n
mensaje
uni√≥n
reenv√≠a
utilizando
enrutamiento
unidi-
fusi√≥n
nodo
central
llega
router
pertenece
√°rbol
multidifusi√≥n
llega
nodo
central
routers
existentes
ruta
mensaje
uni√≥n
reenviar√°n
paquetes
multidifu-
si√≥n
recibidos
router
frontera
inici√≥
uni√≥n
grupo
multidifusi√≥n
cuesti√≥n
cr√≠tica
enrutamiento
multidifusi√≥n
√°rbol
basado
nodo
central
proceso
utilizado
seleccionar
nodo
central
serie
algoritmos
selecci√≥n
nodo
central
Wall
1980
Thaler
1997
Estrin
1997
Enrutamiento
multidifusi√≥n
utilizando
√°rbol
basado
origen
enrutamiento
multidifusi√≥n
basado
√°rbol
compartido
grupo
construye
√∫nico
√°rbol
enrutamiento
compartido
enrutar
paquetes
emisores
m√©todo
construye
√°rbol
enrutamiento
multidifusi√≥n
ori-
gen
existente
grupo
multidifusi√≥n
pr√°ctica
utiliza
algoritmo
RPF
nodo
origen
construir
√°rbol
reenv√≠o
multidifusi√≥n
4.7
ENRUTAMIENTO
DIFUSI√ìN
MULTIDIFUSI√ìN
395
Figura
4.50
Reenv√≠o
camino
inverso
caso
multidifusi√≥n
paquete
reenviado
paquete
reenviado
all√°
router
receptor
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
395datagramas
multidifusi√≥n
origen
x.
algoritmo
RPF
difusi√≥n
estudiado
anteriormente
requiere
ajustes
utilizarlo
multidifusi√≥n
Veamos
Considere
router
Figura
4.50
algoritmo
RPF
difu-
si√≥n
paquetes
reenviar√≠an
router
router
hosts
conectados
est√©n
unidos
grupo
multidifusi√≥n
malo
caso
router
imagine
ocurrir√≠a
tuviera
miles
routers
colgando
√°rbol
miles
routers
recibir√≠a
paquetes
multidifusi√≥n
deseados
escenario
inveros√≠mil
parecer
MBone
inicial
Casner
1992
Macedonia
1994
red
multidifusi√≥n
global
sufri√≥
precisamente
problema
inicios
soluci√≥n
problema
recepci√≥n
paquetes
multidifusi√≥n
deseados
RPF
conoce
nombre
poda
pruning
router
multidifusi√≥n
recibe
paquetes
multi-
difusi√≥n
hosts
conectados
unidos
grupo
enviar√°
mensaje
poda
router
inmediatamente
router
recibe
mensajes
poda
proce-
dentes
routers
situados
reenviar
mensaje
poda
Enrutamiento
multidifusi√≥n
Internet
protocolo
enrutamiento
multidifusi√≥n
utilizado
Internet
Protocolo
enrutamiento
multidifusi√≥n
vector
distancias
DVMRP
Distance-Vector
Multicast
Routing
Protocol
RFC
1075
DVMRP
implementa
√°rboles
basados
ori-
gen
reenv√≠o
camino
inverso
poda
DVMRP
utiliza
algoritmo
RPF
poda
visto
anteriormente
protocolo
enrutamiento
multidifusi√≥n
Internet
ampliamente
utilizado
protocolo
enrutamiento
PIM
Protocol-Inde-
pendent
Multicast
Multidifusi√≥n
independiente
protocolo
reconoce
forma
expl√≠cita
escenarios
distribuci√≥n
multidifusi√≥n
denso
RFC
3973
miembros
grupo
multidifusi√≥n
localizados
forma
densa
mayor√≠a
routers
√°rea
necesitan
involucrarse
enrutamiento
datagra-
multidifusi√≥n
denso
protocolo
PIM
t√©cnica
reenv√≠o
camino
inverso
inundaci√≥n
poda
similar
esp√≠ritu
DVMRP
disperso
RFC
4601
n√∫mero
routers
miembros
grupo
conec-
tados
menor
n√∫mero
routers
miembros
grupo
tre-
mendamente
dispersos
disperso
PIM
utiliza
puntos
cita
configurar
√°rbol
distribuci√≥n
multidifusi√≥n
multidifusi√≥n
espec√≠fica
origen
SSM
Source-Specific
Multicast
RFC
3569
RFC
4607
emisor
enviar
tr√°fico
√°rbol
multidifusi√≥n
simplificando
considerablemente
construcci√≥n
manteni-
miento
√°rbol
emplean
protocolos
PIM
DVMP
dominio
operador
red
configurar
routers
multidifusi√≥n
IP
dominio
forma
configurarse
protocolos
enrutamiento
unidifusi√≥n
internos
dominio
RIP
IS-IS
OSPF
ocurre
necesitan
rutas
multidifusi√≥n
distintos
dominios
equivalente
multidifusi√≥n
protocolo
BGP
domi-
nios
respuesta
literalmente
RFC
4271
define
extensiones
multiprotocolo
BGP
permitirle
transportar
informaci√≥n
enrutamiento
protocolos
incluyendo
informaci√≥n
multidifusi√≥n
Protocolo
descubrimiento
origen
multidifusi√≥n
MSDP
Multicast
Source
Discovery
Protocol
RFC
3618
RFC
4611
utilizar
conectar
puntos
cita
situados
dominios
PIM
disperso
396
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
396encontrar
excelente
introducci√≥n
actual
enrutamiento
multidifusi√≥n
Internet
RFC
5110
Terminamos
exposici√≥n
indicando
comunicaci√≥n
IP
multidifusi√≥n
queda
camino
recorrer
desea
interesante
exposici√≥n
acerca
problemas
implantaci√≥n
modelo
servicio
multidifusi√≥n
Inter-
net
actual
consulte
Diot
2000
Sharma
2003
obstante
falta
amplia
implantaci√≥n
tecnolog√≠a
multidifusi√≥n
nivel
red
muerta
absoluto
tr√°fico
multidifusi√≥n
transportado
a√±os
Inter-
net
redes
equivalentes
Internet2
Multicast
2009
Reino
Unido
BBC
participa
pruebas
distribuci√≥n
contenido
IP
multidifusi√≥n
BBC
Multicast
2009
tiempo
multidifusi√≥n
nivel
aplicaci√≥n
visto
PPLive
Cap√≠tulo
sistemas
pares
End
System
Multi-
cast
ESM
2007
proporcionan
distribuci√≥n
multidifusi√≥n
contenido
pares
uti-
lizando
protocolos
multidifusi√≥n
capa
aplicaci√≥n
lugar
protocolos
multidifusi√≥n
capa
red
servicios
multidifusi√≥n
futuros
implementar√°n
principalmente
capa
red
n√∫cleo
red
capa
aplicaci√≥n
frontera
red
entusiasmo
actual
distribuci√≥n
contenido
utilizando
protocolos
comunicaci√≥n
pares
inclinar
balanza
favor
t√©cnicas
multidifusi√≥n
capa
aplicaci√≥n
futuro
cercano
contin√∫an
realiz√°ndose
avances
tecnolog√≠a
multidifusi√≥n
IP
ocasiones
carreras
ganan
lentos
constantes
4.8
Resumen
cap√≠tulo
iniciado
viaje
n√∫cleo
red
visto
capa
red
implica
hosts
routers
red
consecuencia
pro-
tocolos
capa
red
encuentran
complejos
pila
protocolos
visto
router
procesar
millones
flujos
paquetes
distintas
parejas
origen-destino
tiempo
router
procesar
cantidad
flujos
dise√±adores
redes
ido
aprendiendo
a√±os
tareas
router
simples
tomar
medidas
facilitar
trabajo
routers
incluyendo
capa
red
datagramas
lugar
capa
red
circuitos
virtuales
utiliza-
ci√≥n
cabecera
simplificada
tama√±o
fijo
IPv6
eliminaci√≥n
fragmentaci√≥n
IPv6
provisi√≥n
famoso
servicio
esfuerzo
importante
controlar
flujos
individuales
basar
decisio-
nes
enrutamiento
√∫nicamente
direcciones
destino
estructuradas
forma
jer√°r-
quica
datagramas
interesante
destacar
servicio
correos
ordinario
empleando
m√©todo
a√±os
cap√≠tulo
examinado
principios
basan
algorit-
mos
enrutamiento
visto
algoritmos
representan
red
computado-
ras
grafo
nodos
enlaces
abstracci√≥n
aprovechar
rica
teor√≠a
c√°lculo
ruta
m√≠nima
grafos
desarrollada
40
a√±os
comunidad
cient√≠fica
dedicada
algoritmos
investigaci√≥n
operaciones
visto
m√©todos
generales
m√©todo
centralizado
glo-
bal
nodo
obtiene
mapa
completo
red
aplica
forma
indepen-
4.8
RESUMEN
397
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
397diente
algoritmo
enrutamiento
basado
ruta
corta
m√©todo
descentrali-
zado
nodos
individuales
disponen
imagen
parcial
red
com-
pleta
nodos
trabajan
conjuntamente
entregar
paquetes
rutas
cortas
estudiado
utiliza
jerarqu√≠a
afrontar
problema
escalado
dividiendo
redes
tama√±o
dominios
administrativos
independientes
conocidos
sistemas
aut√≥nomos
AS
AS
enruta
forma
independiente
data-
gramas
sistema
aut√≥nomo
naci√≥n
distribuye
forma
indepen-
diente
correo
postal
pa√≠s
examinado
m√©todos
centralizado
descentralizado
jer√°rquico
integran
principales
protocolos
enrutamiento
Internet
RIP
OSPF
BGP
concluido
estudio
algoritmos
enru-
tamiento
considerando
enrutamientos
difusi√≥n
multidifusi√≥n
completado
estudio
capa
red
descender
esca-
l√≥n
pila
protocolos
capa
enlace
capa
red
capa
enlace
forma
n√∫cleo
red
cap√≠tulo
veremos
capa
enlace
tarea
localizada
transferir
paquetes
nodos
situados
enlace
LAN
tarea
parecer
principio
trivial
comparada
tareas
desempe√±a
capa
red
veremos
capa
enlace
implica
serie
cuestiones
importantes
fascinantes
mantendr√°n
ocupa-
tiempo
Problemas
cuestiones
repaso
Cap√≠tulo
Cuestiones
repaso
SECCIONES
4.1‚Äì4.2
R1
Revisemos
terminolog√≠a
utilizada
libro
Recuerde
nombre
recibe
paquete
capa
transporte
segmento
nombre
paquete
capa
enlace
trama
nombre
paquete
capa
red
Recuerde
routers
dispositivos
conmutaci√≥n
capa
enlace
denominan
conmutadores
paquetes
diferencia
fundamental
router
dispositivo
conmutaci√≥n
capa
enlace
Recuerde
utilizamos
t√©rmino
routers
redes
datagramas
redes
circuitos
virtuales
R2
funciones
importantes
capa
red
red
data-
gramas
funciones
importantes
capa
red
red
circuitos
virtuales
R3
diferencia
enrutamiento
reenv√≠o
R4
Utilizan
routers
redes
datagramas
circuitos
virtuales
tablas
reen-
v√≠o
caso
afirmativo
describa
tablas
reenv√≠o
ambas
clases
redes
R5
Describa
servicios
hipot√©ticos
capa
red
proporcionar
paquete
Haga
flujo
paquetes
hipot√©ticos
398
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
398PROBLEMAS
CUESTIONES
REPASO
399
servicios
proporcionados
capa
red
Internet
pro-
porcionado
modelo
servicio
CBR
redes
ATM
proporcio-
nado
modelo
servicio
ABR
redes
ATM
R6
Enumere
aplicaciones
beneficiarse
modelo
servicio
CBR
redes
ATM
SECCI√ìN
4.3
R7
Explique
puerto
entrada
router
alta
velocidad
almacena
copia
tabla
reenv√≠o
R8
Secci√≥n
4.3
abordado
tipos
entramados
conmutaci√≥n
Enumere
describa
brevemente
R9
Describa
perderse
paquetes
puertos
entrada
Describa
eliminarse
p√©rdida
paquetes
puertos
entrada
utilizar
buffers
capacidad
infinita
R10
Describa
producirse
p√©rdida
paquetes
puertos
salida
R11
bloqueo
HOL
produce
puertos
entrada
puertos
salida
SECCI√ìN
4.4
R12
direcciones
IP
routers
caso
afirmativo
R13
equivalente
binario
32
bits
direcci√≥n
IP
223.1.3.27
R14
isite
host
utilice
DHCP
obtener
direcci√≥n
IP
m√°scara
red
router
predeterminado
direcci√≥n
IP
servidor
DNS
local
Enumere
valo-
res
R15
Suponga
routers
host
origen
host
destino
Ignorando
fragmentaci√≥n
env√≠a
datagrama
IP
host
origen
host
destino
interfaces
pasar√°
tablas
reenv√≠o
indexar√°
trans-
portar
datagrama
origen
destino
R16
Suponga
aplicaci√≥n
genera
fragmentos
40
bytes
datos
20
milise-
gundos
fragmento
encapsula
segmento
TCP
datagrama
IP
porcentaje
datagrama
informaci√≥n
administrativa
porcen-
taje
datos
aplicaci√≥n
R17
Suponga
host
env√≠a
host
segmento
TCP
encapsulado
datagrama
IP
host
recibe
datagrama
capa
red
host
deber√≠a
pasar
segmento
carga
√∫til
datagrama
TCP
lugar
UDP
protocolo
R18
Suponga
adquiere
router
inal√°mbrico
conecta
m√≥dem
cable
Suponga
ISP
asigna
din√°micamente
direcci√≥n
IP
dispositivo
conectado
router
inal√°mbrico
suponga
equi-
pos
PC
domicilio
utilizan
802.11
conectarse
forma
inal√°mbrica
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
399400
CAP√çTULO
CAPA
RED
router
inal√°mbrico
asignan
direcciones
IP
PC
Utiliza
NAT
router
inal√°mbrico
R19
Compare
contraste
campos
cabecera
IPv4
IPv6
campos
com√∫n
R20
IPv6
tuneliza
routers
IPv4
IPv6
t√∫neles
IPv4
protocolos
capa
enlace
afir-
maci√≥n
SECCI√ìN
4.5
R21
Compare
contraste
algoritmos
enrutamiento
enlaces
vector
distancias
R22
Explique
organizaci√≥n
jer√°rquica
Internet
escalar
red
millones
usuarios
R23
necesario
sistemas
aut√≥nomos
utilicen
algoritmo
enru-
tamiento
interno
SECCI√ìN
4.6
R24
Considere
Figura
4.37
Comenzando
tabla
original
suponga
recibe
anuncio
Subred
destino
router
N√∫mero
saltos
destino
zC
Cambiar√°
tabla
router
caso
afirmativo
R25
Compare
contraste
anuncios
utilizados
RIP
OSPF
R26
Rellene
espacio
blanco
anuncios
RIP
normalmente
anuncian
n√∫mero
saltos
destinos
contrario
actualizaciones
BGP
anuncian
distintos
destinos
R27
protocolo
enrutamiento
interno
AS
protocolo
enrutamiento
sistemas
aut√≥nomos
Internet
R28
importantes
consideraciones
pol√≠ticas
protocolos
enrutamiento
internos
sistemas
aut√≥nomos
OSPF
RIP
protocolo
enrutamiento
sistemas
aut√≥nomos
BGP
R29
Defina
contraste
siguientes
t√©rminos
subred
prefijo
ruta
BGP
R30
utiliza
BGP
atributo
NEXT-HOP
utiliza
atributo
AS-PATH
R31
Describa
administrador
red
ISP
nivel
superior
implemen-
tar
pol√≠ticas
configurar
BGP
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
400SECCI√ìN
4.7
R32
diferencia
importante
implementaci√≥n
abstracci√≥n
difusi√≥n
comunicaciones
unidifusi√≥n
√∫nica
red
router
soporte
difusi√≥n
R33
m√©todos
generales
estudiado
difusi√≥n
inundaci√≥n
controlada
inundaci√≥n
controlada
√°rbol
recubrimiento
indique
siguientes
afirmaciones
verdaderas
falsas
suponer
pierde
paquete
desbordamiento
buffer
paquetes
entregados
enlace
orden
enviados
a.
nodo
recibir
copias
paquete
b.
nodo
reenviar
m√∫ltiples
copias
paquete
enlace
salida
R34
host
une
grupo
multidifusi√≥n
cambiar
direcci√≥n
IP
grupo
multidifusi√≥n
uniendo
R35
funciones
desempe√±adas
protocolo
IGMP
protocolo
enrutamiento
multidifusi√≥n
√°rea
extensa
R36
diferencia
√°rbol
compartido
grupo
√°rbol
basado
origen
contexto
enrutamiento
multidifusi√≥n
Problemas
P1
problema
considerar
ventajas
inconvenientes
redes
circuitos
virtuales
datagramas
a.
Suponga
routers
sujetos
condiciones
fallen
frecuencia
Aconsejar√≠a
arquitectura
datagramas
circui-
tos
virtuales
b.
Suponga
nodo
origen
nodo
destino
requieren
capacidad
fija
est√©
disponible
routers
ruta
origen
destino
exclusivo
tr√°fico
fluye
dichos
nodos
ori-
gen
destino
Aconsejar√≠a
arquitectura
datagramas
circui-
tos
virtuales
c.
Suponga
enlaces
routers
red
fallan
caminos
enru-
tamiento
utilizados
parejas
origen-destino
var√≠an
escenario
arquitectura
datagramas
circuitos
virtuales
sobrecarga
tr√°fico
control
P2
Considere
red
circuitos
virtuales
Suponga
n√∫mero
VC
campo
bits
a.
n√∫mero
m√°ximo
circuitos
virtuales
transportados
enlace
b.
Suponga
nodo
central
determina
rutas
n√∫meros
VC
con-
figuraci√≥n
conexi√≥n
Suponga
emplea
n√∫mero
VC
PROBLEMAS
401
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
401enlace
camino
circuitos
virtuales
Describa
nodo
central
determinar
n√∫mero
VC
configuraci√≥n
conexi√≥n
circuitos
virtuales
activos
m√°ximo
determinado
apartado
exista
n√∫mero
VC
com√∫n
libre
c.
Suponga
permitidos
n√∫meros
VC
enla-
ces
forman
camino
circuito
virtual
configuraci√≥n
conexi√≥n
determinado
camino
terminal
terminal
des-
criba
enlaces
elegir
n√∫meros
VC
configurar
tablas
reenv√≠o
forma
descentralizada
basarse
nodo
central
P3
tabla
reenv√≠o
m√≠nima
red
circuitos
virtuales
columnas
significado
valores
columnas
tabla
reen-
v√≠o
m√≠nima
red
datagramas
columnas
significado
valores
columnas
P4
Utilice
red
mostrada
abajo
a.
Suponga
red
datagramas
Especifique
tabla
reenv√≠o
router
tr√°fico
destinado
host
H3
reenv√≠ado
interfaz
b.
Suponga
red
datagramas
escribir
tabla
reen-
v√≠o
router
tr√°fico
H1
destinado
host
H3
reenviado
interfaz
tr√°fico
H2
destinado
host
H3
reenviado
interfaz
Sugerencia
pregunta
truco
c.
suponga
red
circuitos
virtuales
llamada
activa
H1
H3
llamada
activa
H2
H3
Escriba
tabla
reen-
v√≠o
router
tr√°fico
H1
destinado
host
H3
reen-
viado
interfaz
tr√°fico
H2
destinado
host
H3
reenviado
interfaz
d.
Suponga
escenario
apartado
escriba
tablas
reenv√≠o
nodos
D.
P5
Considere
red
circuitos
virtuales
campo
bits
n√∫mero
VC
Suponga
red
desea
configurar
circuito
virtual
enlaces
enlace
enlace
enlace
enlace
D.
Suponga
enlaces
actualmente
dando
soporte
circuitos
virtuales
n√∫meros
VC
siguientes
402
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
402Enlace
Enlace
Enlace
Enlace
00
01
10
11
01
10
11
00
responder
siguientes
preguntas
circuitos
virtuales
existentes
atravesando
enlaces
a.
requiere
circuito
virtual
utilice
n√∫mero
VC
enlaces
ruta
n√∫mero
VC
asignarse
cir-
cuito
virtual
b.
permite
circuito
virtual
n√∫meros
VC
distintos
diferen-
tes
enlaces
ruta
tablas
reenv√≠o
tengan
cabo
traducci√≥n
n√∫mero
VC
combinaciones
distintas
cua-
tro
n√∫meros
VC
enlaces
utilizarse
P6
texto
utilizado
t√©rminos
servicio
orientado
conexi√≥n
des-
cribir
servicio
capa
transporte
servicio
conexi√≥n
servicio
capa
red
sutiles
diferencias
terminolog√≠a
P7
Secci√≥n
4.3
mencionado
existir
cola
entrada
entramado
conmutaci√≥n
r√°pido
velocidades
l√≠nea
entrada
suponiendo
l√≠neas
entrada
presentan
velocidad
l√≠nea
Explique
deber√≠a
P8
Considere
dispositivo
conmutaci√≥n
mostrado
abajo
Suponga
datagramas
longitud
fija
dispositivo
opera
forma
s√≠ncrona
particionada
partici√≥n
temporal
transferir
datagrama
puerto
entrada
puerto
salida
entramado
conmutaci√≥n
emplea
estructura
malla
m√°ximo
transferir
datagrama
puerto
salida
determinado
partici√≥n
tiempo
distintos
puertos
salida
recibir
datagramas
procedentes
distintos
puertos
entrada
partici√≥n
tiempo
n√∫mero
m√≠nimo
particiones
tiempo
nece-
sarias
transferir
paquetes
mostrados
puertos
entrada
puer-
tos
salida
suponiendo
orden
planificaci√≥n
cola
entrada
desee
existir
bloqueo
HOL
n√∫mero
m√°ximo
necesario
particiones
tiempo
suponiendo
orden
planificaci√≥n
caso
imaginar
suponiendo
cola
entrada
vac√≠a
inac-
tiva
PROBLEMAS
403
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
403P9
Considere
red
datagramas
utiliza
direcciones
host
32
bits
Suponga
router
enlaces
numerados
paquetes
reenvia-
interfaces
enlaces
Rango
direcciones
destino
Interfaz
enlace
11100000
00000000
00000000
00000000
11100000
00111111
11111111
11111111
11100000
01000000
00000000
00000000
11100000
01000000
11111111
11111111
11100000
01000001
00000000
00000000
11100001
01111111
11111111
11111111
caso
a.
Proporcione
tabla
reenv√≠o
entradas
utilice
regla
coinci-
dencia
prefijo
reenv√≠e
paquetes
interfaces
enlace
correctas
b.
Describa
determina
tabla
reenv√≠o
interfaz
enlace
apropiada
datagramas
siguientes
direcciones
destino
11001000
10010001
01010001
01010101
11100001
01000000
11000011
00111100
11100001
10000000
00010001
01110111
P10
Considere
red
datagramas
utiliza
direcciones
host
bits
Suponga
router
utiliza
coincidencias
prefijo
cuya
tabla
reenv√≠o
Coincidencia
prefijo
Interfaz
00
010
011
10
11
interfaces
proporcione
rango
asociado
direcciones
host
destino
n√∫mero
direcciones
contenidas
rango
P11
Considere
red
datagramas
utiliza
direcciones
host
bits
Suponga
router
utiliza
coincidencias
prefijo
cuya
tabla
reenv√≠o
404
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
404Coincidencia
prefijo
Interfaz
10
10
111
caso
interfaces
proporcione
rango
asociado
direcciones
host
destino
n√∫mero
direcciones
contenidas
rango
P12
router
interconecta
subredes
Subred
Subred
Subred
Suponga
requiere
interfaces
subredes
tengan
prefijo
223.1.17/24
Suponga
requiere
Subred
admita
63
interfaces
Subred
admitir
95
interfaces
Subred
16
interfaces
Determine
direcciones
red
forma
a.b.c.d
satisfagan
restricciones
P13
Secci√≥n
4.2.2
proporcionado
tabla
reenv√≠o
ejemplo
utilizando
coincidencia
prefijo
Vuelva
escribir
tabla
reenv√≠o
utili-
zando
notaci√≥n
a.b.c.d
lugar
notaci√≥n
binario
P14
Problema
P9
pedido
proporcione
tabla
reenv√≠o
utilizando
regla
coincidencia
prefijo
Escriba
tabla
reenv√≠o
utilizando
notaci√≥n
a.b.c.d
lugar
notaci√≥n
binario
P15
Considere
subred
cuyo
prefijo
128.119.40.128/26
Proporcione
ejemplo
direcci√≥n
IP
forma
xxx.xxx.xxx.xxx
asignada
red
Suponga
ISP
posee
bloque
direcciones
128.119.40.64/25
Suponga
desea
crear
subredes
bloque
direcciones
teniendo
blo-
n√∫mero
direcciones
IP
prefijos
expresados
for-
mato
a.b.c.d
subredes
P16
Considere
topolog√≠a
Figura
4.17
Denomine
subredes
hosts
comenzando
sentido
horario
12:00
redes
C.
Deno-
mine
subredes
hosts
redes
F.
a.
Asigne
direcciones
red
subredes
teniendo
siguientes
restricciones
direcciones
asignadas
214.97.254/23
subred
disponer
direcciones
suficientes
soporte
250
interfaces
subred
disponer
direcciones
suficientes
soporte
120
interfaces
subred
disponer
direcciones
suficientes
soporte
120
interfaces
subredes
deber√≠an
soporte
interfaces
subred
asignaci√≥n
deber√≠a
hacerse
empleando
formato
a.b.c.d
a.b.c.d
e.f.g.h
y.
b.
Utilizando
respuesta
apartado
proporcione
tablas
reenv√≠o
utili-
zando
regla
coincidencia
prefijo
routers
P17
env√≠a
datagrama
2.400
bytes
enlace
MTU
700
bytes
Suponga
datagrama
original
marcado
n√∫mero
identificaci√≥n
422
PROBLEMAS
405
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
405¬øCu√°ntos
fragmentos
generan
valores
distintos
campos
datagramas
IP
generados
relacionados
fragmentaci√≥n
P18
Suponga
tama√±o
datagramas
limitado
1.500
bytes
incluyendo
cabecera
host
host
destino
B.
Suponiendo
cabecera
IP
20
bytes
datagramas
necesitar√≠an
enviar
archivo
MP3
millones
bytes
Explique
c√°lculos
respuesta
P19
Considere
red
Figura
4.22
Suponga
ISP
asigna
router
direcci√≥n
24.34.112.235
direcci√≥n
red
dom√©stica
192.168.1/24
a.
Asigne
direcciones
interfaces
red
dom√©stica
b.
Suponga
host
conexiones
TCP
activas
puerto
80
host
128.119.40.86
Proporcione
entradas
correspondientes
tabla
traducciones
NAT
P20
Suponga
interesado
detectar
n√∫mero
hosts
tra-
ductor
NAT
Observe
capa
IP
marca
secuencialmente
n√∫mero
identi-
ficaci√≥n
paquete
IP
n√∫mero
identificaci√≥n
paquete
IP
generado
host
n√∫mero
aleatorio
n√∫meros
identificaci√≥n
subsiguien-
tes
paquetes
IP
asignan
forma
secuencial
Suponga
paquetes
IP
generados
hosts
traductor
NAT
env√≠an
exterior
a.
Bas√°ndose
observaci√≥n
suponiendo
husmear
paque-
tes
enviados
NAT
exterior
esbozar
t√©cnica
sencilla
detectar
n√∫mero
hosts
√∫nicos
traductor
NAT
Justifique
res-
puesta
b.
n√∫meros
identificaci√≥n
asignan
secuencialmente
aleatoria-
mente
servir√≠a
t√©cnica
Justifique
respuesta
P21
problema
explora
impacto
NAT
aplicaciones
P2P.
Suponga
par
cuyo
nombre
usuario
Arnold
descubre
consulta
par
nombre
usuario
Bernard
archivo
desea
descargar
Suponga
Bernard
Arnold
traductor
NAT
Intente
deducir
t√©cnica
permita
Arnold
establecer
conexi√≥n
TCP
Bernard
configuraci√≥n
NAT
espec√≠fica
aplicaci√≥n
dificultades
definir
t√©cnica
explique
P22
Figura
4.27
enumere
rutas
contienen
bucle
P23
Repita
Problema
P22
rutas
w.
P24
Considere
red
p√°gina
costes
enlace
indicados
utilice
algoritmo
ruta
corta
Dijkstra
calcular
ruta
corta
nodos
red
Muestre
funciona
algoritmo
calculando
tabla
similar
mostrada
Tabla
4.3
P25
Considere
red
Problema
P24
Utilizando
algoritmo
Dijkstra
utilizando
tabla
similar
Tabla
4.3
haga
a.
Calcule
ruta
corta
nodos
red
b.
Calcule
ruta
corta
nodos
red
406
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
406c
Calcule
ruta
corta
nodos
red
d.
Calcule
ruta
corta
nodos
red
e.
Calcule
ruta
corta
nodos
red
f.
Calcule
ruta
corta
nodos
red
P26
Utilice
red
muestra
continuaci√≥n
suponga
nodo
inicialmente
conoce
costes
vecinos
Utilizando
algoritmo
vector
distancias
especifique
entradas
tabla
distancias
nodo
z.
P27
Considere
topolog√≠a
general
red
concreta
mostrada
versi√≥n
s√≠ncrona
algoritmo
vector
distancias
Suponga
itera-
ci√≥n
nodo
intercambia
vectores
distancia
vecinos
recibe
vectores
distancia
Suponiendo
algoritmo
inicia
nodo
conociendo
costes
vecinos
inmediatos
n√∫mero
m√°ximo
iteraciones
requerido
algoritmo
distribuido
converja
Justifique
respuesta
P28
Considere
fragmento
red
mostrado
continuaci√≥n
vecinos
conectados
y.
ruta
coste
m√≠nimo
destino
mostrado
ruta
coste
m√≠nimo
rutas
completas
muestran
costes
enlace
red
valores
enteros
estrictamente
positivos
PROBLEMAS
407
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
407a
Indique
vector
distancias
destinos
u.
b.
Indique
cambio
coste
enlace
c(x
c(x
informe
vecinos
ruta
coste
m√≠nimo
resultado
ejecutar
algo-
ritmo
vector
distancias
c.
Indique
cambio
coste
enlace
c(x
c(x
informe
vecinos
ruta
coste
m√≠nimo
resultado
ejecutar
algo-
ritmo
vector
distancias
P29
Considere
topolog√≠a
nodos
mostrada
Figura
4.30
lugar
costes
enlace
mostrados
dicha
figura
costes
enlace
c(x
c(y
c(z
Calcule
tablas
distancias
paso
inicializaci√≥n
des-
pu√©s
iteraci√≥n
versi√≥n
s√≠ncrona
algoritmo
vector
distancias
anteriormente
explicar
Figura
4.30
P30
Considere
problema
infinito
enrutamiento
vector
dis-
tancias
producir√°
problema
disminuimos
coste
enlace
ocurre
conectamos
nodos
enlace
P31
Demuestre
aplicar
algoritmo
vector
distancias
Figura
4.30
valor
vector
distancias
D(x
creciente
finalmente
estabilizar√°
n√∫mero
finito
pasos
P32
Considere
Figura
4.31
Suponga
router
conectado
routers
z.
costes
enlace
siguientes
c(x
c(x
50
c(y
c(z
w)=1
c(y
Suponga
utiliza
inversa
envenenada
algoritmo
enrutamiento
vector
distancias
a.
enrutamiento
vector
distancias
estabiliza
routers
informan
respectivas
distancias
x.
valores
dis-
tancias
b.
suponga
coste
enlace
aumenta
60
producir√°
problema
infinito
utilice
inversa
envenenada
problema
infinito
iteraciones
necesarias
enrutamiento
vector
distancias
alcance
estable
Justifique
respuesta
c.
modificar√≠a
c(y
existiera
problema
infinito
c(y
cambia
60
P33
Describa
detectarse
BGP
existencia
bucles
rutas
P34
router
BGP
elegir√°
ruta
bucles
longitud
corta
secuencia
AS-PATH
Justifique
respuesta
408
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
408P35
Considere
red
mostrada
continuaci√≥n
Suponga
sistemas
aut√≥nomos
AS3
AS2
ejecutando
OSPF
protocolo
enrutamiento
interno
Suponga
AS1
AS4
ejecutando
RIP
protocolo
enrutamiento
interno
Suponga
utilizan
sesiones
eBGP
iBGP
protocolo
enrutamiento
sistemas
aut√≥nomos
inicialmente
enlace
f√≠sico
AS2
AS4
a.
protocolo
enrutamiento
aprende
router
3c
acerca
prefijo
OSPF
RIP
eBGP
iBGP
b.
protocolo
enrutamiento
aprende
router
3a
acerca
c.
protocolo
enrutamiento
aprende
router
1c
acerca
d.
protocolo
enrutamiento
aprende
router
1d
acerca
P36
ontinuando
problema
router
1d
aprende
acerca
incluir√°
entrada
tabla
reenv√≠o
a.
entrada
I1
I2
Explique
frase
b.
suponga
enlace
f√≠sico
AS2
AS4
mostrado
l√≠nea
puntos
figura
Suponga
router
1d
aprende
accesi-
ble
AS2
AS3
I1
I2
Explique
frase
c.
suponga
sistema
aut√≥nomo
AS5
conecta
ruta
AS2
AS4
muestra
diagrama
Suponga
router
1d
aprende
accesible
AS2
AS5
AS4
AS3
AS4
I1
I2
Explique
frase
P37
Considere
red
mostrada
figura
p√°gina
ISP
pro-
porciona
servicio
troncal
nacional
ISP
regional
ISP
ofrece
servicio
troncal
nacional
ISP
regional
ISP
consta
sistema
aut√≥nomo
pares
comunican
puntos
utilizando
BGP
Considere
tr√°-
fico
D.
preferir√≠a
manipular
tr√°fico
enlace
PROBLEMAS
409
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
409la
Costa
Oeste
tendr√≠a
absorber
coste
transportar
tr√°-
fico
pa√≠s
preferir√≠a
obtener
tr√°fico
enlace
Costa
cuyo
caso
tendr√≠a
transportar
tr√°fico
pa√≠s
mecanismo
BGP
utilizar
llevara
tr√°-
fico
A-a-D
punto
contacto
Costa
responder
pre-
gunta
ahondar
especificaci√≥n
BGP
P38
Figura
4.42
considere
informaci√≥n
rutas
llega
redes
terminales
stub
Bas√°ndose
informaci√≥n
disponible
respectivas
im√°genes
topolog√≠a
red
Justifique
respuesta
imagen
topolog√≠a
muestra
continuaci√≥n
P39
Considere
Figura
4.42
reenviar√≠a
tr√°fico
destinado
bas√°ndose
enrutamiento
BGP
aplicaciones
populares
paquetes
datos
dirigen
fluyen
Identi-
fique
tales
aplicaciones
describa
paquetes
datos
siguen
ruta
determinada
enrutamiento
BGP
P40
Figura
4.42
suponga
red
terminal
cliente
ISP
A.
Suponga
relaci√≥n
pares
cliente
C.
Suponga
preferir√≠a
tr√°fico
destinado
procediera
tr√°fico
destinado
procediera
C.
anunciar
rutas
rutas
sistema
aut√≥nomo
recibe
410
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
410P41
Considere
red
nodos
nodos
etiquetados
Problema
P4
Demuestre
√°rbol
coste
m√≠nimo
ra√≠z
incluye
hosts
terminales
nodos
y.
Demuestre
informalmente
√°rbol
√°rbol
coste
m√≠nimo
P42
Considere
m√©todos
b√°sicos
identificados
cabo
difusi√≥n
emulaci√≥n
unidifusi√≥n
basada
capa
red
ayuda
rou-
ters
suponga
utiliza
difusi√≥n
√°rbol
recubrimiento
dicha
comunicaci√≥n
capa
red
Considere
√∫nico
emisor
32
receptores
Suponga
emisor
conectado
receptores
√°rbol
binario
routers
topolog√≠a
coste
enviar
paquete
difusi√≥n
casos
difusi√≥n
emulaci√≥n
unidifusi√≥n
basada
capa
red
env√≠a
paquete
copia
paquete
√∫nico
enlace
a√±ade
unidad
coste
topolog√≠a
interconexi√≥n
emisor
recep-
tores
routers
har√°
diferencien
m√°ximo
coste
emulaci√≥n
unidifusi√≥n
difusi√≥n
basada
capa
red
seleccio-
nar
tantos
routers
desee
P43
Considere
operaci√≥n
algoritmo
reenv√≠o
camino
inverso
RPF
utilizado
Figura
4.44
Utilizando
topolog√≠a
determine
conjunto
rutas
nodos
nodo
origen
indique
rutas
grafo
utilizando
l√≠neas
sombreadas
gruesas
Figura
4.44
rutas
fueran
rutas
coste
m√≠nimo
nodo
recibir√≠a
copia
mensaje
difusi√≥n
procedente
nodos
RPF
P44
Considere
topolog√≠a
mostrada
Figura
4.44
Suponga
enlaces
tie-
nen
coste
unitario
nodo
origen
comunicaciones
difusi√≥n
Utilizando
flechas
mostradas
Figura
4.44
indique
enlaces
reenviar√°n
paquetes
utilizando
RPF
enlaces
paquetes
reenviados
nodo
origen
P45
Repita
Problema
P44
utilizando
grafo
Problema
P24
Suponga
ori-
gen
difusi√≥n
costes
enlaces
mostrados
Problema
P22
P46
Considere
topolog√≠a
mostrada
Figura
4.46
suponga
enlace
coste
unidad
Suponga
elige
nodo
nodo
central
algoritmo
enrutamiento
multidifusi√≥n
basado
nodo
central
Suponiendo
router
conectado
utiliza
ruta
coste
m√≠nimo
nodo
enviar
mensajes
uni√≥n
dibuje
√°rbol
enrutamiento
basado
nodo
central
resultante
√°rbol
resultante
√°rbol
coste
m√≠nimo
Justifique
respuesta
P47
Repita
Problema
P46
utilizando
grafo
Problema
P24
Suponga
nodo
central
nodo
v.
P48
Secci√≥n
4.5.1
estudiado
algoritmo
enrutamiento
enla-
ces
Dijkstra
calcular
rutas
unidifusi√≥n
individualmente
rutas
coste
m√≠nimo
origen
destinos
pensarse
uni√≥n
rutas
dar√°
resultado
√°rbol
rutas
unidifusi√≥n
coste
m√≠nimo
√°rbol
rutas
unidifusi√≥n
cortas
costes
enla-
ces
id√©nticos
Construyendo
contraejemplo
demuestre
√°rbol
ruta
coste
m√≠nimo
√°rbol
recubrimiento
m√≠nimo
PROBLEMAS
411
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
411P49
Considere
red
nodos
conectados
nodos
√∫nico
intervalo
tiempo
nodo
recibir
paquetes
difusi√≥n
transmitidos
vecinos
duplicar
paquetes
enviarlos
vecinos
nodo
env√≠o
paquete
concreto
intervalo
tiempo
nodos
vecinos
recibir
duplicar
reenviar
paquetes
suce-
sivamente
Suponga
utiliza
t√©cnica
inundaci√≥n
controlada
propor-
cionar
comunicaci√≥n
difusi√≥n
red
intervalo
tiempo
copias
paquete
difusi√≥n
transmitir√°n
suponiendo
intervalo
tiempo
nodo
origen
transmiti√≥
√∫nico
paquete
difusi√≥n
vecinos
P50
visto
Secci√≥n
4.7
protocolo
capa
red
utilizar
identificar
hosts
participan
grupo
multidifusi√≥n
Sabiendo
aprender
aplicaciones
multidifusi√≥n
identida-
des
hosts
participando
grupo
multidifusi√≥n
P51
Dise√±e
proporcione
pseudoc√≥digo
protocolo
nivel
aplicaci√≥n
mantenga
direcciones
host
host
participantes
grupo
multi-
difusi√≥n
Identifique
espec√≠ficamente
servicio
red
unidifusi√≥n
multidifusi√≥n
utilizar
protocolo
indique
protocolo
enviando
mensajes
banda
banda
flujo
datos
aplicaci√≥n
partici-
pantes
grupo
multidifusi√≥n
P52
tama√±o
espacio
direcciones
multidifusi√≥n
Suponga
grupos
multidifusi√≥n
seleccionan
aleatoriamente
direcci√≥n
multidifu-
si√≥n
probabilidad
elijan
direcci√≥n
Suponga
1.000
grupos
multidifusi√≥n
activos
tiempo
seleccionan
direcciones
grupo
multidifusi√≥n
aleatoriamente
probabilidad
interfieran
Preguntas
discusi√≥n
D1
Localice
empresas
vendan
actualmente
routers
alta
velocidad
Compare
routers
potentes
comercialicen
definir√≠a
potente
D2
Utilice
servicio
whois
Registro
americano
n√∫meros
Internet
http://www
arin.net/whois
determinar
bloques
direcciones
IP
universidades
utilizarse
servicio
whois
determinar
certeza
ubicaci√≥n
geogr√°-
fica
direcci√≥n
IP
espec√≠fica
D3
escribir
Java
programa
cliente
ping
utilizando
mensajes
ICMP
D4
Secci√≥n
4.4
comentado
implantaci√≥n
IPv6
lenta
lenta
necesita
acelerar
implantaci√≥n
D5
Comente
problemas
NAT
crea
seguridad
IPsec
consulte
Phi-
fer
2000
D6
Estudie
protocolo
UPnP.
Describa
mensajes
utiliza
host
reconfigu-
rar
traductor
NAT
412
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
412D7
Suponga
sistemas
aut√≥nomos
directamente
conectados
conectados
sistema
aut√≥nomo
Suponga
comunicaci√≥n
pares
similar
Z.
suponga
desea
transferir
tr√°fico
X.
Per-
mite
BGP
implementar
pol√≠tica
D8
Secci√≥n
4.7
identificado
serie
aplicaciones
multidifusi√≥n
aplicaciones
adaptadas
modelo
minimalista
ser-
vicio
multidifusi√≥n
Internet
aplicaciones
especial-
mente
adaptadas
modelo
servicio
Tareas
programaci√≥n
tarea
programaci√≥n
escribir
conjunto
distribuido
procedi-
mientos
implemente
enrutamiento
as√≠ncrono
distribuido
vector
distancias
red
muestra
abajo
escribir
siguientes
rutinas
ejecutar√°n
forma
as√≠ncrona
entorno
emulado
proporcionado
tarea
nodo
escribir√°
rutinas
siguientes
rtinit0
llamar√°
rutina
principio
emulaci√≥n
rtinit0
argumentos
inicializar
tabla
distancias
nodo
reflejar
costes
directos
nodos
respectivamente
figura
enlaces
bidireccionales
costes
ambas
direcciones
id√©nticos
inicializar
tabla
distancias
estructura
datos
necesiten
rutinas
nodo
deber√°
enviar
vecinos
directamente
conectados
caso
coste
rutas
coste
m√≠nimo
nodos
red
infor-
maci√≥n
coste
m√≠nimo
env√≠a
nodos
vecinos
paquete
actualiza-
ci√≥n
enrutamiento
llamando
rutina
tolayer2
describe
tarea
completa
formato
paquete
actualizaci√≥n
enrutamiento
descrito
tarea
completa
rtupdate0(struct
rtpkt
rcvdpkt
llamar√°
rutina
nodo
reciba
paquete
enrutamiento
enviado
vecinos
directamente
conec-
tados
par√°metro
rcvdpkt
puntero
paquete
recibido
rtupdate0
n√∫cleo
algoritmo
vector
distancias
valores
recibidos
paquete
actualizaci√≥n
enrutamiento
procedente
nodo
contienen
costes
ruta
corta
actual
nodos
red
rtupdate0
utiliza
valores
actualizar
tabla
distancias
especifica
algoritmo
TAREAS
PROGRAMACI√ìN
413
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
413de
vector
distancias
coste
m√≠nimo
nodo
cambia
resultado
actualizaci√≥n
nodo
informa
cambio
coste
m√≠nimo
vecinos
directamente
conectados
envi√°ndoles
paquete
enrutamiento
Recuerde
algoritmo
vector
distancias
nodos
directamente
conectados
intercambia-
r√°n
paquetes
enrutamiento
nodos
comunicar√°n
nodos
har√°n
nodos
definen
rutinas
similares
escribir
pro-
cedimientos
rtinit0
rtinit1
rtinit2
rtinit3
rtupdate0
rtupdate1
rtup-
date2
rtupdate3
rutinas
implementar√°n
conjuntamente
c√°lculo
as√≠ncrono
distribuido
tablas
distancias
topolog√≠a
costes
mostrados
figura
encontrar
detalles
acerca
tarea
programaci√≥n
c√≥digo
crear
entorno
hardware
software
simulado
http:/
/www
awl.com/kurose-ross
disponible
versi√≥n
Java
tarea
Pr√°cticas
laboratorio
Wireshark
sitio
web
libro
http://www.awl.com/kurose-ross
encontrar√°
pr√°cticas
labo-
ratorio
Wireshark
examina
funcionamiento
protocolo
IP
formato
datagrama
IP
concreto
ocupa
protocolo
ICMP
comandos
ping
traceroute
414
CAP√çTULO
CAPA
RED
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
414415
especializarse
campo
redes
trabajando
programador
UCLA
finales
d√©cada
1960
trabajo
finan-
ciado
Agencia
Proyectos
Investigaci√≥n
Avanzada
Defensa
Unidos
llamada
ARPA
DARPA
Trabajaba
laboratorio
profesor
Leonard
Kleinrock
Centro
Medidas
Red
recientemente
creada
red
ARPAnet
nodo
ARPAnet
instalado
UCLA
septiembre
1969
responsable
programar
computadora
utilizaba
capturar
informaci√≥n
rendimiento
acerca
ARPAnet
devol-
informaci√≥n
compararla
modelos
matem√°ticos
predicciones
relativas
ren-
dimiento
red
Aa
colos
nivel
host
ARPAnet
procedimientos
formatos
permitir√≠an
tipos
distintos
computadoras
interactuaran
red
investigaci√≥n
fas-
cinante
mundo
comunicaci√≥n
computaci√≥n
distribuida
dise√±√≥
protocolo
imaginaba
IP
llegar√≠a
ubicuo
Bob
Kahn
comenzamos
trabajar
tema
1973
est√°bamos
concen-
trados
tema
fundamental
serie
redes
paquetes
heterog√©neas
interope-
raran
partiendo
pod√≠amos
modificar
redes
Intent√°bamos
encontrar
forma
interconectar
conjunto
arbitrario
redes
paquetes
transparente
computadoras
pudieran
comunicarse
terminal
terminal
necesidad
traducci√≥n
intermedia
√©ramos
conscientes
est√°bamos
trabajando
tec-
nolog√≠a
potente
ampliable
ten√≠amos
imagen
clara
pod√≠a
llegar
mundo
centenares
millones
computadoras
interconectadas
Internet
Vinton
G.
Cerf
Vinton
G.
Cerf
Vicepresidente
jefe
estrategia
Internet
Google
trabajado
16
a√±os
MCI
distintos
puestos
acabando
carrera
profesional
Vicepresidente
senior
Estrategia
Tecnol√≥gica
conocido
co-dise√±ador
protocolos
TCP
IP
arquitectura
Internet
tiempo
trabaj√≥
1976
1982
Agencia
Proyectos
Investigaci√≥n
Avanzada
Defensa
DARPA
Department
of
Defense
Advanced
Research
Projects
Agency
Unidos
desempe√±√≥
papel
crucial
dirigiendo
desarrollo
Internet
tecnolog√≠as
seguridad
empaquetado
datos
relacionadas
Internet
Recibi√≥
Medalla
Presidencial
Libertad
2005
Medalla
Nacional
Tecnolog√≠a
1997
licenciado
Matem√°ticas
Universidad
Stanford
Doctor
Ciencias
Computaci√≥n
UCLA
ENTREVISTA
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
415416
cree
futuro
redes
Internet
cree
principales
desa-
f√≠os
obst√°culos
enfrentaremos
Internet
redes
general
continuar√°n
evolucionando
expandi√©ndose
exis-
ten
suficientes
evidencias
afirmar
miles
millones
dispositivos
compatibles
Internet
incluyendo
equipos
tales
tel√©fonos
m√≥viles
frigor√≠ficos
asistentes
digitales
perso-
nales
PDA
servidores
dom√©sticos
televisiones
colecci√≥n
habitual
computadoras
port√°tiles
servidores
etc.
principales
desaf√≠os
incluyen
soporte
movilidad
capacidad
bater√≠as
capacidad
enlaces
acceso
red
capacidad
ampliar
n√∫cleo
√≥ptico
red
forma
ilimitada
dise√±o
extensi√≥n
interplanetaria
Internet
proyecto
profundamente
involucrado
Jet
Propulsion
Laboratory
Asimismo
nece-
sitaremos
transici√≥n
IPv4
direcciones
32
bits
IPv6
direcciones
128
bits
larga
lista
desaf√≠os
servido
inspiraci√≥n
profesionalmente
colega
Bob
Kahn
director
tesis
Gerald
Estrin
amigo
Steve
Crocker
conoci-
mos
facultad
introdujo
mundo
computadoras
1960
miles
ingenieros
Internet
contin√∫e
evolucionando
consejo
dar√≠a
estudiantes
inician
andadura
campo
redes
Internet
pensar
limitaciones
sistemas
existentes
tratar
imaginar
cosas
posibles
continuaci√≥n
ponerse
manos
obra
intentando
averiguar
actual
cosas
preciso
capaz
so√±ar
media
docena
cole-
gas
trabajando
Jet
Propulsion
Laboratory
dise√±o
extensi√≥n
inter-
planetaria
Internet
terrestre
tarden
d√©cadas
implementar
misi√≥n
misi√≥n
parafraseando
conocido
hombre
llegar
all√°
mano
alcan-
za
cielos
M04_KURO9675_05_SE_CH04.qxd
22/3/10
09:29
P√°gina
416CAP√çTULO
capa
enlace
redes
√°rea
local
417
cap√≠tulo
visto
capa
red
proporciona
servicio
comunica-
ciones
hosts
muestra
Figura
5.1
ruta
comunicaci√≥n
compuesta
serie
enlaces
comunicaciones
comienzan
host
origen
pasan
serie
routers
terminan
host
destino
medida
conti-
nuamos
bajando
pila
protocolos
capa
red
capa
enlace
surge
forma
natural
pregunta
env√≠an
paquetes
enlaces
individua-
forman
ruta
comunicaci√≥n
terminal
terminal
encapsulan
datagramas
capa
red
tramas
capa
enlace
transmisi√≥n
enlace
individual
proporcionar
protocolos
capa
enlace
trans-
ferencia
datos
fiable
router
router
utilizarse
protocolos
capa
enlace
distintos
enlaces
forman
ruta
comunicaciones
Responderemos
importantes
cuestiones
cap√≠tulo
analizar
capa
enlace
encontramos
tipos
canales
fun-
damentalmente
distintos
capa
enlace
tipo
compuesto
canales
difusi√≥n
comunes
redes
√°rea
local
LAN
redes
LAN
inal√°mbricas
redes
sat√©lite
redes
acceso
h√≠bridas
fibra
cable
coa-
xial
HFC
canal
difusi√≥n
hosts
conectados
canal
comunicaciones
necesario
utilizar
denomina
protocolo
acceso
coordinar
transmisiones
evitar
tramas
transmitidas
coli-
sionen
tipo
canal
capa
enlace
canal
comunicaciones
punto
punto
routers
m√≥dem
acceso
telef√≥nico
residen-
cial
router
ISP
coordinaci√≥n
acceso
enlace
punto
punto
trivial
habiendo
problemas
importantes
relativos
entramado
transferencia
datos
fiable
detecci√≥n
errores
control
flujo
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
417En
cap√≠tulo
exploraremos
diversas
tecnolog√≠as
importantes
capa
enlace
Examinaremos
profundidad
Ethernet
tecnolog√≠a
LAN
cableada
prevalente
examinaremos
Protocolo
punto
punto
PPP
Point-to-Point
Protocol
protocolo
preferido
hosts
residenciales
conexi√≥n
acceso
telef√≥nico
WiFi
general
redes
LAN
inal√°mbricas
tema
relacionado
capa
enlace
pospondremos
estudio
importante
tema
Cap√≠tulo
dedicado
redes
computadoras
inal√°mbricas
movi-
lidad
418
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
ISP
nacional
global
Red
m√≥vil
ISP
local
regional
Red
empresarial
Red
dom√©stica
Red
F√≠sica
Enlace
datos
Red
F√≠sica
Enlace
datos
Red
F√≠sica
Enlace
datos
Red
F√≠sica
Enlace
datos
Red
F√≠sica
Enlace
datos
Red
F√≠sica
Aplicaci√≥n
Transporte
Enlace
datos
Red
F√≠sica
Aplicaci√≥n
Transporte
Enlace
datos
Host
origen
Host
destino
Figura
5.1
capa
enlace
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
4185.1
CAPA
ENLACE
INTRODUCCI√ìN
SERVICIOS
419
5.1
Capa
enlace
introducci√≥n
servicios
Comencemos
proporcionando
terminolog√≠a
√∫til
cap√≠tulo
resultar√°
con-
veniente
referirnos
hosts
routers
simplemente
nodos
veremos
preocupar
especialmente
determinado
nodo
router
host
referimos
canales
comunicaci√≥n
conectan
nodos
adyacentes
ruta
comunicaciones
nombre
enlaces
datagrama
transferido
host
origen
destino
moverse
enlaces
individuales
forman
ruta
terminal
terminal
determinado
enlace
nodo
transmisor
encapsula
datagrama
trama
capa
enlace
transmite
trama
enlace
nodo
receptor
recibe
trama
extrae
datagrama
5.1.1
Servicios
proporcionados
capa
enlace
transmitir
datagrama
enlace
individual
utiliza
protocolo
capa
enlace
protocolo
capa
enlace
define
formato
paquetes
inter-
cambiados
nodos
situados
extremos
enlace
acciones
nodos
llevan
cabo
env√≠an
reciben
paquetes
Recuerde
Cap√≠tulo
unidades
datos
intercambiadas
protocolo
capa
enlace
denomi-
nan
tramas
frames
trama
capa
enlace
suele
encapsular
datagrama
capa
red
veremos
acciones
protocolo
capa
enlace
cabo
hora
enviar
transmitir
tramas
incluye
detecci√≥n
errores
retrans-
misi√≥n
control
flujo
acceso
aleatorio
ejemplos
protocolos
capa
enlace
citar
Ethernet
redes
LAN
inal√°mbricas
802.11
denominadas
WiFi
token
ring
PPP
Hablaremos
detalle
protocolos
mitad
cap√≠tulo
capa
red
asignada
tarea
mover
segmentos
capa
transporte
terminal
terminal
host
origen
host
destino
protocolo
capa
enlace
tarea
nodo
nodo
simple
mover
datagramas
capa
red
√∫nico
enlace
ruta
caracter√≠stica
importante
capa
enlace
datagrama
transportado
pro-
tocolos
capa
enlace
distintos
enlaces
forman
ruta
ejemplo
datagrama
transportado
Ethernet
enlace
PPP
enlace
protocolo
WAN
capa
enlace
enlaces
interme-
dios
importante
observar
servicios
proporcionados
protocolos
capa
enlace
ruta
terminal
terminal
distintos
ejem-
plo
protocolos
capa
enlace
proporcionan
entrega
fiable
capa
red
capaz
trabajo
terminal
terminal
presencia
conjunto
heterog√©neo
servicios
individuales
capa
enlace
comprender
funcionamiento
capa
enlace
relaciona
capa
red
utilizar
analog√≠a
sector
transporte
Piense
agen-
cia
viajes
planifica
viaje
turista
Princeton
Jer-
sey
Lausanne
Suiza
agencia
viajes
decide
conveniente
turista
tomar
limusina
Princeton
aeropuerto
JFK
avi√≥n
aero-
puerto
aeropuerto
Ginebra
finalmente
tren
aeropuerto
Ginebra
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
419hasta
estaci√≥n
tren
Lausanne
agencia
viajes
reservas
responsabilidad
empresa
limousines
Princeton
turista
aero-
puerto
JFK
forma
responsabilidad
compa√±√≠a
a√©rea
transportar
turista
aeropuerto
JFK
Ginebra
responsabilidad
compa√±√≠a
ferrovia-
ria
Suiza
turista
Ginebra
Lausanne
segmentos
viaje
segmento
directo
ubicaciones
adyacentes
Observe
segmentos
transporte
gestionados
empresas
utilizan
modos
trans-
porte
completamente
distintos
limousine
avi√≥n
tren
modos
transporte
proporcionan
servicio
b√°sico
transportar
pasajeros
ubicaci√≥n
adyacente
analog√≠a
sector
transporte
turista
da-
tagrama
segmentos
transporte
enlace
comunicaciones
transporte
protocolo
capa
enlace
agencia
viajes
pro-
tocolo
enrutamiento
servicio
b√°sico
capa
enlace
mover
datagrama
nodo
adyacente
√∫nico
enlace
comunicaciones
detalles
servicio
proporcionado
variar
protocolo
capa
enlace
posibles
servicios
protocolo
capa
enlace
ofrecer
incluyen
Entramado
protocolos
capa
enlace
encapsulan
datagrama
capa
red
trama
capa
enlace
transmitirla
enlace
trama
consta
campo
datos
inserta
datagrama
capa
red
serie
campos
cabecera
trama
incluir
cam-
pos
cola
utilizaremos
t√©rmino
campos
cabecera
referirnos
cabecera
cola
estructura
trama
especificada
protocolo
capa
enlace
Veremos
formatos
trama
examine-
mos
serie
protocolos
espec√≠ficos
capa
enlace
mitad
cap√≠tulo
Acceso
enlace
protocolo
control
acceso
MAC
Medium
Access
Control
especifica
reglas
utilizan
transmitir
trama
enlace
enlaces
punto
punto
tengan
√∫nico
emisor
extremo
enlace
√∫nico
receptor
extremo
protocolo
MAC
simple
emi-
sor
enviar
trama
enlace
est√©
inactivo
caso
interesante
nodos
compartiendo
enlace
difusi√≥n
cuyo
caso
presenta
denominado
problema
acceso
m√∫ltiple
caso
protocolo
MAC
sirve
coordinar
transmisi√≥n
tramas
m√∫ltiples
nodos
estudiaremos
protocolos
MAC
detalle
Secci√≥n
5.3
Entrega
fiable
protocolo
capa
enlace
proporciona
servicio
entrega
fiable
garantiza
transportar
datagrama
capa
red
enlace
produzcan
errores
Recuerde
protocolos
capa
transporte
TCP
proporcionan
servicio
entrega
fiable
forma
similar
servicios
entrega
fiable
capa
transporte
servicio
entrega
fiable
capa
enlace
suele
implementarse
reconocimientos
retransmi-
siones
v√©ase
Secci√≥n
3.4
utiliza
servicio
entrega
fiable
capa
enlace
enlaces
suelen
presentar
altas
tasas
error
ejemplo
enlaces
inal√°mbricos
objetivo
corregir
errores
localmente
enlace
producen
errores
lugar
obligar
protocolo
capa
transporte
aplicaci√≥n
realice
retransmisi√≥n
datos
terminal
ter-
420
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
420minal
entrega
fiable
capa
enlace
considerarse
sobre-
carga
innecesaria
enlaces
tengan
baja
tasa
errores
bit
inclu-
yendo
enlaces
fibra
coaxiales
enlaces
cobre
par
trenzado
raz√≥n
protocolos
capa
enlace
enlaces
cableados
proporcio-
nan
servicio
entrega
fiable
Control
flujo
nodos
situados
extremo
enlace
capacidad
limitada
almacenamiento
buffer
tramas
problema
nodo
receptor
recibir
tramas
velocidad
procesarlas
control
flujo
buffer
receptor
desbordarse
tramas
per-
der√≠an
forma
similar
sucede
capa
transporte
protocolo
capa
enlace
proporcionar
mecanismo
control
flujo
evitar
nodo
emisor
enlace
abrume
nodo
receptor
situado
extremo
Detecci√≥n
errores
hardware
capa
enlace
nodo
receptor
pudiera
lle-
gar
decidir
incorrectamente
bit
contenido
trama
cero
transmitido
viceversa
Dichos
errores
bit
introducen
atenuaci√≥n
se√±ales
ruido
electromagn√©tico
Puesto
necesidad
reenviar
datagrama
contenga
error
protocolos
capa
enlace
proporcionan
mecanismo
detectar
dichos
errores
bit
cabo
nodo
transmisor
incluya
bits
detecci√≥n
errores
trama
nodo
receptor
realice
comprobaci√≥n
errores
Recuerde
Cap√≠tulos
capas
transporte
red
Internet
ofrecen
forma
limitada
detecci√≥n
errores
suma
comprobaci√≥n
Internet
detec-
ci√≥n
errores
capa
enlace
normalmente
sofisticada
implementa
hardware
Correcci√≥n
errores
correcci√≥n
errores
similar
detecci√≥n
errores
receptor
detecta
bits
err√≥neos
trama
determina
exactamente
puntos
trama
producido
errores
corrige
errores
protocolos
proporcionan
correcci√≥n
errores
capa
enlace
cabecera
paquete
lugar
paquete
completo
Habla-
remos
detecci√≥n
correcci√≥n
errores
Secci√≥n
5.2
Semiduplex
full-duplex
transmisi√≥n
full-duplex
nodos
extremos
enlace
transmitir
paquetes
tiempo
transmi-
si√≥n
semiduplex
nodo
transmitir
recibir
tiempo
indicado
anteriormente
servicios
proporcionados
capa
enlace
presentan
notables
paralelismos
servicios
proporcionados
capa
transporte
ejemplo
capa
enlace
capa
transporte
pro-
porcionar
servicio
entrega
fiable
mecanismos
utilizados
garantizar
entrega
fiable
capas
similares
v√©ase
Secci√≥n
3.4
servicios
entrega
fiable
id√©nticos
protocolo
transporte
proporciona
entrega
fiable
segmentos
procesos
terminal
terminal
protocolo
capa
enlace
fiable
proporciona
entrega
fiable
tramas
nodos
conectados
√∫nico
enlace
forma
similar
protocolos
capa
transporte
capa
enlace
proporcionar
servicios
control
flujo
detecci√≥n
errores
control
flujo
protocolo
capa
transporte
proporciona
terminal
terminal
protocolo
capa
enlace
proporciona
nodos
adyacentes
5.1
CAPA
ENLACE
INTRODUCCI√ìN
SERVICIOS
421
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
4215.1.2
implementa
capa
enlace
profundizar
detalles
capa
enlace
consideremos
cuesti√≥n
implementa
capa
centraremos
sistema
terminal
puesto
visto
Cap√≠tulo
implementa
capa
enlace
tarjeta
l√≠nea
router
implementa
capa
enlace
host
hardware
soft-
ware
implementa
tarjeta
chip
separados
realiza
interfaz
resto
hardware
host
resto
componentes
sistema
operativo
Figura
5.2
muestra
arquitectura
t√≠pica
host
capa
enlace
implementa
adaptador
red
denominado
Tarjeta
interfaz
red
NIC
Network
Interface
Card
coraz√≥n
tarjeta
adaptador
red
controlador
capa
enlace
normalmente
√∫nico
chip
prop√≥sito
espe-
cial
implementa
servicios
capa
enlace
entramado
acceso
enlace
control
flujo
detecci√≥n
errores
etc.
identificados
secci√≥n
funcionalidad
controlador
capa
enlace
implementa
hardware
ejemplo
controlador
8254x
Intel
Intel
2009
implementa
proto-
colos
Ethernet
estudiaremos
Secci√≥n
5.5
controlador
Atheros
AR5006
Atheros
2009
implementa
protocolos
WiFi
802.11
estudiaremos
Secci√≥n
6.3
finales
d√©cada
1990
mayor√≠a
adaptadores
red
tarjetas
f√≠sicamente
separadas
ejemplo
tarjetas
PCMCIA
tarjeta
insertable
pod√≠a
intro-
ducirse
ranura
tarjeta
PCI
PC
adaptadores
red
suelen
integrar
placa
base
host
utilizando
configuraci√≥n
denomina
LAN
placa
base
emisor
controlador
toma
datagrama
creado
almace-
nado
memoria
host
capas
superiores
pila
protocolos
encapsula
422
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
Host
Memoria
Bus
host
ejemplo
PCI
CPU
Controlador
Transmisi√≥n
f√≠sica
Adaptador
redEnlace
F√≠sica
Transporte
Red
Enlace
Aplicaci√≥n
Figura
5.2
Adaptador
red
relaci√≥n
componentes
host
funcionalidad
pila
protocolos
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
422datagrama
trama
capa
enlace
rellenando
diversos
campos
trama
transmite
trama
enlace
comunicaciones
protocolo
acceso
enlace
receptor
controlador
recibe
trama
completa
extrae
datagrama
capa
red
capa
enlace
realiza
detecci√≥n
errores
controla-
dor
emisor
encargue
configurar
bits
detecci√≥n
errores
cabe-
cera
trama
controlador
receptor
llevar√°
cabo
detecci√≥n
errores
capa
enlace
realiza
control
flujo
controladores
emisor
receptor
intercambian
informaci√≥n
control
flujo
emisor
env√≠e
tramas
velocidad
receptor
capaz
aceptar
Figura
5.2
muestra
adaptador
red
conectado
bus
host
ejemplo
bus
PCI
PCI-X
ojos
restantes
componentes
host
dispositivo
S.
Figura
5.2
muestra
capa
enlace
implementada
hardware
tarjeta
interfaz
capa
implementa
software
ejecuta
CPU
host
componentes
software
capa
enlace
normalmente
implementan
fun-
ci√≥n
alto
nivel
capa
ejemplo
recepci√≥n
datagrama
capa
red
ensamblado
informaci√≥n
direccionamiento
capa
enlace
activaci√≥n
hardware
controlador
receptor
software
capa
enlace
responde
interrupciones
procedentes
controlador
ejemplo
debidas
recepci√≥n
tramas
encarga
gestionar
condiciones
error
pasa
datagrama
capa
red
capa
enlace
combinaci√≥n
hardware
software
lugar
pila
protocolos
software
hardware
Intel
2009
encontrar
introducci√≥n
comprensible
descripci√≥n
detallada
controlador
8254
punto
vista
programador
software
Figura
5.3
muestra
tarjetas
adaptadoras
emisi√≥n
recepci√≥n
fun-
cionalidad
principal
protocolo
capa
enlace
implementada
controlador
adaptadores
unidades
semi-aut√≥nomas
cuyo
trabajo
consiste
transferir
trama
adaptador
diversos
investigadores
analizado
posibilidad
inte-
grar
funcionalidad
procesamiento
capa
enlace
adaptadores
red
controlador
8254
ejemplo
calcular
suma
comprobaci√≥n
TCP
UDP
suma
comprobaci√≥n
cabecera
IP
hardware
significa
funcionalidad
capas
red
transporte
implementada
controla-
dor
capa
enlace
parecer
sorprendente
violaci√≥n
princi-
pio
divisi√≥n
capas
ventaja
sumas
comprobaci√≥n
calcularse
5.1
CAPA
ENLACE
INTRODUCCI√ìN
SERVICIOS
423
Enlace
f√≠sico
Protocolo
capa
enlace
Trama
Datagrama
Tarjeta
adaptadoraTarjeta
adaptadora
Figura
5.3
Adaptadores
red
comunic√°ndose
datagrama
capa
red
encapsulado
trama
capa
enlace
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
423mucho
r√°pidamente
hardware
software
senti-
r√≠a
tentado
ignorar
violaci√≥n
normas
Mogul
2003
proporciona
inte-
resante
an√°lisis
pros
contras
cabo
procesamiento
TCP
adaptador
Kim
2005
investiga
conveniencia
cabo
funcionalidades
capas
altas
cach√©
HTTP
adaptador
5.2
T√©cnicas
detecci√≥n
correcci√≥n
errores
secci√≥n
indicado
detecci√≥n
correcci√≥n
errores
nivel
bit
detecci√≥n
correcci√≥n
bits
corruptos
trama
capa
enlace
enviada
nodo
nodo
vecino
f√≠sicamente
conectado
servicios
ofrecidos
capa
enlace
visto
Cap√≠tulo
capa
transporte
ofrecen
servicios
detecci√≥n
correcci√≥n
errores
sec-
ci√≥n
examinaremos
t√©cnicas
simples
utilizarse
detectar
casos
corregir
dichos
errores
bit
tratamiento
completo
teor√≠a
implementaci√≥n
t√©cnicas
constituye
tema
libros
texto
ejemplo
Schwartz
1980
Bertsekas
1991
tratamiento
realizaremos
necesariamente
objetivo
desarrollar
simplemente
lector
percepci√≥n
intuitiva
capacidades
proporcionadas
t√©cnicas
detecci√≥n
correcci√≥n
errores
funcionan
t√©cnicas
simples
emplean
pr√°ctica
capa
enlace
Figura
5.4
ilustra
configuraci√≥n
an√°lisis
nodo
emisor
datos
proteger
frente
errores
bit
complementan
serie
bits
detecci√≥n
correcci√≥n
errores
EDC
Error
Detection
Correction
Normalmente
datos
proteger
incluyen
datagrama
recibido
capa
red
transmisi√≥n
enlace
informaci√≥n
direccionamiento
capa
enlace
n√∫meros
secuencia
campos
cabecera
trama
enlace
EDC
env√≠an
nodo
receptor
trama
capa
enlace
nodo
receptor
recibe
secuencia
bits
formada
D 
EDC .
Observe
D 
EDC 
diferir
secuencias
EDC
originales
resultado
alteraciones
bits
sufridas
tr√°nsito
desaf√≠o
receptor
consiste
determinar
D 
coincide
secuencia
ori-
ginal
teniendo
√∫nico
recibido
secuencias
D 
EDC .
importante
observar
palabras
exactas
utilizadas
s√≠mbolo
decisi√≥n
mostrado
Figura
5.4
preguntamos
detectado
error
producido
error
t√©cnicas
detecci√≥n
correcci√≥n
errores
permiten
receptor
detectar
ocasiones
producido
errores
bits
utilizando
bits
detecci√≥n
errores
seguir
existiendo
errores
bit
detectados
receptor
perfectamente
inconsciente
informaci√≥n
recibida
contiene
erro-
res
bits
consecuencia
receptor
entregar
datagrama
corrupto
capa
red
consciente
contenido
campo
cabecera
trama
corrompido
intentaremos
elegir
esquema
detecci√≥n
errores
haga
probabilidad
produzcan
casos
peque√±a
regla
general
sofisticadas
t√©cnicas
detecci√≥n
correcci√≥n
errores
menor
probabilidad
produzcan
errores
bit
424
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
424detectados
mayores
recursos
adicionales
necesarios
har√°n
falta
c√°lculos
obtener
transmitir
n√∫mero
bits
detecci√≥n
correcci√≥n
errores
Examinemos
t√©cnicas
detectar
errores
datos
transmitidos
comprobaciones
paridad
ilustrar
ideas
b√°sicas
subyacen
t√©cnicas
detecci√≥n
correcci√≥n
errores
m√©todos
basados
suma
comprobaci√≥n
suelen
utilizarse
capa
transporte
c√≥digos
redundancia
c√≠clica
normalmente
emplean
adaptador
encargado
capa
enlace
5.2.1
Comprobaciones
paridad
forma
simple
detecci√≥n
errores
√∫nico
bit
paridad
Suponga
informaci√≥n
enviar
Figura
5.5
bits
esquema
paridad
par
emisor
simplemente
incluye
bit
adicional
selecciona
valor
n√∫mero
1s
bits
informaci√≥n
original
bit
paridad
par
esquemas
paridad
impar
valor
bit
paridad
selec-
ciona
exista
n√∫mero
impar
1s
Figura
5.5
ilustra
esquema
pari-
dad
par
√∫nico
bit
paridad
almacena
campo
separado
operaci√≥n
receptor
simple
utiliza
√∫nico
bit
pari-
dad
receptor
necesita
contar
n√∫mero
1s
bits
recibidos
5.2
T√âCNICAS
DETECCI√ìN
CORRECCI√ìN
ERRORES
425
EDC'D
Error
detectado
Datagrama
EDCD
bits
datos
Enlace
proclive
errores
bit
correctos
bits
Datagrama
HI
Figura
5.4
Escenario
detecci√≥n
correcci√≥n
errores
0111000110101011
bits
datos
Bit
paridad
Figura
5.5
Paridad
par
bit
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
425est√°
utilizando
esquema
paridad
par
n√∫mero
impar
bits
valor
receptor
sabr√°
producido
error
bit
forma
precisa
sabr√°
producido
n√∫mero
impar
errores
bit
sucede
produce
n√∫mero
par
errores
bit
comprobar
f√°cilmente
har√≠a
error
detectado
probabilidad
pro-
duzcan
errores
bits
peque√±a
asumir
errores
producen
bits
sucesivos
lugar
forma
independiente
probabilidad
produz-
can
m√∫ltiples
errores
bit
√∫nico
paquete
extremadamente
peque√±a
casos
bastar
utilizar
√∫nico
bit
paridad
medidas
realiza-
das
muestran
errores
lugar
independientemente
suelen
agruparse
for-
mando
r√°fagas
condiciones
r√°fagas
error
probabilidad
produzcan
errores
detectados
trama
protegida
√∫nico
bit
paridad
apro-
ximarse
50
ciento
Spragins
1991
Evidentemente
necesitamos
esquema
detec-
ci√≥n
errores
robusto
afortunadamente
pr√°ctica
suelen
emplearse
esquemas
examinar
esquemas
detecci√≥n
errores
utilizados
pr√°ctica
analizar
generalizaci√≥n
simple
mecanismo
√∫nico
bit
pari-
dad
generalizaci√≥n
permitir√°
comprender
t√©cnicas
correcci√≥n
errores
Figura
5.6
muestra
generalizaci√≥n
bidimensional
esquema
basado
√∫nico
bit
paridad
bits
dividen
filas
columnas
filas
columnas
calculamos
valor
paridad
bits
paridad
resul-
tantes
bits
detecci√≥n
errores
utilizados
trama
capa
enlace
Suponga
produce
√∫nico
error
bit
bits
informaci√≥n
origi-
nales
esquema
paridad
bidimensional
detectaremos
error
paridad
columna
fila
contienen
bit
err√≥neo
receptor
detectar
producido
√∫nico
error
bit
utilizar
√≠ndices
columna
fila
presentan
errores
paridad
identifi-
car
realmente
bit
corrompido
corregir
error
Figura
5.6
muestra
ejemplo
bit
valor
posici√≥n
corrompido
habi√©ndose
cambiado
error
detectable
corregible
receptor
explicaci√≥n
centrado
bits
originales
informaci√≥n
√∫nico
error
bits
paridad
detectable
corregible
esquemas
paridad
bidi-
mensional
detectar
corregir
combinaci√≥n
erro-
res
paquete
problemas
incluidos
cap√≠tulo
analizan
propiedades
esquema
paridad
bidimensional
capacidad
receptor
detectar
corregir
errores
conoce
nom-
bre
Correcci√≥n
errores
FEC
Forward
Error
Correction
t√©cnicas
suelen
utilizar
com√∫nmente
dispositivos
almacenamiento
reproduc-
ci√≥n
audio
ejemplo
CD
audio
entorno
red
t√©cnicas
FEC
emplearse
conjunci√≥n
t√©cnicas
ARQ
capa
enlace
similares
examinado
Cap√≠tulo
t√©cnicas
FEC
valio-
sas
reducir
n√∫mero
retransmisiones
realizadas
emisor
importante
permiten
correcci√≥n
inmediata
errores
receptor
evita
esperar
retardo
propagaci√≥n
ida
vuelta
necesario
emisor
reciba
paquete
NAK
paquete
retransmitido
propague
receptor
caracter√≠stica
potencialmente
importante
aplicaciones
red
tiempo
real
Rubenstein
1998
enlaces
enla-
426
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
4265.2
T√âCNICAS
DETECCI√ìN
CORRECCI√ìN
ERRORES
427
ces
espacio
profundo
presenten
retardos
propagaci√≥n
refe-
rencias
examina
t√©cnicas
FEC
protocolos
control
erro-
res
citar
Biersack
1992
Nonnenmacher
1998
Byers
1998
Shacham
1990
5.2.2
M√©todos
basados
suma
comprobaci√≥n
t√©cnicas
suma
comprobaci√≥n
bits
datos
Figura
5.5
tratan
secuencia
enteros
bits
m√©todo
simple
suma
comprobaci√≥n
consiste
sumar
enteros
bits
utilizar
suma
resultante
bits
detecci√≥n
errores
suma
comprobaci√≥n
Internet
basada
enfoque
bytes
datos
tratan
enteros
16
bits
suman
utiliza
complemento
suma
formar
suma
comprobaci√≥n
Internet
incluye
cabecera
seg-
mento
visto
Secci√≥n
3.3
receptor
comprueba
suma
comprobaci√≥n
calculando
complemento
suma
datos
recibidos
incluyendo
suma
comprobaci√≥n
comprobando
resultado
bits
bits
indicar√°
producido
error
documento
RFC
1071
explica
detalle
algoritmo
suma
comprobaci√≥n
Internet
implementaci√≥n
protocolos
TCP
UDP
suma
comprobaci√≥n
Internet
calcula
campos
incluyendo
campos
cabecera
datos
IP
suma
comprobaci√≥n
calcula
cabe-
cera
IP
segmento
UDP
TCP
suma
comprobaci√≥n
protocolos
ejemplo
XTP
Strayer
1992
calcula
suma
comproba-
ci√≥n
cabecera
paquete
Paridad
fila
Error
paridad
Error
paridad
errores
Error
corregible
√∫nico
bit
d1,1
d2,1
di,1
di+1,1
d1
d2
di
di+1
d1
j+1
d2
j+1
di
j+1
di+1
j+1
Paridad
columna
Figura
5.6
Paridad
par
bidimensional
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
427Los
m√©todos
suma
comprobaci√≥n
requieren
relativamente
sobrecarga
paquete
ejemplo
suma
comprobaci√≥n
TCP
UDP
utiliza
16
bits
sumas
proporcionan
protecci√≥n
relativamente
d√©bil
frente
errores
comparamos
comprobaciones
redundancia
c√≠clica
hablaremos
continuaci√≥n
utilizan
capa
enlace
pregunta
natural
llegados
punto
utilizan
sumas
comprobaci√≥n
capa
trans-
porte
comprobaciones
redundancia
c√≠clica
capa
enlace
Recuerde
normal-
mente
capa
transporte
implementa
software
host
sistema
operativo
Puesto
mecanismo
detecci√≥n
errores
capa
trans-
porte
implementa
software
importante
utilizar
esquema
detecci√≥n
errores
simple
r√°pido
ejemplo
sumas
comprobaci√≥n
contrario
detecci√≥n
errores
capa
enlace
implementa
hardware
dedicado
tarjetas
adaptadoras
pudiendo
hardware
r√°pidamente
operaciones
CRC
complejas
Feldmeier
Feldmeier
1995
presenta
serie
t√©cnicas
implementa-
ci√≥n
r√°pida
software
c√≥digos
suma
comprobaci√≥n
ponderados
c√≥digos
CRC
v√©ase
c√≥digos
5.2.3
Comprobaci√≥n
redundancia
c√≠clica
CRC
t√©cnica
detecci√≥n
errores
utilizada
ampliamente
redes
computadoras
basada
c√≥digos
comprobaci√≥n
redundancia
c√≠clica
CRC
Cyclic
Redundancy
Check
c√≥digos
CRC
conocen
nombre
c√≥digos
poli-
n√≥micos
cadena
bits
enviar
poli-
nomio
cuyos
coeficientes
valores
cadena
bits
interpret√°ndose
operaciones
realizadas
cadena
bits
aritm√©tica
polinomios
c√≥digos
CRC
operan
forma
Considere
secuencia
datos
bits
nodo
emisor
transmitir
nodo
receptor
emisor
receptor
acordar
patr√≥n
bits
conocido
generador
denominare-
mos
letra
G.
Impondremos
condici√≥n
bit
significativo
bit
situado
izquierda
idea
clave
subyacente
c√≥digos
CRC
muestra
Figura
5.7
determinada
secuencia
datos
emisor
seleccionar√°
bits
adicio-
nales
a√±adir√°
patr√≥n
bits
resultante
interpretado
n√∫mero
binario
exactamente
divisible
resto
utilizando
aritm√©tica
m√≥dulo
proceso
comprobaci√≥n
errores
c√≥digos
CRC
simple
receptor
divide
bits
recibidos
G.
resto
distinto
cero
receptor
sabr√°
producido
error
caso
contrario
aceptar√°n
datos
correctos
428
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
bits
bits
Bits
datos
enviar
2r
XOR
Bits
CRC
Patr√≥n
bits
F√≥rmula
matem√°tica
Figura
5.7
CRC
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
428Todos
c√°lculos
c√≥digos
CRC
realizan
aritm√©tica
m√≥dulo
tipo
acarreo
sumas
restas
suma
resta
id√©nticas
ambas
equivalentes
operaci√≥n
OR-exclusiva
XOR
bit
bit
operandos
ejemplo
1011
XOR
0101
1110
1001
XOR
1101
0100
forma
similar
tendremos
1011
0101
1110
1001
1101
0100
multiplicaci√≥n
divisi√≥n
iguales
aritm√©tica
base
sumas
restas
necesarias
llevan
cabo
acarreos
aritm√©tica
binaria
ordi-
naria
multiplicaci√≥n
patr√≥n
bits
desplace
posiciones
izquierda
dados
valor
2r
XOR
dar√°
patr√≥n
bits
mostrado
Figura
5.7
Utilizaremos
caracterizaci√≥n
algebraica
patr√≥n
bits
Figura
5.7
explicaciones
Vo
R.
Recuerde
encontrar
secuencia
exista
cumpla
2r
XOR
nG
seleccionar
divida
2r
XOR
quede
resto
aplicamos
XOR
sumamos
m√≥dulo
acarreo
lados
ecuaci√≥n
obtenemos
2r
nG
XOR
ecuaci√≥n
dividimos
2r
valor
resto
precisamente
R.
palabras
calcular
Figura
5.8
ilustra
c√°lculo
caso
101110
1001
bits
transmitidos
caso
101110
011
comprobar
c√°lculos
comprobar
2r
101011
XOR
R.
definido
est√°ndares
internacionales
generadores
12
16
32
bits
est√°ndar
CRC-32
32
bits
adoptado
serie
protocolos
IEEE
capa
enlace
utiliza
generador
GCRC-32
100000100110000010001110110110111
est√°ndares
CRC
detectar
r√°fagas
errores
inferiores
bits
significa
errores
bits
consecutivos
detectados
condiciones
adecuadas
r√°faga
longitud
superior
bits
detectada
probabilidad
0.5
r.
Asimismo
est√°ndares
CRC
detectar
n√∫mero
impar
errores
bit
Williams
1993
encon-
trar
an√°lisis
implementaci√≥n
c√≥digos
CRC
teor√≠a
subyacente
c√≥digos
resto
2‚ãÖ
5.2
T√âCNICAS
DETECCI√ìN
CORRECCI√ìN
ERRORES
429
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
429CRC
c√≥digos
potentes
cae
alcance
libro
texto
Schwartz
1980
proporciona
excelente
introducci√≥n
tema
5.3
Protocolos
acceso
m√∫ltiple
introducci√≥n
cap√≠tulo
indicado
tipos
enlaces
red
enlaces
punto
punto
enlaces
difusi√≥n
broadcast
enlace
punto
punto
compuesto
√∫nico
emisor
extremo
enlace
√∫nico
receptor
extremo
dise√±ado
protocolos
capa
enlace
enlaces
punto
punto
protocolos
hablaremos
posteriormente
cap√≠tulo
Protocolo
punto
punto
PPP
Point-to-Point
Protocol
protocolo
Control
enlace
datos
alto
nivel
HDLC
High-level
Data
Link
Control
tipo
enlace
enlace
difusi√≥n
m√∫ltiples
nodos
emisores
receptores
conectados
√∫nico
canal
difusi√≥n
compartido
Utilizamos
t√©rmino
difusi√≥n
nodo
transmite
trama
canal
encarga
difundir
trama
nodos
recibe
copia
Ethernet
redes
LAN
inal√°mbricas
ejemplos
tecnolog√≠as
difusi√≥n
capa
enlace
secci√≥n
abstraernos
moment√°neamente
protocolos
espec√≠ficos
capa
enlace
examinar
lugar
problema
crucial
importancia
capa
coordinar
acceso
m√∫ltiples
nodos
emisores
receptores
canal
difusi√≥n
compartido
conoce
nombre
problema
acceso
m√∫ltiple
canales
difusi√≥n
suelen
utilizar
redes
LAN
redes
geogr√°ficamente
concentradas
√∫nico
edificio
campus
corporativo
universitario
examinaremos
secci√≥n
utilizan
canales
acceso
m√∫ltiple
redes
LAN
familiarizados
noci√≥n
transmisiones
difusi√≥n
televisi√≥n
empleando
tipo
mecanismo
inventada
televisi√≥n
tradicional
difusi√≥n
√∫nico
sentido
nodo
fijo
transmite
nodos
receptores
nodos
canal
difusi√≥n
430
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
Figura
5.8
ejemplo
c√°lculo
CRC
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
430una
red
computadoras
enviar
recibir
analog√≠a
ade-
cuada
canal
difusi√≥n
extra√≠da
campo
relaciones
sociales
coctel
personas
re√∫nen
sala
aire
proporciona
difu-
si√≥n
hablar
escuchar
analog√≠a
lectores
estar√°n
familiarizados
clase
profesores
estudiantes
comparten
forma
similar
√∫nico
difusi√≥n
problema
crucial
escena-
rios
determinar
derecho
palabra
derecho
trans-
mitir
canal
personas
llegado
desarrollar
conjunto
elaborado
protocolos
compartir
canal
difusi√≥n
mundo
oportunidad
hablar
hablar
hablen
monopolizar
conversaci√≥n
Levantar
mano
pregunta
plantear
interrumpir
alguien
hablando
quedarse
dormido
alguien
hablando
forma
similar
redes
computadoras
protocolos
denominados
protoco-
acceso
m√∫ltiple
nodos
encargan
regular
transmi-
siones
canal
difusi√≥n
compartido
muestra
Figura
5.9
protocolos
acceso
m√∫ltiple
necesarios
amplia
variedad
escenarios
red
incluyendo
redes
√°rea
local
cableadas
inal√°mbricas
redes
sat√©lite
t√©cni-
camente
nodo
accede
canal
difusi√≥n
adaptador
secci√≥n
referiremos
t√©rmino
nodo
dispositivos
emisor
receptor
pr√°ctica
cientos
miles
nodos
comunic√°ndose
directamente
canal
difusi√≥n
Puesto
nodos
capaces
transmitir
tramas
darse
caso
nodos
transmitieran
tramas
tiempo
sucede
nodos
reciben
tramas
simult√°neamente
tramas
transmitidas
colisionan
receptores
Normalmente
produce
colisi√≥n
nodos
receptores
interpretar
tramas
transmitidas
sentido
se√±ales
tramas
colisionado
entremezclan
separarse
tramas
implicadas
colisi√≥n
pierden
canal
difusi√≥n
desaprove-
chado
intervalo
colisi√≥n
Obviamente
nodos
quieren
trans-
mitir
tramas
frecuente
transmisiones
provocar√°n
colisiones
ancho
banda
canal
difusi√≥n
desperdiciar√°
garantizar
canal
difusi√≥n
realice
trabajo
√∫til
m√∫ltiples
nodos
activos
necesario
coordinar
transmisiones
nodos
activos
trabajo
coordinaci√≥n
responsabilidad
protocolo
acceso
m√∫l-
tiple
40
a√±os
escrito
miles
art√≠culos
cientos
tesis
doctorales
acerca
protocolos
acceso
m√∫ltiple
encontrar
Rom
1990
panor√°-
mica
completa
20
a√±os
investigaciones
inves-
tigaci√≥n
acerca
protocolos
acceso
m√∫ltiple
contin√∫a
activa
continua
aparici√≥n
tipos
enlaces
particular
enlaces
inal√°mbri-
cos
utilizando
diversas
tecnolog√≠as
capa
enlace
obstante
clasificar
5.3
PROTOCOLOS
ACCESO
M√öLTIPLE
431
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
431todos
protocolos
acceso
m√∫ltiple
categor√≠as
protocolos
parti-
cionamiento
canal
protocolos
acceso
aleatorio
protocolos
toma
turnos
Hablaremos
categor√≠as
protocolos
acceso
multiple
siguientes
subsecciones
concluir
introducci√≥n
observando
idealmente
protocolo
acceso
m√∫ltiple
canal
difusi√≥n
velocidad
bits
deber√≠a
siguientes
caracter√≠sticas
deseables
nodo
datos
enviar
nodo
asignar√°
tasa
transferencia
bps
nodos
datos
enviar
nodos
tasa
transferencia
bps
implica
necesariamente
nodos
tasa
instant√°nea
nodo
tasa
media
transmisi√≥n
intervalo
tiempo
definido
ade-
cuadamente
protocolo
descentralizado
nodo
maestro
actuar
punto
√∫nico
fallo
red
432
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
Cable
compartido
ejemplo
Ethernet
Red
inal√°mbrica
compartida
ejemplo
WiFi
Sat√©lite
Coctel
Figura
5.9
canales
acceso
m√∫ltiple
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
4324
protocolo
simple
costoso
implementar
5.3.1
Protocolos
particionamiento
canal
Recuerde
explicaciones
Secci√≥n
1.3
multiplexaci√≥n
divisi√≥n
tiempo
TDM
multiplexaci√≥n
divisi√≥n
frecuencia
FDM
t√©cnicas
utilizarse
particionar
ancho
banda
canal
difusi√≥n
nodos
comparten
canal
ejemplo
suponga
canal
soporte
nodos
tasa
transmisi√≥n
canal
bps
TDM
divide
tiempo
marcos
tempo-
rales
subdivide
marco
temporal
particiones
tiempo
ingl√©s
t√©r-
mino
time
frame
marco
tiempo
TDM
confundirse
unidad
datos
capa
enlace
intercambiada
tarjetas
adaptadoras
red
emisor
recep-
tor
denomina
frame
denominado
trama
caso
evitar
confusiones
subsecci√≥n
referiremos
unidad
datos
capa
enlace
intercambiada
paquete
partici√≥n
tiempo
asigna
nodos
nodo
paquete
enviar
transmite
bits
paquete
partici√≥n
tiempo
asignada
marco
TDM
repite
forma
c√≠clica
Normalmente
tama√±os
partici√≥n
eligen
transmi-
tirse
√∫nico
paquete
partici√≥n
tiempo
asignada
Figura
5.10
muestra
ejemplo
simple
TDM
nodos
volvemos
analog√≠a
coctel
coctel
regulado
TDM
permitir√≠a
participantes
hablar
periodo
fijo
tiempo
permitir√≠a
participante
hablar
cantidad
tiempo
sucesivamente
hubieran
oportunidad
hablar
patr√≥n
repetir√≠a
TDM
resulta
atractivo
elimina
colisiones
perfectamente
equitativo
nodo
obtiene
tasa
transmisi√≥n
dedicada
bps
marco
temporal
presenta
importantes
inconvenientes
lugar
5.3
PROTOCOLOS
ACCESO
M√öLTIPLE
433
4kHz
FDM
TDM
Enlace
4kHz
Partici√≥n
particiones
etiquetadas
dedicadas
pareja
espec√≠fica
emisor-receptor
Marco
234
1234
12341234
Clave
Figura
5.10
ejemplo
TDM
FDM
nodos
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
433nodo
limitado
tasa
promedio
bps
√∫nico
nodo
paquetes
transmitir
inconveniente
nodo
espe-
rar
llegue
turno
secuencia
transmisi√≥n
espera
obligatoria
√∫nico
nodo
trama
enviar
Imagine
situaci√≥n
diera
asistente
coctel
√∫nico
imagine
encontr√°ramos
circunstancia
rara
mundo
escuchar
persona
Evidentemente
TDM
protocolo
acceso
m√∫ltiple
inadecuado
coctel
concreto
TDM
nodos
compartan
canal
difusi√≥n
tiempo
FDM
divide
canal
bps
frecuencias
ancho
banda
asigna
frecuencia
nodos
FDM
crea
canales
peque√±os
bps
√∫nico
canal
disponible
bps
FDM
com-
TDM
ventajas
inconvenientes
Evita
colisiones
divide
ancho
banda
equitativamente
nodos
FDM
comparte
desventaja
fundamental
TDM
nodo
limitado
ancho
banda
√∫nico
nodo
paquetes
enviar
tercer
protocolo
particionamiento
canal
protocolo
Acceso
m√∫ltiple
divisi√≥n
c√≥digo
CDMA
Code
Division
Multiple
Access
TDM
FDM
asignan
particiones
tiempo
frecuencias
respectivamente
nodos
CDMA
asigna
c√≥digo
nodo
nodo
utiliza
c√≥digo
√∫nico
codificar
bits
datos
enviar
seleccionan
c√≥digos
cuidadosamente
redes
CDMA
presentan
maravillosa
caracter√≠stica
distintos
nodos
transmitir
simult√°neamente
respectivos
receptores
decodifiquen
correctamente
bits
datos
codificados
emisor
suponiendo
receptor
conozca
c√≥digo
utili-
zado
emisor
interferencias
provocadas
transmisiones
realizadas
nodos
CDMA
utilizado
sistemas
militares
tiempo
resistencia
interferencias
ampliamente
mundo
civil
particular
telefon√≠a
celular
Puesto
CDMA
estrechamente
ligado
canales
inal√°mbricos
dejaremos
explicaciones
acerca
detalles
t√©cni-
cos
CDMA
Cap√≠tulo
momento
basta
asig-
nar
c√≥digos
CDMA
particiones
tiempo
TDM
frecuencias
FDM
usuarios
canal
acceso
m√∫ltiple
5.3.2
Protocolos
acceso
aleatorio
clase
general
protocolos
acceso
m√∫ltiple
protocolos
acceso
aleatorio
protocolo
acceso
aleatorio
nodo
transmisor
transmite
m√°xima
velocidad
canal
bps
produce
colisi√≥n
nodos
implicados
colisi√≥n
retransmite
repetidamente
trama
paquete
trama
consiga
pasar
sufrir
colisiones
nodo
experimenta
colisi√≥n
retransmite
necesariamente
trama
forma
inmediata
lugar
espera
tiempo
aleatorio
retransmitir
trama
nodo
implicado
colisi√≥n
selecciona
retardo
aleatorio
independientemente
Puesto
retardos
aleatorios
elegidos
forma
independiente
nodos
seleccione
retardo
suficientemente
menor
retardos
nodos
inter-
venido
colisi√≥n
pudiendo
capaz
trama
pase
canal
experimentar
colisi√≥n
434
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
434Existen
docenas
centenares
protocolos
acceso
aleatorio
descritos
lite-
ratura
cient√≠fica
Rom
1990
Bertsekas
1991
secci√≥n
describiremos
protocolos
acceso
aleatorio
com√∫nmente
utilizados
protocolos
ALOHA
Abramson
1970
Abramson
1985
protocolos
Acceso
m√∫ltiple
sondeo
por-
tadora
CSMA
Carrier
Sense
Multiple
Access
Kleinrock
1975b
Posteriormente
Secci√≥n
5.5
abordaremos
detalles
Ethernet
Metcalfe
1976
protocolo
CSMA
popular
ampliamente
difundido
ALOHA
particiones
Comencemos
estudio
protocolos
acceso
aleatorio
protoco-
tipo
simples
protocolo
ALOHA
particiones
descripci√≥n
ALOHA
particiones
haremos
siguientes
suposiciones
‚Ä¢T
bits
‚Ä¢E
segundos
partici√≥n
equivale
tiempo
tarda
transmitir
trama
‚Ä¢L
‚Ä¢L
ciones
‚Ä¢S
colisi√≥n
partici√≥n
termine
probabilidad
n√∫mero
comprendido
funcionamiento
protocolo
ALOHA
particiones
nodo
simple
‚Ä¢C
partici√≥n
transmite
trama
completa
partici√≥n
‚Ä¢S
considerar√°
posibilidad
retransmitirla
nodo
preparar
trama
transmisi√≥n
disponible
‚Ä¢S
nodo
retransmitir√°
trama
partici√≥n
posterior
probabilidad
trama
transmitida
experimentar
colisiones
retransmite
probabilidad
nodo
cabo
pr√°ctica
especie
lanzamiento
moneda
trucada
sale
cara
trama
retransmite
sucede
probabilidad
sale
cruz
deja
pasar
partici√≥n
vuelve
lanzar
moneda
partici√≥n
ocurre
probabilidad
nodos
implicados
colisi√≥n
arrojan
monedas
forma
indepen-
diente
parecer
protocolo
ALOHA
particiones
ventajas
dife-
rencia
mecanismos
particionamiento
canal
ALOHA
particiones
permite
nodo
retransmitir
continuamente
velocidad
m√°xima
nodo
√∫nico
activo
decimos
nodo
activo
tramas
transmitir
ALOHA
particiones
protocolo
altamente
descentralizado
nodo
detecta
colisiones
decide
forma
independiente
retransmitir
5.3
PROTOCOLOS
ACCESO
M√öLTIPLE
435
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
435ALOHA
particiones
requiere
particiones
est√©n
sincronizadas
nodos
analizaremos
versi√≥n
particionada
protocolo
ALOHA
proto-
colos
CSMA
requiere
tipo
sincronizaci√≥n
ALOHA
par-
ticiones
protocolo
extremadamente
simple
ALOHA
particiones
funciona
nodo
activo
efi-
ciencia
m√∫ltiples
nodos
activos
posibles
preocupaciones
respecta
eficiencia
lugar
muestra
Figura
5.11
m√∫ltiples
nodos
activos
fracci√≥n
particiones
experimentar√°
colisiones
desperdiciar√°
preocupaci√≥n
fracci√≥n
particiones
vac√≠aen
casos
nodos
activos
abstengan
transmitir
resultado
pol√≠tica
probabil√≠stica
retransmisi√≥n
√∫nicas
particio-
nes
desperdiciadas
exactamente
nodo
transmi-
tiendo
particiones
exactamente
nodo
transmitiendo
denomina
particiones
√©xito
eficiencia
protocolo
acceso
m√∫ltiple
particiones
define
fracci√≥n
calculada
plazo
particiones
√©xito
n√∫mero
nodos
activos
cantidad
tramas
enviar
Observe
utilizara
tipo
control
acceso
nodo
intentara
retransmitir
inmediatamente
colisi√≥n
eficiencia
cero
protocolo
ALOHA
particiones
obviamente
eficiencia
aumente
cero
aumenta
esbozar
determinar
eficiencia
m√°xima
protocolo
ALOHA
particiones
simplificar
cosas
modificar
protocolo
ligeramente
asumir
nodo
transmitir
trama
partici√≥n
probabilidad
p.
suponemos
nodos
trama
enviar
nodo
transmite
probabilidad
tramas
tramas
hayan
sufrido
colisi√≥n
Suponga
nodos
probabilidad
partici√≥n
dada
partici√≥n
√©xito
probabilidad
nodos
trans-
436
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
Nodo
Clave
Partici√≥n
colisi√≥n
Partici√≥n
vac√≠a
Partici√≥n
√©xito
Nodo
Nodo
Tiempo
CVCEVCVE
Figura
5.11
nodos
colisionan
partici√≥n
nodo
√©xito
finalmente
cuarta
partici√≥n
nodo
octava
partici√≥n
nodo
novena
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
436mita
restantes
nodos
transmitan
probabilidad
nodo
transmita
probabilidad
nodos
transmitan
p)N
H110021
probabilidad
nodo
√©xito
transmitir
p(1
p)N
H110021
Puesto
nodos
probabilidad
exactamente
nodos
√©xito
Np(1
p)N
H110021
nodos
activos
eficiencia
protocolo
ALOHA
parti-
ciones
Np(1
p)N
H110021
obtener
eficiencia
m√°xima
nodos
activos
determinar
valor
maximice
expresi√≥n
Consulte
problemas
repaso
esbozo
c√°lculos
obtener
m√°xima
eficiencia
n√∫mero
nodos
activos
tomaremos
l√≠mite
Np*(1
p*)N
H110021
tiende
infinito
Consulte
problemas
repaso
c√°lculos
comprobar
eficiencia
m√°xima
protocolo
dada
1/
0,37
n√∫mero
nodos
tramas
transmitir
m√°ximo
37
ciento
particiones
conseguir√°n
transmitir
informaci√≥n
√©xito
velocidad
transmisi√≥n
efectiva
canal
bps
0,37
bps
an√°lisis
similar
muestra
37
ciento
particiones
quedar√°n
vac√≠as
26
ciento
sufrir√°n
colisiones
Imag√≠nese
pobre
administrador
red
acaba
adquirir
sistema
ALOHA
particiones
100
Mbps
esperaba
utilizar
red
transmitir
datos
cantidad
usuarios
velocidad
agregada
digamos
torno
80
Mbps
canal
capaz
transmitir
deter-
minada
trama
velocidad
m√°xima
canal
100
Mbps
plazo
tasa
trans-
ferencia
efectiva
canal
menor
37
Mbps
Aloha
protocolo
ALOHA
particiones
requiere
nodos
sincronicen
transmi-
siones
comiencen
principio
partici√≥n
protocolo
ALOHA
Abramson
1970
realidad
protocolo
particionado
completamente
descentra-
lizado
protocolo
ALOHA
puro
llega
trama
pasa
datagrama
capa
red
nodo
emisor
nodo
transmite
inmediatamente
trama
totalidad
canal
difusi√≥n
trama
transmitida
experimenta
colisi√≥n
transmisiones
nodos
nodo
transmitir
completamente
trama
sufrido
colisi√≥n
retransmitir√°
trama
forma
inmediata
probabili-
dad
p.
caso
contrario
nodo
esperar√°
tiempo
equivalente
tiempo
retransmisi√≥n
trama
espera
transmitir√°
trama
probabilidad
esperar√°
permaneciendo
inactivo
periodo
tiempo
tiempo
trans-
misi√≥n
trama
probabilidad
p.
determinar
eficiencia
m√°xima
protocolo
ALOHA
puro
centrarnos
nodo
individual
Haremos
suposiciones
an√°lisis
proto-
colo
ALOHA
particiones
tomaremos
unidad
tiempo
tiempo
transmisi√≥n
trama
instante
probabilidad
nodo
est√©
transmitiendo
trama
p.
Suponga
trama
comienza
transmisi√≥n
instante
t0
muestra
Figura
5.12
trama
transmitirse
√©xito
nodo
iniciar
transmisi√≥n
intervalo
tiempo
t0
t0
dicha
transmisi√≥n
solapar√≠a
inicio
transmisi√≥n
trama
nodo
i.
probabilidad
nodos
comiencen
transmisi√≥n
intervalo
p)N
H110021
forma
similar
nodo
comenzar
transmisi√≥n
nodo
transmitiendo
dicha
transmisi√≥n
solapar√≠a
transmisi√≥n
5.3
PROTOCOLOS
ACCESO
M√öLTIPLE
437
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
437del
nodo
i.
probabilidad
nodos
inicien
transmisi√≥n
intervalo
p)N
H110021
probabilidad
nodo
transmitir
√©xito
p(1
p)2(N
H110021
Tomando
l√≠mites
caso
protocolo
ALOHA
particiones
encontramos
m√°xima
eficiencia
protocolo
ALOHA
puro
1/(2e
exactamente
mitad
ALOHA
particiones
precio
pagar
disponer
protocolo
ALOHA
completamente
descentralizado
438
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
Tiempo
Solapamiento
principio
trama
t0
t0
t0
Solapamiento
trama
Trama
nodo
Figura
5.12
Transmisiones
interfieren
protocolo
ALOHA
puro
NORM
ABRAMSON
ALOHANET
Norm
Abramson
doctor
ingeniero
apasionado
surf
interesado
tema
conmutaci√≥n
paquetes
combinaci√≥n
intereses
llev√≥
univer-
sidad
Hawaii
1969
Hawaii
compuesto
islas
monta√±osas
dif√≠cil
instalar
operar
redes
terrestres
practicando
surf
Abramson
dedicada
pensar
dise√±ar
red
realizara
conmutaci√≥n
paquetes
v√≠a
radio
red
dise√±√≥
dispon√≠a
host
central
nodos
secundarios
dispersos
islas
archipi√©lago
Hawaii
red
canales
utilizaba
banda
frecuencia
distinta
canal
bajada
difund√≠a
paquetes
host
central
hosts
secundarios
subida
permit√≠a
enviar
paquetes
hosts
secundarios
host
central
enviar
paquetes
informa-
ci√≥n
host
central
enviaba
canal
bajada
mensaje
reconoci-
miento
paquetes
recibidos
hosts
secundarios
Puesto
hosts
secundarios
transmit√≠an
paquetes
forma
descentralizada
colisiones
canal
subida
inevitables
observaci√≥n
condujo
Abramson
desarrollar
protocolo
ALOHA
puro
descrito
cap√≠tulo
1970
gracias
apor-
taciones
econ√≥micas
ARPA
Abramson
conect√≥
red
ALOHAnet
ARPAnet
trabajo
Abramson
importante
ejemplo
red
paquetes
v√≠a
radio
sirvi√≥
inspiraci√≥n
Bob
Metcalfe
a√±os
Metcalfe
modific√≥
protocolo
crear
protocolo
CSMA
CD
redes
LAN
Ethernet
HISTORIA
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
438Acceso
m√∫ltiple
sondeo
portadora
CSMA
protocolo
ALOHA
puro
particiones
decisi√≥n
transmitir
nodo
toma
independientemente
actividad
nodos
conectados
canal
difusi√≥n
particular
nodos
prestan
atenci√≥n
momento
comen-
zar
transmitir
nodos
transmitiendo
dejan
transmitir
nodo
comienza
interferir
transmisi√≥n
analog√≠a
coctel
protocolos
ALOHA
parecen
invitados
maleducados
contin√∫an
charlando
independientemente
personas
palabra
personas
dis-
ponemos
protocolos
permiten
comportarnos
civilizada
reducir
cantidad
tiempo
desperdiciado
colisionando
conversaciones
incrementar
consecuencia
cantidad
informaci√≥n
conversaciones
intercambiar
Espec√≠ficamente
reglas
importan-
tes
educaci√≥n
conversaciones
mantenemos
seres
humanos
Escuchar
hablar
persona
hablando
esperaremos
ter-
minado
mundo
redes
denomina
sondeo
portadora
nodo
escucha
canal
transmitir
actualmente
transmitiendo
trama
nodo
canal
nodo
esperar√°
intervalo
tiempo
aleatorio
volver√°
sondear
portadora
canal
comprueba
canal
inac-
tivo
nodo
comenzar√°
transmitir
trama
caso
contrario
nodo
esperar√°
intervalo
aleatorio
tiempo
volver√°
repetir
proceso
alguien
comienza
hablar
tiempo
dejar
hablar
mundo
redes
denomina
detecci√≥n
colisiones
nodo
est√©
transmitiendo
escu-
char√°
canal
dure
transmisi√≥n
detecta
nodo
transmitiendo
trama
interfiere
dejar√°
transmitir
emplear√°
tipo
protocolo
determinar
volver
intentar
transmitir
reglas
integradas
familia
protocolos
Acceso
m√∫ltiple
sondeo
portadora
CSMA
Carrier
Sense
Multiple
Access
CSMA
detecci√≥n
colisiones
CSMA
CD
Kleinrock
1975b
Metcalfe
1976
Lam
1980
Rom
1990
propuesto
variantes
CSMA
CSMA
CD
consultar
referencias
detalles
protocolos
Estudiaremos
detalle
esquema
CSMA
CD
utilizado
Ethernet
Secci√≥n
5.5
consideraremos
caracter√≠sticas
importantes
fundamentales
CSMA
CSMA
CD
cuesti√≥n
podr√≠amos
plantearnos
acerca
CSMA
nodos
llevan
cabo
sondeo
portadora
producen
colisiones
nodos
guardar√°n
transmitir
detecten
nodo
transmitiendo
forma
responder
pregunta
ilustrarla
diagramas
espacio-
tiempo
Molle
1987
Figura
5.13
muestra
diagrama
espacio-tiempo
nodos
conectados
bus
lineal
difusi√≥n
eje
horizontal
muestra
posici√≥n
nodo
espacio
eje
vertical
representa
tiempo
instante
t0
nodo
comprueba
canal
inactivo
nodo
transmitiendo
actualmente
nodo
comenzar√°
transmitir
propag√°ndose
bits
ambas
direcciones
difusi√≥n
propagaci√≥n
abajo
bits
Figura
5.13
tiempo
indica
falta
intervalo
tiempo
distinto
cero
bits
consigan
propagarse
hagan
velocidad
pr√≥xima
luz
difusi√≥n
instante
t1
t1
t0
5.3
PROTOCOLOS
ACCESO
M√öLTIPLE
439
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
439nodo
trama
enviar
nodo
actualmente
transmitiendo
instante
t1
bits
transmitiendo
alcanzado
detectar√°
canal
inactivo
t1
protocolo
CSMA
comienza
transmitir
trama
corto
intervalo
tiempo
transmisi√≥n
comienza
interferir
transmisi√≥n
D.
Figura
5.13
resulta
evidente
retardo
propagaci√≥n
canal
terminal
terminal
canal
difusi√≥n
tiempo
se√±al
tarda
propagarse
nodos
desempe-
√±ar√°
papel
fundamental
hora
determinar
rendimiento
canal
retardo
propagaci√≥n
probabilidad
nodo
efect√∫a
sondeo
portadora
capaz
detectar
transmisi√≥n
comenzado
nodo
red
Figura
5.13
nodos
realizan
detecci√≥n
colisiones
contin√∫an
transmitiendo
tramas
totalidad
producido
coli-
si√≥n
nodo
realiza
detecci√≥n
colisiones
deja
transmitir
detecta
producido
colisi√≥n
Figura
5.14
muestra
escenario
Figura
5.13
nodos
abortan
transmisi√≥n
detec-
tar
producido
colisi√≥n
Evidentemente
a√±adir
mecanismo
detecci√≥n
colisiones
protocolo
acceso
m√∫ltiple
ayudar√°
incrementar
rendimiento
pro-
440
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
Tiempo
Tiempo
Espacio
BCD
Figura
5.13
Diagrama
espacio-tiempo
nodos
CSMA
transmisiones
entran
colisi√≥n
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
440tocolo
transmitirse
trama
in√∫til
da√±ada
interferencia
trama
nodo
totalidad
protocolo
Ethernet
estudiaremos
Secci√≥n
5.5
proto-
colo
CSMA
utiliza
detecci√≥n
colisiones
5.3.3
Protocolos
toma
turnos
Recuerde
propiedades
deseables
protocolo
acceso
m√∫ltiple
nodo
activo
tasa
transferencia
bps
nodos
activos
nodo
activo
dispondr√°
tasa
transferencia
apro-
ximadamente
bps
protocolos
ALOHA
CSMA
presentan
propie-
dades
servido
motivaci√≥n
serie
investigadores
creen
clase
protocolos
protocolos
toma
turnos
protocolos
acceso
aleatorio
docenas
protocolos
toma
turnos
distintos
protocolos
m√∫ltiples
variantes
hablar
protocolos
importantes
tipo
protocolo
sondeo
polling
protocolo
requiere
designe
nodos
nodo
maestro
nodo
maestro
sondea
nodos
turno
rotatorio
round
robin
particular
nodo
maestro
env√≠a
mensaje
nodo
dici√©ndole
transmitir
n√∫mero
m√°ximo
tramas
nodo
trans-
mita
serie
tramas
nodo
maestro
dir√°
nodo
transmitir
5.3
PROTOCOLOS
ACCESO
M√öLTIPLE
441
Tiempo
Tiempo
Tiempo
detecci√≥n
colisi√≥n/
cancelaci√≥n
trama
Espacio
BC
Figura
5.14
CSMA
detecci√≥n
colisiones
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
441m√°ximo
n√∫mero
tramas
nodo
maestro
determinar
nodo
termi-
nado
enviar
tramas
observando
falta
se√±al
canal
procedimiento
conti-
n√∫a
forma
ininterrumpidamente
encarg√°ndose
nodo
maestro
sondear
nodos
forma
c√≠clica
protocolo
sondeo
elimina
colisiones
particiones
vac√≠as
infectan
protocolos
acceso
aleatorio
permite
mecanismo
sondeo
consiga
efi-
ciencia
presenta
desventajas
protocolo
introduce
retardo
sondeo
intervalo
tiempo
requerido
indicarle
nodo
transmitir
ejemplo
nodo
activo
nodo
transmitir√°
velocidad
menor
bps
nodo
maestro
deber√°
sondear
nodos
inactivos
turno
nodo
activo
terminado
enviar
n√∫mero
m√°ximo
tramas
inconveniente
grave
nodo
maestro
falla
canal
dejar√°
operativo
protocolo
802.15
protocolo
Bluetooth
estudiaremos
Secci√≥n
6.3
ejemplos
protocolos
sondeo
protocolo
toma
turnos
protocolo
paso
testigo
pro-
tocolo
nodo
maestro
lugar
trama
peque√±o
tama√±o
prop√≥sito
especial
conocida
nombre
testigo
token
intercambiada
nodos
determinado
orden
fijo
ejemplo
nodo
env√≠e
tes-
tigo
nodo
nodo
nodo
nodo
nodo
nodo
recibe
testigo
retiene
dispone
trama
transmitir
caso
contrario
reenv√≠a
inmediatamente
testigo
nodo
nodo
tramas
transmitir
recibe
testigo
env√≠a
trama
n√∫mero
m√°ximo
tramas
permi-
tido
reenv√≠a
testigo
nodo
mecanismo
paso
testigo
decen-
tralizado
extremadamente
eficiente
problemas
ejemplo
fallo
nodo
canal
quede
inutilizable
nodo
olvidara
accidentalmente
liberar
testigo
necesario
invocar
pro-
cedimiento
recuperaci√≥n
testigo
vuelva
circular
a√±os
desarrollado
protocolos
paso
testigo
preo-
cuparse
resolver
problemas
problemas
complicados
hare-
mos
menci√≥n
protocolos
FDDI
IEEE
802.5
secci√≥n
5.3.4
Redes
√°rea
local
LAN
protocolos
acceso
m√∫ltiple
utilizan
tipos
distintos
canales
difusi√≥n
utilizado
canales
sat√©lite
inal√°mbricos
cuyos
nodos
transmiten
espectro
frecuencia
com√∫n
Actualmente
utilizan
canal
subida
acceso
Internet
cable
v√©ase
Secci√≥n
1.2
utilizan
ampliamente
redes
√°rea
local
LAN
Recuerde
LAN
red
computadoras
concentrada
√°rea
geogr√°fica
ejemplo
edificio
campus
universitario
usuario
accede
Internet
campus
universitario
corporativo
acceso
realiza
tra-
v√©s
LAN
espec√≠ficamente
acceso
cabo
host
LAN
router
router
Internet
muestra
Figura
5.15
velocidad
transmisi√≥n
mayor√≠a
redes
LAN
alta
principios
d√©cada
1980
redes
LAN
10
Mbps
comunes
resultan
comu-
nes
redes
LAN
100
Mbps
Gbps
disponibles
redes
LAN
10
Gbps
442
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
442En
d√©cada
1980
principios
1990
clases
tecnolog√≠as
LAN
populares
entornos
empresariales
clase
redes
LAN
Ethernet
conocidas
redes
LAN
802.3
IEEE
802.3
2009
basadas
mecanismo
acceso
aleatorio
clase
tecnolog√≠as
LAN
compuesta
tecnolog√≠as
paso
testigo
incluyendo
tecnolog√≠a
token
ring
tam-
bi√©n
conocida
IEEE
802.5
IEEE
802.5
2009
Interfaz
datos
distribuidos
fibra
FDDI
Fiber
Distributed
Data
Interface
Jain
1994
anali-
zar
tecnolog√≠as
Ethernet
grado
detalle
Secci√≥n
5.5
centraremos
explicaciones
redes
LAN
paso
testigo
exposici√≥n
acerca
tecnolog√≠as
paso
testigo
intencionadamente
implacable
com-
petencia
redes
Ethernet
tecnolog√≠as
pr√°cticamente
hayan
extin-
guido
modos
proporcionar
ejemplos
tecnolog√≠as
paso
testigo
disponer
perspectiva
hist√≥rica
resulta
√∫til
pala-
bras
acerca
redes
paso
testigo
LAN
token
ring
nodos
LAN
hosts
routers
conectados
anillo
serie
enlaces
directos
topolog√≠a
anillo
paso
testigo
define
orden
testigo
pasa
nodo
nodo
obtiene
tes-
tigo
env√≠a
trama
trama
propaga
anillo
completo
creando
canal
difusi√≥n
virtual
nodo
destino
lee
trama
capa
enlace
momento
trama
propaga
nodo
env√≠a
trama
responsabilidad
eliminar
trama
anillo
FDDI
dise√±√≥
redes
LAN
geogr√°fi-
camente
amplias
incluyendo
redes
√°rea
metropolitana
MAN
Metropolitan
Area
Network
redes
LAN
geogr√°ficamente
amplias
distribuidas
kil√≥metros
eficiente
dejar
trama
propague
vuelta
nodo
emisor
sobrepasado
nodo
destino
FDDI
nodo
destino
elimine
trama
anillo
Hablando
sentido
estricto
FDDI
canal
difusi√≥n
puro
nodos
reciben
tramas
transmitidas
5.3
PROTOCOLOS
ACCESO
M√öLTIPLE
443
Hosts
usuario
Servidor
web
Router
LAN
Clave
Interfaz
Internet
Figura
5.15
Hosts
usuario
accediendo
servidor
web
Internet
LAN
estando
compuesto
canal
difusi√≥n
host
usuario
router
√∫nico
enlace
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
4435.4
Direccionamiento
capa
enlace
nodos
hosts
routers
direcciones
capa
enlace
parecer
sorprendente
recordamos
Cap√≠tulo
nodos
direcciones
capa
red
lector
est√©
preguntando
necesita-
mos
disponer
direcciones
capa
red
enlace
des-
cribir
sintaxis
funci√≥n
direcciones
capa
enlace
secci√≥n
confiamos
arrojar
luz
razones
resulta
√∫til
emplear
capas
direcciones
veremos
indispensable
ocupare-
mos
Protocolo
resoluci√≥n
direcciones
ARP
Address
Resolution
Protocol
proporciona
mecanismo
traducir
direcciones
IP
direcciones
capa
enlace
5.4.1
Direcciones
MAC
realidad
nodos
hosts
routers
asignadas
direccio-
nes
capa
enlace
direcciones
capa
enlace
asignan
adap-
tadores
instalados
nodo
ilustra
Figura
5.16
direcciones
capa
enlace
denomina
diversas
formas
direcci√≥n
LAN
direcci√≥n
f√≠sica
direcci√≥n
MAC
t√©rmino
direcci√≥n
MAC
popular
suce-
sivo
referiremos
direcciones
capa
enlace
utilizando
t√©rmino
mayor√≠a
redes
LAN
incluyendo
redes
Ethernet
LAN
inal√°mbricas
802.11
direcci√≥n
MAC
bytes
longitud
248
posibles
direcciones
MAC
muestra
Figura
5.16
direcciones
bytes
suelen
expresarse
notaci√≥n
hexa-
decimal
indic√°ndose
byte
direcci√≥n
pareja
n√∫meros
hexadeci-
males
direcciones
MAC
dise√±aron
permanentes
modificar
direcci√≥n
MAC
adaptador
software
apropiado
resto
secci√≥n
supondremos
direcci√≥n
MAC
adaptador
fija
propiedad
interesante
direcciones
MAC
adap-
tadores
direcci√≥n
parecer
sorprendente
adaptadores
fabricados
compa√±√≠as
distintas
pa√≠ses
empresa
fabricante
adaptadores
Taiwan
segura
utilizando
con-
direcciones
emplea
empresa
fabrica
adaptadores
B√©l-
gica
respuesta
IEEE
encarga
gestionar
espacio
direcciones
MAC
particular
empresa
fabricar
adaptadores
compra
precio
fijado
espacio
direcciones
compuesto
24
direcciones
IEEE
asigna
frag-
mento
224
direcciones
fijando
24
bits
direcci√≥n
MAC
dejando
empresa
dise√±e
combinaciones
√∫nicas
24
bits
adaptador
direcci√≥n
MAC
adaptador
estructura
plana
oposici√≥n
estructura
jer√°rquica
var√≠a
independientemente
lleve
adaptador
computadora
port√°til
tarjeta
Ethernet
direcci√≥n
MAC
independientemente
utilice
computadora
PDA
interfaz
802.11
direcci√≥n
MAC
independientemente
lleve-
mos
Recuerde
contraste
direcciones
IP
estructura
jer√°rquica
red
host
necesario
modificar
direcci√≥n
IP
nodo
host
mueve
cambia
red
host
conec-
tado
direcci√≥n
MAC
adaptador
an√°loga
n√∫mero
carnet
identidad
444
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
444la
seguridad
social
persona
estructura
direccionamiento
plana
cambia
independientemente
vivir
persona
direc-
ci√≥n
IP
an√°loga
direcci√≥n
postal
personas
jer√°rquica
modificarse
persona
cambia
domicilio
personas
resulta
√∫til
disponer
direcci√≥n
postal
n√∫mero
seguri-
dad
social
nodos
resulta
√∫til
disponer
direcci√≥n
capa
red
direcci√≥n
MAC
descrito
principio
secci√≥n
adaptador
emisor
enviar
trama
adaptador
destino
inserta
direcci√≥n
MAC
destino
trama
env√≠a
red
LAN
red
LAN
LAN
difusi√≥n
ejemplo
802.11
Ethernet
trama
recibida
procesada
adaptadores
LAN
particular
adaptador
reciba
trama
compro-
bar√°
direcci√≥n
MAC
destino
contenida
trama
corresponde
direcci√≥n
MAC
correspondencia
adaptador
extraer√°
datagrama
incluido
trama
pasar√°
pila
protocolos
entreg√°rselo
nodo
padre
correspondencia
ambas
direcciones
adaptador
descarta
trama
pasar
datagrama
capa
red
pila
protocolos
nodo
destino
interrumpido
reciba
trama
ocasiones
adaptador
emisor
quiereque
adaptadores
LAN
reciban
procesen
trama
enviar
caso
adapta-
dor
emisor
inserta
direcci√≥n
difusi√≥n
MAC
especial
campo
direcci√≥n
destino
trama
redes
LAN
utilizan
direcciones
bytes
LAN
Ethernet
paso
testigo
direcci√≥n
difusi√≥n
cadena
compuesta
48
consecutivos
FF-
FF-FF-FF-FF-FF
notaci√≥n
hexadecimal
5.4.2
Protocolo
resoluci√≥n
direcciones
ARP
direcciones
capa
red
ejemplo
direcciones
IP
Inter-
net
direcciones
capa
enlace
direcciones
MAC
surge
necesidad
5.4
DIRECCIONAMIENTO
CAPA
ENLACE
445
88-B2-2F-54-1A-0F5C-66-AB-90-75-B1
1A-23-F9-CD-06-9B
49-BD-D2-C7-56-2A
Figura
5.16
adaptador
conectado
LAN
dispone
direcci√≥n
MAC
√∫nica
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
445de
traducci√≥n
Internet
tarea
cabo
Protocolo
resolu-
ci√≥n
direcciones
ARP
Address
Resolution
Protocol
RFC
826
comprender
necesidad
protocolo
ARP
considere
red
mostrada
Figura
5.17
sencillo
ejemplo
nodo
direcci√≥n
IP
√∫nica
adapta-
dor
nodo
direcci√≥n
MAC
√∫nica
direcciones
IP
muestran
notaci√≥n
decimal
punto
direcciones
MAC
notaci√≥n
hexadecimal
Supongamos
nodo
direcci√≥n
IP
222.222.222.220
desea
enviar
data-
grama
IP
nodo
222.222.222.222
ejemplo
nodo
origen
destino
encuentran
red
LAN
sentido
direccionamiento
expresado
Secci√≥n
4.4.2
enviar
datagrama
nodo
origen
proporcionar
adap-
tador
datagrama
IP
direcci√≥n
MAC
nodo
destino
222.222.222.222
adaptador
nodo
emisor
construir√°
trama
capa
enlace
contendr√°
direcci√≥n
MAC
nodo
destino
enviar√°
trama
red
LAN
pregunta
fundamental
secci√≥n
determina
nodo
origen
direcci√≥n
MAC
nodo
destino
direcci√≥n
IP
222.222.222.222
posible-
mente
adivinado
utiliza
protocolo
ARP
m√≥dulo
ARP
nodo
emisor
toma
entrada
direcci√≥n
IP
LAN
devuelve
direcci√≥n
MAC
corres-
pondiente
ejemplo
nodo
emisor
222.222.222.220
proporciona
m√≥dulo
ARP
direcci√≥n
IP
222.222.222.222
m√≥dulo
ARP
devuelve
correspondiente
direc-
ci√≥n
MAC
49-BD-D2-C7-56-2A.
Vemos
ARP
resuelve
direcci√≥n
IP
direcci√≥n
MAC
sentidos
an√°logo
DNS
estudiado
Secci√≥n
2.5
resuelve
nombres
host
direcciones
IP
diferencia
importante
resolvedores
DNS
resuelve
nombres
host
hosts
ubicados
lugar
Internet
446
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
PRINCIPLES
IN
PRACTICE
MANTENER
CAPAS
INDEPENDIENTES
razones
nodos
direcciones
MAC
direcciones
capa
red
lugar
redes
LAN
dise√±adas
protocolos
arbitrarios
capa
red
IP
Internet
adaptadores
red
tuvieran
asignadas
direcciones
IP
lugar
direcciones
MAC
neutras
soporte
f√°cilmente
pro-
tocolos
capa
red
ejemplo
IPX
DECnet
lugar
adaptadores
utilizaran
direcciones
capa
red
lugar
direcciones
MAC
direcci√≥n
capa
red
tendr√≠a
almacenar
memoria
RAM
adaptador
tendr√≠a
reconfigurarse
adaptador
moviera
encendiera
opci√≥n
utilizar
direcci√≥n
adaptadores
adaptador
pasara
datos
normalmente
datagrama
IP
trama
recibida
pila
protocolos
capa
red
comprobar
coincidencia
direcci√≥n
capa
red
problema
surge
opci√≥n
host
interrumpido
trama
enviada
LAN
incluyendo
tramas
estuvieran
destinadas
nodos
LAN
difusi√≥n
resumen
capas
independientes
medida
arquitectura
red
distintas
capas
necesitan
disponer
esquema
direccionamiento
hablado
tipos
direcciones
nombres
host
capa
aplicaci√≥n
direcciones
IP
capa
red
direcciones
MAC
capa
enlace
PR√ÅCTICA
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
446que
ARP
resuelve
direcciones
IP
nodos
subred
nodo
situado
California
intentara
utilizar
ARP
resolver
direcci√≥n
IP
nodo
Mis-
sissippi
ARP
devolver√≠a
error
explicado
ARP
nodo
host
router
memoria
tabla
ARP
contiene
correspondencias
direcciones
IP
direcciones
MAC
Figura
5.18
muestra
aspecto
tabla
ARP
nodo
222.222.222.220
tabla
ARP
contiene
valor
tiempo
vida
TTL
indica
eliminar√°
correspondencia
tabla
Observe
tabla
necesariamente
contiene
entrada
nodo
subred
nodos
entradas
caducado
hayan
entrada
tabla
tiempo
t√≠pico
caducidad
entrada
20
minutos
momento
incluye
entrada
tabla
ARP
Suponga
nodo
222.222.222.220
enviar
datagrama
direccio-
namiento
IP
nodo
dicha
subred
nodo
emisor
necesita
obtener
direcci√≥n
MAC
nodo
destino
dada
direcci√≥n
IP
nodo
tarea
f√°cil
tabla
ARP
nodo
emisor
entrada
nodo
destino
ocurre
tabla
ARP
contiene
actualmente
entrada
nodo
destino
particu-
lar
suponga
nodo
222.222.222.220
desea
enviar
datagrama
nodo
222.222.222
222
caso
nodo
emisor
utiliza
protocolo
ARP
resolver
direcci√≥n
lugar
nodo
emisor
construye
paquete
especial
denominado
paquete
ARP
paquete
ARP
contiene
campos
incluyendo
direcciones
MAC
Direcci√≥n
IP
Direcci√≥n
MAC
TTL
222.222.222.221
88-B2-2F-54-1A-0F
13:45:00
222.222.222.223
5C-66-AB-90-75-B1
13:52:00
Figura
5.18
tabla
ARP
nodo
222.222.222.220
5.4
DIRECCIONAMIENTO
CAPA
ENLACE
447
IP:222.222.222.221
IP:222.222.222.220
IP:222.222.222.223
IP:222.222.222.222
5C-66-AB-90-75-B1
1A-23-F9-CD-06-9B
49-BD-D2-C7-56-2A
88-B2-2F-54-1A-0F
Figura
5.17
nodo
LAN
direcci√≥n
IP
adaptador
nodo
direcci√≥n
MAC
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
447IP
emisor
receptor
paquetes
consulta
respuesta
ARP
formato
prop√≥sito
paquete
consulta
ARP
consultar
nodos
subred
determinar
direcci√≥n
MAC
correspondiente
direcci√≥n
IP
resolviendo
Vo
ARP
adaptador
indicaci√≥n
adaptador
enviar√°
paquete
direc-
ci√≥n
difusi√≥n
MAC
FF-FF-FF-FF-FF-FF
adaptador
encapsula
paquete
ARP
trama
capa
enlace
utiliza
direcci√≥n
difusi√≥n
direcci√≥n
destino
trama
transmite
subred
Recuerde
analog√≠a
n√∫mero
seguridad
social
direcci√≥n
postal
consulta
ARP
equivalente
persona
gritando
sala
aba-
rrotada
cub√≠culos
empresa
ejemplo
CualquierEmpresa
n√∫mero
seguridad
social
persona
cuya
direcci√≥n
postal
Cub√≠culo
13
Sala
112
CualquierEmpresa
Palo
Alto
California
trama
contiene
consulta
ARP
reci-
bida
adaptadores
existentes
subred
causa
direcci√≥n
difusi√≥n
adaptador
pasa
consulta
ARP
contenida
trama
m√≥dulo
ARP
nodo
nodo
realiza
comprobaci√≥n
direcci√≥n
IP
corresponde
direcci√≥n
IP
destino
paquete
ARP
√∫nico
nodo
produzca
coin-
cidencia
devolver√°
nodo
consulta
respuesta
ARP
corres-
pondencia
deseada
nodo
consulta
222.222.222.220
actualizar
tabla
ARP
enviar
datagrama
IP
encapsulado
trama
capa
enlace
cuya
direcci√≥n
destino
MAC
nodo
contestado
consulta
ARP
par
cosas
interesantes
comentar
acerca
protocolo
ARP
lugar
mensaje
ARP
consulta
env√≠a
trama
difusi√≥n
mensaje
ARP
respuesta
env√≠an
trama
est√°ndar
continuar
leyendo
deber√≠a
pararse
pensar
lugar
ARP
protocolo
plug-and-play
tabla
ARP
nodo
construye
autom√°ticamente
configurada
administrador
sistema
nodo
desconectado
subred
entrada
finalmente
elimina
tablas
restantes
nodos
subred
Am
Pe
protocolo
capa
red
visto
paquete
ARP
encapsula
trama
capa
enlace
sit√∫a
arquitect√≥nicamente
capa
enlace
paquete
ARP
dispone
campos
contienen
direcciones
capa
enlace
protocolo
capa
enlace
con-
direcciones
capa
red
argumentarse
proto-
colo
capa
red
t√©rmino
probablemente
ARP
considerado
protocolo
caballo
capas
enlace
red
ajusta
limpiamente
pila
protocolos
capas
simples
estudiado
Cap√≠tulo
Tales
complejidades
protocolos
mundo
real
Env√≠o
datagrama
nodo
subred
deber√≠a
funciona
ARP
nodo
desea
enviar
datagrama
nodo
subred
Pasemos
situaci√≥n
complicada
nodo
subred
desea
enviar
datagrama
capa
red
nodo
subred
router
subred
Estudie-
mos
situaci√≥n
contexto
Figura
5.19
muestra
red
simple
consta
subredes
interconectadas
router
448
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
4485.4
DIRECCIONAMIENTO
CAPA
ENLACE
449
cuestiones
interesantes
destacar
Figura
5.19
lugar
exis-
ten
tipos
nodos
hosts
routers
host
exactamente
direcci√≥n
IP
adaptador
visto
Cap√≠tulo
router
direcci√≥n
IP
interfaces
interfaz
router
m√≥dulo
ARP
router
adaptador
router
Figura
5.19
interfaces
direcciones
IP
m√≥dulos
ARP
adaptadores
adaptador
red
direcci√≥n
MAC
F√≠jese
Subred
direcci√≥n
red
111.111.111/24
Subred
direcci√≥n
red
222.222.222/24
interfaces
conectadas
Subred
direcciones
forma
111.111.111.xxx
interfaces
conecta-
das
Subred
direcciones
forma
222.222.222.xxx
Examinemos
host
Subred
enviar√≠a
datagrama
host
Subred
Espec√≠ficamente
suponga
host
111.111.111.111
desea
enviar
datagrama
IP
host
222.222.222.222
habitual
host
emisor
pasa
datagrama
adap-
tador
host
emisor
indicar
adaptador
direcci√≥n
MAC
destino
apropiada
direcci√≥n
MAC
deber√≠a
utilizar
adaptador
posibilidad
probar
direcci√≥n
MAC
apropiada
adaptador
host
222.222.222
222
49-BD-D2-C7-56-2A.
suposici√≥n
resultar√≠a
err√≥nea
adaptador
emisor
utilizara
dicha
direcci√≥n
MAC
adaptadores
Subred
molestar√≠a
pasar
datagrama
IP
capa
red
direcci√≥n
destino
trama
coincidir√≠a
direcci√≥n
MAC
adaptador
Subred
datagrama
terminar√≠a
muriendo
ir√≠a
cielo
datagramas
fijamos
Figura
5.19
vemos
datagrama
111.111.111.111
nodo
Subred
datagrama
lugar
enviado
interfaz
router
111.111.111.110
direcci√≥n
IP
router
salto
camino
destino
direcci√≥n
MAC
apropiada
trama
direcci√≥n
adaptador
interfaz
router
111.111.111.110
E6-
E9-00-17-BB-4B.
adquiere
host
emisor
direcci√≥n
MAC
direcci√≥n
111.111.111.110
utilizando
ARP
adaptador
emisor
direcci√≥n
MAC
crea
trama
contiene
datagrama
direccionado
222.222.22.22
env√≠a
trama
Subred
adaptador
router
Subred
ve
trama
capa
enlace
dirige
pasa
trama
capa
red
router
Estupendo
diagrama
IP
transmitido
√©xito
host
ori-
gen
router
terminado
queda
datagrama
router
destino
router
determinar
interfaz
correcta
IP:111.111.111.110IP:111.111.111.111
IP:111.111.111.112
IP:222.222.222.221
IP:222.222.222.222
74-29-9C-E8-FF-55
CC-49-DE-D0-AB-7D
E6-E9-00-17-BB-4B
1A-23-F9-CD-06-9B
IP:222.222.222.220
88-B2-2F-54-1A-0F
49-BD-D2-C7-56-2A
Figura
5.19
subredes
interconectadas
router
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
449el
datagrama
reenviado
explicado
Cap√≠tulo
consul-
tando
tabla
reenv√≠o
router
tabla
reenv√≠o
indica
router
datagrama
reenv√≠ado
interfaz
router
222.222.222.220
interfaz
pasa
datagrama
adaptador
encapsula
datagrama
trama
env√≠a
subred
direcci√≥n
MAC
destino
trama
direcci√≥n
MAC
des-
tino
obtiene
router
direcci√≥n
MAC
destino
ARP
ARP
Ethernet
definido
documento
RFC
826
tutorial
TCP
IP
RFC
1180
proporciona
introducci√≥n
ARP
Exploraremos
detalle
ARP
problemas
repaso
5.5
Ethernet
Ethernet
avanzado
mercado
redes
LAN
cableadas
d√©cada
1980
principios
d√©cada
1990
Ethernet
enfrent√≥
desaf√≠os
tecnolog√≠as
LAN
Token
Ring
FDDI
ATM
tecnolog√≠as
tuvieron
√©xito
captaron
mercado
redes
LAN
a√±os
aparici√≥n
mediados
d√©cada
1970
Ethernet
continuado
evolucio-
nando
creciendo
mantenido
posici√≥n
dominante
Actualmente
Ethernet
lejos
tecnolog√≠a
redes
LAN
cableadas
predominante
probablemente
manten-
dr√°
futuro
decirse
Ethernet
redes
√°rea
local
Inter-
net
redes
globales
razones
Ethernet
√©xito
lugar
Ethernet
LAN
alta
velocidad
ampliamente
implantada
Puesto
implantada
administradores
redes
extremadamente
familiarizados
Ethernet
conocen
grandezas
rarezas
reacios
cambiar
tecnolog√≠as
LAN
entraron
escena
lugar
Token
Ring
FDDI
ATM
comple-
jas
caras
Ethernet
desanim√≥
administradores
redes
cambiar
ter-
cer
lugar
raz√≥n
determinante
cambiar
tecnolog√≠a
LAN
FDDI
ATM
normalmente
alta
velocidad
datos
tecnolog√≠a
Ethernet
defendi√≥
produciendo
versiones
operaban
velocidades
iguales
mayores
Ethernet
conmutada
introdujo
principios
d√©cada
1990
aument√≥
tasas
datos
efectivas
Ethernet
popular
hardware
Ethernet
concreto
adaptadores
conmutadores
llegado
c√≥modo
notablemente
barato
LAN
Ethernet
original
inventada
mediados
d√©cada
1970
Bob
Met-
calfe
David
Boggs
Figura
5.20
muestra
esquema
Metcalfe
figura
observar
LAN
Ethernet
original
utilizaba
bus
coaxial
interconectar
nodos
topolog√≠as
bus
Ethernet
realmente
mantuvieron
d√©cada
1980
mediados
d√©cada
1990
Ethernet
topolog√≠a
bus
LAN
difusi√≥n
tramas
transmitidas
viajan
adaptadores
conectados
bus
procesadas
Af
reemplazado
redes
LAN
instalaciones
Ethernet
utilizando
topolog√≠as
estrella
basadas
concentradores
hubs
muestra
Figura
5.21
instalaci√≥n
hosts
routers
directamente
conectados
concentrador
cable
450
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
450cobre
par
trenzado
concentrador
dispositivo
capa
f√≠sica
act√∫a
bits
individuales
lugar
tramas
bit
representa
cero
llega
procedente
interfaz
concentrador
simplemente
vuelve
crear
bit
incrementa
intensidad
energ√≠a
transmite
interfaces
Ethernet
topolog√≠a
estrella
basada
concentrador
red
LAN
difusi√≥n
concentrador
recibe
bit
interfaces
env√≠a
copia
resto
interfaces
particular
concentrador
recibe
tramas
procedentes
interfaces
distintas
tiempo
produce
colisi√≥n
nodos
crean
tra-
retransmitirlas
Ap
instalaciones
Ethernet
continuaron
utilizando
topolog√≠a
estrella
concentrador
central
reemplazado
conmutador
switch
Examinaremos
pro-
5.5
ETHERNET
451
Figura
5.20
dise√±o
original
Metcalfe
llev√≥
est√°ndar
Ethernet
10BASE5
inclu√≠a
cable
interfaz
conectaba
tarjeta
adaptadora
Ethernet
transductor
externo
pares
cable
cobre
par
trenzado
Clave
Concentrador
hub
Adaptador
Nodo
Figura
5.21
Topolog√≠a
estrella
Ethernet
nodos
interconecta-
concentrador
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
451fundidad
redes
Ethernet
conmutadas
cap√≠tulo
momento
mencionaremos
conmutador
dispositivo
colisiones
tam-
bi√©n
cabo
conmutaci√≥n
paquetes
almacenamiento
reenv√≠o
fe
diferencia
routers
operan
capa
conmutador
opera
capa
5.5.1
Estructura
trama
Ethernet
aprender
acerca
Ethernet
examinando
trama
utiliza
muestra
Figura
5.22
proporcionar
exposici√≥n
acerca
tramas
Ethernet
contexto
tangible
consideremos
env√≠o
datagrama
IP
host
host
estando
hosts
red
LAN
Ethernet
ejemplo
LAN
Ethernet
Figura
5.21
carga
√∫til
trama
Ethernet
datagrama
IP
trama
Ethernet
transportar
paquetes
capa
red
adaptador
emisor
adaptador
direcci√≥n
MAC
AA-AA-AA-
AA-AA-AA
adaptador
receptor
adaptador
direcci√≥n
MAC
BB-BB-BB-
BB-BB-BB
adaptador
emisor
encapsula
datagrama
IP
trama
Ethernet
pasa
dicha
trama
capa
f√≠sica
adaptador
receptor
recibe
trama
capa
f√≠sica
extrae
datagrama
IP
pasa
capa
red
contexto
examinemos
campos
trama
Ethernet
mostrada
Figura
5.22
Campo
datos
46
1.500
bytes
campo
transporta
datagrama
IP
unidad
m√°xima
transmisi√≥n
MTU
Ethernet
1.500
bytes
datagrama
IP
excede
1.500
bytes
host
fragmentar
datagrama
explicado
Secci√≥n
4.4.1
tama√±o
m√≠nimo
campo
datos
46
bytes
significa
datagrama
IP
46
bytes
campo
datos
rellenado
46
bytes
utiliza
rellenado
datos
pasados
capa
red
contienen
relleno
datagrama
IP
capa
red
utiliza
campo
longitud
cabecera
datagrama
IP
eliminar
relleno
Direcci√≥n
destino
bytes
campo
contiene
direcci√≥n
MAC
adaptador
destino
BB-BB-BB-BB-BB-BB
adaptador
recibe
trama
Ethernet
cuya
direcci√≥n
destino
BB-BB-BB-BB-BB-BB
direcci√≥n
MAC
difusi√≥n
pasa
contenido
campo
datos
trama
capa
red
recibe
trama
cual-
quier
direcci√≥n
MAC
descarta
trama
Direcci√≥n
origen
bytes
campo
contiene
direcci√≥n
MAC
adaptador
transmite
trama
LAN
ejemplo
AA-AA-AA-AA-AA-AA
Campo
tipo
bytes
campo
tipo
permite
Ethernet
multiplexar
protocolos
capa
red
comprender
hosts
pue-
den
utilizar
protocolos
capa
red
IP
determinado
host
soporte
m√∫ltiples
protocolos
capa
red
utilizando
protocolos
dis-
tintos
aplicaciones
raz√≥n
llega
trama
Ethernet
adaptador
necesita
protocolo
capa
red
pasar
demultiplexar
contenido
campo
datos
IP
protocolos
capa
red
ejemplo
Novell
IPX
AppleTalk
n√∫mero
tipo
estandarizado
Ade-
protocolo
ARP
estudiado
secci√≥n
n√∫mero
tipo
trama
llega
contiene
paquete
ARP
campo
tipo
contiene
hexadecimal
0806
paquete
ARP
demultiplexado
entregado
protocolo
ARP
452
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
452Observe
campo
tipo
an√°logo
campo
protocolo
datagrama
capa
red
campos
n√∫mero
puerto
segmento
capa
transporte
campos
sirven
enlazar
protocolo
capa
protocolo
capa
superior
Comprobaci√≥n
redundancia
c√≠clica
CRC
bytes
visto
Secci√≥n
5.2.3
prop√≥sito
campo
CRC
permitir
adaptador
receptor
adaptador
detecte
errores
bit
trama
Pre√°mbulo
bytes
trama
Ethernet
comienza
campo
pre√°mbulo
bytes
bytes
valor
10101010
byte
valor
10101011
bytes
sirven
despertar
adaptadores
recepci√≥n
sincronizar
relojes
reloj
emisor
desin-
cronizados
relojes
objetivo
adaptador
transmitir
trama
10
Mbps
100
Mbps
Gbps
dependiendo
tipo
LAN
Ethernet
absolutamente
perfecto
adaptador
transmitir√°
trama
velocidad
exactamente
objetivo
deriva
res-
pecto
dicha
velocidad
deriva
conocida
priori
restantes
adap-
tadores
LAN
adaptador
recepci√≥n
sincronizarse
reloj
adaptador
sincroniz√°ndose
simplemente
bits
bytes
pre-
√°mbulo
bits
octavo
byte
pre√°mbulo
1s
consecu-
tivos
alertan
adaptador
llegar
informaci√≥n
importante
Ethernet
utiliza
transmisi√≥n
banda
base
adaptador
env√≠a
se√±al
digital
directamente
canal
difusi√≥n
tarjeta
interfaz
desplaza
se√±al
banda
frecuencias
ocurre
sistema
ADSL
sistemas
m√≥dem
cable
tecnolog√≠as
Ethernet
ejemplo
10BASE-T
utilizan
codificaci√≥n
Man-
chester
muestra
Figura
5.23
codificaci√≥n
Manchester
bit
con-
transici√≥n
indica
transici√≥n
nivel
alto
nivel
indica
transici√≥n
nivel
nivel
alto
raz√≥n
utilizar
codificaci√≥n
Man-
chester
relojes
adaptadores
emisor
receptor
perfecta-
mente
sincronizados
incluir
transici√≥n
mitad
bit
host
receptor
sincronizar
reloj
host
emisor
reloj
adaptador
receptor
sincronizado
receptor
delinear
bit
determinar
codificaci√≥n
Manchester
operaci√≥n
capa
f√≠sica
capa
enlace
obstante
necesario
expliquemos
brevemente
utiliza
exhaustivamente
Ethernet
Servicio
conexi√≥n
fiable
tecnolog√≠as
Ethernet
proporcionan
servicio
conexi√≥n
capa
red
adaptador
desea
enviar
datagrama
adaptador
adaptador
encap-
sula
datagrama
trama
Ethernet
env√≠a
red
LAN
establecer
previamente
5.5
ETHERNET
453
Pre√°mbulo
CRCDirecci√≥n
destino
Direcci√≥n
origen
Tipo
Datos
Figura
5.22
Estructura
trama
Ethernet
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
453un
adaptador
B.
servicio
conexi√≥n
capa
an√°logo
servicio
datagramas
capa
IP
servicio
conexi√≥n
capa
UDP
tecnolog√≠as
Ethernet
proporcionan
servicio
fiable
capa
red
Espec√≠fi-
camente
adaptador
recibe
trama
procedente
adaptador
ejecuta
comprobaci√≥n
CRC
trama
env√≠a
mensaje
reconocimiento
trama
pasa
comprobaci√≥n
CRC
env√≠a
mensaje
reconocimiento
negativo
comprobaci√≥n
CRC
falla
trama
pasa
comprobaci√≥n
CRC
adaptador
simplemente
descarta
adaptador
trama
transmitido
llegado
adaptador
superado
comprobaci√≥n
CRC
ausencia
trans-
porte
fiable
capa
enlace
Ethernet
tecnolog√≠a
simple
barata
significa
flujo
datagramas
capa
red
presentar
hue-
cos
huecos
descartado
tramas
Ethernet
aplicaci√≥n
host
ve
huecos
visto
Cap√≠tulo
depender√°
aplica-
ci√≥n
utilizando
UDP
TCP
aplicaci√≥n
empleando
UDP
apli-
caci√≥n
host
ver√°
huecos
datos
contrario
aplicaci√≥n
utilizando
TCP
TCP
host
confirmar√°
datos
contenidos
tramas
descartadas
obligando
TCP
host
retransmisiones
Observe
TCP
retransmite
datos
finalmente
volver√°n
adaptador
Ethernet
descartados
sentido
Ethernet
retransmite
datos
cons-
ciente
transmitiendo
datagrama
datos
datagrama
contiene
datos
transmitidos
5.5.2
CSMA
CD
protocolo
acceso
m√∫ltiple
Ethernet
nodos
interconectados
concentrador
oposici√≥n
con-
mutador
capa
enlace
muestra
Figura
5.21
LAN
Ethernet
aut√©ntica
LAN
difusi√≥n
adaptador
transmite
trama
adaptadores
LAN
reciben
trama
Ethernet
emplear
comunica-
ci√≥n
difusi√≥n
necesita
protocolo
acceso
m√∫ltiple
Ethernet
utiliza
famoso
pro-
tocolo
acceso
m√∫ltiple
CSMA
CD
Recuerde
visto
Secci√≥n
5.3
CSMA
CD
454
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
Flujo
bits
Codificaci√≥n
Manchester
Codificaci√≥n
binario
Tiempo
10001001111
Figura
5.23
Codificaci√≥n
Manchester
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
4545.5
ETHERNET
455
adaptador
comenzar
transmitir
instante
concepto
partici√≥n
tiempo
adaptador
transmite
trama
detecta
adaptador
transmitiendo
utiliza
mecanismo
sondeo
portadora
adaptador
transmitiendo
aborta
transmisi√≥n
detecta
adaptador
transmitiendo
utiliza
mecanismo
detecci√≥n
colisiones
intentar
cabo
retransmisi√≥n
adaptador
espera
intervalo
tiempo
aleatorio
normalmente
peque√±o
tiempo
tarda
trans-
mitir
trama
mecanismos
proporcionan
CSMA
CD
rendimiento
pro-
tocolo
ALOHA
particiones
entorno
LAN
retardo
m√°ximo
pro-
pagaci√≥n
estaciones
peque√±o
eficiencia
CSMA
CD
aproximarse
100
ciento
Observe
tercer
mecanismos
lista
requieren
adaptadores
Ethernet
capaces
detectar
adaptador
transmitiendo
detectar
colisi√≥n
transmitiendo
adaptadores
Ethernet
realizan
tareas
midiendo
niveles
tensi√≥n
transmisiones
BOB
METCALFE
ETHERNET
estudiante
doctorado
Universidad
Harvard
principios
d√©cada
1970
Bob
Metcalfe
trabajaba
red
ARPAnet
MIT
estudios
conoci√≥
trabajo
Abramson
ALOHA
protocolos
acceso
aleatorio
terminar
doctorado
justo
comenzar
trabajar
Centro
investigaci√≥n
Xerox
Palo
Alto
Xerox
PARC
meses
Abramson
colegas
universidad
Hawaii
obtener
informaci√≥n
mano
ALOHAnet
Xerox
PARC
Metcalfe
conoci√≥
computadoras
Alto
sentidos
precursoras
computadoras
personales
d√©cada
1980
Metcalfe
vi√≥
necesidad
conectar
red
computadoras
sistema
econ√≥mico
armado
conocimientos
ARPAnet
ALOHAnet
protocolos
acceso
aleatorio
Metcalfe
colega
David
Boggs
invent√≥
Ethernet
Ethernet
original
Metcalfe
Boggs
operaba
2,94
Mbps
pod√≠a
conectar
256
hosts
separados
kil√≥metro
Metcalfe
Boggs
tuvie-
ron
√©xito
mayor√≠a
investigadores
Xerox
PARC
pudieran
comuni-
carse
computadoras
Alto
Metcalfe
forj√≥
alianza
Xerox
Digital
Intel
establecer
Ethernet
10
Mbps
est√°ndar
IEEE
Xerox
mostr√≥
inter√©s
comercializaci√≥n
Ethernet
1979
Metcalfe
mont√≥
empresa
3Com
desarroll√≥
comercializ√≥
tecnolog√≠a
redes
incluyendo
tecnolog√≠a
Ethernet
concreto
3Com
desarroll√≥
puso
mercado
tarjetas
Ethernet
principios
d√©cada
1980
tremedamente
populares
computadoras
personales
IBM
Met-
calfe
abandon√≥
3Com
1990
2.000
empleados
ingresos
400
millones
d√≥lares
HISTORIA
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
455Los
adaptadores
ejecutan
protocolo
CSMA
CD
coordinaci√≥n
expl√≠cita
adaptadores
existentes
red
Ethernet
adaptador
espec√≠fico
pro-
tocolo
CSMA
CD
opera
forma
adaptador
obtiene
datagrama
capa
red
prepara
trama
Ethernet
coloca
buffer
adaptador
adaptador
detecta
canal
inactivo
96
periodos
bit
adaptador
recibe
intensidad
se√±al
procedente
canal
comienza
transmitir
trama
adaptador
detecta
canal
ocupado
espera
comprobar
intensidad
se√±al
96
periodos
bit
comienza
transmitir
trama
transmitiendo
adaptador
monitoriza
presencia
se√±ales
proceden-
tes
adaptadores
adaptador
transmite
trama
completa
detectar
nin-
guna
se√±al
procedente
adaptadores
concluye
terminado
trabajo
trama
adaptador
detecta
intensidad
se√±al
procedente
adaptadores
transmitiendo
deja
transmitir
trama
transmite
se√±al
interferencia
jam
48
bits
abortar
transmisi√≥n
trama
transmitir
se√±al
interfe-
rencia
adaptador
entra
fase
espera
exponencial
backoff
exponencial
Espec√≠ficamente
hora
transmitir
determinada
trama
experimen-
tar
n-√©sima
colisi√≥n
trama
adaptador
selecciona
valor
aleatorio
conjunto
0,1,2
min(n,10
adaptador
espera
512
periodos
bit
vuelve
Paso
necesario
comentemos
cosas
acerca
protocolo
CSMA
CD
prop√≥-
sito
se√±al
interferencia
garantizar
adaptadores
trans-
mitiendo
conscientes
colisi√≥n
Veamos
ejemplo
Suponga
adaptador
comienza
transmitir
trama
justo
se√±al
llegue
adaptador
empieza
transmitir
transmitir√°
bits
abortar
trans-
misi√≥n
bits
propagar√°n
generen
intensi-
dad
se√±al
suficiente
detecte
colisi√≥n
asegurarse
detecta
colisi√≥n
abortar
transmisi√≥n
transmite
se√±al
interferencia
48
bits
Ac
backoff
exponencial
tene-
mos
observar
periodo
bit
tiempo
tarda
transmi-
tir
√∫nico
bit
corto
red
Ethernet
10
Mbps
periodo
bit
0,1
microsegundos
Veamos
ejemplo
Suponga
adaptador
intenta
transmitir
trama
transmitiendo
detecta
colisi√≥n
adaptador
selecciona
probabilidad
0,5
probabilidad
0,5
adaptador
elige
pasa
forma
inmediata
Paso
transmi-
tir
se√±al
interferencia
adaptador
elige
espera
51,2
microsegundos
volver
Paso
colisi√≥n
selecciona
probabilidad
conjunto
colisiones
elige
mis-
ma
probabilidad
conjunto
10
colisiones
elige
probabilidad
conjunto
1023
tama√±o
conjuntos
selecciona
crece
exponencialmente
n√∫mero
colisio-
456
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
4565.5
ETHERNET
457
nes
10
raz√≥n
algoritmo
backoff
Ethernet
deno-
mina
backoff
exponencial
est√°ndar
Ethernet
impone
l√≠mites
distancia
existente
nodos
cuales-
quiera
l√≠mites
garantizan
adaptador
elige
valor
peque√±o
adaptadores
implicados
colisi√≥n
adaptador
transmitir
trama
experimentar
colisi√≥n
problemas
repaso
vere-
mos
detalladamente
propiedad
utiliza
algoritmo
backoff
exponencial
seleccionar
ejemplo
conjunto
colisi√≥n
raz√≥n
adaptador
experimenta
colisi√≥n
idea
adaptado-
res
implicados
n√∫mero
adaptadores
colisionado
peque√±o
sentido
seleccionar
conjunto
peque√±o
valores
bajos
con-
trario
adaptadores
implicados
colisi√≥n
sentido
elegir
conjunto
disperso
valores
Aumentando
tama√±o
con-
colisi√≥n
adaptador
adapta
apropiadamente
distintos
esce-
narios
Observe
adaptador
prepara
trama
transmisi√≥n
ejecuta
algoritmo
CSMA
CD
presentado
anteriormente
teniendo
colisiones
hayan
lugar
reciente
adaptador
trama
capaz
cabo
transmisi√≥n
√©xito
forma
inmediata
adaptadores
encuentran
backoff
exponencial
Eficiencia
Ethernet
nodo
trama
enviar
nodo
transmitir
velocidad
m√°xima
tecnolog√≠a
Ethernet
ejemplo
10
Mbps
100
Mbps
Gbps
nodos
tramas
transmitir
velocidad
efectiva
transmisi√≥n
canal
menor
Definimos
eficiencia
Ethernet
fracci√≥n
plazo
tiempo
tramas
transmitidas
canal
coli-
siones
n√∫mero
nodos
activos
teniendo
cantidad
tramas
enviar
obtener
aproximaci√≥n
eficiencia
Ethernet
definimos
dprop
tiempo
m√°ximo
tarda
intensidad
se√±al
pro-
pagarse
adaptadores
dtrans
tiempo
necesario
transmitir
trama
Ether-
net
tama√±o
m√°ximo
1,2
milisegundos
Ethernet
10
Mbps
demostraci√≥n
expresi√≥n
eficiencia
Ethernet
queda
alcance
libro
consulte
Lam
1980
Bertsekas
1991
continuaci√≥n
proporcionamos
simple-
mente
aproximaci√≥n
Ap
dprop
aproxima
eficiencia
tiende
confirma
idea
intuitiva
retardo
propagaci√≥n
cero
nodos
colisionado
abortar√°n
forma
inmediata
transmisiones
evitando
canal
desperdicie
dtrans
eficiencia
tiende
igualmente
intuitivo
trama
apropia
canal
mantendr√°
Eficiencia
15
dd
prop
trans
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
457durante
tiempo
canal
realizando
trabajo
productivo
tiempo
5.5.3
Tecnolog√≠as
Ethernet
exposici√≥n
referencia
Ethernet
√∫nico
est√°ndar
protocolo
realidad
versiones
Ethernet
acr√≥nimos
complicados
10BASE-T
10BASE-2
100BASE-T
1000BASE-LX
10GBASE-T.
tecnolog√≠as
Ethernet
estanda-
rizadas
a√±os
grupo
trabajo
IEEE
802.3
CSMA
CD
Ethernet
IEEE
802.3
2009
acr√≥nimos
parecer
complicados
realmente
l√≥gica
acr√≥nimo
referencia
velocidad
est√°ndar
10
100
1000
10
10
Megabits
100
Megabits
Gigabit
10
Gigabits
Ethernet
respectivamente
BASE
referencia
tecnolog√≠a
Ethernet
banda
base
significa
f√≠sico
transporta
tr√°fico
Ethernet
est√°ndares
802.3
Ethernet
banda
base
acr√≥nimo
refiere
f√≠sico
Ethernet
especificaci√≥n
capa
enlace
capa
f√≠sica
emplear
diversos
medios
f√≠sicos
incluyen
cable
coaxial
cable
cobre
fibra
Generalmente
referencia
cable
cobre
par
trenzado
Hist√≥ricamente
Ethernet
concebida
inicialmente
segmento
cable
coa-
xial
muestra
Figura
5.20
est√°ndares
10BASE-2
10BASE5
especificaban
Ethernet
10
Mbps
tipos
cable
coaxial
limi-
tado
longitud
500
metros
Pod√≠an
obtenerse
recorridos
largos
utilizando
repetidor
dispositivo
capa
f√≠sica
recibe
se√±al
entrada
regenera
se√±al
salida
cable
coaxial
mostrado
Figura
5.20
corresponde
visi√≥n
Ethernet
difusi√≥n
tramas
transmitidas
interfaz
recibidas
interfaces
protocolo
CDMA
CD
Ethernet
resuelve
problema
acceso
m√∫ltiple
nodos
simplemente
conectan
cable
voila
red
√°rea
local
tecnolog√≠a
Ethernet
serie
pasos
evolutivos
a√±os
Ethernet
actual
dise√±os
topolog√≠as
bus
originales
utilizaban
cable
coaxial
instalaciones
actuales
nodos
conectan
conmutador
segmentos
punto
punto
hechos
cable
cobre
par
trenzado
cable
fibra
√≥ptica
muestra
Figura
5.24
Am
r√°pida
Ethernet
10
Mbps
protocolo
MAC
Ethernet
original
for-
mato
trama
conservaron
definieron
capas
f√≠sicas
velocidad
cable
cobre
100BASE-T
fibra
100BASE-FX
100BASE-SX
100BASE-BX
Figura
5.25
muestra
distintos
est√°ndares
protocolo
MAC
Ethernet
formato
trama
comunes
tecnolog√≠a
Ethernet
100
Mbps
limitada
distancia
100
metros
cable
par
trenzado
kil√≥metros
cable
fibra
permite
conectar
conmutadores
Ethernet
situados
edificios
Ethernet
Gigabit
extensi√≥n
est√°ndares
Ethernet
10
Mbps
100
Mbps
√©xito
Ofreciendo
tasa
datos
bruto
1.000
Mbps
Ethernet
Gigabit
man-
compatibilidad
enorme
base
instalada
equipos
Ethernet
est√°ndar
Ethernet
Gigabit
IEEE
802.3z
458
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
458‚Ä¢U
tecnolog√≠as
10BASE-T
100BASE-T.
permite
f√°cil
integraci√≥n
Ethernet
Gigabit
base
instalada
existente
equipos
Ethernet
‚Ä¢P
enlaces
punto
punto
utilizan
conmutadores
canales
difusi√≥n
emplean
concentradores
descrito
anteriormente
jerga
Ethernet
Gigabit
concentradores
reciben
nombre
distribuidores
buffer
‚Ä¢U
aceptable
distancia
m√°xima
nodos
restringida
forma
estricta
Permite
operaci√≥n
full-duplex
1.000
Mbps
ambas
direcciones
canales
punto
punto
Operando
inicialmente
cable
fibra
√≥ptica
Ethernet
Gigabit
capaz
ope-
rar
cable
UTP
categor√≠a
2007
estandariz√≥
Ethernet
10
Gbps
10GBASE-
proporcionando
mayores
capacidades
redes
LAN
Ethernet
5.5
ETHERNET
459
Conmutador
Figura
5.24
Conmutador
capa
enlace
interconecta
nodos
F√≠sica
Transporte
Red
Enlace
Aplicaci√≥n
100BASE-TX
100BASE-T4
100BASE-T2
Protocolo
MAC
formato
trama
100BASE-SX
100BASE-FX
100BASE-BX
Figura
5.25
Est√°ndares
Ethernet
100
Mbps
capa
enlace
com√∫n
capas
f√≠sicas
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
459Vamos
concluir
exposici√≥n
tecnolog√≠a
Ethernet
planteando
cues-
ti√≥n
rondando
cabeza
√©poca
topolog√≠as
bus
topolog√≠as
estrella
basadas
concentrador
Ethernet
claramente
enlace
difusi√≥n
definido
Secci√≥n
5.3
produc√≠an
colisiones
tra-
nodos
transmit√≠an
tiempo
tratar
colisiones
est√°ndar
Ethernet
incluy√≥
protocolo
CSMA
CD
particularmente
efectivo
redes
LAN
cableadas
difusi√≥n
radio
geogr√°fico
peque√±o
prevalente
topolog√≠a
estrella
basada
conmutadores
utiliza
conmutaci√≥n
paquetes
almacenamiento
reenv√≠o
realmente
necesidad
protocolo
MAC
Ether-
net
veremos
Secci√≥n
5.6
conmutador
coordina
transmisiones
reenv√≠a
trama
interfaz
determinado
instante
con-
mutadores
modernos
full-duplex
conmutador
nodo
enviarse
tramas
simult√°neamente
interferir
palabras
red
LAN
Ethernet
basada
conmutadores
producen
colisiones
necesita
protocolo
MAC
visto
tecnolog√≠as
Ethernet
actuales
tecnolo-
g√≠a
Ethernet
original
concebida
Metcalfe
Boggs
30
a√±os
velocidades
incrementado
√≥rdenes
magnitud
tramas
Ethernet
transportadas
amplia
variedad
medios
tecnolog√≠a
Ethernet
conmutada
convertido
tec-
nolog√≠a
dominante
protocolo
MAC
frecuencia
necesario
realmente
Ethernet
respuesta
definici√≥n
interesante
observar
cambios
mantenido
inalterado
30
a√±os
formato
trama
Ethernet
√∫nica
pieza
importante
est√°ndar
Ethernet
5.6
Conmutadores
capa
enlace
muestra
Figura
5.26
redes
LAN
Ethernet
modernas
utilizan
topolog√≠a
estrella
estando
nodo
conectado
conmutador
central
momento
entrado
detalles
realmente
conmutador
funciona
funci√≥n
conmutador
recibir
tramas
capa
enlace
entrantes
reenviarlas
enlaces
salida
estudiar
funci√≥n
reenv√≠o
detalle
conmutador
transparente
nodos
nodo
dirige
trama
nodo
lugar
dirigirla
conmutador
env√≠a
red
LAN
consciente
conmutador
recibir√°
trama
reenviar√°
nodos
velocidad
llegan
tramas
cualquiera
interfaces
salida
conmutador
temporalmente
capacidad
enlace
dicha
interfaz
enfrentarse
problema
interfaces
salida
conmutador
disponen
buffers
forma
parecida
interfaces
salida
router
disponen
buffers
datagramas
Veamos
detenidamente
funciona
conmutador
5.6.1
Reenv√≠o
filtrado
filtrado
funci√≥n
conmutador
determina
trama
reenviada
interfaz
descartada
reenv√≠oes
funci√≥n
conmutador
deter-
mina
interfaces
trama
dirigirse
env√≠a
trama
interfaces
460
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
460Las
funciones
filtrado
reenv√≠o
conmutador
realizan
utilizando
tabla
con-
mutador
tabla
contiene
entradas
nodos
necesariamente
red
LAN
entrada
tabla
conmutador
contiene
direcci√≥n
MAC
nodo
interfaz
conmutador
nodo
instante
entrada
nodo
incluida
tabla
ejemplo
tabla
conmutaci√≥n
conmutador
superior
Figura
5.26
muestra
Figura
5.27
descrip-
ci√≥n
reenv√≠o
tramas
parecer
similar
visto
reenv√≠o
datagramas
Cap√≠tulo
veremos
diferencias
importantes
diferencias
conmutadores
reenv√≠an
paquetes
bas√°ndose
direcciones
MAC
lugar
direcciones
IP
veremos
tabla
conmutador
construye
forma
distinta
crea
tabla
reenv√≠o
router
comprender
funciona
filtrado
reenv√≠o
conmutador
suponga
trama
direcci√≥n
destino
DD-DD-DD-DD-DD-DD
llega
interfaz
Direcci√≥n
Interfaz
Hora
62-FE-F7-11-89-A3
9:32
7C-BA-B2-B4-91-10
9:36
Figura
5.27
tabla
conmutador
superior
Figura
5.26
5.6
CONMUTADORES
CAPA
ENLACE
461
Servidor
correo
red
externa
Gbps
56
Gbps
Gbps
Ingenier√≠a
el√©ctrica
Ciencias
computacion
100
Mbps
fibra
100
Mbps
fibra
100
Mbps
fibra
Mezcla
10
Mbps
100
Mbps
Gbps
cable
Cat
Servidor
web
Ingenier√≠a
inform√°tica
Figura
5.26
red
institucional
utiliza
combinaci√≥n
concentrado-
res
conmutadores
Ethernet
router
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
461conmutador
buscar√°
tabla
direcci√≥n
MAC
DD-DD-DD-DD-DD-DD
plan-
tean
posibilidades
‚Ä¢N
mutador
reenv√≠a
copias
trama
buffers
salida
preceden
inter-
faces
interfaz
x.
palabras
entrada
direcci√≥n
destino
conmutador
difunde
trama
‚Ä¢E
x.
caso
trama
procede
segmento
LAN
contiene
adaptador
DD-
DD-DD-DD-DD-DD
necesidad
reenviar
trama
res-
tantes
interfaces
conmutador
cabo
funci√≥n
filtrado
descartando
trama
‚Ä¢E
y 
x.
caso
trama
reenviada
segmento
LAN
conectado
interfaz
y.
conmutador
cabo
funci√≥n
reenv√≠o
colocando
trama
buffer
salida
precede
interfaz
y.
Apliquemos
reglas
conmutador
superior
Figura
5.26
tabla
mostrada
Figura
5.27
Suponga
trama
direcci√≥n
destino
62-FE-
F7-11-89-A3
llega
conmutador
interfaz
conmutador
examina
tabla
ve
destino
segmento
LAN
conectado
interfaz
Ingenier√≠a
El√©ctrica
significa
trama
difundida
segmento
LAN
con-
destino
conmutador
filtra
descarta
trama
Suponga
trama
direcci√≥n
destino
llega
interfaz
conmu-
tador
examina
tabla
ve
destino
direcci√≥n
interfaz
reen-
v√≠a
trama
buffer
salida
precede
interfaz
ejemplo
deber√≠a
quedar
medida
tabla
conmutador
completa
precisa
conmutador
reen-
v√≠a
tramas
destinos
cabo
difusi√≥n
sentido
conmutador
inteligente
concentrador
configura
tabla
conmutador
equivalentes
capa
enlace
protocolos
enrutamiento
capa
red
administrador
sobrecargado
trabajo
configurar
manualmente
tabla
conmutador
5.6.2
Auto-aprendizaje
conmutadores
fant√°stica
propiedad
especialmente
administradores
redes
sobrecargados
trabajo
tabla
construye
forma
autom√°tica
din√°mica
aut√≥noma
intervenci√≥n
administrador
redes
protocolo
confi-
guraci√≥n
palabras
conmutadores
auto-aprendices
capacidad
cabo
forma
Inicialmente
tabla
conmutador
vac√≠a
trama
entrante
recibida
interfaz
conmutador
almacena
tabla
direcci√≥n
MAC
especificada
campo
direcci√≥n
origen
trama
interfaz
procede
trama
hora
actual
forma
conmutador
registra
tabla
segmento
LAN
reside
nodo
emisor
nodos
LAN
terminan
enviando
trama
nodos
terminar√°n
estando
registrados
tabla
462
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
462Direcci√≥n
Interfaz
Hora
01-12-23-34-45-56
9:39
62-FE-F7-11-89-A3
9:32
7C-BA-B2-B4-91-10
9:36
Figura
5.28
conmutador
aprende
ubicaci√≥n
adaptador
direcci√≥n
01-12-23-34-45-56
conmutador
borra
direcci√≥n
tabla
recibe
trama
direcci√≥n
direcci√≥n
origen
transcurrido
periodo
tiempo
tiempo
envejecimiento
forma
PC
sustituido
adaptador
direcci√≥n
MAC
PC
original
eliminado
tabla
conmutador
Examinemos
propiedad
auto-aprendizaje
conmutador
superior
Figura
5.26
tabla
conmutaci√≥n
correspondiente
mostrada
Figura
5.27
Suponga
9:39
trama
direcci√≥n
origen
01-12-23-34-45-56
llega
procedente
interfaz
Suponga
direcci√≥n
incluida
tabla
conmutador
conmutador
a√±ade
entrada
muestra
Figura
5.28
Continuando
ejemplo
suponga
tiempo
envejecimiento
con-
mutador
60
minutos
9:32
10:32
llega
trama
direcci√≥n
origen
62-FE-F7-11-89-A3
10:32
conmutador
eliminar√°
es-
ta
direcci√≥n
tabla
conmutadores
dispositivos
plug-and-play
requieren
intervenci√≥n
administrador
redes
usuarios
administrador
redes
desee
insta-
lar
conmutador
conectar
segmentos
LAN
interfaces
conmutador
administrador
configurar
tablas
conmuta-
dor
momento
instalaci√≥n
elimina
host
segmentos
LAN
conmutadores
permiten
comunicaci√≥n
full-duplex
signi-
fica
enlace
conecte
nodo
conmutador
nodo
conmutador
transmitir
tiempo
produzcan
colisiones
5.6.3
Propiedades
conmutaci√≥n
capa
enlace
descrito
funcionamiento
b√°sico
conmutador
capa
enlace
pasar
caracter√≠sticas
propiedades
Utilizando
red
LAN
Figura
5.24
identificar
ventajas
utilizar
conmutadores
lugar
enla-
ces
difusi√≥n
topolog√≠as
bus
basadas
concentradores
Eliminaci√≥n
colisiones
red
LAN
construida
conmutadores
con-
centradores
desperdicia
ancho
banda
causa
colisiones
conmutado-
res
almacenan
tramas
buffer
transmiten
trama
segmento
simult√°neamente
routers
tasa
m√°xima
transferencia
agregada
conmutador
suma
tasas
interfaces
conmutador
conmutadores
proporcionan
mejora
significativa
rendimiento
redes
LAN
enlaces
difusi√≥n
5.6
CONMUTADORES
CAPA
ENLACE
463
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
463‚Ä¢
Enlaces
heterog√©neos
conmutador
a√≠sla
enlace
distintos
enlaces
LAN
operar
velocidades
utilizar
medios
f√≠sicos
ejemplo
Figura
5.24
conectarse
enlace
cobre
10BASE-T
10
Mbps
conectarse
enlace
fibra
100BASE-FX
100
Mbps
conectarse
enlace
cobre
1000
BASE-T
Gbps
conmutador
ideal
combinar
equipos
heredados
equipos
Administraci√≥n
proporcionar
seguridad
mejorada
v√©ase
recuadro
dedicado
seguridad
conmutador
facilita
tareas
gesti√≥n
red
ejemplo
adaptador
red
funciona
env√≠a
continuamente
tramas
Ether-
net
conmutador
detectar
problema
desconectar
internamente
adapta-
dor
funcionando
incorrectamente
caracter√≠stica
administrador
red
levantarse
cama
conducir
oficina
corregir
problema
corte
cable
desconecta
nodo
usando
cable
cortado
conectarse
conmutador
√©poca
cable
coaxial
administradores
red
pasaban
horas
recorriendo
l√≠neas
forma
precisa
arrastr√°ndose
suelo
localizar
cable
roto
cayera
red
veremos
Cap√≠tulo
Administraci√≥n
red
conmutadores
recopilan
estad√≠sticas
acerca
ancho
banda
tasas
colisi√≥n
tipos
tr√°fico
ponen
informaci√≥n
disposici√≥n
administrador
red
informaci√≥n
emplearse
depurar
corregir
problemas
planificar
deber√°
red
LAN
evolucionar
futuro
inves-
tigadores
explorando
adici√≥n
funcionalidades
administra-
ci√≥n
redes
LAN
Ethernet
implantaciones
prototipos
Casado
2007
5.6.4
Conmutadores
frente
routers
visto
Cap√≠tulo
routers
dispositivos
conmutaci√≥n
alma-
cenamiento
reenv√≠o
reenv√≠an
paquetes
utilizando
direcciones
capa
red
conmutador
dispositivo
conmutaci√≥n
paquetes
almacena-
miento
reenv√≠o
fundamentalmente
router
reenv√≠a
paquetes
utilizando
direcciones
MAC
router
dispositivo
conmutaci√≥n
paquetes
capa
conmutador
dispositivo
conmutaci√≥n
paquetes
capa
conmutadores
routers
fundamentalmente
adminis-
tradores
red
elegir
hora
instalar
dispositivo
interconexi√≥n
ejemplo
red
Figura
5.26
administrador
red
utilizado
f√°cilmente
router
lugar
conmutador
conectar
redes
LAN
departamentales
servidores
router
pasarela
Internet
router
per-
mitir√≠a
comunicaciones
departamentos
crear
colisiones
Puesto
conmutadores
routers
candidatos
dispositivos
interconexi√≥n
pros
contras
lugar
ocuparnos
pros
contras
conmutadores
mencionado
anteriormente
conmutadores
dispositivos
plug-and-play
propiedad
apreciada
administradores
red
mundo
sobrecarga-
trabajo
conmutadores
ofrecen
tasas
filtrado
reenv√≠o
relativamente
altas
muestra
Figura
5.29
conmutadores
procesar
tramas
464
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
464s√≥lo
capa
routers
procesar
datagramas
capa
impedir
ciclos
tramas
difusi√≥n
topolog√≠a
activa
red
conmutada
restringida
√°rbol
recubrimiento
red
conmu-
tada
requerir√°
tablas
ARP
nodos
generar√°
cantidad
procesa-
miento
tr√°fico
ARP
sustancial
conmutadores
ofrecen
protecci√≥n
frente
tormentas
difusi√≥n
host
descontrolado
transmite
flujo
tramas
Ether-
5.6
CONMUTADORES
CAPA
ENLACE
465
HUSMEANDO
LAN
CONMUTADA
ENVENENAMIENTO
CONMUTADOR
nodo
conectado
conmutador
normalmente
recibe
tramas
enviadas
forma
expl√≠cita
ejemplo
considere
red
LAN
conmutada
Figura
5.24
nodo
env√≠a
trama
nodo
entrada
nodo
tabla
conmutador
reenviar√°
trama
√∫nicamente
nodo
B.
nodo
ejecutando
programa
husmeador
sniffer
husmear
trama
B.
LAN
conmutada
contraste
entorno
enlaces
difusi√≥n
redes
LAN
802.11
redes
LAN
Ethernet
basadas
concentrador
dif√≠cil
atacante
husmear
tramas
conmutadores
difunden
tramas
direcciones
destino
almacenadas
tablas
conmutaci√≥n
programa
sniffer
husmear
tramas
expl√≠citamente
diri-
gidas
C.
programa
sniffer
husmear
tramas
Ethernet
difusi√≥n
tengan
direcci√≥n
destino
difusi√≥n
FF‚ÄìFF‚ÄìFF‚ÄìFF‚ÄìFF‚ÄìFF
ataque
conocido
conmutador
recibe
nombre
envenenamiento
conmutador
consis-
enviar
toneladas
paquetes
conmutador
direcciones
MAC
origen
falsas
rellenar√°n
tabla
conmutador
entradas
falsas
dejar√°n
espacio
direcciones
MAC
nodos
leg√≠timos
conmu-
tador
difunda
tramas
seleccionadas
hus-
meador
Skoudis
2006
ataque
complejo
atacante
avanzado
conmutadores
significativamente
vulnerables
sniffers
redes
LAN
inal√°mbricas
basadas
concentradores
SEGURIDAD
Host
Aplicaci√≥n
Host
Transporte
Red
Enlace
F√≠sica
Enlace
F√≠sica
Red
Conmutador
Router
Enlace
F√≠sica
Aplicaci√≥n
Transporte
Red
Enlace
F√≠sica
Figura
5.29
Procesamiento
paquetes
conmutadores
routers
hosts
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
465net
difusi√≥n
conmutadores
reenviar√°n
tramas
red
colapse
Consideremos
pros
contras
routers
Puesto
frecuentemente
direccionamiento
red
jer√°rquico
plano
direccionamiento
MAC
normal-
mente
paquetes
seguir√°n
ciclos
routers
red
rutas
redundantes
paquetes
seguir
ciclos
tablas
router
configuradas
estudiado
Cap√≠tulo
IP
utiliza
campo
especial
cabecera
datagrama
limitar
ciclos
paque-
tes
restringidos
√°rbol
recubrimiento
utilizar
ruta
origen
destino
routers
restricci√≥n
√°rbol
recubrimiento
permitido
Internet
creada
topolog√≠a
rica
incluye
ejem-
plo
m√∫ltiples
enlaces
activos
Europa
Am√©rica
Norte
funcionalidad
routers
proporcionan
protecci√≥n
cortafuegos
frente
tormentas
difu-
si√≥n
capa
inconveniente
significativo
routers
dis-
positivos
plug-and-play
hosts
conectados
necesitan
direcciones
IP
configuradas
routers
suelen
tiempo
procesamiento
paquete
conmutadores
procesar
campos
capa
ingl√©s
formas
pronunciar
palabra
router
rootor
rowter
gente
pierde
tiempo
discutiendo
acerca
pronunciaci√≥n
apro-
piada
Perlman
1999
conmutadores
routers
ventajas
inconvenien-
tes
resume
Tabla
5.1
utilizar
red
institucional
ejemplo
red
campus
universitario
red
corporativa
conmutadores
rou-
ters
Normalmente
redes
peque√±as
constan
cientos
hosts
segmentos
LAN
conmutadores
suficientes
redes
peque√±as
localizan
tr√°fico
aumentan
tasa
transferencia
agregada
necesidad
confi-
gurar
direcciones
IP
redes
tama√±o
constan
miles
hosts
suelen
incluir
routers
red
conmutadores
routers
proporcionan
aisla-
miento
robusto
tr√°fico
controlan
tormentas
difusi√≥n
utilizan
rutas
inteli-
gentes
hosts
red
exposici√≥n
pros
contras
redes
conmutadas
enruta-
das
estudio
tecnolog√≠a
LAN
conmutada
ampliarse
aco-
modar
√≥rdenes
magnitud
hosts
redes
Ethernet
actuales
consulte
Kim
2008
5.6.5
Redes
√°rea
local
virtuales
VLAN
explicaci√≥n
Figura
5.26
mencionado
redes
LAN
ins-
titucionales
modernas
suelen
configuradas
forma
jer√°rquica
teniendo
grupo
trabajo
departamento
red
LAN
conmutada
conectada
redes
LAN
conmuta-
das
grupos
jerarqu√≠a
conmutadores
configuraci√≥n
tipo
funciona
mundo
ideal
mundo
real
alejado
ideal
configuraci√≥n
Figura
5.26
identificar
desventajas
Falta
aislamiento
tr√°fico
jerarqu√≠a
localiza
tr√°fico
grupo
conmutador
tr√°fico
difusi√≥n
ejemplo
tramas
transportan
mensajes
ARP
DHCP
tramas
cuyo
destino
aprendido
conmutador
auto-aprendiz
atravesar
red
institucional
Limitar
466
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
466Concentradores
Routers
Conmutadores
Aislamiento
tr√°fico
Plug
and
play
Enrutamiento
√≥ptimo
Tabla
5.1
Comparaci√≥n
funcionalidades
t√≠picas
dispositivos
interconexi√≥n
populares
√°mbito
tr√°fico
difusi√≥n
mejorar√≠a
rendimiento
LAN
impor-
tante
deseable
limitar
tr√°fico
difusi√≥n
LAN
razones
seguridad
confidencialidad
ejemplo
grupo
contiene
equipo
direcci√≥n
empresa
grupo
empleados
descontentos
ejecutan
paquetes
sniffer
Wireshark
probablemente
administrador
red
preferir√°
tr√°fico
equipo
direcci√≥n
llegue
hosts
empleados
tipo
aislamiento
proporcionarse
sustituyendo
conmutador
central
Figura
5.26
router
Ense-
guida
veremos
aislamiento
soluci√≥n
conmutada
capa
ineficiente
conmutadores
lugar
grupos
instituci√≥n
10
grupos
necesitar√≠an
10
conmutadores
nivel
grupos
peque√±o
ejemplo
formados
10
personas
√∫nico
conmutador
96
puertos
suficientemente
acomodar
mundo
√∫nico
conmutador
proporcionar√≠a
funcionalidad
aisla-
miento
tr√°fico
Gesti√≥n
usuarios
empleado
mueve
grupos
cableado
f√≠sico
modificarse
conectar
empleado
conmutador
Figura
5.26
empleados
pertenecen
grupos
constituyen
problema
Afortunadamente
desventajas
abordada
conmutador
compatible
redes
√°rea
local
virtuales
VLAN
Virtual
Local
Area
Network
nombre
sugiere
conmutador
compatible
redes
VLAN
permite
definir
m√∫ltiples
redes
√°rea
local
virtuales
√∫nica
infraestructura
red
√°rea
local
f√≠sica
hosts
VLAN
comunican
host
estuvieran
conectados
conmutador
VLAN
basada
puertos
administrador
red
divide
puertos
interfaces
conmutador
grupos
grupo
constituye
VLAN
puertos
VLAN
formando
dominio
difusi√≥n
tr√°fico
difusi√≥n
puerto
llegar
puertos
grupo
Figura
5.30
muestra
√∫nico
conmutador
16
puertos
puertos
pertenecen
VLAN
IE
puertos
15
pertenecen
VLAN
CC
puertos
16
asignados
VLAN
resuelve
dificultades
mencionadas
anteriormente
tramas
VLAN
IE
CC
aisladas
conmutadores
Figura
5.26
sustituido
√∫nico
conmutador
usuario
puerto
conmutador
une
departamento
CC
operador
red
simplemente
reconfigurar
software
VLAN
puerto
est√©
asociado
VLAN
CC
f√°cil
imaginar
configura
funciona
conmutador
redes
VLAN
administrador
red
declara
puerto
pertenece
determinada
VLAN
puertos
declarados
pertenecen
VLAN
5.6
CONMUTADORES
CAPA
ENLACE
467
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
467predeterminada
utilizando
software
gesti√≥n
conmutadores
conmutador
mantiene
tabla
correspondencias
puertos
redes
VLAN
hardware
con-
mutador
entrega
tramas
puertos
pertenecen
VLAN
causa
completo
aislamiento
redes
VLAN
introducido
dificultad
enviarse
tr√°fico
departamento
IE
departamento
CC
forma
resolver
conectando
puerto
conmutador
VLAN
ejemplo
puerto
Figura
5.30
router
externo
configurando
puerto
per-
tenezca
VLAN
IE
VLAN
CC
caso
departa-
mentos
IE
CC
compartan
conmutador
f√≠sico
configuraci√≥n
l√≥gica
dichos
departamentos
tuvieran
conmutadores
separados
conectados
router
datagrama
IP
enviado
departamento
IE
departamento
CC
atravesar√≠a
VLAN
IE
llegar
router
reenviado
router
VLAN
CC
host
CC
Afortunadamente
fabricantes
conmutadores
dicha
tarea
configuraci√≥n
resulte
sencilla
administradores
red
incorporando
√∫nico
dis-
positivo
conmutador
VLAN
router
necesario
utilizar
router
externo
separado
problemas
repaso
cap√≠tulo
examina
escenario
detalle
Vo
mento
Ingenier√≠a
Inform√°tica
separado
acad√©micos
IE
CC
alo-
jados
edificios
necesitan
acceso
red
desean
formar
VLAN
departamento
Figura
5.31
muestra
conmutador
puertos
puertos
definido
pertenecientes
VLAN
IE
VLAN
CC
necesario
interconectarse
conmutadores
soluci√≥n
f√°cil
definir
puerto
per-
teneciera
VLAN
CC
conmutador
VLAN
IE
conectar
puertos
muestra
Figura
5.31(a
soluci√≥n
escalable
redes
VLAN
requerir√≠an
puertos
conmutador
simplemente
interconectar
conmutadores
m√©todo
escalable
consiste
interconectar
conmutadores
VLAN
utilizando
t√©cnica
conocida
troncalizaci√≥n
VLAN
VLAN
Trunking
t√©cnica
mos-
trada
Figura
5.31(b
puerto
especial
conmutador
puerto
16
con-
mutador
izquierda
puerto
derecha
configura
puerto
468
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
Ingenier√≠a
El√©ctrica
IE
puertos
VLAN
2‚Äì8
Ciencias
Computaci√≥n
CC
puertos
VLAN
9‚Äì15
15
24
10
16
Figura
5.30
conmutador
redes
VLAN
configuradas
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
468troncal
interconectar
conmutadores
VLAN
puerto
troncal
pertenece
VLAN
tramas
enviadas
VLAN
reenviadas
enlace
tron-
cal
conmutador
soluci√≥n
conduce
pregunta
conmutador
trama
llegado
puerto
troncal
pertenece
VLAN
concreta
IEEE
definido
formato
trama
Ethernet
ampliado
802.1Q
tra-
atraviesan
enlace
troncal
VLAN
muestra
Figura
5.32
trama
802.1Q
formada
trama
Ethernet
est√°ndar
etiqueta
VLAN
5.6
CONMUTADORES
CAPA
ENLACE
469
16
Ingenier√≠a
El√©ctrica
puertos
VLAN
2‚Äì8
b.
a.
Ingenier√≠a
El√©ctrica
puertos
VLAN
Enlace
troncal
Ciencias
Computaci√≥n
puertos
VLAN
9‚Äì15
15
24
10
16
68
Ciencias
Computaci√≥n
puertos
VLAN
Figura
5.31
Conexi√≥n
conmutadores
VLAN
redes
VLAN
cables
enlace
troncal
Pre√°mbulo
CRCDirecci√≥n
destino
Direcci√≥n
origen
Tipo
Datos
Pre√°mbulo
CRC'Direcci√≥n
destino
Direcci√≥n
origen
Tipo
Informaci√≥n
control
etiquetado
Identificador
protocolo
etiquetado
CRT
recalculado
Datos
Figura
5.32
Trama
Ethernet
original
trama
Ethernet
etiquetado
VLAN
802.1Q
abajo
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
469bytes
a√±adida
cabecera
transporta
identidad
VLAN
pertenece
trama
conmutador
emisor
enlace
troncal
VLAN
a√±ade
etiqueta
VLAN
trama
analizada
eliminada
conmutador
receptor
enlace
troncal
etiqueta
VLAN
consta
campo
Identificador
protocolo
etique-
tado
TPID
Tag
Protocol
Identifier
bytes
valor
hexadecimal
fijo
81-
00
campo
Informaci√≥n
control
etiquetado
Tag
Control
Information
bytes
contiene
campo
identificador
VLAN
12
bits
campo
prioridad
bits
cuya
finalidad
similar
campo
TOS
datagramas
IP
exposici√≥n
hablado
brevemente
redes
VLAN
centrado
VLAN
basadas
puertos
Debemos
redes
VLAN
pue-
den
definirse
formas
VLAN
basadas
direcciones
MAC
administrador
redes
especifica
conjunto
direcciones
MAC
pertenece
VLAN
dispositivo
conecta
puerto
puerto
conecta
VLAN
apropiada
bas√°ndose
direcci√≥n
MAC
dispositivo
redes
VLAN
definirse
bas√°ndose
protocolos
capa
red
ejemplo
IPv4
IPv6
Appletalk
crite-
rios
Consulte
est√°ndar
802.1Q
IEEE
802.1q
2005
detalles
5.7
PPP
Protocolo
punto
punto
momento
exposici√≥n
protocolos
capa
enlace
centrada
protocolos
canales
difusi√≥n
secci√≥n
abordar
protocolo
capa
enlace
enlaces
punto
punto
PPP
protocolo
punto
punto
Puesto
PPP
t√≠picamente
protocolo
elegido
enlace
acceso
telef√≥nico
host
residencial
indudablemente
protocolos
capa
enlace
ampliamente
implantado
actualmente
protocolo
capa
enlace
importante
protocolo
HDLC
High-level
Data
Link
Control
consulte
Spragins
1991
desea
obtener
informaci√≥n
acerca
HDLC
exposici√≥n
protocolo
PPP
simple
permitir
examinar
importan-
tes
funcionalidades
protocolo
capa
enlace
punto
punto
nombre
implica
protocolo
punto
punto
PPP
RFC
1661
RFC
2153
protocolo
capa
enlace
opera
enlace
punto
punto
enlace
conecta
directamente
nodos
situados
extremo
enlace
enlace
punto
punto
PPP
opera
l√≠nea
telef√≥nica
serie
ejem-
plo
conexi√≥n
m√≥dem
56
enlace
SONET
SDH
conexi√≥n
X.25
circuito
RDSI
mencionado
PPP
suele
protocolo
elegido
usua-
rios
dom√©sticos
conectarse
ISP
conexi√≥n
acceso
telef√≥nico
profundizar
detalles
PPP
interesante
examinar
requisitos
ori-
ginales
IETF
estableci√≥
dise√±o
PPP
RFC
1547
Entramado
paquetes
emisor
capa
enlace
protocolo
PPP
tomar
paquete
nivel
red
encapsularlo
trama
capa
enlace
PPP
receptor
capaz
identificar
inicio
trama
capa
enlace
paquete
capa
red
contenido
Transparencia
protocolo
PPP
aplicar
restricci√≥n
datos
apa-
recen
paquete
capa
red
cabeceras
datos
ejemplo
PPP
470
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
470no
prohibir
patrones
bits
paquete
capa
red
ol-
veremos
tema
hablemos
rellenado
bytes
M√∫ltiples
protocolos
capa
red
protocolo
PPP
soporte
m√∫ltiples
protocolos
capa
red
ejemplo
IP
DECnet
ejecuten
enlace
f√≠sico
forma
simult√°nea
necesita
proto-
colo
IP
multiplexar
protocolos
capa
transporte
ejemplo
TCP
UDP
√∫nica
conexi√≥n
terminal
terminal
PPP
capaz
multiplexar
protocolos
capa
red
√∫nica
conexi√≥n
punto
punto
requisito
m√≠nimo
probablemente
PPP
requerir√°
campo
tipo
protocolo
mecanismo
similar
PPP
receptor
demultiplexar
trama
recibida
protocolo
capa
red
apropiado
M√∫ltiples
tipos
enlaces
transportar
m√∫ltiples
protocolos
nivel
superior
PPP
operar
amplia
variedad
tipos
enla-
ces
incluyendo
enlaces
serie
transmiten
bit
direcci√≥n
dada
paralelo
transmiten
bits
paralelo
enlaces
s√≠ncronos
transmiten
se√±al
reloj
bits
datos
as√≠ncronos
enlaces
baja
velocidad
alta
veloci-
dad
enlaces
el√©ctricos
√≥pticos
Detecci√≥n
errores
receptor
PPP
capaz
detectar
errores
bit
tramas
recibidas
Pervivencia
conexi√≥n
PPP
capaz
detectar
fallo
nivel
enlace
ejemplo
incapacidad
transferir
datos
emisor
enlace
receptor
se√±alar
condici√≥n
error
capa
red
Negociaci√≥n
direcciones
capa
red
PPP
proporcionar
mecanismo
capas
red
ejemplo
IP
comunicando
puedan
aprender
configurar
direcciones
capa
red
Simplicidad
requiri√≥
PPP
cumpliera
serie
requisitos
adicionales
acabamos
enumerar
importante
sim-
plicidad
documento
RFC
1547
establece
lema
protocolo
punto
punto
simplicidad
orden
estricta
teniendo
requisitos
definidos
dise√±o
PPP
100
documentos
RFC
definen
distintos
aspectos
protocolo
simple
parecer
demasiados
requisitos
impuestos
dise√±o
PPP
situaci√≥n
realmente
dif√≠cil
especificaciones
dise√±o
PPP
indican
forma
expl√≠cita
funcionalidades
protocolo
PPP
requer√≠a
implementar
Correcci√≥n
errores
requiere
PPP
detecte
errores
bit
requiere
corrija
Control
flujo
espera
receptor
PPP
capaz
recibir
tramas
veloci-
dad
m√°xima
capa
f√≠sica
subyacente
capa
superior
recibir
paquetes
velocidad
m√°xima
responsabilidad
capa
superior
eliminar
paquetes
regular
emisor
capa
superior
lugar
emi-
sor
PPP
regule
velocidad
transmisi√≥n
responsabilidad
protocolo
nivel
superior
regular
velocidad
paquetes
entregados
PPP
trans-
misi√≥n
5.7
PPP
PROTOCOLO
PUNTO
PUNTO
471
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
471‚Ä¢
Secuenciamiento
requiere
PPP
entregue
tramas
receptor
orden
enviadas
emisor
interesante
observar
fle-
xibilidad
compatible
modelo
servicio
IP
permite
paquetes
IP
entregados
terminal
terminal
orden
protocolos
capa
red
operan
PPP
requieren
entrega
paquetes
terminal
terminal
secuencia
Enlaces
multipunto
PPP
necesita
operar
enlaces
√∫nico
emisor
√∫nico
receptor
protocolos
capa
enlace
HDLC
acomodar
receptores
enlace
ejemplo
escenario
tipo
Ethernet
vistos
objetivos
dise√±o
objetivos
PPP
pasemos
cum-
ple
dise√±o
PPP
dichos
objetivos
5.7.1
Trama
datos
PPP
Figura
5.33
muestra
trama
datos
PPP
utiliza
entramado
tipo
HDLC
RFC
1662
trama
PPP
consta
campos
siguientes
Campo
Indicador
tramas
PPP
comienzan
terminan
campo
indicador
byte
cuyo
valor
01111110
Campo
direcci√≥n
√∫nico
valor
campo
11111111
Campo
control
√∫nico
valor
campo
00000011
Puesto
campos
direcci√≥n
control
tomar
valor
fijo
est√©
preguntando
definido
dichos
campos
especificaci√≥n
PPP
RFC
1662
establece
valores
definidos
definido
fecha
valores
toman
valores
fijos
PPP
permite
emisor
enviar
bytes
direcci√≥n
control
ahorrando
bytes
sobre-
carga
trama
PPP
Protocolo
campo
protocolo
indica
receptor
PPP
protocolo
capa
superior
pertenecen
datos
encapsulados
recibidos
contenido
campo
informaci√≥n
trama
PPP
recibir
trama
PPP
receptor
PPP
comprobar√°
trama
correcta
pasar√°
datos
encapsulados
protocolo
apropiado
documentos
RFC
1700
RFC
3232
definen
c√≥digos
protocolo
16
bits
utiliza-
PPP
interesa
protocolo
IP
datos
encapsulados
trama
PPP
forman
datagrama
IP
valor
hexadecimal
21
emplearse
protocolos
capa
red
AppleTalk
valor
29
protocolo
DECnet
valor
27
472
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
01111110
0111111011111111
00000011
Protocolo
Indicador
IndicadorDirecci√≥n
Control
Info
Comprobac
111
Longitud
variable
Figura
5.33
Formato
trama
datos
PPP
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
472‚Ä¢
Informaci√≥n
campo
contiene
paquete
datos
encapsulado
envia-
do
protocolo
capa
superior
ejemplo
IP
enlace
PPP
longi-
tud
m√°xima
predeterminada
campo
1.500
bytes
veremos
valor
cambiarse
configura
enlace
Suma
comprobaci√≥n
campo
suma
comprobaci√≥n
utiliza
detectar
erro-
res
bit
trama
transmitida
emplea
c√≥digo
redundancia
c√≠clica
est√°ndar
HDLC
bytes
Rellenado
bytes
terminar
exposici√≥n
acerca
tramas
PPP
consideremos
problema
surge
protocolo
utiliza
patr√≥n
bits
espec√≠fico
campo
indica-
dor
marcar
principio
trama
ocurre
patr√≥n
indicador
aparece
posici√≥n
paquete
ejemplo
ocurre
valor
campo
indicador
01111110
aparece
campo
informaci√≥n
Detectar√°
receptor
incorrectamente
trama
PPP
forma
resolver
problema
PPP
prohibiera
protocolo
capa
superior
enviara
datos
contuvieran
patr√≥n
bits
campo
indicador
requi-
sito
transparencia
PPP
mencionado
anteriormente
elimina
posibilidad
solu-
ci√≥n
alternativa
emplea
PPP
protocolos
consiste
utilizar
t√©cnica
conocida
rellenado
bytes
PPP
define
byte
especial
escape
control
01111101
secuencia
indica-
dor
01111110
aparece
posici√≥n
trama
campo
indicador
PPP
precede
dicha
aparici√≥n
patr√≥n
indicador
byte
escape
control
rellena
a√±ade
byte
escape
control
flujo
datos
transmitidos
precede
01111110
indicar
011111110
valor
indicador
datos
reales
receptor
ve
secuencia
01111110
precedida
01111101
eliminar√°
byte
escape
control
a√±adido
reconstruir
datos
originales
forma
similar
patr√≥n
bits
byte
escape
control
aparece
datos
reales
deber√°
antepon√©rsele
byte
escape
control
relleno
receptor
ve
√∫nico
byte
escape
control
flujo
datos
byte
a√±adido
flujo
datos
bytes
escape
control
seguidos
quieren
pertenece
datos
originales
enviados
Figura
5.34
ilustra
t√©cnica
relleno
bytes
PPP
Realmente
PPP
aplica
operaci√≥n
XOR
5.7
PPP
PROTOCOLO
PUNTO
PUNTO
473
b5
b4
01111110
b2
b1
b5
b4
01111110
01111
101
b2
b1
b1
b2
01111110
b4
b5
PPP
PPP
Figura
5.34
Rellenado
bytes
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
473el
hexadecimal
20
byte
datos
precede
byte
escape
detalle
omitido
simplificar
exposici√≥n
Debemos
comentar
PPP
Protocolo
control
enlace
LCP
Link
Control
Protocol
cuyo
trabajo
consiste
cabo
inicializaci√≥n
mantenimiento
cierre
enlace
PPP
LCP
estudia
detalle
material
l√≠nea
aso-
ciado
libro
5.8
Virtualizaci√≥n
enlaces
red
capa
enlace
Puesto
cap√≠tulo
relacionado
protocolos
capa
enlace
aproxim√°ndonos
cap√≠tulo
reflexionar
acerca
evolucionado
compresi√≥n
acerca
t√©rmino
enlace
comenzar
cap√≠tulo
contempl√°bamos
enlaces
cables
f√≠sicos
conectaban
hosts
comunica-
ban
ilustraba
Figura
5.2
estudiar
protocolos
acceso
m√∫ltiple
Figura
5.9
visto
pod√≠an
conectarse
hosts
cable
compartido
cable
conectaba
hosts
pod√≠a
espectro
radio
comunicaci√≥n
llev√≥
considerar
enlace
forma
abstracta
canal
cable
estudio
redes
LAN
Ethernet
Figuras
5.26
5.31
visto
medios
interconexi√≥n
pod√≠an
infraestructura
conmutada
compleja
evoluci√≥n
hosts
manten√≠an
visi√≥n
interconexi√≥n
simplemente
canal
capa
enlace
conectaba
hosts
Vimos
ejemplo
host
Ethernet
pod√≠a
afortunadamente
inconsciente
conectado
hosts
LAN
√∫nico
segmento
LAN
corto
alcance
Figura
5.9
LAN
conmutada
geogr√°fi-
camente
dispersa
Figura
5.26
VLAN
Figura
5.31
Secci√≥n
5.7
visto
protocolo
PPP
emplea
conexi√≥n
v√≠a
m√≥dem
hosts
caso
enlace
conecta
hosts
realmente
red
telef√≥nica
red
global
telecomunicaciones
l√≥gicamente
separada
conmutadores
enlaces
pilas
protocolos
transferencia
datos
se√±alizaci√≥n
punto
vista
capa
enlace
Internet
conexi√≥n
acceso
telef√≥nico
red
telefon√≠a
contemplada
sim-
ple
cable
sentido
Internet
virtualiza
red
telef√≥nica
vi√©ndola
tecnolo-
g√≠a
capa
enlace
proporciona
conectividad
dicha
capa
hosts
Internet
Recordemos
an√°lisis
redes
solapadas
Cap√≠tulo
forma
similar
redes
solapadas
ven
Internet
proporcionar
conectividad
nodos
solapados
buscando
solapamiento
Internet
Internet
solapa
red
telef√≥nica
secci√≥n
abordar
redes
Conmutaci√≥n
etiquetas
multiprotocolo
MPLS
Multiprotocol
Label
Switching
diferencia
red
telef√≥nica
conmutaci√≥n
circuitos
MPLS
red
circuitos
virtuales
conmutaci√≥n
paquetes
ple-
derecho
formatos
paquete
comportamientos
reenv√≠o
punto
vista
pedag√≥gico
an√°lisis
MPLS
encaja
estudio
capa
red
capa
enlace
punto
vista
Internet
pode-
mos
considerar
MPLS
red
telef√≥nica
redes
Ethernet
conmutadas
474
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
474una
tecnolog√≠a
capa
enlace
sirve
interconectar
dispositivos
IP
incluido
MPLS
estudio
capa
enlace
redes
Frame-Relay
ATM
emplearse
interconectar
dispositivos
IP
representan
tecnolog√≠a
antigua
implantaci√≥n
cubrire-
mos
redes
detalles
libro
Goralski
1999
trata-
miento
MPLS
necesariamente
escribirse
escrito
libros
completos
redes
recomendamos
lea
Davie
2000
detalles
MPLS
centraremos
principalmente
ser-
vidores
MPLS
interconectan
dispositivos
IP
profundizaremos
tecnolog√≠as
subyacentes
Conmutaci√≥n
etiquetas
multiprotocolo
MPLS
conmutaci√≥n
etiquetas
multiprotocolo
MPLS
evolucionado
serie
desarrollos
industriales
tuvieron
lugar
mediados
finales
d√©cada
1990
buscaban
mejorar
velocidad
reenv√≠o
routers
IP
adoptando
concepto
clave
mundo
redes
circuitos
virtuales
etiqueta
longitud
fija
objetivo
abandonar
infraestructura
reenv√≠o
datagramas
IP
basada
destino
sustitu-
y√©ndola
basada
etiquetas
longitud
fija
circuitos
virtuales
expandir
infraestructura
existente
etiquetando
selectivamente
datagramas
permitiendo
rou-
ters
reenviar
datagramas
bas√°ndose
etiquetas
longitud
fija
lugar
direc-
ciones
IP
destino
importante
observar
t√©cnicas
funcionan
mano
mano
IP
utilizando
direccionamiento
enrutamiento
IP
IETF
unific√≥
esfuerzos
protocolo
MPLS
RFC
3031
RFC
3032
consiguiendo
mezclar
forma
efectiva
t√©cnicas
circuitos
virtuales
red
datagramas
enrutados
Comencemos
estudio
MPLS
considerando
formato
trama
capa
enlace
gestionada
router
compatible
MPLS
Figura
5.35
muestra
trama
capa
enlace
transmitida
enlace
PPP
red
LAN
ejemplo
Ethernet
cabecera
MPLS
peque√±a
a√±ade
cabecera
capa
PPP
Ethernet
cabecera
capa
IP
documento
RFC
3032
define
formato
cabecera
MPLS
tales
enlaces
RFC
definen
cabeceras
redes
ATM
Frame-Relay
campos
cabecera
MPLS
encuentran
etiqueta
desempe√±a
papel
identificador
circuito
virtual
visto
Secci√≥n
4.2.1
bits
reservados
experimental
√∫nico
bit
utiliza
indicar
serie
cabeceras
MPLS
apiladas
tema
avanzado
hablaremos
campo
tiempo
vida
5.8
VIRTUALIZACI√ìN
ENLACES
RED
CAPA
ENLACE
475
Cabecera
PPP
Ethernet
Cabecera
MPLS
Cabecera
IP
Resto
trama
capa
enlace
Etiqueta
Exp
TTL
Figura
5.35
Cabecera
MPLS
localiza
cabeceras
capa
enlace
capa
red
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
475Es
evidente
inmediata
Figura
5.35
trama
ampliada
MPLS
intercambiarse
routers
compatibles
MPLS
router
compatible
MPLS
quedar√≠a
confundido
encontrar
cabecera
MPLS
esperaba
encontrar
cabecera
IP
routers
compatibles
MPLS
suelen
denominar
routers
conmutaci√≥n
etiquetas
reenv√≠an
tramas
MPLS
bus-
cando
etiqueta
MPLS
tabla
reenv√≠o
pasando
inmediatamente
data-
grama
interfaz
salida
apropiada
router
compatible
MPLS
necesita
extraer
direcci√≥n
IP
destino
b√∫squeda
prefijo
coinci-
dencia
larga
tabla
reenv√≠o
router
vecino
compatible
MPLS
etiqueta
asociar
direcci√≥n
IP
destino
indi-
responder
preguntas
necesitamos
examinar
interacci√≥n
grupo
routers
compatibles
MPLS
ejemplo
Figura
5.36
routers
R1
R4
compatibles
MPLS
routers
R5
R6
routers
IP
est√°ndar
R1
anunciado
R2
R3
enrutar
destino
trama
recibida
etiqueta
MPLS
reenviada
destino
A.
router
R3
anunciado
router
R4
enrutamiento
destinos
tramas
entrantes
etiquetas
MPLS
valor
10
12
respectivamente
conmutadas
destinos
router
R2
anunciado
router
R4
alcanzar
destino
trama
recibida
etiqueta
MPLS
valor
conmutada
A.
Observe
router
R4
intere-
sante
situaci√≥n
rutas
MPLS
llegar
interfaz
etiqueta
MPLS
saliente
10
interfaz
etiqueta
MPLS
cuadro
general
estructura
red
mostrada
Figura
5.36
dispositivos
IP
R5
R6
Ay
MPLS
R1
R2
R3
R4
forma
similar
conectarse
diver-
sos
dispositivos
IP
red
ATM
LAN
conmutada
sucede
476
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
R4
etiqueta
entrada
etiqueta
salida
10
12
destino
interfaz
salida
R6
R5
R3
R2
00
11
R1
etiqueta
entrada
etiqueta
salida
10
12
destino
interfaz
salida
etiqueta
entrada
etiqueta
salida
06
destino
interfaz
salida
etiqueta
entrada
etiqueta
salida
6A
08
destino
interfaz
salida
Figura
5.36
Reenv√≠o
mejorado
MPLS
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
476una
red
ATM
LAN
conmutada
routers
R1
R4
compatibles
MPLS
encar-
gan
conmutaci√≥n
siquiera
tocar
cabecera
IP
paquetes
exposici√≥n
especificado
protocolo
concreto
uti-
liza
distribuir
etiquetas
routers
compatibles
MPLS
detalles
tipo
se√±alizaci√≥n
caen
alcance
libro
dejar
constancia
grupo
trabajo
IETF
dedicado
MPLS
especificado
RFC
3468
centro
esfuerzos
campo
se√±alizaci√≥n
MPLS
extensi√≥n
protocolo
RSVP
estudiaremos
Cap√≠tulo
conocida
RSVP-
RFC
3209
lector
interesado
consultar
documento
RFC
3209
√©nfasis
estudio
MPLS
centrado
MPLS
realiza
conmutaci√≥n
bas√°ndose
etiquetas
necesidad
considerar
direcci√≥n
IP
paquete
verdaderas
ventajas
MPLS
raz√≥n
actual
inter√©s
tipo
tecnolog√≠a
radica
potenciales
aumentos
veloci-
dades
conmutaci√≥n
capacidades
gesti√≥n
tr√°fico
MPLS
posibilita
indicado
R4
dispone
rutas
MPLS
A.
reenv√≠o
realizara
capa
IP
bas√°ndose
direcci√≥n
IP
protocolos
enrutamiento
IP
estudiado
Cap√≠tulo
especificar√≠an
√∫nica
ruta
coste
m√≠nimo
A.
MPLS
proporciona
capacidad
reenviar
paque-
tes
rutas
ser√≠an
posibles
utilizando
protocolos
enrutamiento
IP
est√°ndar
tipo
simple
ingenier√≠a
tr√°ficoutilizando
MPLS
RFC
3346
RFC
3272
RFC
2702
Xiao
2000
operador
red
anular
enruta-
miento
IP
normal
forzar
tr√°fico
dirigido
destino
tome
determinada
ruta
resto
tr√°fico
dirigido
destino
ruta
distinta
razones
pol√≠tica
rendimiento
tipo
utilizar
MPLS
prop√≥sitos
emplearse
cabo
restauraci√≥n
r√°pida
rutas
reenv√≠o
MPLS
ejemplo
volver
enrutar
tr√°fico
ruta
reserva
precalculada
respuesta
fallo
enlace
Kar
2000
Huang
2002
RFC
3469
MPLS
emplear
implementar
marco
trabajo
servicio
diferenciado
estudiaremos
Cap√≠-
tulo
digamos
MPLS
utilizarse
utilizado
implementar
denominadas
redes
privadas
virtuales
VPN
Virtual
Private
Network
implementar
VPN
cliente
ISP
utiliza
red
compatible
MPLS
conectar
diversas
redes
cliente
MPLS
emplearse
aislar
recursos
direccionamiento
empleados
VPN
cliente
usuarios
tengan
atravesar
red
ISP
consulte
DeClercq
2002
detalles
exposici√≥n
acerca
MPLS
necesariamente
animamos
lector
consultar
referencias
mencionadas
destacar
tantos
posibles
usos
MPLS
protocolo
convirti√©ndose
r√°pidamente
navaja
multiusos
ingenier√≠a
tr√°fico
Internet
5.9
vida
solicitud
p√°gina
web
cubierto
tema
capa
enlace
cap√≠tulo
capas
red
transporte
aplicaci√≥n
anteriores
viaje
descenso
pila
protocolos
completo
principio
libro
Secci√≥n
1.1
dec√≠amos
5.9
VIDA
SOLICITUD
P√ÅGINA
WEB
477
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
477parte
libro
relacionada
protocolos
redes
computadoras
cap√≠tulo
visto
zambullirnos
cap√≠tulos
tem√°ticos
libro
conviene
finalizar
viaje
descendente
pila
protocolos
adoptando
vista
integrada
hol√≠stica
protocolos
estudiado
momento
forma
adoptar
vista
panor√°mica
con-
siste
identificar
much√≠simos
protocolos
implicados
satisfacer
simple
solicitudes
descarga
p√°gina
web
Figura
5.37
ilustra
escenario
trabajo
estudiante
Benito
conecta
computadora
por-
t√°til
conmutador
Ethernet
facultad
descarga
p√°gina
web
ejemplo
p√°gina
principal
www.google.com
cosas
suceden
bambalinas
satisfacer
solicitud
aparentemente
simple
pr√°c-
tica
laboratorio
Wireshark
incluida
cap√≠tulo
permitir√°
examinar
detalle
serie
archivos
traza
contienen
paquetes
implica-
escenarios
similares
Inicio
DHCP
UDP
IP
Ethernet
Supongamos
Benito
arranca
computadora
port√°til
conecta
cable
Ethernet
conectado
conmutador
Ethernet
facultad
conectado
router
facultad
muestra
Figura
5.37
router
facultad
conec-
tado
ISP
caso
llama
comcast.net
ejemplo
comcast.net
propor-
ciona
servicio
DNS
facultad
servidor
DNS
reside
red
comcast
lugar
red
facultad
Supondremos
servidor
DHCP
eje-
cut√°ndose
router
suele
caso
478
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
00:22:6B:45:1F:1B
68.85.2.1
00:16
D3:23:68:8A
68.85.2.101
comcast.net
servidor
DNS
68.87.71.226
www.google.com
servidor
web
64.233.169.105
Red
Facultad
68.80.2.0/24
Red
Comcast
68.80.0.0/13
Red
Google
64.233.160.0/19
1‚Äì7
8‚Äì13
18‚Äì24
14‚Äì17
Figura
5.37
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
478Cuando
Benito
conecta
port√°til
red
ejemplo
descargar
p√°gina
web
direcci√≥n
IP
acci√≥n
rela-
cionada
red
cabo
computadora
port√°til
Benito
ejecutar
proto-
colo
DHCP
obtener
direcci√≥n
IP
informaciones
servidor
DHCP
local
sistema
operativo
port√°til
Benito
crea
mensaje
solicitud
DHCP
Sec-
ci√≥n
4.4.2
incluye
segmento
UDP
Secci√≥n
3.3
puerto
destino
67
servidor
DHCP
puerto
origen
68
cliente
DHCP
continuaci√≥n
segmento
UDP
insertado
datagrama
IP
Secci√≥n
4.4.1
direcci√≥n
IP
destino
difusi√≥n
255.255.255.255
direcci√≥n
IP
origen
0.0.0.0
computadora
port√°til
Benito
direcci√≥n
IP
datagrama
IP
contiene
mensaje
solicitud
DHCP
inserta
trama
Ethernet
Secci√≥n
5.5.1
trama
Ethernet
direcci√≥n
MAC
des-
tino
FF
FF
FF
FF
FF
FF
trama
difundida
dispo-
sitivos
conectados
conmutador
cabe
esperar
encuentre
servidor
DHCP
direcci√≥n
MAC
origen
trama
computadora
por-
t√°til
Benito
00:16
D3:23:68:8A.
trama
Ethernet
difusi√≥n
contiene
solicitud
DHCP
trama
enviada
computadora
Benito
conmutador
Ethernet
conmutador
difunde
trama
entrante
puertos
salida
incluyendo
puerto
conectado
rou-
ter
router
recibe
trama
Ethernet
difusi√≥n
contiene
solicitud
DHCP
interfaz
direcci√≥n
MAC
00:22:6B:45:1F:1B
extrayendo
datagrama
IP
trama
Ethernet
direcci√≥n
IP
destino
difusi√≥n
contenida
data-
grama
indica
datagrama
IP
procesado
protocolos
capa
superior
existentes
nodo
demultiplexa
Secci√≥n
3.2
carga
√∫til
datagrama
segmento
UDP
entrega
carga
√∫til
UDP
extrae
segmento
UDP
mensaje
solicitud
DHCP
servidor
DHCP
dispone
mensaje
solicitud
DHCP
Supongamos
servidor
DHCP
ejecutando
router
asignar
direcciones
IP
bloque
CIDR
Secci√≥n
4.4.2
68.85.2.0/24
ejemplo
direcciones
IP
utilizadas
Facultad
encuentran
bloque
direcciones
Comcast
Supongamos
servidor
DHCP
asigna
direcci√≥n
68.85.2.101
port√°til
Benito
servidor
DHCP
crear√°
mensaje
ACK
DHCP
Secci√≥n
4.4.2
contendr√°
direcci√≥n
IP
direcci√≥n
IP
servidor
DNS
68.87.71.226
direcci√≥n
IP
router
pasarela
predeterminado
68.85.2.1
bloque
subred
68.85.2.0/24
m√°scara
red
mensaje
DHCP
inserta
segmento
UDP
incluye
datagrama
IP
inserta
trama
Ethernet
trama
Ethernet
direcci√≥n
MAC
origen
interfaz
router
red
dom√©s-
tica
00:22:6B:45:1F:1B
direcci√≥n
MAC
destino
com-
putadora
port√°til
Benito
00:16
D3:23:68:8A
trama
Ethernet
contiene
respuesta
ACK
DHCP
env√≠a
unidifusi√≥n
router
conmutador
Puesto
conmutador
caracter√≠stica
auto-
aprendizaje
Secci√≥n
5.6.2
recibido
anteriormente
trama
Ethernet
5.9
VIDA
SOLICITUD
P√ÅGINA
WEB
479
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
479conten√≠a
solicitud
DHCP
port√°til
Benito
conmutador
reenviar
trama
dirigida
00:16
D3:23:68:8A
√∫nicamente
puerto
salida
con-
duce
port√°til
Benito
computadora
port√°til
Benito
recibe
trama
Ethernet
contiene
respuesta
ACK
DHCP
extrae
datagrama
IP
trama
Ethernet
extrae
segmento
UDP
datagrama
IP
extrae
mensaje
ACK
DHCP
segmento
UDP
continuaci√≥n
cliente
DHCP
Benito
anota
direcci√≥n
IP
direcci√≥n
IP
servidor
DNS
instala
direcci√≥n
router
pasarela
predeterminado
tabla
reen-
v√≠o
IP(Secci√≥n
4.1
port√°til
Benito
enviar√°
router
pasarela
predeter-
minado
datagramas
cuya
direcci√≥n
destino
caiga
subred
68.85.2.0/24
Llegados
punto
computadora
port√°til
Benito
inicializado
componentes
red
lista
iniciar
procesamiento
extracci√≥n
p√°gina
web
Observe
necesarios
pasos
DHCP
cua-
tro
presentados
Cap√≠tulo
Seguimos
inicio
DNS
ARP
Cuado
Benito
escribe
direcci√≥n
URL
correspondiente
www.google.com
navega-
dor
web
comienza
larga
cadena
sucesos
terminar√°
muestre
p√°gina
inicio
Google
navegador
web
navegador
Benito
comienza
creando
socket
TCP
Secci√≥n
2.7
utilizar√°
enviar
solicitud
HTTP
Secci√≥n
2.2
www.google.com
crear
socket
computadora
port√°til
Benito
necesita
direcci√≥n
IP
www.google.com
Secci√≥n
2.5
visto
utiliza
protocolo
DNS
proporcionar
servicio
traducci√≥n
nombres
direcciones
IP
sistema
operativo
computadora
Benito
crea
mensaje
con-
sulta
DNS
Secci√≥n
2.5.3
incluyendo
cadena
www.google.com
secci√≥n
consulta
mensaje
DNS
mensaje
DNS
inserta
seg-
mento
UDP
puerto
destino
53
servidor
DNS
segmento
UDP
inserta
datagrama
IP
direcci√≥n
IP
destino
68.87.71.226
direcci√≥n
servidor
DNS
devuelta
mensaje
ACK
DHCP
Paso
direcci√≥n
IP
origen
68.85.2.101
computadora
port√°til
Benito
inserta
datagrama
contiene
men-
saje
consulta
DNS
trama
Ethernet
trama
enviada
direccio-
capa
enlace
router
pasarela
red
facultad
Benito
port√°til
Benito
conoce
direcci√≥n
IP
router
pasarela
facultad
68.85.2.1
gracias
mensaje
ACK
DHCP
Paso
direcci√≥n
MAC
router
pasarela
obtener
direcci√≥n
MAC
router
pasarela
port√°til
Benito
necesita
utilizar
protocolo
ARP(Secci√≥n
5.4.2
10
computadora
port√°til
Benito
crea
mensaje
consulta
ARP
direcci√≥n
IP
destino
68.85.2.1
router
pasarela
predeterminado
incluye
men-
saje
ARP
trama
Ethernet
direcci√≥n
destino
difusi√≥n
FF
FF
FF
FF
FF
FF
env√≠a
trama
Ethernet
conmutador
entrega
trama
dispositivos
conectados
incluyendo
router
pasarela
11
router
pasarela
recibe
trama
contiene
mensaje
solicitud
ARP
interfaz
red
facultad
direcci√≥n
IP
destino
480
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
48068.85.2.1
contenida
mensaje
ARP
coincide
direcci√≥n
IP
inter-
faz
router
pasarela
prepara
consecuencia
respuesta
ARP
indicando
direcci√≥n
MAC
00:22:6B:45:1F:1B
corresponde
direcci√≥n
IP
68.85.2.1
continuaci√≥n
inserta
mensaje
respuesta
ARP
trama
Ethernet
direc-
ci√≥n
destino
00:16
D3:23:68:8A
computadora
port√°til
Benito
env√≠a
trama
conmutador
entrega
port√°til
Benito
12
port√°til
Benito
recibe
trama
contiene
mensaje
respuesta
ARP
extrae
direcci√≥n
MAC
router
pasarela
00:22:6B:45:1F:1B
mensaje
13
computadora
port√°til
Benito
finalmente
dirigir
trama
Ethernet
contiene
consulta
DNS
direcci√≥n
MAC
router
pasarela
Observe
datagrama
IP
trama
direcci√≥n
IP
destino
68.87.71.226
ser-
vidor
DNS
trama
direcci√≥n
destino
00:22:6B:45:1F:1B
router
pasarela
port√°til
Benito
env√≠a
trama
conmutador
entrega
router
pasarela
Seguimos
inicio
enrutamiento
dominio
servidor
DNS
14
router
pasarela
recibe
trama
extrae
datagrama
IP
contiene
consulta
DNS
router
busca
direcci√≥n
destino
datagrama
68.87.71.226
deter-
mina
tabla
reenv√≠o
datagrama
enviarse
router
situado
izquierda
red
Comcast
Figura
5.37
datagrama
IP
inserta
trama
capa
enlace
resulte
apropiada
enlace
conecta
router
facultad
router
Comcast
situado
izquierda
des-
pu√©s
trama
env√≠a
enlace
15
router
situado
izquierda
red
Comcast
recibe
trama
extrae
datagrama
IP
examina
direcci√≥n
destino
datagrama
68.87.71.226
deter-
mina
gracias
tabla
reenv√≠o
interfaz
salida
reenviar
datagrama
servidor
DNS
tabla
reenv√≠o
previamente
relle-
protocolo
interno
dominio
Comcast
ejemplo
RIP
OSPF
IS-IS
Secci√≥n
4.6
protocolo
dominios
Internet
BGP
16
Finalmente
datagrama
IP
contiene
consulta
DNS
terminar√°
llegar
servi-
dor
DNS
extrae
mensaje
consulta
DNS
busca
nombre
www.google
com
base
datos
DNS
Secci√≥n
2.5
registro
recurso
DNS
contiene
direcci√≥n
IP
64.233.169.105
www.google.com
suponiendo
direcci√≥n
est√©
actualmente
almacenada
cach√©
servidor
DNS
Recuerde
datos
cach√©
origen
servidor
DNS
autoritativo
Secci√≥n
2.5.2
correspondiente
google.com
servidor
DNS
compondr√°
mensaje
respuesta
DNS
correspondencia
nombre
host
direcci√≥n
IP
inserta
mensaje
respuesta
DNS
segmento
UDP
inserta
segmento
datagrama
IP
dirigido
computadora
port√°til
Benito
68.85.2.101
datagrama
reenviado
vuelta
red
Comcast
router
facultad
conmutador
Ethernet
computadora
Benito
17
computadora
port√°til
Benito
extrae
direcci√≥n
IP
servidor
www.google.com
mensaje
DNS
Finalmente
mont√≥n
trabajo
computadora
port√°-
til
Benito
lista
contactar
servidor
www.google.com
5.9
VIDA
SOLICITUD
P√ÅGINA
WEB
481
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
481Interacci√≥n
web
cliente-servidor
TCP
HTTP
18
port√°til
Benito
dispone
direcci√≥n
IP
www
google.com
crear
socket
TCP
Secci√≥n
2.7
utilizar√°
enviar
mensaje
GET
HTTP
Secci√≥n
2.2.3
www.google.com
Benito
crea
socket
TCP
protocolo
TCP
port√°til
cabo
proceso
fases
Secci√≥n
3.5.6
TCP
www.google.com
port√°til
Benito
crear√°
segmento
SYN
TCP
puerto
destino
80
HTTP
insertar√°
segmento
TCP
datagrama
IP
direcci√≥n
destino
IP
64.233.169.105
www.google.com
incluir√°
datagrama
trama
direcci√≥n
MAC
destino
00:22:6B:45:1F:1B
router
pasarela
enviar√°
trama
conmutador
19
routers
red
facultad
red
Comcast
red
Google
reenv√≠an
datagrama
contiene
segmento
SYN
TCP
www.google.com
utilizando
tabla
reenv√≠o
router
suced√≠a
pasos
14‚Äì16
anteriores
Recuerde
entradas
tablas
reenv√≠o
routers
gobiernan
reenv√≠o
paquetes
enlace
dominios
redes
Comcast
Google
determinadas
protocolo
BGP
Secci√≥n
4.6.3
20
momento
datagrama
contiene
segmento
SYN
TCP
llegar√°
www.google.com
mensaje
SYN
TCP
extra√≠do
datagrama
demultiplexado
entregado
socket
acogida
asociado
puerto
80
crea
socket
conexi√≥n
Secci√≥n
2.7
conexi√≥n
TCP
servidor
HTTP
Goo-
gle
computadora
port√°til
Benito
genera
segmento
SYNACK
TCP
Secci√≥n
3.5.6
inserta
datagrama
dirigido
port√°til
Benito
final-
mente
inserta
datagrama
trama
capa
enlace
resulte
apropiada
enlace
conecta
www.google.com
router
salto
21
datagrama
contiene
segmento
SYNACK
TCP
reenv√≠a
redes
Google
Comcast
facultad
terminando
llegar
tarjeta
Ethernet
port√°til
Benito
datagrama
demultiplexado
sistema
operativo
entregado
socket
TCP
creado
Paso
18
entrar√°
conectado
22
socket
port√°til
Benito
finalmente
listo
enviar
bytes
www.google.com
navegador
Benito
crea
mensaje
GET
HTTP
Secci√≥n
2.2.3
contiene
URL
extraer
mensaje
GET
HTTP
escribe
socket
pasa
carga
√∫til
segmento
TCP
segmento
TCP
incluye
datagrama
env√≠a
entrega
www.google.com
Pasos
18‚Äì20
23
servidor
HTTP
www.google.com
lee
mensaje
GET
HTTP
socket
TCP
crea
mensaje
respuesta
HTTP
Secci√≥n
2.2
inserta
contenido
p√°gina
web
solicitada
cuerpo
mensaje
respuesta
HTTP
env√≠a
mensaje
socket
TCP
24
datagrama
contiene
mensaje
respuesta
HTTP
reenv√≠a
redes
Google
Comcast
facultad
llega
computadora
port√°til
Benito
navegador
web
Benito
lee
respuesta
HTTP
socket
extrae
c√≥digo
HTML
correspondiente
p√°gina
web
cuerpo
respuesta
HTTP
finalmente
finalmente
muestra
p√°gina
web
escenario
descrito
cubre
cantidad
aspectos
comunicaci√≥n
red
comprendido
ejemplo
avanzado
482
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
482mucho
leyera
Secci√≥n
1.1
dec√≠amos
libro
protocolos
redes
computadoras
momento
posible-
mente
preguntando
protocolo
ejemplo
parecer
detallado
omitido
posibles
protocolos
adicionales
ejem-
plo
NAT
ejecut√°ndose
router
pasarela
facultad
acceso
inal√°mbrico
dicha
red
protocolos
seguridad
acceso
red
cifrar
segmentos
datagramas
protocolos
gesti√≥n
red
diversas
consideraciones
adicionales
almace-
namiento
cach√©
web
jerarqu√≠a
DNS
encontrar
red
Internet
p√∫blica
Hablaremos
temas
libro
cabe
recalcar
ejemplo
visi√≥n
integrada
hol√≠stica
refleja
componentes
esenciales
protocolos
estudiado
libro
ejemplo
pretend√≠a
centrarse
desea
visi√≥n
amplia
reflexiva
dise√±o
protocolos
red
general
consulte
Clark
1988
RFC
5218
5.10
Resumen
cap√≠tulo
examinado
capa
enlace
servicios
principios
sub-
yacen
funcionamiento
serie
protocolos
espec√≠ficos
importantes
utilizan
principios
hora
implementar
servicios
capa
enlace
visto
servicio
b√°sico
capa
enlace
consiste
mover
datagrama
capa
red
nodo
router
host
nodo
adyacente
visto
protocolos
capa
enlace
operan
encapsulando
datagrama
capa
red
trama
capa
enlace
transmitir
trama
enlace
existente
nodo
adyacente
yendo
all√°
funci√≥n
com√∫n
entramado
estudiado
protocolos
capa
enlace
proporcionan
servicios
distintos
acceso
enlace
entrega
fiabilidad
detecci√≥n/
correcci√≥n
errores
control
flujo
transmisi√≥n
ejemplo
full-duplex
frente
semi-
duplex
diferencias
amplia
variedad
tipos
enlace
operar
protocolos
capa
enlace
simple
enlace
punto
punto
√∫nico
emisor
√∫nico
receptor
comunican
√∫nico
cable
enla-
ces
acceso
m√∫ltiple
compartidos
emisores
receptores
consecuencia
protocolo
capa
enlace
canal
acceso
m√∫ltiple
dispone
protocolo
protocolo
acceso
m√∫ltiple
coordinaci√≥n
acceso
enlace
caso
MPLS
enlace
conecta
nodos
adyacentes
ejemplo
routers
IP
adyacentes
sentido
IP
routers
IP
salto
determinado
destino
realidad
red
sen-
tido
idea
red
considerada
enlace
deber√≠a
resultar
extra√±a
enlace
telef√≥nico
conecta
computadora
m√≥dem
dom√©stico
m√≥dem
router
remoto
ejemplo
realidad
ruta
pasa
sofisticada
compleja
red
telef√≥nica
principios
subyacen
comunicaci√≥n
capa
enlace
exa-
minado
t√©cnicas
detecci√≥n
correcci√≥n
errores
protocolos
acceso
m√∫ltiple
direccionamiento
capa
enlace
virtualizaci√≥n
redes
VLAN
construcci√≥n
redes
LAN
ampliadas
concentradores
conmutadores
caso
detec-
ci√≥n
correcci√≥n
errores
examinado
a√±adir
bits
adicionales
RESUMEN
483
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
483cabecera
trama
detectar
casos
corregir
errores
inver-
si√≥n
bit
puedan
producirse
transmitir
trama
enlace
anali-
zado
esquemas
simples
paridad
suma
comprobaci√≥n
c√≥digos
redundancia
c√≠clica
robustos
analizar
tema
protoco-
acceso
m√∫ltiple
identificado
estudiado
enfoques
generales
coor-
dinaci√≥n
acceso
canal
difusi√≥n
t√©cnicas
particionamiento
canal
TDM
FDM
t√©cnicas
acceso
aleatorio
protocolos
ALOHA
CSMA
t√©cnicas
toma
turnos
sondeo
paso
testigo
visto
consecuencia
m√∫l-
tiples
nodos
compartan
√∫nico
canal
difusi√≥n
necesidad
proporcionar
direc-
ciones
nodo
capa
enlace
estudiado
direcciones
f√≠sicas
distintas
direcciones
capa
red
caso
Internet
utiliza
pro-
tocolo
especial
ARP
Protocolo
resoluci√≥n
direcciones
traducir
tipos
direccionamiento
examinado
nodos
comparten
canal
difusi√≥n
forman
red
LAN
conectarse
redes
LAN
formar
redes
LAN
tama√±o
intervenci√≥n
enruta-
miento
capa
red
interconectar
nodos
locales
cubierto
detalle
serie
protocolos
espec√≠ficos
capa
enlace
Ethernet
PPP
terminado
estudio
capa
enlace
centr√°ndonos
redes
MPLS
proporcionan
servicios
capa
enlace
inter-conectan
routers
IP
concluido
cap√≠tulo
cap√≠tulos
identifi-
cando
protocolos
necesarios
acceder
simple
p√°gina
web
Habiendo
cubierto
capa
enlace
concluido
viaje
descendente
pila
proto-
colos
Verdaderamente
capa
f√≠sica
capa
enlace
datos
dejar
detalles
capa
f√≠sica
curso
ejemplo
curso
teor√≠a
comunicaci√≥n
redes
computadoras
obstante
tocado
aspectos
capa
f√≠sica
cap√≠tulo
Cap√≠tulo
exposici√≥n
acerca
medios
f√≠sicos
Secci√≥n
1.2
Consideraremos
capa
f√≠sica
estudiemos
caracter√≠sticas
enlaces
inal√°mbricos
cap√≠tulo
viaje
pila
protocolos
concluido
estudio
redes
computadoras
terminado
siguientes
cap√≠tulos
ocuparemos
redes
inal√°mbricas
redes
multimedia
seguridad
red
gesti√≥n
red
temas
encajan
natural
capas
conocemos
cruza
distintas
capas
Comprender
temas
califican
temas
avanzados
libros
texto
requiere
s√≥lido
conocimiento
capas
pila
protocolos
conocimiento
estudio
capa
enlace
datos
permitido
terminar
adquirir
Problemas
cuestiones
repaso
Cap√≠tulo
Cuestiones
repaso
SECCIONES
5.1‚Äì5.2
R1
Considere
analog√≠a
transportes
Secci√≥n
5.1.1
pasajero
an√°logo
datagrama
an√°logo
trama
capa
enlace
484
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
484R2
enlaces
Internet
tuvieran
proporcionar
servicio
entrega
fia-
ble
servicio
entrega
fiable
TCP
redundante
R3
posibles
servicios
ofrecer
protocolo
capa
enlace
capa
red
servicios
capa
enlace
servicios
correspondientes
IP
TCP
SECCI√ìN
5.3
R4
Suponga
nodos
comienzan
transmitir
tiempo
paquete
longi-
tud
canal
difusi√≥n
velocidad
R.
retardo
propagaci√≥n
nodos
dprop
producir√°
colisi√≥n
dprop
/R
R5
Secci√≥n
5.3
enumerado
caracter√≠sticas
deseables
canal
difusi√≥n
caracter√≠sticas
presenta
protocolo
ALOHA
particio-
nes
caracter√≠sticas
presentan
protocolos
paso
testigo
R6
Describa
protocolos
sondeo
paso
testigo
utilizando
analog√≠a
interacciones
personas
asisten
coctel
R7
protocolo
token-ring
resulta
ineficiente
red
LAN
per√≠metro
SECCI√ìN
5.4
R8
tama√±o
espacio
direcciones
MAC
espacio
direcciones
IPv4
espacio
direcciones
IPv6
R9
Suponga
nodos
conectados
red
LAN
difusi√≥n
adaptadores
env√≠a
miles
datagramas
IP
trama
encapsula
dirigida
direcci√≥n
MAC
procesar√°
adaptador
tramas
caso
afirmativo
pasar√°
adaptador
datagramas
IP
dichas
tramas
capa
red
variar√≠a
respuesta
env√≠a
tramas
direcci√≥n
MAC
difusi√≥n
R10
consultas
ARP
env√≠an
trama
difusi√≥n
res-
puesta
ARP
env√≠a
trama
direcci√≥n
MAC
destino
espec√≠-
fica
R11
red
Figura
5.19
router
m√≥dulos
ARP
tabla
ARP
direcci√≥n
MAC
aparezca
ambas
tablas
SECCI√ìN
5.5
R12
Compare
estructuras
trama
Ethernet
10BASE-T
100BASE-T
Gigabit
diferencian
R13
Suponga
adaptador
10
Mbps
env√≠a
canal
flujo
infinito
1s
utilizando
codificaci√≥n
Manchester
transiciones
se√±al
salida
adaptador
R14
CSMA
CD
quinta
colisi√≥n
probabilidad
nodo
seleccione
segundos
retardo
corresponde
resultado
red
Ethernet
10
Mbps
PROBLEMAS
CUESTIONES
REPASO
485
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
485SECCI√ìN
5.6
R15
Considere
Figura
5.26
subredes
sentido
direccionamiento
explicado
Secci√≥n
4.4
SECCI√ìN
5.7
R16
n√∫mero
m√°ximo
redes
VLAN
configurarse
conmuta-
dor
soporta
protocolo
802.1Q
R17
Suponga
conectar
conmutadores
soporte
grupos
VLAN
protocolo
enlace
troncal
trunking
puertos
necesarios
conectar
conmutadores
Justifique
respuesta
Problemas
P1
Suponga
contenido
informaci√≥n
paquete
patr√≥n
bits
1110
1011
1001
1101
utilizando
esquema
paridad
par
valor
campo
contiene
bits
paridad
caso
esquema
paridad
bidi-
mensional
respuesta
utilice
campo
suma
comproba-
ci√≥n
longitud
m√≠nima
P2
Demuestre
proporcionando
ejemplo
distinto
Figura
5.6
c√≥digos
paridad
bidimensional
permiten
corregir
detectar
√∫nico
error
bit
Indique
proporcionando
ejemplo
error
doble
bit
detectado
corregido
P3
Suponga
informaci√≥n
paquete
Figura
5.4
contiene
10
bytes
compuestos
representaci√≥n
c√≥digo
ASCII
binario
signo
bits
cadena
caracteres
Link
Layer
capa
enlace
Calcule
suma
comproba-
ci√≥n
Internet
datos
P4
Considere
problema
suponga
10
bytes
contienen
a.
representaci√≥n
binaria
n√∫meros
10
b.
representaci√≥n
ASCII
letras
may√∫sculas
c.
representaci√≥n
ASCII
letras
min√∫sculas
Calcule
suma
comprobaci√≥n
Internet
datos
P5
Considere
generador
bits
10011
suponga
valor
1010101010
valor
P6
Considere
problema
suponga
valor
a.
1001000101
b.
1010001111
c.
0101010101
P7
problema
explorar
propiedades
c√≥digo
CRC
generador
1001
Secci√≥n
5.2.3
responda
siguientes
cuestiones
a.
detectar
error
simple
bit
datos
486
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
486b
generador
detectar
n√∫mero
impar
errores
bit
P8
Secci√≥n
5.3
proporcionado
esbozo
c√°lculo
eficiencia
pro-
tocolo
ALOHA
particiones
problema
completar
c√°lculo
a.
Recuerde
nodos
activos
eficiencia
ALOHA
particiones
Np(1
p)N‚Äì1
Calcule
valor
maximiza
expresi√≥n
b.
Utilizando
valor
determinado
apartado
calcule
eficiencia
protocolo
ALOHA
particiones
tienda
infinito
Sugerencia
N)N
tiende
tiende
infinito
P9
Demuestre
eficiencia
m√°xima
protocolo
ALOHA
puro
1/(2
Nota
problema
sencillo
completado
problema
P10
Considere
nodos
utilizan
protocolo
ALOHA
particiones
competir
canal
Suponga
nodo
datos
transmitir
nodo
probabilidad
retransmisi√≥n
nodo
pA
pro-
babilidad
retransmisi√≥n
nodo
pB
a.
Proporcione
f√≥rmula
tasa
media
transferencia
nodo
A.
eficiencia
protocolo
nodos
b.
pA
2pB
tasa
media
transferencia
doble
nodo
seleccionar
valores
pA
pB
ocurra
c.
general
suponga
nodos
nodo
probabili-
dad
retransmisi√≥n
2p
nodos
probabilidad
retransmisi√≥n
p.
Proporcione
expresiones
necesarias
calcular
tasas
medias
transferencia
nodo
restantes
nodos
P11
Suponga
nodos
activos
nodos
compitiendo
acceso
canal
utilizando
protocolo
ALOHA
particiones
Suponga
nodo
n√∫mero
infinito
paquetes
transmitir
nodo
intenta
transmi-
tir
partici√≥n
probabilidad
p.
partici√≥n
n√∫mero
n√∫mero
etc.
a.
probabilidad
nodo
√©xito
parti-
ci√≥n
b.
probabilidad
nodo
√©xito
parti-
ci√≥n
c.
probabilidad
√©xito
suceda
partici√≥n
d.
eficiencia
sistema
nodos
P12
Dibuje
gr√°fica
eficiencia
protocolos
ALOHA
particiones
ALOHA
puro
funci√≥n
siguientes
valores
a.
N 
15
b.
N 
20
c.
N 
30
PROBLEMAS
487
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
487P13
Considere
canal
difusi√≥n
nodos
tasa
transmisi√≥n
bps
Suponga
canal
difusi√≥n
utiliza
sondeo
nodo
adicional
sondeo
regular
acceso
m√∫ltiple
Suponga
cantidad
tiempo
nodo
completa
transmisi√≥n
permite
transmitir
nodo
retardo
sondeo
dsondeo
Suponga
ronda
sondeo
nodo
permite
transmitir
m√°ximo
bits
tasa
m√°xima
trans-
ferencia
canal
difusi√≥n
P14
Considere
redes
LAN
interconectadas
routers
muestra
Figura
5.38
a.
Asigne
direcciones
IP
interfaces
Subred
utilice
direcciones
forma
192.168.1.xxx
Subred
utilice
direcciones
forma
192.168.2
xxx
Subred
emplee
direcciones
forma
192.168.3.xxx
b.
Asigne
direcciones
MAC
adaptadores
c.
Considere
env√≠o
datagrama
IP
host
host
B.
Suponga
tablas
ARP
actualizadas
Enumere
pasos
ejemplo
√∫nico
router
Secci√≥n
5.4.2
d.
Repita
apartado
suponiendo
tabla
ARP
host
emisor
vac√≠a
tablas
actualizadas
P15
Considere
Figura
5.38
sustituir
router
situado
subredes
conmutador
S1
etiquetar
router
situado
subredes
R1
a.
Considere
env√≠o
datagrama
IP
host
host
F.
Pedir√°
host
router
R1
ayude
reenviar
datagrama
trama
Ethernet
488
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
Subred
Subred
Subred
Figura
5.38
subredes
interconectadas
routers
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
488que
contiene
datagrama
IP
direcciones
IP
MAC
origen
destino
b.
Suponga
enviar
datagrama
IP
suponga
cach√©
ARP
contiene
direcci√≥n
MAC
B.
Realizar√°
consulta
ARP
averi-
guar
direcci√≥n
MAC
trama
Ethernet
contiene
data-
grama
IP
destinado
entrega
router
R1
direcciones
IP
MAC
origen
destino
c.
Suponga
host
enviar
datagrama
IP
host
cach√©
ARP
contiene
direcci√≥n
MAC
cach√©
ARP
contiene
direc-
ci√≥n
MAC
A.
Suponga
tabla
reenv√≠o
conmutador
S1
con-
entradas
√∫nicamente
host
router
R1
difundir√°
mensaje
solicitud
ARP
acciones
realizar√°
conmutador
S1
reciba
mensaje
solicitud
ARP
Recibir√°
router
R1
solicitud
ARP
caso
afirmativo
reenviar√°
R1
mensaje
Subred
host
reciba
mensaje
solicitud
ARP
devolver√°
host
mensaje
respuesta
ARP
enviar√°
mensaje
consulta
ARP
preguntar
direcci√≥n
MAC
har√°
conmutador
S1
reciba
mensaje
respuesta
ARP
host
P16
Considere
problema
suponga
router
situado
subredes
sustituido
conmutador
Responda
preguntas
apar-
tados
a)‚Äì(c
problema
contexto
P17
Recuerde
protocolo
CSMA
CD
adaptador
espera
512
periodos
bit
producirse
colisi√≥n
selecciona
aleatoriamente
100
tiempo
espera
adaptador
volver
Paso
red
Ethernet
10
Mbps
red
Ethernet
100
Mbps
P18
Suponga
nodos
encuentran
bus
Ethernet
10
Mbps
retardo
propagaci√≥n
nodos
325
periodos
bit
Suponga
nodo
comienza
transmitir
trama
finalizar
nodo
comienza
transmitir
trama
finalizar
transmisi√≥n
detectar
transmitido
respuesta
afirmativa
Acreer√°
inco-
rrectamente
trama
transmitido
√©xito
producido
coli-
si√≥n
Sugerencia
suponga
instante
periodos
bit
comienza
transmitir
trama
caso
transmitir√°
trama
tama√±o
m√≠nimo
ocupar√°
512
64
periodos
bit
terminar√≠a
transmitir
trama
512
64
periodos
bit
respuesta
se√±al
alcanza
instante
se√±al
P19
Explique
falta
tama√±o
m√≠nimo
trama
Ethernet
ejemplo
Ethernet
10Base
impone
tama√±o
m√≠nimo
trama
64
bytes
pro-
blema
haberse
raz√≥n
suponga
distancia
extremos
red
LAN
Ethernet
d.
hallar
f√≥rmula
permite
obtener
tama√±o
m√≠nimo
trama
necesario
paquetes
Ethernet
Bas√°ndose
razonamiento
tama√±o
m√≠nimo
requerido
paquete
red
Ethernet
abarque
kil√≥metros
PROBLEMAS
489
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
489P20
Suponga
incrementar
velocidad
enlace
cable
Ethernet
afectar√≠a
actualizaci√≥n
tama√±os
m√≠nimos
paquetes
requeridos
actua-
liza
cable
velocidad
cambiar
tama√±o
paquete
cosa
red
seguir
operando
correc-
tamente
P21
Suponga
nodos
encuentran
bus
Ethernet
10
Mbps
retardo
propagaci√≥n
nodos
245
periodos
bit
Suponga
env√≠an
tramas
tiempo
tramas
colisionan
seleccionan
valores
algoritmo
CSMA
CD
Suponiendo
nodo
activo
colisionar
retransmisiones
prop√≥sitos
basta
resolver
ejemplo
Suponga
comienzan
transmisi√≥n
periodos
bit
detectan
colisi√≥n
ins-
tante
245
periodos
bits
terminan
transmitir
se√±al
interferencia
245
48
293
periodos
bit
Suponga
KA
KB
instante
pro-
gramar√°
retransmisi√≥n
momento
comenzar√°
transmisi√≥n
Nota
nodos
esperar
canal
est√©
inactivo
volver
Paso
consulte
protocolo
momento
alcanza
se√±al
abstendr√°
transmitir
instante
programado
P22
Considere
red
Ethernet
100BASE-T
100
Mbps
nodos
directamente
conectados
concentrador
eficiencia
0,50
deber√≠a
distancia
m√°xima
nodo
concentrador
Suponga
longitud
trama
1.000
bytes
repetidor
Garantiza
distancia
m√°xima
nodo
transmitiendo
capaz
detectar
nodo
transmitido
transmitiendo
distancia
m√°xima
comparada
est√°ndar
real
100
Mbps
Suponga
velocidad
propagaci√≥n
se√±al
Ethernet
100BASE-T
1,8
108
s.
P23
Suponga
nodos
conectados
concentrador
cables
Ethernet
10
Mbps
distancias
concentrador
nodos
300
400
500
700
metros
respectivamente
Recuerde
red
Ethernet
utiliza
protocolo
CSMA
CD
Suponga
velocidad
propagaci√≥n
se√±al
108
s.
a.
longitud
m√≠nima
trama
requerida
longitud
m√°xima
trama
requerida
b.
tramas
longitud
1.500
bits
calcule
eficiencia
red
Ethernet
P24
problema
deducir
eficiencia
protocolo
acceso
m√∫ltiple
tipo
CSMA
CD
protocolo
tiempo
particionado
adapta-
dores
sincronizados
particiones
diferencia
protocolo
ALOHA
particiones
longitud
partici√≥n
segundos
inferior
tiempo
trama
tiempo
necesario
transmitir
trama
longitud
partici√≥n
Suponga
tramas
longitud
constante
kRS
velocidad
transmisi√≥n
canal
entero
magnitud
Suponga
nodos
n√∫mero
infinito
tramas
enviar
Suponga
dprop
nodos
detectar
coli-
si√≥n
finalice
partici√≥n
tiempo
protocolo
490
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
490‚Ä¢S
nodos
competir√°n
acceso
canal
particular
nodos
transmite
partici√≥n
probabilidad
p.
exactamente
nodo
transmite
partici√≥n
nodo
apropia
canal
subsiguientes
particiones
transmite
trama
completa
‚Ä¢S
transmitir
nodo
posee
canal
terminado
transmitir
trama
nodo
transmitido
trama
nodos
compiten
acce-
der
canal
Observe
canal
alterna
distintos
productivo
dura
exactamente
particiones
productivo
dura
n√∫mero
aleatorio
particiones
Obviamente
eficiencia
canal
relaci√≥n
k/(k
n√∫mero
esperado
particiones
productivas
consecutivas
a.
fijos
determine
eficiencia
protocolo
b.
valor
fijo
determine
valor
maximiza
eficiencia
c.
Utilizando
valor
funci√≥n
calculado
apartado
deter-
mine
eficiencia
tiende
infinito
d.
Demuestre
eficiencia
tiende
medida
aumenta
tama√±o
trama
P25
Suponga
nodos
conectados
extremos
opuestos
cable
800
metros
trama
1.500
bits
incluyendo
cabeceras
pre√°mbulos
enviar
nodos
intentan
transmitir
instante
Suponga
repetidores
cua-
inserta
retardo
20
bits
Suponga
velocidad
transmisi√≥n
100
Mbps
utiliza
CSMA
CD
intervalos
espera
backoff
m√∫ltiplos
512
bits
colisi√≥n
saca
saca
proto-
colo
backoff
exponencial
Ignore
se√±al
interferencia
retardo
96
perio-
bit
a.
retardo
propagaci√≥n
unidireccional
incluyendo
retardos
repetidores
segundos
Suponga
velocidad
propagaci√≥n
se√±al
108
s.
b.
momento
segundos
entregado
completamente
paquete
c.
suponga
paquete
enviar
repetidores
sus-
tituyen
conmutadores
Suponga
conmutador
retardo
pro-
cesamiento
20
bits
retardo
almacenamiento
reenv√≠o
momento
segundos
entregar√°
paquete
P26
est√°ndar
Ethernet
emisor
realiza
pausa
96
periodos
bit
env√≠o
tramas
consecutivas
periodo
pausa
denomina
hueco
tramas
utiliza
permitir
dispositivo
receptor
complete
procesamiento
trama
recibida
prepare
recepci√≥n
est√°ndar
Ethernet
especificado
producido
importantes
avances
tecnolog√≠a
incluyendo
relativos
velocidad
procesadores
memoria
pro-
PROBLEMAS
491
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
491pias
velocidades
transmisi√≥n
Ethernet
hubiera
reescribir
est√°ndar
afectar√≠an
mejoras
hueco
tramas
P27
Considere
Figura
5.38
Problema
P14
Proporcione
direcciones
MAC
IP
interfaces
host
routers
host
F.
Suponga
host
env√≠a
datagrama
host
F.
Indique
direcciones
MAC
origen
destino
conteni-
das
trama
encapsula
datagrama
IP
medida
trama
transmitida
router
izquierda
ii
router
izquierda
router
dere-
cha
iii
router
derecha
host
F.
Indique
direcciones
IP
origen
destino
datagrama
IP
encapsulado
trama
instantes
tiempo
P28
Suponga
router
izquierda
Figura
5.38
sustituye
con-
mutador
hosts
router
derecha
conectan
estrella
conmutador
Indique
direcciones
MAC
origen
destino
contenidas
trama
encapsula
datagrama
IP
medida
trama
transmite
Aa
ii
conmutador
router
derecha
iii
router
derecha
F.
Indique
direcciones
IP
origen
destino
contenidas
datagrama
IP
encapsulado
trama
instantes
tiempo
P29
Considere
Figura
5.26
Suponga
enlaces
100
Mbps
tasa
m√°xima
agregada
transferencia
conseguirse
hosts
servidores
red
suponer
host
servidor
enviar
host
servidor
P30
Suponga
conmutadores
departamentales
Figura
5.26
sustituyen
concentradores
enlaces
100
Mbps
Responda
condicio-
nes
cuestiones
planteadas
Problema
P29
P31
Suponga
conmutadores
Figura
5.26
sustituidos
concentra-
dores
enlaces
100
Mbps
Responda
condiciones
cuestio-
nes
planteadas
Problema
P29
P32
Considere
operaci√≥n
conmutador
aprendizaje
contexto
Figura
5.24
Suponga
env√≠a
trama
ii
responde
enviando
trama
iii
Ae
iv
responde
enviando
trama
A.
Inicialmente
tabla
conmutador
vac√≠a
Muestre
tabla
conmutador
sucesos
suceso
identifique
enlace
enlaces
reenviar√°
trama
transmitida
justifique
brevemente
respuestas
P33
problema
explorar
peque√±os
paquetes
aplicaciones
Vo
P.
ancho
banda
enlace
consumido
bytes
sobrecarga
cara
an√°lisis
suponga
paquete
consta
bytes
datos
bytes
cabecera
a.
Considere
env√≠o
directo
origen
voz
codificado
digitalmente
Suponga
origen
codifica
velocidad
constante
128
kbps
Suponga
paquete
rellena
completamente
origen
env√≠e
paquete
red
492
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
492El
tiempo
requerido
rellenar
paquete
denomina
retardo
empaque-
tado
funci√≥n
determine
retardo
empaquetado
milisegundos
b.
retardos
empaquetado
superiores
20
ms
lugar
eco
percep-
tible
desagradable
Determine
retardo
empaquetado
1.500
bytes
corresponde
paquete
Ethernet
tama√±o
m√°ximo
50
corresponde
paquete
ATM
c.
Calcule
retardo
almacenamiento
reenv√≠o
√∫nico
conmutador
velocidad
enlace
622
Mbps
1.500
bytes
50
bytes
d.
Comente
ventajas
utilizar
tama√±o
paquete
peque√±o
P34
Considere
√∫nico
conmutador
VLAN
Figura
5.30
suponga
conecta
router
externo
puerto
conmutador
Asigne
direcciones
IP
hosts
redes
CC
interfaz
router
Indique
pasos
seguidos
capa
red
capa
enlace
transferir
datagrama
IP
host
IE
host
CC
Sugerencia
vuelva
leer
texto
comentarios
acerca
Figura
5.19
P35
Considere
red
MPLS
mostrada
Figura
5.36
suponga
routers
R5
R6
compatibles
MPLS
Suponga
deseamos
ingenier√≠a
tr√°fico
paquetes
procedentes
R6
destinados
conmuten
R6-R4-R3-R1
paquetes
procedentes
R5
destinados
As
tabla
modificada
R4
har√≠an
P36
Considere
escenario
problema
suponga
paquetes
R6
destinados
conmutan
R6-R4-R3
paquetes
procedentes
R5
destinados
conmutan
R4-R2-R1-R3
Determine
tablas
MPLS
routers
har√≠an
P37
problema
juntar
cosas
aprendido
acerca
protocolos
Internet
Suponga
entra
habitaci√≥n
conecta
Ether-
net
desea
descargar
p√°gina
web
pasos
protocolo
lugar
comenzando
instante
enciende
PC
momento
obtiene
p√°gina
web
Suponga
cach√©
DNS
cach√©
navegador
enciende
PC
Sugerencia
pasos
incluyen
protocolos
Ethernet
DHCP
ARP
DNS
TCP
HTTP
Indique
expl√≠ci-
tamente
pasos
obtienen
direcciones
IP
MAC
router
pasarela
Preguntas
discusi√≥n
animamos
explorar
Web
hora
buscar
respuestas
siguientes
cues-
tiones
D1
rango
precios
adaptador
10/100
Mbps
adaptador
Ethernet
Gigabit
precios
comparados
m√≥dem
acceso
telef√≥nico
56
kbps
m√≥dem
ADSL
PREGUNTAS
DISCUSI√ìN
493
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
493D2
precio
conmutadores
depende
n√∫mero
interfaces
denominadas
puertos
jerga
redes
LAN
rango
precio
actual
interfaz
conmutador
dispone
interfaces
100
Mbps
D3
funciones
adaptador
realizarse
software
eje-
cute
CPU
nodo
ventajas
desventajas
pasar
funcio-
nalidad
adaptador
nodo
D4
Busque
Web
n√∫meros
protocolo
utilizados
trama
Ethernet
datagrama
IP
paquete
ARP
D5
Lea
referencias
Xiao
2000
Huang
2002
RFC
3346
acerca
ingenier√≠a
tr√°fico
MPLS
Enumere
serie
objetivos
ingenier√≠a
tr√°fico
objetivos
satisfacerse
utilizando
MPLS
satisfacerse
utilizando
protocolos
existentes
MPLS
caso
ventajas
ofrece
MPLS
Pr√°cticas
laboratorio
Wireshark
sitio
web
libro
http://www.awl.com/kurose-ross
encontrar√°
pr√°ctica
labo-
ratorio
Wireshark
permite
examinar
funcionamiento
protocolo
IEEE
802.3
formato
trama
Wireshark
pr√°ctica
laboratorio
Wireshark
examina
trazas
paquetes
tomadas
escenario
red
dom√©stica
similar
Figura
5.37
494
CAP√çTULO
CAPA
ENLACE
REDES
√ÅREA
LOCAL
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
494495
decidi√≥
especializarse
campo
redes
llegu√©
UCLA
estudiante
graduado
oto√±o
1969
intenci√≥n
estudiar
teo-
r√≠a
control
asisit√≠
clases
teor√≠a
colas
Leonard
Kleinrock
qued√©
impresionado
tiempo
estuve
trabajando
control
adaptativo
sistemas
colas
tema
tesis
principios
1972
Larry
Roberts
inici√≥
proyecto
Satellite
System
ARPAnet
posteriormente
denominado
Packet
Satellite
profesor
Kleinrock
pidi√≥
unie-
ra
proyecto
hicimos
a√±adir
algoritmo
backoff
simple
realista
protocolo
ALOHA
particiones
encontr√©
numerosos
problemas
investi-
gaci√≥n
interesantes
problema
inestabilidad
ALOHA
necesidad
backoff
adaptati-
vo
temas
terminar√≠an
formando
n√∫cleo
tesis
activo
Internet
d√©cada
1970
comenzando
estudiante
UCLA
cosas
Alguien
imaginaba
Internet
llegar√≠a
atm√≥sfera
realmente
distinta
proyectos
construcci√≥n
sistemas
conocido
industria
instituciones
acad√©micas
objetivo
inicialmente
establecido
ARPAnet
modesto
quer√≠a
proporcionar
acceso
serie
computadoras
caras
ubicaciones
remotas
cient√≠ficos
pudieran
utilizarlas
inicio
proyecto
Packet
Satellite
1972
proyecto
Packet
Radio
1973
objetivos
ARPA
ampliado
sustancialmente
1973
ARPA
construyendo
redes
paquetes
distintas
tiempo
Vint
Cerf
Bob
Kahn
vieron
obli-
gados
desarrollar
estrategia
interconexi√≥n
desarrollos
progresivos
campo
redes
ve√≠an
cre√≠a
l√≥gico
m√°gico
previsto
escala
Internet
potencia
actual
computadoras
personales
Pas√≥
d√©cada
aparecie-
ran
PC
cosas
perspectiva
mayor√≠a
estudiantes
enviaban
programas
computadora
forma
pilas
fichas
perforadas
procesamiento
lotes
estudiantes
ten√≠an
acceso
directo
computadoras
normalmente
ubicadas
√°reas
restringidas
m√≥dems
lentos
constitu√≠an
rareza
estudiante
gra-
Simon
S.
Lam
Simon
S.
Lam
catedr√°tico
Regent
Chair
Departamento
Ciencias
Computaci√≥n
Universidad
Texas
Austin
1971
1974
trabajando
Centro
Medidas
Red
ARPA
UCLA
trabaj√≥
conmutaci√≥n
paquetes
v√≠a
sat√©lite
v√≠a
radio
Dirigi√≥
grupo
investigaci√≥n
invent√≥
sockets
seguros
prototip√≥
1993
capa
sockets
seguros
SSL
denominada
Secure
Network
Programming
gan√≥
premio
sistema
software
ACM
2004
intereses
investigaci√≥n
encuentran
campo
dise√±o
an√°lisis
protocolos
red
servicios
seguridad
gradu√≥
universidad
Washington
obteniendo
m√°ster
doctorado
UCLA
elegido
Academia
Nacional
Ingenier√≠a
2007
ENTREVISTA
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
495496
duado
√∫nico
tel√©fono
mesa
utilizaba
l√°piz
papel
trabajo
cree
encaminan
campo
redes
Internet
simplicidad
protocolo
IP
Internet
fortaleza
hora
vencer
soluciones
competidoras
convertirse
est√°ndar
facto
comunicaci√≥n
redes
Ad
1990
IP
ejecutarse
tecnolog√≠a
red
capa
enlace
ofrece
√∫nicamente
servicio
datagramas
esfuerzo
red
paquetes
conectarse
Internet
fortaleza
IP
realidad
desventaja
IP
especie
cami-
sa
fuerza
desarrollos
Internet
queden
constre√±idos
serie
direcciones
espec√≠ficas
a√±os
investigadores
redirigido
esfuerzos
concentr√°ndose
√∫nicamente
capa
aplicaci√≥n
desarrollando
numerosas
investigaciones
campo
redes
inal√°mbricas
ad
hoc
redes
sensores
redes
sat√©lite
redes
verse
sistemas
aut√≥nomos
sistemas
capa
enlace
pudiendo
florecer
tipo
sistemas
caen
camisa
fuerza
representada
IP
personas
entusiasmadas
posibilidades
sistemas
P2P
ofrecen
plataforma
desarrollo
aplicaciones
Internet
novedosas
sistemas
P2P
ineficientes
recursos
Internet
cosas
preocupa
capa-
cidad
transmisi√≥n
conmutaci√≥n
n√∫cleo
Internet
continuar√°n
increment√°ndose
r√°pi-
do
demanda
tr√°fico
medida
Internet
crezca
interconectar
tipo
dispositivos
soportar
futuras
aplicaciones
tipo
P2P.
sustancial
sobredimensionamiento
capaci-
dad
garantizar
estabilidad
red
presencia
ataques
maliciosos
congesti√≥n
continuar√°
representando
enorme
desaf√≠o
enorme
crecimiento
Internet
requiere
asignar
direcciones
IP
veloci-
dad
operadores
red
empresas
mundo
velocidad
actual
conjunto
direcciones
IPv4
asignadas
agotar√°
a√±os
suceda
asig-
narse
bloques
contiguos
espacio
direcciones
espacio
direcciones
IPv6
adopci√≥n
IPv6
lenta
principio
falta
incentivos
usuarios
probable
IPv4
IPv6
coexistan
Internet
a√±os
toda-
v√≠a
migraci√≥n
satisfactoria
Internet
predominantemente
IPv4
predominantemen-
IPv6
requerir√°
sustancial
esfuerzo
global
atractiva
trabajo
atractiva
trabajo
profesor
ense√±ar
motivar
alumnos
clase
estudiantes
doctorado
superviso
lugar
concentrarme
brillantes
personas
brillantes
motivadas
requerir
gu√≠a
aprendo
estudiantes
aprenden
atractivo
desaf√≠o
educar
motivar
estudiantes
sobresalientes
impacto
cree
tecnolog√≠a
futuro
ense√±anza
conocimientos
humanos
accesibles
Internet
herramienta
potente
aprendizaje
enorme
base
conocimientos
dar√°
posi-
bilidad
nivelar
campo
juego
estudiantes
mundo
ejemplo
estudian-
tes
motivados
pa√≠s
acceder
sitios
web
fila
conferencias
multi-
media
materiales
formativos
bibliotecas
digitales
IEEE
ACM
ace-
lerado
desarrollo
investigaciones
ciencias
computaci√≥n
China
tiempo
Internet
eliminar√°
barreras
geogr√°ficas
ense√±anza
refiere
M05_KUROSE.qxd
21/3/10
13:22
P√°gina
496CAP√çTULO
Redes
inal√°mbricas
m√≥viles
497
mundo
telefon√≠a
15
a√±os
indudablemente
edad
dorada
telefon√≠a
celular
n√∫mero
abonados
servicios
telefon√≠a
celular
mundo
34
millones
1993
4.000
millones
finales
2008
sobrepasando
n√∫mero
abonados
celulares
l√≠neas
telef√≥nicas
normales
ITU
Statistics
2009
numerosas
ventajas
tel√©fonos
celulares
evidentes
mundo
disponemos
acceso
red
telefon√≠a
global
momento
lugar
tipo
restricci√≥n
utilizando
dispositivo
ligero
port√°til
lle-
gada
computadoras
port√°tiles
computadoras
mano
PDA
promesa
disponer
acceso
momento
lugar
tipo
restric-
ci√≥n
Internet
global
aproximando
explosi√≥n
similar
dis-
positivos
Internet
inal√°mbricos
Independientemente
futuro
crecimiento
dispositivos
Internet
inal√°mbri-
cos
redes
inal√°mbricas
servicios
relacionados
movilidad
redes
posibles
quedarse
punto
vista
comunicaci√≥n
red
desaf√≠os
planteados
redes
particularmente
capas
enlace
datos
red
redes
computadoras
cableadas
tradicionales
resulta
imperativo
dedicar
cap√≠tulo
cap√≠-
tulo
estudio
redes
inal√°mbricas
m√≥viles
Comenzaremos
cap√≠tulo
estudio
usuarios
m√≥viles
enlaces
inal√°m-
bricos
redes
inal√°mbricas
relaci√≥n
redes
tama√±o
nor-
malmente
cableadas
conectan
Estableceremos
distinci√≥n
desaf√≠os
planteados
naturaleza
inal√°mbrica
enlaces
comunicaciones
dichas
redes
movilidad
enlaces
inal√°mbricos
permiten
importante
dis-
tinci√≥n
car√°cter
inal√°mbrico
movilidad
podremos
aislar
identificar
dominar
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
497498
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
conceptos
clave
√°reas
Observe
entornos
red
nodos
red
inal√°mbricos
m√≥viles
ejemplo
redes
inal√°mbricas
dom√©sticas
empresariales
estaciones
tra-
est√°ticas
pantallas
computadora
formas
movilidad
requieren
enlaces
inal√°mbricos
ejemplo
trabajador
utiliza
computa-
dora
port√°til
conexi√≥n
cable
casa
apaga
computadora
oficina
conecta
computadora
red
cableada
empresa
entor-
red
atractivos
usuarios
inal√°mbricos
m√≥viles
ejemplo
escenario
usuario
m√≥vil
situado
ejemplo
asiento
posterior
veh√≠culo
mantiene
llamada
voz
IP
m√∫ltiples
conexio-
nes
TCP
activas
veh√≠culo
circula
autopista
160
kil√≥metros
hora
intersecci√≥n
car√°cter
inal√°mbrico
movilidad
encontraremos
desaf√≠os
t√©cnicos
interesantes
Comenzaremos
ilustrando
entorno
emplear
an√°lisis
comunicaci√≥n
inal√°mbrica
movilidad
red
serie
usuarios
ina-
l√°mbricos
posiblemente
m√≥viles
conectados
infraestructura
red
tama√±o
enlace
inal√°mbrico
situado
frontera
red
continuaci√≥n
pasaremos
estudiar
caracter√≠sticas
enlace
inal√°mbrico
Secci√≥n
6.2
Inclui-
mos
introducci√≥n
Acceso
m√∫ltiple
divisi√≥n
c√≥digo
CDMA
Code
Divi-
sion
Multiple
Access
protocolo
acceso
compartido
emplea
redes
inal√°mbricas
estudio
haremos
Secci√≥n
6.2
Secci√≥n
6.3
examinaremos
grado
profundidad
aspectos
nivel
enlace
est√°ndar
red
LAN
inal√°mbrica
IEEE
802.11
WiFi
dedicaremos
palabras
Bluetooth
WiMAX
Secci√≥n
6.4
veremos
panor√°mica
acceso
celular
Internet
incluyendo
emergentes
tecnolog√≠as
celulares
propor-
cionan
voz
acceso
Internet
alta
velocidad
Secci√≥n
6.5
fijaremos
nues-
tra
atenci√≥n
movilidad
centr√°ndonos
problemas
localizar
usuario
m√≥vil
efectuar
enrutamiento
usuario
m√≥vil
transfiriendo
usuario
m√≥vil
desplazando
din√°micamente
punto
conexi√≥n
red
Examina-
remos
implementan
servicios
m√≥viles
est√°ndar
IP
m√≥vil
GSM
Secciones
6.6
6.7
respectivamente
Secci√≥n
6.8
consideraremos
impacto
enlaces
inal√°mbricos
movilidad
protocolos
capa
transporte
aplicaciones
red
6.1
Introducci√≥n
Figura
6.1
muestra
escenario
analizar
temas
comunica-
ci√≥n
inal√°mbrica
datos
movilidad
Comenzaremos
manteniendo
estudio
nivel
suficientemente
general
cubrir
amplio
rango
redes
incluyendo
redes
LAN
inal√°mbricas
ejemplo
IEEE
802.11
redes
celulares
red
secciones
posteriores
profundizaremos
an√°lisis
detallado
determinadas
arquitecturas
inal√°mbricas
espec√≠ficas
red
inal√°mbrica
identificar
siguientes
elementos
Hosts
inal√°mbricos
caso
redes
cableadas
hosts
dispositi-
vos
act√∫an
sistemas
terminales
ejecutan
aplicaciones
host
ina-
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
4986.1
INTRODUCCI√ìN
499
l√°mbrico
computadora
port√°til
computadora
mano
PDA
tel√©fono
computadora
escritorio
hosts
m√≥viles
Enlaces
inal√°mbricos
host
conecta
estaci√≥n
base
definida
host
inal√°mbrico
enlace
comunicaciones
inal√°mbrico
dife-
rentes
tecnolog√≠as
enlace
inal√°mbrico
distintas
velocidades
transmisi√≥n
transmitir
distancias
Figura
6.2
muestra
caracter√≠sticas
clave
√°rea
cobertura
velocidad
enlace
est√°ndares
populares
redes
ina-
l√°mbricas
figura
pretende
proporcionar
idea
aproximada
caracte-
r√≠sticas
ejemplo
tipos
redes
comenzado
implantar
velocidades
enlace
aumentar
disminuir
valores
mostrados
dependiendo
distancia
condiciones
canal
n√∫mero
usuarios
red
inal√°mbrica
ocuparemos
est√°ndares
ade-
ACCESO
WIFI
P√öBLICO
DISPONIBLE
SEM√ÅFOROS
puntos
acceso
WiFi
WiFi
hotspots
ubicaciones
p√∫blicas
usuarios
pue-
den
encontrar
acceso
inal√°mbrico
802.11
comunes
hote-
aeropuertos
caf√©s
mundo
finales
2008
T-Mobile
proporciona
accesos
tipo
10.000
ubicaciones
Unidos
45.000
mundo
incluyendo
cafeter√≠as
Starbucks
tiendas
Borders
Books
Music
mayor√≠a
campus
universi-
tarios
ofrecen
acceso
inal√°mbrico
ubicuo
resulta
dif√≠cil
encontrar
hotel
exista
acceso
inal√°mbrico
Internet
ciudades
incluyen
Filadelfia
San
Francisco
Toronto
Hong
Kong
anunciado
planes
proporcionar
acceso
ina-
l√°mbrico
ubicuo
ciudad
objetivo
Filadelfia
convertir
Filadelfia
√°rea
acceso
WiFi
Unidos
ayudar
mejorar
educaci√≥n
eliminar
diferencias
sociales
car√°cter
digital
mejorar
desarrollo
barrios
reducir
coste
administraci√≥n
Inicialmente
plan
requer√≠a
instalar
puntos
acceso
inal√°mbrico
802.11b
4.000
sem√°foros
dispositivos
control
tr√°fico
ambicioso
programa
ciudad
Wireless
Philadelphia
enti-
dad
√°nimo
lucro
Earthlink
proveedor
servicios
Internet
llegado
cons-
truir
red
operativa
proyecto
GovWiFi
Hong
Kong
proporcionar√°
servicio
Wi-Fi
gratuito
350
oficinas
gubernamentales
serie
fases
situar√°n
2.000
puntos
acceso
Wi-Fi
p√∫blicos
territorio
har√°
Hong
Kong
ciudad
inal√°mbrica
cerca
10.000
puntos
acceso
Wi-Fi
p√∫blicos
2009
cabo
planes
acceso
WiFi
ubicuo
nivel
municipal
presenta
dificultades
red
WiFi
municipal
San
Francisco
llegado
pasar
fase
propuesta
2008
Earthlink
di√≥
finalizado
servicio
WiFi
Filadelfia
red
WiFi
municipal
opera
centro
Toronto
gratuita
contin√∫a
estando
operativa
redes
WiFi
municipales
ciudades
pueblos
peque√±os
intentos
disponer
redes
inal√°mbricas
municipales
contin√∫an
http://www.muniwireless.com/
sitio
web
realiza
seguimiento
panorama
cambiante
redes
inal√°mbricas
municipales
HISTORIA
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
499lante
mitad
cap√≠tulo
consideraremos
carac-
ter√≠sticas
enlaces
inal√°mbricos
tasas
error
bit
causas
errores
Secci√≥n
6.2
Figura
6.1
serie
enlaces
inal√°mbricos
conectan
conjunto
hosts
inal√°mbricos
ubicados
frontera
red
infraestructura
red
tama√±o
Conviene
a√±adir
enlaces
inal√°mbricos
utilizan
ocasiones
red
conectar
routers
conmutadores
equi-
pos
red
enfoque
cap√≠tulo
centrar√°
comunicaciones
inal√°mbricas
fronteras
red
encontrar
desaf√≠os
t√©cnicos
atractivos
experimentado
aut√©ntico
crecimiento
Estaci√≥n
base
estaci√≥n
base
clave
infraestructura
red
inal√°m-
brica
diferencia
host
inal√°mbrico
enlaces
inal√°mbricos
estaci√≥n
base
equivalente
obvio
redes
cableadas
estaci√≥n
base
respon-
sable
enviar
recibir
datos
paquetes
host
inal√°mbrico
est√©
asociado
estaci√≥n
base
estaci√≥n
base
responsable
coor-
dinar
transmisi√≥n
m√∫ltiples
hosts
inal√°mbricos
est√©n
asociados
decimos
host
inal√°mbrico
asociado
estaci√≥n
base
quere-
mos
host
distancia
m√°xima
comunicaci√≥n
500
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
Infraestructura
red
Clave
Punto
acceso
inal√°mbrico
√Årea
cobertura
Host
inal√°mbrico
Host
inal√°mbrico
movimiento
Figura
6.1
Elementos
red
inal√°mbrica
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
500inal√°mbrica
estaci√≥n
base
host
utiliza
estaci√≥n
base
reenviar
datos
red
tama√±o
torres
telefon√≠a
redes
celulares
puntos
acceso
redes
LAN
inal√°mbricas
802.11
ejemplos
estaciones
base
Figura
6.1
estaci√≥n
base
conectada
red
tama√±o
ejemplo
Internet
red
dom√©stica
corporativa
red
telef√≥nica
funcionando
retransmisor
capa
enlace
host
inal√°mbrico
resto
mundo
host
comunica
hosts
asociados
estaci√≥n
base
suele
operan
infraestructura
puesto
servicios
red
tradicionales
ejem-
plo
asignaci√≥n
direcciones
enrutamiento
proporcionados
red
host
conecta
estaci√≥n
base
redes
ad
hoc
hosts
inal√°mbricos
infraestructura
tipo
conectarse
ausencia
dicha
infraestructura
hosts
proporcionar
servicios
tales
enrutamiento
asignaci√≥n
direcciones
traducci√≥n
nombres
tipo
DNS
etc.
host
m√≥vil
desplaza
alcance
estaci√≥n
base
entra
√°rea
cobertura
cambia
punto
conexi√≥n
red
tama√±o
cambia
estaci√≥n
base
asociado
proceso
conoce
nombre
transferencia
handoff
tipo
movilidad
plantea
numerosos
com-
plejos
problemas
host
moverse
averiguar
ubicaci√≥n
actual
host
m√≥vil
red
reenviar
datos
host
m√≥vil
cabo
direccionamiento
sabiendo
host
posibles
ubicaciones
host
mueve
conexi√≥n
TCP
llamada
telef√≥-
nica
enrutar
datos
conexi√≥n
contin√∫e
activa
forma
6.1
INTRODUCCI√ìN
501
802.11a
802.11n
802.11a
punto
punto
WiMAX802.11b
UMTS
WCDMA-HSDPA
CDMA2000-1xEVDO
802.15.1
UMTS
WCDMA
CDMA2000
IS-95
CDMA
GSM
Interiores
Exteriores
Exteriores
alcance
Exteriores
alcance
10‚Äì30
50‚Äì200
200m‚Äì4
km
km‚Äì20
km
54
Mbps
Mbps
5‚Äì11
Mbps
200
Mbps
Mbps
384
kbps
56
kbps
mejorado
Figura
6.2
Caracter√≠sticas
enlace
serie
est√°ndares
selecciona-
redes
inal√°mbricas
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
501ininterrumpida
much√≠simas
cuestiones
redes
ina-
l√°mbricas
m√≥viles
√°rea
investigaci√≥n
particularmente
atractiva
Infraestructura
red
red
tama√±o
host
inal√°mbrico
querer
comunicarse
Habiendo
examinado
elementos
red
inal√°mbrica
observemos
ele-
mentos
combinarse
formas
distintas
componer
distintos
tipos
redes
inal√°mbricas
taxonom√≠a
tipos
redes
inal√°mbricas
√∫til
hora
leer
cap√≠tulo
hora
leer
aprender
acerca
redes
inal√°mbricas
all√°
libro
expone
nivel
general
clasificar
redes
inal√°mbricas
criterios
paquete
red
ina-
l√°mbrica
realiza
exactamente
salto
inal√°mbrico
saltos
inal√°mbricos
ii
infraestructura
ejemplo
estaci√≥n
base
red
Redes
basadas
infraestructura
√∫nico
salto
redes
estaci√≥n
base
conectada
red
cableada
tama√±o
ejemplo
Internet
comunicaci√≥n
realiza
estaci√≥n
base
host
inal√°mbrico
√∫nico
salto
inal√°mbrico
redes
802.11
utilizamos
aulas
cafeter√≠as
bibliotecas
redes
telefon√≠a
celular
redes
802.16
WiMAX
hablaremos
caen
categor√≠a
Redes
infraestructura
√∫nico
salto
redes
estaci√≥n
base
conectada
red
inal√°mbrica
veremos
nodos
red
√∫nico
salto
coordinar
transmisiones
restantes
nodos
redes
Bluetooth
estudiaremos
Secci√≥n
6.3.6
redes
802.11
ad
hoc
redes
infraestructura
√∫nico
salto
Redes
basadas
infraestructura
m√∫ltiples
saltos
redes
estaci√≥n
base
cableada
red
tama√±o
nodos
inal√°mbri-
cos
retransmitir
comunicaciones
nodos
inal√°m-
bricos
comunicarse
estaci√≥n
base
redes
sensores
inal√°mbricos
denominadas
redes
malla
inal√°mbricas
caen
cate-
gor√≠a
Redes
infraestructura
m√∫ltiples
saltos
redes
estaci√≥n
base
nodos
retransmitir
mensajes
diversos
nodos
alcanzar
destino
nodos
m√≥viles
conectividad
nodos
ir√°
variando
constituye
clase
redes
conocidas
nombre
redes
m√≥viles
ad
hoc
MANET
Mobile
ad
hoc
network
nodos
m√≥viles
veh√≠culos
red
denomina
red
vehicular
ad
hoc
VANET
Vehi-
cular
Ad
hoc
NETwork
imaginar
desarrollo
protocolos
tales
redes
enormemente
complicado
materia
investigaciones
actualmente
marcha
cap√≠tulo
limitarnos
fundamentalmente
redes
√∫nico
salto
redes
basadas
infraestructura
examinemos
profundidad
desaf√≠os
t√©cnicos
surgen
redes
inal√°mbricas
m√≥viles
Comenzaremos
considerando
enlaces
inal√°mbricos
individuales
dejando
estudio
acerca
cuestiones
movilidad
ade-
lante
cap√≠tulo
502
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
5026.2
Caracter√≠sticas
redes
enlaces
inal√°mbricos
Comencemos
considerando
simple
red
cableada
ejemplo
red
dom√©stica
conmutador
Ethernet
cableado
v√©ase
Secci√≥n
5.6
interconecta
hosts
reempla-
zamos
Ethernet
cableada
red
inal√°mbrica
802.11
tendr√≠amos
sustituir
tar-
jetas
Ethernet
cableadas
hosts
tarjetas
NIC
inal√°mbricas
cambiar
conmutador
Ethernet
punto
acceso
inal√°mbrico
har√≠a
falta
pr√°cticamente
cam-
bio
capa
red
capas
superiores
sugiere
debemos
centrar
atenci√≥n
capa
enlace
hora
buscar
diferencias
importantes
redes
cableadas
inal√°mbricas
encontrar
distinciones
importancia
enlace
cableado
enlace
inal√°mbrico
Intensidad
decreciente
se√±al
radiaci√≥n
electromagn√©tica
aten√∫a
medida
atravesando
materia
ejemplo
se√±al
radio
atraviesa
pared
espacio
vac√≠o
se√±al
dispersar√°
resultado
intensi-
dad
se√±al
decreciente
ocasiones
denominada
p√©rdida
propagaci√≥n
path
loss
medida
incrementa
distancia
emisor
receptor
Interferencias
or√≠genes
or√≠genes
radio
transmiten
banda
frecuencia
interferir√°n
ejemplo
tel√©fonos
inal√°mbricos
2,4
GHz
redes
LAN
inal√°mbricas
802.11b
transmiten
banda
frecuencias
usuario
red
LAN
inal√°mbrica
802.11b
est√©
hablando
tel√©fono
inal√°mbrico
2,4
GHz
esperar
red
tel√©fono
tengan
com-
portamiento
particularmente
satisfactorio
interferencias
or√≠genes
transmisi√≥n
ruido
electromagn√©tico
presente
entorno
ejemplo
motor
cercano
microondas
provocar
interferencias
Propagaci√≥n
multicamino
propagaci√≥n
multicamino
multipath
lugar
partes
onda
electromagn√©tica
reflejan
objetos
suelo
tomando
cami-
longitudes
emisor
receptor
se√±al
reci-
bida
limpia
receptor
desplazamiento
objetos
situados
emisor
receptor
propagaci√≥n
multicamino
var√≠e
tiempo
explicaci√≥n
detallada
caracter√≠sticas
modelos
medidas
canales
inal√°mbricos
consulte
Anderson
1995
exposici√≥n
sugiere
errores
bit
comunes
enlaces
inal√°mbricos
enlaces
cableados
raz√≥n
resulta
sorprendente
protocolos
enlace
inal√°mbrico
protocolo
802.11
examinaremos
secci√≥n
empleen
potentes
c√≥digos
CRC
detecci√≥n
errores
protocolos
capa
enlace
transferencia
datos
fiable
encargan
retransmitir
tramas
corrompidas
Habiendo
considerado
problemas
afectar
canal
inal√°mbrico
volva-
mos
atenci√≥n
host
recibe
se√±al
inal√°mbrica
host
recibe
se√±al
elec-
tromagn√©tica
combinaci√≥n
forma
degradada
se√±al
original
transmitida
emisor
degradada
efectos
atenuaci√≥n
propaga-
ci√≥n
multicamino
visto
anteriormente
ruido
fondo
presente
entorno
relaci√≥n
se√±al-ruido
SNR
Signal-to-Noise
Ratio
medida
rela-
tiva
intensidad
se√±al
recibida
informaci√≥n
transmi-
6.2
CARACTER√çSTICAS
REDES
ENLACES
INAL√ÅMBRICOS
503
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
503tiendo
ruido
Normalmente
relaci√≥n
se√±al-ruido
mide
unidades
deci-
belios
dB
unidad
medida
creen
ingenieros
el√©ctricos
utilizan
principalmente
confundir
inform√°ticos
SNR
medida
dB
veinte
relaci√≥n
logaritmo
base
10
amplitud
se√±al
recibida
amplitud
ruido
cara
ocupa
√∫nico
necesitamos
relaci√≥n
SNR
f√°cil
receptor
extraer
se√±al
transmitida
ruido
fondo
Figura
6.3
adaptada
Holland
2001
muestra
tasa
errores
bit
BER
Bit
Error
Rate
forma
simple
probabilidad
bit
transmitido
llegue
forma
err√≥nea
receptor
funci√≥n
SNR
t√©cnicas
modulaci√≥n
distin-
tas
utilizadas
codificar
informaci√≥n
transmisi√≥n
canal
inal√°m-
brico
idealizado
teor√≠a
modulaci√≥n
codificaci√≥n
t√©cnicas
extracci√≥n
se√±al
an√°lisis
BER
caen
alcance
libro
consulte
Schwartz
1980
desea
obtener
informaci√≥n
temas
modos
Figura
6.3
ilustra
caracter√≠sticas
capa
f√≠sica
importantes
hora
comprender
protocolos
comunicaci√≥n
inal√°mbrica
capas
superiores
determinado
esquema
modulaci√≥n
SNR
menor
BER
emisor
incrementar
SNR
aumentando
potencia
trans-
misi√≥n
reducir
probabilidad
trama
reciba
forma
err√≥nea
aumentando
potencia
transmisi√≥n
Observe
ventaja
pr√°ctica
incrementa
potencia
all√°
umbral
ejemplo
reducir
tasa
errores
bit
BER
10
-12
10-13
desventajas
asociadas
incremento
potencia
transmisi√≥n
emisor
gastar
energ√≠a
consideraci√≥n
importancia
usua-
rios
m√≥viles
alimentados
bater√≠as
probable
transmisiones
emi-
sor
interfieran
emisores
v√©ase
Figura
6.4(b
504
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
Figura
6.3
Tasa
errores
bit
velocidad
transmisi√≥n
SNR
10‚Äì7
10‚Äì6
10‚Äì5
10‚Äì4
10‚Äì3
10‚Äì2
10‚Äì1
10
20
30
400
SNR
dB
BER
QAM16
Mbps
QAM256
Mbps
BPSK
1Mpbs
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
504‚Ä¢
SNR
dada
t√©cnica
modulaci√≥n
velocidad
transmisi√≥n
bit
alta
independientemente
bits
err√≥neos
tasa
erro-
res
bit
ejemplo
Figura
6.3
SNR
10
dB
modulaci√≥n
BPSK
velocidad
transmisi√≥n
Mbps
BER
inferior
10
-7
mien-
modulaci√≥n
QAM16
velocidad
transmisi√≥n
Mbps
BER
10-1
alta
resultar
√∫til
pr√°ctica
SNR
20
dB
modulaci√≥n
QAM16
velocidad
transmisi√≥n
Mbps
BER
10-7
modulaci√≥n
BPSK
velocidad
transmisi√≥n
Mbps
BER
baja
cae
literalmente
gr√°-
fico
tolerar
BER
10
-7
velocidad
transmisi√≥n
ofrecida
QAM16
har√≠a
t√©cnica
modulaci√≥n
preferida
situaci√≥n
consideraciones
conducen
caracter√≠stica
describimos
continuaci√≥n
utilizarse
selecci√≥n
din√°mica
t√©cnica
modulaci√≥n
capa
f√≠sica
adaptar
t√©cnica
modulaci√≥n
condiciones
canal
SNR
BER
variar
resultado
movilidad
cambios
entorno
sistemas
celulares
transmisi√≥n
datos
redes
802.16
WiMAX
802.11
WiFi
examinaremos
Secci√≥n
6.3
t√©cnicas
codificaci√≥n
modula-
ci√≥n
adaptativas
permite
ejemplo
selecci√≥n
t√©cnica
modulaci√≥n
proporcione
m√°xima
velocidad
transmisi√≥n
sujeta
restricci√≥n
relativa
BER
determinadas
caracter√≠sticas
canal
tasa
errores
bit
alta
variable
tiempo
√∫nica
diferencia
enlace
cableado
enlace
inal√°mbrico
Recuerde
caso
enlaces
cablea-
difusi√≥n
nodos
reciben
transmisiones
realizadas
restantes
nodos
caso
enlaces
inal√°mbricos
situaci√≥n
simple
muestra
Figura
6.4
Suponga
estaci√≥n
transmitiendo
estaci√≥n
B.
Suponga
tam-
bi√©n
estaci√≥n
transmitiendo
estaci√≥n
B.
denominado
problema
terminal
oculto
obstrucciones
f√≠sicas
presentes
entorno
ejemplo
monta√±a
edificio
impedir
escuchen
transmisiones
transmisiones
est√©n
interfiri√©ndose
mutuamente
des-
6.2
CARACTER√çSTICAS
REDES
ENLACES
INAL√ÅMBRICOS
505
BC
Ubicaci√≥n
b.a
0Intensidad
se√±al
Figura
6.4
Problema
terminal
oculto
causado
existencia
obst√°culo
problema
desvanecimiento
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
505tino
B.
muestra
Figura
6.4(a
escenario
resultado
presencia
colisiones
indetectables
receptor
desvanecimiento
intensidad
se√±al
medida
propaga
inal√°mbrico
Figura
6.4(b
ilustra
caso
colocadas
forma
se√±ales
suficientemente
intensas
puedan
ambas
estaciones
detectar
trans-
misiones
se√±ales
intensidad
suficiente
interferir
estaci√≥n
B.
veremos
Secci√≥n
6.3
problemas
terminal
oculto
desvanecimiento
acceso
m√∫ltiple
red
inal√°mbrica
considerablemente
complejo
red
cableada
6.2.1
CDMA
Recuerde
Cap√≠tulo
hosts
comunican
compar-
tido
necesita
protocolo
se√±ales
enviadas
emisores
interfie-
ran
receptores
Cap√≠tulo
descrito
clases
protocolos
acceso
particionamiento
canal
acceso
aleatorio
toma
turnos
Acceso
m√∫lti-
ple
divisi√≥n
c√≥digo
CDMA
Code
Division
Multiple
Access
pertenece
familia
protocolos
particionamiento
canal
protocolo
prevalente
tecnolog√≠as
celulares
redes
LAN
inal√°mbricas
Puesto
CDMA
importante
mundo
inal√°mbrico
echar
r√°pido
vistazo
CDMA
entrar
seccio-
nes
posteriores
analizar
tecnolog√≠as
espec√≠ficas
acceso
inal√°mbrico
protocolo
CDMA
bit
enviado
codifica
multiplic√°ndolo
se√±al
c√≥digo
var√≠a
velocidad
conocida
nombre
velocidad
chip
chipping
rate
secuencia
original
bits
datos
Figura
6.5
muestra
escenario
idealizado
codificaci√≥n
decodificaci√≥n
CDMA
Suponga
definimos
unidad
tiempo
velocidad
llegan
codificador
CDMA
bits
datos
originales
bit
original
datos
transmitir
requiere
partici√≥n
tiempo
bit
di
valor
bit
datos
i-√©sima
partici√≥n
bit
comodidad
matem√°tica
representar
bits
datos
ten-
gan
valor
partici√≥n
bit
subdivide
mini-particio-
nes
Figura
6.5
pr√°ctica
c√≥digo
CDMA
utilizado
emisor
compuesto
serie
valores
cm
valor
+1
ejemplo
Figura
6.5
c√≥digo
CDMA
bits
utilizando
emisor
ilustrar
funciona
CDMA
centrarnos
i-√©simo
bit
datos
di
m-√©sima
mini-partici√≥n
tiempo
transmisi√≥n
bit
di
salida
codifica-
dor
CDMA
Zi
valor
di
multiplicado
m-√©simo
bit
c√≥digo
asignado
CDMA
cm
6.1
mundo
ideal
existieran
emisores
interfiriendo
receptor
recibir√≠a
bits
codificados
Zi
recuperar√≠a
bit
datos
original
di
realizando
c√°lculo
6.2
dZ
ci
mm= 
Zd
ci
m= 
506
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
506El
lector
trabajar
detalles
ejemplo
Figura
6.5
bits
datos
originales
recuperan
efectivamente
correcto
receptor
utilizando
Ecuaci√≥n
6.2
mundo
dista
ideal
anteriormente
CDMA
trabajar
presencia
emisores
interfieren
codificando
transmitiendo
datos
utilizando
c√≥digo
asignado
receptor
CDMA
recuperar
bits
datos
originales
emisor
bits
datos
entremezclados
bits
transmitidos
emisores
CDMA
funciona
suposici√≥n
se√±ales
interferentes
bits
transmitidos
aditivas
signi-
fica
ejemplo
emisores
env√≠an
valor
cuarto
emisor
env√≠a
valor
mini-partici√≥n
se√±al
recibida
receptores
mini-partici√≥n
/H11001
/H110011
/H110021
presencia
m√∫lti-
ples
emisores
emisor
calcula
transmisiones
codificadas
Zs
exactamente
forma
Ecuaci√≥n
6.1
valor
llega
receptor
m-√©sima
6.2
CARACTER√çSTICAS
REDES
ENLACES
INAL√ÅMBRICOS
507
11
-1
-1
-1
-1
11
-1
-1
-1
-1
-1
-1-1-1
-1
-1
-1
-1
Entrada
recibida
partici√≥n
tiempo1
Entrada
recibida
partici√≥n
tiempo
C√≥digo
-1
-1-1-1
-1
-1
-1
-1
1Bits
datos
C√≥digo
11
-1
-1
-1
-1
11
-1
-1
-1
-1
d1
-1
d0
Partici√≥n
tiempo
Emisor
Salida
canal
Zi
Receptor
Zi
Zi
m=1
Partici√≥n
tiempo
Salida
canal
Partici√≥n
tiempo
Salida
canal
Partici√≥n
tiempo
d1
-1
d0
Figura
6.5
ejemplo
simple
CDMA
codificaci√≥n
emisor
decodificaci√≥n
receptor
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
507mini-partici√≥n
i-√©sima
partici√≥n
bit
suma
bits
trans-
mitidos
emisores
dicha
mini-partici√≥n
Sorprendentemente
eligen
cuidadosamente
c√≥digos
emisores
receptor
recuperar
datos
enviados
determinado
emisor
se√±al
agre-
gada
simplemente
utilizando
c√≥digo
emisor
exactamente
forma
Ecuaci√≥n
6.2
6.3
muestra
Figura
6.6
ejemplo
CDMA
emisores
c√≥digo
CDMA
bits
utilizado
emisor
superior
c√≥digo
CDMA
empleado
emisor
inferior
Figura
6.6
ilustra
caso
receptor
recupera
bits
datos
origina-
correspondientes
emisor
superior
Observe
receptor
capaz
extraer
datos
emisor
est√©n
interferidos
transmisi√≥n
correspondiente
emisor
Recuerde
analog√≠a
coctel
Cap√≠tulo
protocolo
CDMA
similar
caso
participantes
reuni√≥n
hablen
m√∫ltiples
idiomas
tales
cir-
cunstancias
seres
humanos
hora
centrarnos
con-
versaci√≥n
manteniendo
idioma
comprendemos
tiempo
filtramos
restantes
conversaciones
explicaciones
CDMA
protocolo
particionamiento
sentido
particiona
espa-
cio
c√≥digos
lugar
tiempo
frecuencia
asigna
nodo
dedi-
espacio
c√≥digos
an√°lisis
CDMA
necesariamente
pr√°ctica
preciso
contemplar
diversas
cuestiones
relativamente
complicadas
lugar
receptores
CDMA
capaces
extraer
se√±al
emisor
concreto
c√≥di-
gos
CDMA
elegirse
cuidadosamente
lugar
an√°lisis
part√≠a
suposici√≥n
intensidades
se√±ales
recibidas
diversos
emisores
iguales
realidad
dif√≠cil
literatura
t√©c-
nica
analizan
cuestiones
relacionadas
CDMA
consulte
Pick-
holtz
1982
Viterbi
1995
detalles
6.3
WiFi
redes
LAN
inal√°mbricas
802.11
Presentes
partes
oficinas
domicilios
particulares
instituciones
educativas
cafeter√≠as
aeropuertos
esquina
calle
redes
LAN
inal√°mbricas
tecnolog√≠as
importantes
redes
acceso
Internet
d√©cada
1990
desarrollaron
tecnolog√≠as
est√°ndares
redes
LAN
inal√°mbricas
clase
concreta
est√°ndares
termi-
nado
emerger
ganador
indiscutible
red
LAN
inal√°mbrica
IEEE
802.11
tam-
dZ
ci
mm= 
ZZi
508
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
5086.3
WIFI
REDES
LAN
INAL√ÅMBRICAS
802.11
509
Receptor
11
-1
-1
-1
-1
11
-1
-1-1
-1
Entrada
recibida
partici√≥n
tiempo
Entrada
recibida
partici√≥n
tiempo
Bits
datos
Bits
datos
11
-1
-1
-1
-1
11
-1
-1-1
-1
C√≥digo
Emisores
-1
-1
-1
-1
C√≥digo
C√≥digo
-2
-2
-2
-2
Canal
Zi
Zi
di
cm=
Zi
cm
m=1
d1
-1
d0
d1
12
222
Zi
di
cm=
11
d0
12
d1
-1
d0
Figura
6.6
ejemplo
CDMA
emisores
bi√©n
conocida
red
WiFi
secci√≥n
examinar
detalle
redes
LAN
inal√°mbricas
802.11
estructura
trama
protocolo
acceso
intercone-
xi√≥n
redes
LAN
802.11
redes
LAN
Ethernet
cableadas
est√°ndares
802.11
tecnolog√≠a
LAN
inal√°mbrica
incluyendo
802.11b
802.11a
802.11
g.
Tabla
6.1
resume
caracter√≠sticas
principales
est√°ndares
momento
escribir
libro
primavera
2009
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
509Est√°ndar
Rango
frecuencias
Unidos
Velocidad
datos
802.11b
2,4‚Äì2,485
GHz
11
Mbps
802.11a
5,1‚Äì5,8
GHz
54
Mbps
802.11
2,4‚Äì2,485
GHz
54
Mbps
Tabla
6.1
Resumen
est√°ndares
IEEE
802.11
dispositivos
802.11
ofrecidos
fabricantes
puntos
acceso
tarjetas
LAN
disponibles
diversos
dispositivos
dual
802.11a
tri-
802.11a
est√°ndares
802.11
comparten
caracter√≠sticas
emplean
protocolo
acceso
CSMA
CA
hablaremos
estructura
trama
capa
enlace
est√°ndares
capacidad
reducir
velocidad
transmisi√≥n
alcanzar
mayores
distancias
est√°ndares
permiten
trabajar
infraestructura
ad
hoc
veremos
muestra
Tabla
6.1
est√°nda-
res
presentan
diferencias
importantes
capa
f√≠sica
tecnolog√≠a
LAN
inal√°mbrica
802.11b
ofrece
velocidad
datos
11
Mbps
opera
banda
frecuencias
licencia
2,4‚Äì2,485
GHz
compitiendo
espec-
tro
frecuencias
tel√©fonos
2,4
GHz
hornos
microondas
redes
LAN
inal√°mbricas
802.1la
operar
velocidades
bit
significativamente
mayores
frecuencia
altas
Operando
frecuencia
redes
LAN
802.11a
distancia
transmisi√≥n
corta
determinado
nivel
potencia
ven
afectadas
problemas
propagaci√≥n
multicamino
redes
LAN
802.11
operan
banda
menor
frecuencia
est√°ndar
802.11b
compatibles
atr√°s
802.11b
red
clientes
802.11b
actualizar
incrementalmente
utilizan
velocidades
trans-
misi√≥n
mayores
est√°ndar
802.11a
permite
usuarios
disfrutar
est√°ndares
est√°ndar
WiFi
802.11n
IEEE
802.11n
2009
pro-
ceso
estandarizaci√≥n
802.11n
utiliza
antenas
entrada
m√∫ltiple
salida
m√∫ltiple
MIMO
Multiple-Input
Multiple-Output
antenas
emisor
antenas
receptor
transmitiendo
recibiendo
se√±ales
Diggavi
2004
proceso
estandarizaci√≥n
concluido
dis-
ponibles
productos
pre-est√°ndar
primeras
pruebas
realizadas
muestran
pr√°ctica
tasas
transferencia
transmisi√≥n
200
Mbps
Newman
2008
problema
importante
actual
borrador
est√°ndar
forma
dispositivos
802.11n
interactuar√°n
dispositivos
802.11a
existentes
6.3.1
arquitectura
802.11
Figura
6.7
ilustra
principales
componentes
arquitectura
red
LAN
inal√°m-
brica
802.11
componente
fundamental
arquitectura
802.11
conjunto
servi-
cio
b√°sico
BSS
Basic
Service
Set
BSS
contiene
estaciones
inal√°mbricas
510
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
510una
estaci√≥n
base
central
conocida
nombre
punto
acceso
AP
Access
Point
terminolog√≠a
802.11
Figura
6.7
muestra
punto
acceso
BSS
puntos
acceso
interconectan
dispositivo
interconexi√≥n
con-
mutador
router
Internet
red
dom√©stica
t√≠pica
existir√°
punto
acceso
router
normalmente
integrados
unidad
conec-
tar√°n
BSS
Internet
sucede
dispositivos
Ethernet
estaci√≥n
inal√°mbrica
802.11
direcci√≥n
MAC
bytes
almacenada
firmware
tarjeta
adap-
tadora
estaci√≥n
tarjeta
interfaz
red
802.11
punto
acceso
direcci√≥n
MAC
interfaz
inal√°mbrica
sucede
Ethernet
direcciones
MAC
administradas
IEEE
teor√≠a
global-
mente
√∫nicas
Secci√≥n
6.1
redes
LAN
inal√°mbricas
incorporan
pun-
tos
acceso
suelen
denominarse
redes
LAN
inal√°mbricas
infraestructura
infraestructura
puntos
acceso
infraestructura
Ethernet
cableada
interconecta
puntos
acceso
router
Figura
6.8
muestra
estaciones
IEEE
802.11
agruparse
formar
red
ad
hoc
red
con-
trol
central
conexiones
mundo
exterior
caso
red
for-
mada
marcha
serie
dispositivos
m√≥viles
encontrado
necesidad
comunicarse
encuentran
infraestructura
red
preexistente
ubicaci√≥n
red
ad
hoc
formarse
serie
personas
computadoras
port√°tiles
juntan
ejemplo
sala
conferencias
tren
veh√≠culo
quieren
intercambiar
datos
ausencia
punto
acceso
centralizado
generado
enorme
inter√©s
redes
ad
hoc
dispositivos
port√°tiles
capaces
comunicarse
contin√∫an
proliferando
secci√≥n
centraremos
atenci√≥n
redes
LAN
inal√°mbricas
infraestructura
6.3
WIFI
REDES
LAN
INAL√ÅMBRICAS
802.11
511
InternetConmutador
router
AP
BSS
BSS
AP
Figura
6.7
Arquitectura
red
LAN
IEEE
802.11
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
511Canales
asociaci√≥n
arquitectura
802.11
estaci√≥n
inal√°mbrica
necesita
asociarse
punto
acceso
enviar
recibir
datos
capa
red
est√°ndares
802.11
utilizan
mecanismo
asociaci√≥n
analizaremos
tema
espec√≠ficamente
contexto
IEEE
802.11b
g.
administrador
red
instala
punto
acceso
asigna
Identificador
conjunto
servicio
SSID
Service
Set
Identifier
palabras
punto
acceso
ejemplo
ven
redes
disponibles
Microsoft
Windows
XP
apa-
rece
lista
muestra
identificador
SSID
punto
acceso
est√©
alcance
administrador
asignar
n√∫mero
canal
punto
acceso
comprender
n√∫meros
canal
recuerde
802.11
opera
rango
frecuen-
cias
2,4
GHz
2,485
GHz
banda
85
MHz
802.11
define
11
canales
parcialmente
solapados
Dados
canales
cualesquiera
diremos
solapan
separados
canales
particular
conjunto
canales
11
√∫nico
conjunto
canales
solapados
administrador
crear
red
LAN
inal√°mbrica
velocidad
m√°xima
transmisi√≥n
agregada
33
Mbps
instalando
puntos
acceso
802.11b
ubicaci√≥n
f√≠sica
asig-
nando
canales
11
puntos
acceso
interconectando
puntos
acceso
conmutador
conocimientos
b√°sicos
canales
802.11
descri-
bir
situaci√≥n
interesante
resulta
rara
jungla
WiFi
jungla
WiFi
ubicaci√≥n
f√≠sica
estaci√≥n
inal√°mbrica
recibiendo
se√±al
suficientemente
intensa
puntos
acceso
ejemplo
cafeter√≠as
ciudad
York
estaci√≥n
inal√°mbrica
captar
se√±al
numerosos
puntos
acceso
cercanos
puntos
acceso
gestionado
cafeter√≠a
encontrarse
viviendas
situadas
cerca
puntos
acceso
probablemente
ubicado
subred
IP
asignado
canal
independiente
Suponga
entramos
dicha
jungla
WiFi
computadora
port√°til
buscando
acceder
Internet
inal√°mbrica
Suponga
pun-
tos
acceso
jungla
WiFi
obtener
acceso
Internet
estaci√≥n
512
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
BSS
Figura
6.8
red
ad
hoc
IEEE
802.11
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
512inal√°mbrica
necesita
unirse
exactamente
subredes
necesitar√°
asociarse
exactamente
puntos
acceso
Asociarse
estaci√≥n
inal√°mbrica
crear√°
cable
virtual
punto
acceso
Espec√≠-
ficamente
punto
acceso
asociado
enviar√°
tramas
datos
tramas
contienen
datos
ejemplo
datagrama
estaci√≥n
inal√°mbrica
nues-
tra
estaci√≥n
inal√°mbrica
enviar√°
tramas
datos
Internet
punto
acceso
asociado
asocia
estaci√≥n
inal√°mbrica
punto
acceso
concreto
importante
estaci√≥n
inal√°mbrica
puntos
acceso
jungla
est√°ndar
802.11
requiere
punto
acceso
env√≠e
forma
peri√≥dica
tramas
baliza
beacon
frames
incluye
direcci√≥n
MAC
identificador
SSID
punto
acceso
estaci√≥n
inal√°mbrica
puntos
acceso
enviando
tramas
baliza
explora
canales
buscando
tramas
baliza
punto
acceso
proximidades
transmitiendo
canal
jungla
Habiendo
determi-
nado
puntos
acceso
disponibles
tramas
baliza
seleccionamos
host
inal√°mbrico
selecciona
puntos
acceso
cabo
aso-
ciaci√≥n
est√°ndar
802.11
especifica
algoritmo
seleccionar
puntos
acceso
disponibles
asociarse
algoritmo
deja
arbitrio
dise√±adores
soft-
ware
firmware
802.11
host
inal√°mbrico
Normalmente
host
elige
punto
acceso
cuya
trama
baliza
recibe
m√°xima
intensidad
se√±al
alta
intensidad
se√±al
resulta
conveniente
vea
ejemplo
Figura
6.3
intensidad
se√±al
√∫nica
caracter√≠stica
punto
acceso
influir√°
rendimiento
host
perciba
particular
punto
acceso
seleccionado
intensidad
se√±al
sobrecargado
serie
hosts
asociados
necesitar√°n
compartir
ancho
banda
inal√°mbrico
disponible
punto
acceso
deja
seleccionar
punto
acceso
descargado
intensidad
se√±al
ligeramente
menor
recientemente
propuesto
diversas
formas
elecci√≥n
puntos
acceso
Vasudevan
2005
Nicholson
2006
Sudaresan
2006
interesante
discusi√≥n
pr√°ctica
acerca
mide
inten-
sidad
se√±al
consulte
Bardwell
2004
proceso
exploraci√≥n
canales
escucha
tramas
baliza
conoce
nombre
exploraci√≥n
pasiva
v√©ase
Figura
6.9a
host
inal√°mbrico
exploraci√≥n
activa
difundiendo
trama
sondeo
recibida
puntos
acceso
caigan
alcance
host
inal√°mbrico
muestra
Figura
6.9b
puntos
acceso
responden
trama
solicitud
son-
deo
trama
respuesta
sondeo
host
inal√°mbrico
elegir
punto
acceso
asociarse
hayan
respondido
seleccionar
AP
asociarse
host
inal√°mbrico
env√≠a
trama
solicitud
asociaci√≥n
punto
acceso
responde
trama
respuesta
asociaci√≥n
Observe
solicitud
respuesta
necesa-
rio
utiliza
exploraci√≥n
activa
punto
acceso
respon-
diendo
trama
inicial
solicitud
sondeo
posiblemente
numerosos
puntos
acceso
hayan
respondido
seleccionar
host
asociarse
cliente
DHCP
seleccionar
m√∫ltiples
servidores
DHCP
v√©ase
Figura
4.21
asociado
punto
acceso
host
unir√°
6.3
WIFI
REDES
LAN
INAL√ÅMBRICAS
802.11
513
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
513subred
sentido
direccionamiento
IP
Secci√≥n
4.4.2
pertenezca
punto
acceso
Normalmente
host
enviar√°
mensaje
descubrimiento
DHCP
v√©ase
Figura
4.21
subred
punto
acceso
obtener
direcci√≥n
IP
subred
obtenida
direcci√≥n
resto
mundo
ver√°
host
simplemente
host
cualquiera
direcci√≥n
IP
perteneciente
dicha
subred
crear
asociaci√≥n
punto
acceso
concreto
estaci√≥n
inal√°mbrica
autenticarse
punto
acceso
redes
LAN
inal√°mbricas
802.11
proporcionan
diversas
alternativas
autenticaci√≥n
acceso
t√©cnica
uti-
lizada
compa√±√≠as
permite
acceso
red
inal√°mbrica
bas√°ndose
direcci√≥n
MAC
estaci√≥n
t√©cnica
empleada
caf√©s
Internet
utiliza
nombres
usuario
contrase√±as
casos
punto
acceso
comunica
normalmente
servidor
autenticaci√≥n
reenviando
informaci√≥n
intercambiada
estaci√≥n
terminal
inal√°mbrica
servidor
autenticaci√≥n
utilizando
protocolo
RADIUS
RFC
2865
DIAMETER
RFC
3588
Separar
servidor
autentica-
ci√≥n
punto
acceso
permite
√∫nico
servidor
autenticaci√≥n
proporcione
servi-
cio
puntos
acceso
distintos
centralizando
sensibles
decisiones
relativas
autenticaci√≥n
acceso
√∫nico
servidor
manteniendo
costes
complejidad
puntos
acceso
relativamente
bajos
Veremos
Secci√≥n
8.8
protocolo
IEEE
802.11i
define
aspectos
seguridad
familia
proto-
colos
802.11
adopta
precisamente
enfoque
6.3.2
protocolo
MAC
802.11
asociada
estaci√≥n
inal√°mbrica
punto
acceso
estaci√≥n
comenzar
enviar
recibir
tramas
datos
punto
acceso
m√∫ltiples
estaciones
desear
transmitir
tramas
datos
tiempo
canal
preciso
utilizar
protocolo
acceso
m√∫ltiple
514
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
32
H1
AP
2AP
BBS
a.
Exploraci√≥n
pasiva
puntos
acceso
b.
Exploraci√≥n
activa
BBS
43
H1
AP
2AP
BBS
BBS
Figura
6.9
Exploraci√≥n
activa
pasiva
puntos
acceso
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
514coordinar
transmisiones
escenario
estaci√≥n
estaci√≥n
ina-
l√°mbrica
punto
acceso
explica
Cap√≠tulo
Secci√≥n
6.2.1
t√©rminos
generales
clases
protocolos
acceso
m√∫ltiple
particionamien-
to
canal
incluyendo
CDMA
acceso
aleatorio
toma
turnos
Inspirados
enorme
√©xito
Ethernet
protocolo
acceso
aleatorio
dise√±adores
arquitec-
tura
802.11
seleccionaron
protocolo
acceso
aleatorio
redes
LAN
inal√°mbricas
802.11
protocolo
acceso
aleatorio
conoce
CSMA
evitaci√≥n
colisio-
nes
sucintamente
CSMA
CA
Collision
Avoidance
sucede
pro-
tocolo
CSMA
CD
Ethernet
siglas
CSMA
CSMA
CA
referencia
acceso
m√∫ltiple
sondeo
portadora
significa
estaci√≥n
sondea
canal
transmitir
abstiene
transmitir
detecta
canal
ocu-
pado
Ethernet
802.11
utilizan
acceso
aleatorio
sondeo
portadora
protocolos
MAC
presentan
diferencias
importantes
lugar
utili-
zar
detecci√≥n
colisiones
802.11
utiliza
t√©cnicas
evitaci√≥n
colisiones
lugar
relativamente
altas
tasas
errores
bit
canales
inal√°m-
bricos
802.11
diferencia
Ethernet
utiliza
esquema
reconocimiento
retransmi-
si√≥n
ARQ
capa
enlace
describen
esquemas
evitaci√≥n
colisiones
reconocimiento
capa
enlace
802.11
Recuerde
Secciones
5.3
5.5
algoritmo
detecci√≥n
colisiones
Ethernet
estaci√≥n
Ethernet
escucha
canal
medida
transmite
detecta
mien-
transmitiendo
estaci√≥n
transmitiendo
aborta
transmisi√≥n
transmitir
esperar
periodo
tiempo
peque√±o
aleatorio
diferencia
protocolo
Ethernet
802.3
protocolo
MAC
802.11
implementa
mecanismo
detecci√≥n
colisiones
razones
importantes
‚Ä¢L
estaci√≥n
recibir
determinar
estaci√≥n
transmitiendo
tiempo
Puesto
intensidad
se√±al
recibida
normalmente
peque√±a
comparamos
intensidad
se√±al
transmitida
adaptador
802.11
resulta
costoso
construir
hardware
detectar
colisi√≥n
‚Ä¢T
tiempo
supuestamente
abortar
transmisi√≥n
detecte
canal
ocupado
adaptador
seguir√≠a
capaz
detectar
colisiones
problemas
terminal
oculto
desvanecimiento
explicado
Sec-
ci√≥n
6.2
Puesto
redes
LAN
inal√°mbricas
802.11
utilizan
detecci√≥n
colisiones
estaci√≥n
empieza
transmitir
trama
transmite
totalidad
estaci√≥n
comienza
transmitir
vuelta
atr√°s
cabr√≠a
esperar
transmisi√≥n
tramas
completas
especial
tramas
largas
colisio-
nes
abundantes
degradar
significativamente
rendimiento
protocolo
acceso
m√∫ltiple
reducir
probabilidad
colisi√≥n
802.11
emplea
t√©cnicas
evitaci√≥n
colisiones
explicaremos
entrar
tema
evitaci√≥n
colisiones
necesitamos
examinar
lugar
esquema
reconocimiento
capa
enlace
802.11
Recuerde
Secci√≥n
6.2
estaci√≥n
LAN
inal√°mbrica
env√≠a
trama
llegar
intacta
estaci√≥n
destino
diversas
razones
resol-
probabilidad
desde√±able
fallo
protocolo
MAC
802.11
utiliza
reconoci-
6.3
WIFI
REDES
LAN
INAL√ÅMBRICAS
802.11
515
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
515mientos
capa
enlace
muestra
Figura
6.10
estaci√≥n
des-
tino
recibe
trama
pasa
prueba
comprobaci√≥n
CRC
espera
corto
periodo
tiempo
conocido
nombre
Espaciado
corto
tramas
SIFS
Short
Inter-
frame
Spacing
devuelve
trama
reconocimiento
estaci√≥n
transmisora
recibe
trama
reconocimiento
periodo
tiempo
especificado
supone
producido
error
retransmite
trama
utilizando
protocolo
CSMA
CA
acceder
canal
recibe
trama
reconocimiento
n√∫mero
fijo
retransmisiones
estaci√≥n
transmisora
vencida
descarta
trama
Habiendo
explorado
emplea
802.11
reconocimientos
capa
enlace
disposici√≥n
describir
protocolo
CSMA
CA
802.11
Suponga
esta-
ci√≥n
estaci√≥n
inal√°mbrica
punto
acceso
dispone
trama
transmitir
estaci√≥n
detecta
inicialmente
canal
inactivo
transmite
trama
corto
periodo
tiempo
conocido
nombre
Espacio
distribuido
tramas
DIFS
Distributed
Inter-frame
Space
v√©ase
Figura
6.10
caso
contrario
estaci√≥n
selecciona
valor
espera
backoff
aleatorio
efect√∫a
atr√°s
valor
detecta
canal
inactivo
detecta
canal
ocupado
valor
contador
permanece
congelado
contador
alcanza
valor
cero
observe
suceder
detecta
canal
inactivo
estaci√≥n
transmite
trama
completa
espera
recibir
reconocimiento
516
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
Destino
DIFS
SIFS
datos
ACK
Origen
Figura
6.10
802.11
utiliza
reconocimientos
ACK
capa
enlace
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
5164
recibe
trama
reconocimiento
estaci√≥n
transmisora
trama
recibida
correctamente
estaci√≥n
destino
estaci√≥n
trama
enviar
comienza
protocolo
CSMA
CA
paso
recibe
trama
reconocimiento
estaci√≥n
transmisora
vuelva
entrar
fase
backoff
paso
seleccionando
valor
aleatorio
intervalo
Recuerde
protocolo
acceso
m√∫ltiple
CSMA
CD
Ethernet
Secci√≥n
5.5.2
estaci√≥n
comienza
transmitir
detecta
canal
inactivo
CSMA
CA
estaci√≥n
abstiene
transmitir
efect√∫a
atr√°s
detecte
actividad
canal
CSMA
CD
CSMA/
CA
adoptan
enfoques
distintos
punto
responder
cuesti√≥n
consideremos
escenario
estaciones
trama
transmitir
estaciones
transmite
inmediatamente
ambas
detectan
estaci√≥n
transmi-
tiendo
CSMA
CD
Ethernet
ambas
estaciones
transmitir√≠an
detec-
taran
estaci√≥n
dejado
transmitir
provocar√≠a
colisi√≥n
serio
problema
CSMA
CD
ambas
estaciones
abortar√≠an
transmisiones
evitar√≠an
transmitir
in√∫tilmente
resto
tramas
802.11
situaci√≥n
distinta
Puesto
802.11
detecta
colisiones
aborta
conse-
cuencia
transmisiones
trama
sufre
colisi√≥n
transmitida
totalidad
objetivo
802.11
evitar
colisiones
802.11
estaciones
detectan
canal
ocupado
ambas
entran
inmediatamente
espera
aleatoria
cabe
esperar
ambas
seleccionen
valores
espera
backoff
dichos
valores
verdaderamente
distintos
canal
pase
inactivo
estaciones
empezar√°
transmitir
estaciones
ocultas
ojos
estaci√≥n
perdedora
escuchar√°
se√±al
estaci√≥n
ganadora
congelar√°
atr√°s
abstendr√°
transmitir
estaci√≥n
ganadora
completado
transmisi√≥n
forma
evita
cos-
tosa
colisi√≥n
802.11
siguen
pudi√©ndose
producir
colisiones
esce-
nario
estaciones
ocultas
ojos
estaciones
seleccionar
valores
espera
aleatorios
suficientemente
trans-
misi√≥n
procedente
estaci√≥n
comience
alcanzar
esta-
ci√≥n
Recuerde
encontrado
anteriormente
problema
hablar
algoritmos
acceso
aleatorio
contexto
Figura
5.14
Enfrent√°ndose
problema
terminales
ocultos
RTS
CTS
protocolo
MAC
802.11
incluye
excelente
opcional
esquema
reserva
ayuda
evitar
colisiones
presencia
terminales
ocultos
analizar
esquema
contexto
Figura
6.11
muestra
estaciones
ina-
l√°mbricas
punto
acceso
Ambas
estaciones
inal√°mbricas
caen
alcance
punto
acceso
cuya
√°rea
cobertura
muestra
c√≠rculo
sombreado
ambas
relacionadas
punto
acceso
desvanecimiento
rangos
se√±al
estaciones
inal√°mbricas
limitados
interior
c√≠rculos
sombreados
Figura
6.11
consecuencia
estaciones
inal√°mbricas
oculta
ojos
oculta
punto
acceso
Consideremos
terminales
ocultos
problem√°ticos
Suponga
estaci√≥n
H1
transmitiendo
trama
mitad
transmisi√≥n
H1
6.3
WIFI
REDES
LAN
INAL√ÅMBRICAS
802.11
517
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
517estaci√≥n
H2
enviar
trama
punto
acceso
H2
escuchar
transmisi√≥n
H1
esperar√°
intervalo
DIFS
transmitir√°
trama
provocando
colisi√≥n
canal
desperdiciar√°
periodo
completo
transmisi√≥n
H1
transmisi√≥n
H2
evitar
problema
protocolo
IEEE
802.11
permite
estaci√≥n
utilizar
corta
trama
control
Solicitud
transmisi√≥n
RTS
Request
to
Send
corta
trama
control
Preparado
enviar
CTS
Clear
to
Send
reservar
acceso
canal
emisor
enviar
trama
DATA
enviar
trama
RTS
punto
acceso
indicando
tiempo
requerido
transmitir
trama
DATA
trama
reconocimiento
ACK
punto
acceso
recibe
trama
RTS
res-
ponde
difundiendo
trama
CTS
trama
CTS
sirve
prop√≥sitos
distintos
propor-
ciona
emisor
permiso
expl√≠cito
enviar
informa
estaciones
transmitir
periodo
tiempo
reservado
Figura
6.12
transmitir
trama
DATA
H1
difunde
trama
RTS
escuchada
estaciones
situadas
√°rea
cobertura
incluyendo
punto
acceso
continuaci√≥n
punto
acceso
responde
trama
CTS
escuchada
estaciones
√°rea
cobertura
incluyendo
H1
H2
estaci√≥n
H2
habiendo
escuchado
trama
CTS
abstendr√°
transmitir
tiempo
especificado
trama
CTS
tramas
RTS
CTS
DATA
ACK
muestran
Figura
6.12
tramas
RTS
CTS
mejorar
rendimiento
formas
impor-
tantes
problema
estaciones
ocultas
queda
mitigado
trama
DATA
larga
transmitir√°
reservado
canal
Puesto
tramas
RTS
CTS
cortas
colisi√≥n
implique
trama
RTS
CTS
durar√°
duren
tramas
cortas
RTS
CTS
transmitidas
tramas
RTS
CTS
correctamente
tramas
DATA
ACK
siguientes
deber√≠an
transmitirse
colisiones
518
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
APH1
H2
Figura
6.11
Ejemplo
terminales
ocultos
H1
oculto
ojos
H2
viceversa
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
518Le
animamos
comprobar
funcionamiento
applet
802.11
disponible
sitio
web
libro
applet
interactivo
ilustra
protocolo
CSMA
CA
incluyendo
secuencia
intercambio
RTS
CTS
intercambio
RTS
CTS
ayudar
reducir
colisiones
intro-
duce
retardo
consume
recursos
canal
raz√≥n
intercambio
RTS
CTS
sola-
mente
utiliza
utiliza
absoluto
reservar
canal
transmisi√≥n
trama
DATA
larga
pr√°ctica
estaci√≥n
inal√°mbrica
establecer
umbral
RTS
secuencia
RTS
CTS
utilice
√∫nicamente
trama
transmitir
umbral
estaciones
inal√°mbricas
valor
umbral
RTS
predeterminado
longitud
m√°xima
trama
secuencia
RTS
CTS
omite
tramas
DATA
enviadas
6.3
WIFI
REDES
LAN
INAL√ÅMBRICAS
802.11
519
Destino
nodos
restantes
Diferir
acceso
Origen
DIFS
ACK
SIFS
SIFS
SIFS
DATA
CTS
CTS
ACK
RTS
Figura
6.12
Evitaci√≥n
colisiones
utilizando
tramas
RTS
CTS
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
519Utilizaci√≥n
802.11
enlace
punto
punto
an√°lisis
centrado
momento
802.11
configuraci√≥n
acceso
m√∫ltiple
necesario
mencionar
nodos
dispone
antena
direccional
apuntar
antenas
nodo
ejecutar
protocolo
802.11
esencialmente
enlace
punto
punto
coste
hardware
802.11
comercial
utilizaci√≥n
antenas
direccionales
potencia
transmisi√≥n
incrementada
permite
utilizar
802.11
barato
pro-
porcionar
conexiones
punto
punto
inal√°mbricas
distancias
decenas
kil√≥metros
Raman
2007
describe
dichas
redes
inal√°mbricas
multisalto
operando
llanuras
rurales
Ganges
India
contienen
enlaces
802.11
punto
punto
6.3.3
trama
IEEE
802.11
trama
802.11
comparte
similitudes
trama
Ethernet
con-
diversos
campos
espec√≠ficos
enlaces
inal√°mbricos
trama
802.11
muestra
Figura
6.13
n√∫meros
situados
campo
trama
representan
longitudes
campos
bytes
n√∫meros
situados
subcampos
campo
control
trama
representan
longitudes
subcampos
bits
Examinemos
campos
trama
subcampos
importantes
campo
control
trama
Campos
carga
√∫til
CRC
coraz√≥n
trama
carga
√∫til
normalmente
compuesta
datagrama
IP
paquete
ARP
campo
longitud
2.312
bytes
normalmente
longitud
inferior
1.500
bytes
conteniendo
campo
datagrama
IP
paquete
ARP
trama
Ethernet
trama
802.11
incluye
c√≥digo
redundancia
c√≠clica
CRC
32
bits
receptor
detectar
errores
bit
trama
recibida
visto
errores
bit
comunes
redes
LAN
inal√°mbricas
redes
LAN
cableadas
CRC
√∫til
Campos
direcci√≥n
diferencia
llamativa
trama
802.11
campos
direc-
ci√≥n
contener
direcci√≥n
MAC
bytes
utilizan
campos
direcci√≥n
bastar√≠a
campo
MAC
origen
campo
MAC
destino
sucede
Eth
ernet
Resulta
campos
direcci√≥n
necesarios
prop√≥sitos
comunicaci√≥n
red
espec√≠ficamente
mover
datagrama
capa
red
estaci√≥n
inal√°mbrica
interfaz
router
punto
acceso
cuarto
campo
direcci√≥n
utiliza
puntos
acceso
reenv√≠an
tramas
ad
hoc
Puesto
con-
siderando
redes
infraestructura
centrarnos
campos
direcci√≥n
est√°ndar
802.11
define
campos
‚Ä¢D
estaci√≥n
inal√°mbrica
transmite
trama
direcci√≥n
MAC
dicha
estaci√≥n
inser-
tar√°
campo
Direcci√≥n
forma
similar
punto
acceso
trans-
520
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
520mite
trama
campo
Direcci√≥n
insertar√°
direcci√≥n
MAC
punto
acceso
‚Ä¢E
Direcci√≥n
contiene
direcci√≥n
MAC
estaci√≥n
inal√°mbrica
recibir
trama
estaci√≥n
inal√°mbrica
m√≥vil
transmite
trama
Direcci√≥n
contendr√°
direcci√≥n
MAC
punto
acceso
destino
forma
simi-
lar
punto
acceso
transmite
trama
Direcci√≥n
contendr√°
direcci√≥n
MAC
estaci√≥n
inal√°mbrica
destino
‚Ä¢P
acceso
estaciones
inal√°mbricas
forma
subred
dicha
subred
conecta
subredes
interfaz
router
campo
Direcci√≥n
con-
direcci√≥n
MAC
interfaz
router
entender
prop√≥sito
campo
Direcci√≥n
veamos
ejemplo
comu-
nicaci√≥n
red
contexto
Figura
6.14
figura
puntos
acceso
responsable
serie
estaciones
inal√°mbricas
puntos
acceso
conexi√≥n
directa
router
conecta
red
Internet
global
Debemos
recordar
punto
acceso
dispositivo
capa
enlace
IP
comprende
direcciones
IP
Considere
proceso
transferir
datagrama
interfaz
router
R1
estaci√≥n
inal√°mbrica
H1
router
consciente
punto
acceso
H1
perspectiva
router
H1
simplemente
host
subredes
router
conectado
‚Ä¢E
grama
utiliza
ARP
determinar
direcci√≥n
MAC
H1
red
LAN
Ethernet
normal
obtener
direcci√≥n
MAC
H1
interfaz
rou-
ter
R1
encapsula
datagrama
trama
Ethernet
campo
direcci√≥n
origen
trama
contiene
direcci√≥n
MAC
R1
campo
direcci√≥n
des-
tino
contiene
direcci√≥n
MAC
H1
‚Ä¢C
802.3
trama
802.11
transmitirla
canal
inal√°mbrico
punto
acceso
rellena
campos
Direcci√≥n
Direcci√≥n
direcci√≥n
MAC
H1
direcci√≥n
MAC
respectivamente
descrito
anteriormente
Direcci√≥n
punto
acceso
inserta
direcci√≥n
MAC
R1
H1
6.3
WIFI
REDES
LAN
INAL√ÅMBRICAS
802.11
521
Control
trama
2241
26
Trama
n√∫meros
indican
longitud
campo
bytes
Direcci√≥n
1Duraci√≥n
Carga
√∫til
CRC
Versi√≥n
protocolo
AP
AP
frag
Gesti√≥n
potencia
datos
Direcci√≥n
Direcci√≥n
Direcci√≥n
Control
secuencia
Tipo
Subtipo
Reintentar
WEP
Rsvd
Campo
control
trama
expandido
n√∫meros
indican
longitud
subcampos
bits
Figura
6.13
Trama
802.11
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
521puede
determinar
direcci√≥n
direcci√≥n
MAC
interfaz
router
envi√≥
datagrama
subred
Considere
sucede
estaci√≥n
inal√°mbrica
H1
responde
transfiriendo
datagrama
H1
R1
H1
crea
trama
802.11
rellenando
campos
Direcci√≥n
Direcci√≥n
direc-
ci√≥n
MAC
punto
acceso
H1
respectivamente
descrito
ante-
riormente
Direcci√≥n
H1
inserta
direcci√≥n
MAC
R1
punto
acceso
recibe
trama
802.11
convierte
trama
Ethernet
campo
direcci√≥n
origen
trama
direcci√≥n
MAC
H1
campo
direcci√≥n
destino
direcci√≥n
MAC
R1
campo
Direcci√≥n
permite
punto
acceso
determinar
direcci√≥n
MAC
destino
apro-
piada
hora
construir
trama
Ethernet
resumen
campo
Direcci√≥n
desempe√±a
papel
crucial
comunicaci√≥n
red
BSS
red
LAN
cableada
Campos
N√∫mero
secuencia
Duraci√≥n
Control
trama
Recuerde
802.11
estaci√≥n
recibe
correctamente
trama
proce-
dente
estaci√≥n
devuelve
mensaje
reconocimiento
Puesto
reconoci-
mientos
perderse
estaci√≥n
transmisora
enviar
m√∫ltiples
copias
determinada
trama
vimos
an√°lisis
protocolo
rdt2.1
Secci√≥n
3.4.1
n√∫meros
secuencia
permite
receptor
distinguir
trama
reci√©n
trans-
mitida
retransmisi√≥n
trama
campo
n√∫mero
secuencia
522
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
Internet
Router
AP
H1
R1
BSS
BSS
AP
Figura
6.14
campos
direcci√≥n
tramas
802.11
env√≠o
tramas
H1
R1
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
522trama
802.11
sirve
capa
enlace
exactamente
prop√≥sito
serv√≠a
capa
transporte
Cap√≠tulo
Recuerde
protocolo
802.11
permite
estaci√≥n
transmisora
reservar
canal
periodo
tiempo
incluye
tiempo
transmitir
trama
datos
tiempo
transmitir
trama
reconocimiento
valor
duraci√≥n
incluido
campo
Duraci√≥n
trama
tramas
datos
tramas
RTS
CTS
muestra
Figura
6.13
campo
control
trama
incluye
sub-
campos
limitarnos
comentar
cosas
acerca
subcampos
impor-
tantes
exposici√≥n
completa
consultar
especificaci√≥n
802.11
Held
2001
Crow
1997
IEEE
802.11
1999
campos
tipo
subtipo
utilizan
dis-
tinguir
tramas
asociaci√≥n
RTS
CTS
ACK
datos
campos
utilizan
definir
significados
campos
direcci√≥n
significa-
cambian
dependiendo
utilizando
ad
hoc
infraestruc-
tura
caso
dependiendo
enviando
trama
estaci√≥n
inal√°mbrica
punto
acceso
Finalmente
campo
WEP
indica
empleando
cifrado
hablaremos
WEP
Cap√≠tulo
8)
6.3.4
Movilidad
subred
IP
incrementar
rango
f√≠sico
red
LAN
inal√°mbrica
empresas
universidades
suelen
implantar
BSS
subred
IP
plantea
naturalmente
pro-
blema
movilidad
distintos
BSS
moverse
estaciones
ina-
l√°mbricas
forma
transparente
BSS
mantienen
serie
sesiones
TCP
activas
veremos
subsecci√≥n
movilidad
gestionarse
forma
relativamente
sencilla
BSS
forman
subred
esta-
ciones
desplazan
subredes
contiguas
falta
protocolos
complejos
ges-
ti√≥n
movilidad
estudiaremos
Secciones
6.5
6.6
Examinemos
ejemplo
espec√≠fico
movilidad
diversos
BSS
subred
Figura
6.15
muestra
BSS
interconectados
host
H1
des-
plaza
BSS1
BSS2
Puesto
ejemplo
dispositivo
interconexi√≥n
conecta
BSS
router
estaciones
BSS
incluyendo
6.3
WIFI
REDES
LAN
INAL√ÅMBRICAS
802.11
523
BSS
BSS
H1
Conmutador
AP
AP
Figura
6.15
Movilidad
subred
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
523puntos
acceso
pertenecen
subred
IP
H1
mueve
BSS1
BSS2
conservar
direcci√≥n
IP
conexiones
TCP
activas
dis-
positivo
interconexi√≥n
router
H1
tendr√≠a
obtener
direc-
ci√≥n
IP
subred
moviendo
cambio
direcci√≥n
interrumpir√≠a
har√≠a
terminara
conexi√≥n
TCP
activa
H1
Secci√≥n
6.6
veremos
utilizarse
protocolo
movilidad
capa
red
ejemplo
IP
m√≥vil
evitar
problema
sucede
espec√≠ficamente
H1
mueve
BSS1
BSS2
medida
H1
aleja
AP1
H1
detecta
se√±al
AP1
comienza
debilitarse
empieza
explorar
busca
se√±al
intensidad
H1
recibe
tramas
baliza
AP2
entornos
corporativos
universitarios
iden-
tificador
SSID
AP1
H1
desasocia
AP1
asocia
AP2
tiempo
mantiene
direcci√≥n
IP
sesiones
TCP
activas
resuelve
problema
transferencia
punto
vista
host
punto
acceso
sucede
conmutador
Figura
6.15
host
desplazado
punto
acceso
recordar√°
Cap√≠tulo
conmu-
tadores
disponen
caracter√≠stica
auto-aprendizaje
permite
construir
auto-
m√°ticamente
tablas
reenv√≠o
caracter√≠stica
auto-aprendizaje
gestiona
forma
eficiente
desplazamiento
ocasionales
ejemplo
transfiere
empleado
departamento
conmutadores
dise√±ados
soporte
usuarios
extremadamente
m√≥viles
deseen
mantener
conexiones
TCP
mien-
desplazan
BSS
apreciar
problema
recuerde
desplazamiento
conmutador
entrada
tabla
reenv√≠o
empa-
reja
direcci√≥n
MAC
H1
interfaz
saliente
conmutador
alcanzar
H1
H1
inicialmente
BSS1
datagrama
des-
tinado
H1
dirigido
H1
punto
acceso
AP1
H1
asocia
BSS2
tramas
dirigidas
AP2
soluci√≥n
truco
AP2
env√≠e
conmutador
trama
Ethernet
difusi√≥n
direcci√≥n
origen
H1
justo
asociaci√≥n
conmutador
reciba
trama
actualizar√°
tabla
reenv√≠o
permitiendo
alcanzar
H1
tra-
v√©s
AP2
grupo
est√°ndares
802.11f
desarrollando
protocolo
puntos
acceso
inter-AP
gestionar
problema
problemas
relacionados
6.3.5
Caracter√≠sticas
avanzadas
802.11
terminar
estudio
802.11
an√°lisis
capacidades
avanzadas
encontrar
redes
802.11
veremos
capacida-
des
completamente
especificadas
est√°ndar
802.11
serie
mecanismos
especificados
est√°ndar
dichas
capacidades
permite
fabricantes
implementen
dichas
capacidades
utilizando
pro-
pias
t√©cnicas
propietarias
supuestamente
proporcionar
ventajas
competidores
Adaptaci√≥n
velocidad
802.11
visto
anteriormente
Figura
6.3
t√©cnicas
modulaci√≥n
velocidades
transmisi√≥n
proporcionan
resultar
apropia-
das
escenarios
SNR
Considere
ejemplo
usuario
802.11
m√≥vil
524
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
524se
inicialmente
20
metros
estaci√≥n
base
alta
relaci√≥n
se√±al-ruido
alto
valor
SNR
usuario
comunicarse
estaci√≥n
base
utilizando
t√©cnica
modulaci√≥n
capa
f√≠sica
proporcione
altas
velocidades
transmi-
si√≥n
tiempo
mantiene
baja
BER
usuario
operar
mejores
condiciones
Suponga
usuario
comienza
moverse
alej√°ndose
estaci√≥n
base
SNR
disminuye
medida
distancia
estaci√≥n
base
incrementa
caso
cambia
t√©cnica
modulaci√≥n
utilizada
proto-
colo
802.11
opera
estaci√≥n
base
usuario
BER
comenzar√°
inacepta-
blemente
alta
medida
relaci√≥n
SNR
reduzca
llegando
eventualmente
punto
tramas
transmitidas
reciba
correctamente
raz√≥n
implementaciones
802.11
capacidad
adapta-
ci√≥n
velocidad
permite
seleccionar
adaptativamente
t√©cnica
subyacente
modulaci√≥n
capa
f√≠sica
utilizar
bas√°ndose
caracter√≠sticas
pasadas
recientes
canal
implementaci√≥n
WaveLAN-II
802.11b
Lucent
Kamerman
1997
proporciona
m√∫ltiples
velocidades
transmisi√≥n
datos
nodo
env√≠a
tra-
consecutivas
recibir
trama
reconocimiento
indicaci√≥n
impl√≠cita
errores
bit
canal
velocidad
transmisi√≥n
reduce
nivel
infe-
rior
confirman
10
tramas
consecutivas
finaliza
recuento
temporizador
controla
tiempo
transcurrido
reducci√≥n
velocidad
transmisi√≥n
incrementa
nivel
inmediatamente
superior
mecanismo
adaptaci√≥n
velocidad
comparte
filosof√≠a
prueba
mecanismo
control
congesti√≥n
TCP
condiciones
indicado
recepci√≥n
tramas
ACK
velocidad
transmisi√≥n
incrementa
sucede
malo
falta
recepci√≥n
tramas
ACK
sucede
malo
velocidad
transmisi√≥n
reduce
adaptaci√≥n
velocidad
802.11
control
congesti√≥n
TCP
similares
ni√±o
constantemente
pidiendo
padres
ejem-
plo
caramelos
caso
ni√±o
corta
edad
hora
llegada
casa
tard√≠a
caso
adolescentes
padres
finalmente
basta
momento
ni√±o
echa
marcha
atr√°s
intentarlo
posteriormente
situaci√≥n
posiblemente
mejorado
propuesto
esquemas
mejo-
rar
sistema
b√°sico
ajuste
autom√°tico
velocidad
Holland
2001
Lacage
2004
Gesti√≥n
potencia
potencia
recurso
escaso
dispositivos
m√≥viles
est√°ndar
802.11
proporciona
capacidades
gesti√≥n
potencia
permiten
nodos
802.11
minimi-
zar
cantidad
tiempo
funciones
detecci√≥n
transmisi√≥n
recepci√≥n
circuitos
necesitan
activos
gesti√≥n
potencia
802.11
opera
forma
nodo
capaz
alternar
expl√≠citamente
dormido
despierto
diferencia
estudiantes
duermen
clases
nodo
indica
punto
acceso
dormir
poniendo
bit
gesti√≥n
potencia
cabecera
trama
802.11
configura
temporizador
nodo
despertar
justo
momento
punto
acceso
programado
enviar
trama
baliza
recuerde
punto
acceso
env√≠a
normalmente
trama
baliza
100
mili-
segundos
Puesto
punto
acceso
gracias
bit
gesti√≥n
potencia
activado
nodo
dormir
punto
acceso
sabr√°
enviar
nin-
guna
trama
nodo
almacenar√°
buffer
tramas
destinadas
host
dormido
transmisi√≥n
posterior
6.3
WIFI
REDES
LAN
INAL√ÅMBRICAS
802.11
525
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
525El
nodo
despertar√°
justo
punto
acceso
env√≠e
trama
baliza
entrar√°
r√°pidamente
completamente
activo
diferencia
sucede
estudiantes
adormilados
despertar
requiere
√∫nicamente
250
microsegundos
Ka-
merman
1997
tramas
baliza
enviadas
punto
acceso
contienen
lista
nodos
cuyas
tramas
guardado
buffer
punto
acceso
tramas
buffer
nodo
volver
dormirse
caso
contrario
nodo
solici-
tar
expl√≠citamente
env√≠en
tramas
almacenadas
buffer
transmitiendo
men-
saje
sondeo
punto
acceso
tiempo
balizas
100
milisegundos
tiempo
reactivaci√≥n
250
microsegundos
tiempo
similarmente
peque√±o
recibir
trama
baliza
comprobar
trama
buffer
nodo
tramas
enviar
recibir
durmiendo
99
ciento
tiempo
permite
ahorro
considerable
energ√≠a
6.3.6
all√°
802.11
Bluetooth
WiMAX
ilustra
Figura
6.2
est√°ndar
WiFi
IEEE
802.11
pensado
comu-
nicaci√≥n
dispositivos
separados
100
metros
utiliza
802.11
configuraci√≥n
punto
punto
antena
direccional
protocolos
est√°ndar
IEEE
802
Bluetooth
definido
est√°ndar
IEEE
802.15.1
IEEE
802.15
2009
WiMAX
definido
est√°ndar
IEEE
802.16
IEEE
802.16d
2004
IEEE
802.16e
2005
comunicaci√≥n
distancias
cortas
largas
respectivamente
Bluetooth
red
IEEE
802.15.1
opera
corto
alcance
baja
potencia
coste
b√°sicamente
tecnolog√≠a
sustituci√≥n
cables
baja
potencia
corto
alcance
baja
velocidad
interconexi√≥n
computadoras
bolsillo
dispositivos
perif√©ricos
tel√©fonos
celulares
dispositivos
PDA
802.11
tecnolog√≠a
acceso
potencia
alcance
velocidad
raz√≥n
redes
802.15.1
denominan
ocasiones
redes
inal√°mbricas
√°rea
personal
WPAN
Wireless
Personal
Area
Network
capas
enlace
f√≠sica
802.15.1
basadas
especificaci√≥n
Bluetooth
redes
√°rea
personal
Held
2001
Bisdikian
2001
redes
802.15.1
operan
banda
radio
licencia
2,4
GHz
forma
TDM
particio-
nes
tiempo
625
microsegundos
partici√≥n
tiempo
emisor
trans-
mite
79
canales
cambiando
canal
partici√≥n
forma
conocida
pseudo-aleatoria
tipo
saltos
canal
t√©cnica
conocida
nom-
bre
Espectro
disperso
salto
frecuencia
FHSS
Frequency-Hopping
Spread
Spectrum
distribuye
transmisiones
tiempo
espectro
fre-
cuencias
802.15.1
proporcionar
velocidades
datos
Mbps
redes
802.15.1
redes
ad
hoc
falta
infraestructura
ejem-
plo
punto
acceso
interconectar
dispositivos
802.15.1
dispo-
sitivos
organizarse
dispositivos
802.15.1
organizan
picored
piconet
formada
dispositivos
activos
muestra
Figura
6.16
dispositivos
designa
maestro
actuando
dispositivos
restantes
esclavos
nodo
maestro
gobierna
realmente
picored
reloj
determina
tiempo
picored
dispositivo
maestro
transmitir
partici√≥n
n√∫mero
impar
esclavo
transmitir
maestro
comunicado
partici√≥n
esclavo
transmi-
526
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
526tir
maestro
dispositivos
esclavos
255
dispositi-
vos
aparcados
red
dispositivos
comunicarse
cambiado
nodo
maestro
aparcado
activo
obtener
informaci√≥n
acerca
redes
WPAN
802.15.1
lector
interesado
consultar
referencias
Bluetooth
Held
2001
Bisdikian
2001
sitio
web
oficial
IEEE
802.15
IEEE
802.15
2009
WiMAX
WiMAX
World
Interoperability
for
Microwave
Access
Interoperabilidad
mundial
acceso
microondas
familia
est√°ndares
IEEE
802.16
suministrar
datos
inal√°mbricos
n√∫mero
usuarios
√°rea
extensa
velocidades
capaces
competir
modems
cable
redes
ADSL
est√°ndar
802.16d
actua-
liza
est√°ndar
802.16a
est√°ndar
802.16e
pretende
soportar
movilidad
velo-
cidades
70-80
millas
hora
105-120
kil√≥metros
hora
velocidad
autopista
mayor√≠a
pa√≠ses
Europa
estructura
enlace
dife-
rente
dispositivos
peque√±os
recursos
limitados
tales
PDA
tel√©fonos
computadoras
port√°tiles
arquitectura
802.16
basada
noci√≥n
estaci√≥n
base
sirve
centralizado
n√∫mero
potencialmente
clientes
conocidos
nom-
bre
estaciones
abonado
asociados
dicha
estaci√≥n
base
sentido
WiMAX
recuerda
WiFi
infraestructura
redes
telefon√≠a
celular
estaci√≥n
base
coordina
transmisi√≥n
paquetes
capa
enlace
direc-
ci√≥n
bajada
estaci√≥n
base
estaciones
abonado
subida
estaciones
abonado
estaci√≥n
base
estructura
marcos
TDM
mostrada
Figura
6.17
Utilizaremos
t√©rmino
paquete
lugar
t√©r-
mino
trama
usado
802.11
paquetes
capa
enlace
distinguir
unidad
datos
capa
enlace
estructura
marcos
TDM
mostrada
Figura
6.17
WiMAX
opera
multiplexaci√≥n
divisi√≥n
tiempo
TDM
tiempos
marco
variables
indica
6.3
WIFI
REDES
LAN
INAL√ÅMBRICAS
802.11
527
Radio
cobertura
Dispositivo
maestro
Dispositivo
esclavo
Dispositivo
aparcado
Clave
Figura
6.16
picored
Bluetooth
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
527Observemos
WiMAX
define
FDM
operaci√≥n
tratar
principio
estructura
marcos
TDM
estaci√≥n
base
env√≠a
lugar
lista
mensajes
MAP
Media
Access
Protocol
descendentes
informa
estaciones
abonado
propiedades
capa
f√≠sica
esquema
modulaci√≥n
codificaci√≥n
par√°metros
correcci√≥n
errores
utilizar√°n
transmitir
subsiguientes
r√°fa-
gas
paquetes
estructura
marcos
TDM
m√∫ltiples
r√°fagas
den-
tro
estructura
m√∫ltiples
paquetes
r√°faga
destinada
determinada
estaci√≥n
abonado
estaci√≥n
base
transmite
paquetes
contenidos
r√°faga
utilizando
propiedades
capa
f√≠sica
dichas
propiedades
pue-
den
cambiar
r√°faga
permitiendo
estaci√≥n
base
seleccionar
esquemas
transmisi√≥n
capa
f√≠sica
est√©n
√≥ptimamente
adaptados
estaci√≥n
abonado
receptora
estaci√≥n
base
seleccionar
conjunto
receptores
enviar
estructura
funci√≥n
condiciones
actuales
estimadas
canal
existente
receptor
forma
planificaci√≥n
oportunista
Bender
2000
Kulkarni
2005
adaptar
protocolo
capa
f√≠sica
condiciones
canal
emisor
recep-
tor
seleccionar
receptores
enviar√°n
paquetes
bas√°ndose
condi-
ciones
canal
permite
estaci√≥n
base
√≥ptimo
inal√°mbrico
est√°ndar
WiMAX
impone
conjunto
concreto
par√°metros
capa
f√≠sica
utilizar
situaci√≥n
determinada
dicha
decisi√≥n
deja
arbitrio
fabricante
equipo
WiMAX
operador
red
estaci√≥n
base
WiMAX
regula
acceso
estaciones
abonado
canal
ascendente
mensajes
UL-MAP
mensajes
controlan
can-
tidad
tiempo
estaci√≥n
abonado
acceso
canal
subsiguientes
canales
ascendentes
est√°ndar
WiMAX
impone
pol√≠tica
concreta
asignar
tiempo
canal
ascendente
cliente
decisi√≥n
deja
operador
red
lugar
WiMAX
proporciona
mecanismos
tales
mensajes
control
UL-MAP
implementar
pol√≠tica
asignar
periodos
tiempo
acceso
canal
distintas
estaciones
abo-
nado
abonados
emplean
partes
iniciales
estructura
canal
ascendente
transmitir
mensajes
control
enlace
radio
mensajes
solicitar
admisi√≥n
autenticaci√≥n
red
WiMAX
mensajes
protocolos
nivel
relacionados
administraci√≥n
ejemplo
DHCP
SNMP
Figura
6.18
muestra
formato
paquete
MAC
WiMAX
√∫nico
campo
comentar
campo
identificador
conexi√≥n
cabecera
WiMAX
arquitectura
orientada
conexi√≥n
permite
conexi√≥n
asociados
calidad
servicio
QoS
par√°metros
tr√°fico
informaciones
528
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
DL
r√°faga
DL
r√°faga
Inicial
mant
Solicitud
conexi√≥n
SS
SS
2DL
r√°faga
1DL-MAP
UL-MAP
Canal
descendente
Canal
ascendente
pream
SS
Figura
6.17
Estructura
marcos
TDM
802.16
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
528que
proporcionar
calidad
servicio
cuesti√≥n
operador
red
WiMAX
propor-
ciona
mecanismos
nivel
ejemplo
estimaci√≥n
canal
campos
solici-
tud
admisi√≥n
conexi√≥n
transportar
informaci√≥n
estaci√≥n
base
host
proporciona
enfoque
global
pol√≠ticas
proporcionar
cali-
dad
servicio
estaci√≥n
abonado
direcci√≥n
MAC
48
bits
redes
802.3
802.11
WiMAX
direcci√≥n
MAC
considerar
apropiadamente
identificador
equipo
comunicaci√≥n
equi-
pos
terminales
termina
asignada
identificador
conexi√≥n
lugar
direcciones
terminales
emisor
receptor
conexi√≥n
tratamiento
WiMAX
necesariamente
temas
podido
analizar
gesti√≥n
potencia
dormir
similar
802.11
transferencia
llamadas
handoff
planificaci√≥n
dependiente
canal
transmisiones
unidades
datos
protocolo
PDU
MAC
pro-
cedentes
estaci√≥n
base
mecanismo
QoS
seguridad
Estando
est√°ndar
802.16e
desarrollo
sistemas
WiMAX
continuar√°n
evolucionando
pr√≥-
ximos
a√±os
est√°ndares
indicados
anteriormente
permiten
forma
relativamente
ardua
temas
relacionados
WiMAX
Eklund
2002
Cicconetti
2006
proporcionan
serie
panor√°micas
WiMAX
comprensibles
6.4
Acceso
celular
Internet
secci√≥n
examinado
host
acceder
Internet
entra
√°rea
cobertura
WiFi
vecindades
punto
acceso
802.11
mayor√≠a
√°reas
WiFi
cobertura
peque√±a
10
100
metros
di√°metro
redes
WiMAX
√°rea
implantarse
necesitamos
desespera-
damente
acceso
inal√°mbrico
Internet
acceder
√°rea
WiFi
telefon√≠a
celular
onmipresente
√°reas
mundo
estrategia
natural
consiste
extender
redes
celulares
soporten
telefon√≠a
voz
acceso
inal√°mbrico
Internet
Idealmente
acceso
6.4
ACCESO
CELULAR
INTERNET
529
Tipo0
EC
ESF
CI
EKS
RSV
Longitud
MSB
ID
conexi√≥n
LSD
Longitud
LSB
Cabecera
CRC
ID
conexi√≥n
MSB
Carga
√∫til
CRC
32
bits
Figura
6.18
Paquete
802.16
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
529Internet
llevar√≠a
cabo
velocidad
razonablemente
alta
permitir√≠a
movilidad
transparente
usuarios
mantener
sesiones
TCP
via-
jando
ejemplo
autob√∫s
tren
tasas
bit
suficientemente
altas
subida
bajada
usuario
mantener
sesiones
video-
conferencia
deambula
roaming
escenario
futu-
rista
parecer
momento
escribir
l√≠neas
primavera
2009
proveedores
servicios
telefon√≠a
celular
Unidos
ofrecen
abo-
nados
servicio
acceso
celular
Internet
50
d√≥lares
mensuales
velo-
cidades
bajada
subida
centenares
kilobits
Asimismo
empezando
disponibles
velocidades
datos
megabits
medida
implantando
servicios
datos
banda
ancha
HSDPA
secci√≥n
proporcionamos
panor√°mica
tecnolog√≠as
actuales
emergentes
acceso
celular
Internet
centraremos
principalmente
pri-
mer
salto
inal√°mbrico
tel√©fono
celular
infraestructura
red
cableada
Sec-
ci√≥n
6.7
veremos
enrutan
llamadas
usuario
moviendo
distintas
estaciones
base
an√°lisis
brevedad
proporcionar√°
descripci√≥n
simplificada
nivel
general
tecnolog√≠as
celulares
comunicaciones
celulares
modernas
tema
profundidad
amplitud
existiendo
universidades
ofrecen
cursos
completos
lectores
deseen
detalles
consultar
Goodman
1997
Kaaranen
2001
Lin
2001
Korhonen
2003
Schiller
2003
Scourias
2007
Turner
2009
Mouly
1992
referencia
particularmente
excelente
exhaustiva
6.4.1
Panor√°mica
arquitectura
redes
celulares
descripci√≥n
arquitectura
redes
celulares
secci√≥n
adoptaremos
terminolog√≠a
est√°ndares
Sistema
global
comunicaciones
m√≥viles
GSM
Glo-
bal
System
for
Mobile
Communications
aficionados
cuestiones
hist√≥ricas
acr√≥nimo
GSM
derivaba
originalmente
Groupe
Sp√©cial
Mobile
adopt√≥
nombre
ingl√©s
conserv√°ndose
letras
originales
acr√≥nimo
d√©cada
1980
organismos
reguladores
europeos
necesidad
sistema
tele-
fon√≠a
celular
digital
europeo
pudiera
sustituir
numerosos
sistemas
telefon√≠a
celu-
lar
anal√≥gica
incompatibles
iniciativa
condujo
definici√≥n
est√°ndar
GSM
Mouly
1992
Europa
implant√≥
tecnolog√≠a
GSM
√©xito
principios
d√©cada
1990
GSM
crecido
convertirse
sistema
dominante
telefon√≠a
celular
momentos
80
ciento
abonados
telefon√≠a
celular
mundo
utilizan
GSM
personas
acerca
tecnolog√≠a
celular
clasifican
perteneciente
generaciones
primeras
generaciones
dise-
√±adas
principalmente
tr√°fico
voz
sistemas
generaci√≥n
sistemas
FDMA
anal√≥gicos
dise√±ados
exclusivamente
comunicaci√≥n
√∫nicamente
voz
sistemas
pr√°cticamente
extintos
actualidad
habiendo
sustitui-
sistemas
digitales
sistemas
originales
dise√±ados
voz
posteriormente
ampliaron
2.5
soportar
servicios
voz
datos
Internet
sistemas
implantados
actualmente
soportan
voz
datos
poniendo
√©nfasis
capacidades
datos
enlaces
acceso
radio
alta
velocidad
530
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
530Arquitectura
redes
celulares
conexiones
voz
red
telef√≥nica
t√©rmino
celular
referencia
regi√≥n
cubierta
red
celular
dividida
serie
√°reas
geogr√°ficas
cobertura
denominadas
celdas
mues-
tran
hex√°gonos
izquierda
Figura
6.19
est√°ndar
WiFi
802.11
estudiado
Secci√≥n
6.3.1
GSM
nomenclatura
parti-
6.4
ACCESO
CELULAR
INTERNET
531
TECNOLOG√çA
M√ìVIL
CELULAR
FRENTE
REDES
LAN
INAL√ÅMBRICAS
operadores
telefon√≠a
m√≥vil
celular
implantando
sistemas
m√≥viles
celulares
velocidades
datos
interiores
Mbps
exteriores
384
kbps
supe-
riores
sistemas
implantando
bandas
radiofrecuencia
licencia
habiendo
pagado
operadores
sumas
considerables
respectivos
gobiernos
dichas
licencias
sistemas
permiten
usuarios
acceder
Internet
ubicacio-
nes
remotas
exteriores
viajando
forma
similar
actual
acceso
servicios
telefon√≠a
celular
ejemplo
tecnolog√≠a
permite
usuario
acceder
informaci√≥n
mapas
carreteras
conduciendo
veh√≠culo
consultar
informaci√≥n
cartelera
cinematogr√°fica
tomando
sol
playa
expertos
empezando
cuestionar
tecnolog√≠a
√©xito
alto
coste
competencia
representada
tecnolog√≠a
redes
LAN
ina-
l√°mbricas
particular
expertos
argumentan
emergente
infraestructura
redes
LAN
inal√°mbricas
futuro
pr√°cticamente
ubicua
redes
LAN
inal√°mbricas
IEEE
802.11
operan
54
Mbps
disfrutan
implantaci√≥n
computadoras
port√°tiles
PDA
vienen
equipadas
f√°brica
tarjetas
LAN
802.11
dispositivos
Internet
emergentes
c√°maras
inal√°mbricas
marcos
fotograf√≠as
electr√≥nicos
utilizar√°n
peque√±as
tarjetas
LAN
inal√°mbricas
baja
potencia
WiMAX
estudiado
Secci√≥n
6.3.6
promete
ofrecer
servicios
datos
√°rea
extensa
usuarios
m√≥viles
velocidades
megabits
superiores
Sprint
Nextel
invirtiendo
miles
millones
d√≥lares
implantaci√≥n
WiMAX
estaciones
base
redes
LAN
inal√°mbricas
comunicarse
dis-
positivos
telefon√≠a
m√≥vil
tel√©fonos
futuros
capaces
conectarse
red
telefon√≠a
celular
red
IP
utilizando
servicio
voz
IP
similar
Skype
evitando
servicios
datos
servicios
voz
telefon√≠a
celular
operadores
HISTORIA
expertos
piensan
√©xito
revolucionar
forma
importante
trabajamos
vivi-
mos
Evidentemente
WiFi
conviertan
tecnolog√≠as
ina-
l√°mbricas
prevalentes
dispositivos
inal√°mbricos
puedan
seleccionar
autom√°ti-
camente
desplazan
tecnolog√≠a
acceso
proporcione
servi-
cio
ubicaci√≥n
f√≠sica
concreta
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
531cular
celda
contiene
estaci√≥n
transductora
base
BTS
Base
Transceiver
Sta-
tion
transmite
recibe
se√±ales
estaciones
m√≥viles
encuentran
celda
√°rea
cobertura
celda
depende
factores
inclu-
yendo
potencia
transmisi√≥n
BTS
potencia
transmisi√≥n
dispositivos
usuario
edificios
situados
celda
puedan
obstruir
comunicaciones
altura
antenas
estaci√≥n
base
Figura
6.19
muestra
celda
contiene
estaci√≥n
transductora
base
situada
centro
celda
sistemas
actuales
colocan
BTS
esquinas
intersectan
celdas
√∫nica
BTS
antenas
direccionales
servicio
est√°ndar
GSM
sistemas
celulares
utiliza
combinaci√≥n
FDM
TDM
radio
interfaz
a√©rea
Recuerde
Cap√≠tulo
FDM
pura
canal
parti-
ciona
serie
canales
frecuencia
estando
banda
dedicada
llamada
Recuerde
cap√≠tulo
multiplexaci√≥n
TDM
pura
tiempo
divide
marcos
subdividen
particiones
llamada
asigna
partici√≥n
concreta
marco
sistemas
FDM
TDM
combinados
canal
particiona
serie
sub-bandas
frecuencia
sub-banda
tiempo
divide
marcos
particiones
sistema
FDM
TDM
combinado
canal
particionado
sub-bandas
tiempo
divide
particiones
enton-
ces
canal
soportar
F.T
llamadas
simult√°neas
sistemas
GSM
compuestos
bandas
frecuencia
200
kHz
soportando
banda
llamadas
TDM
GSM
codifica
voz
13
kbps
12,2
kbps
est√°n-
competidor
GSM
IS-95
CDMA
sucesor
CDMA
2000
utiliza
acceso
m√∫ltiple
532
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
BSC
BSC
MSC
Clave
Estaci√≥n
base
transductora
BTS
Controlador
estaci√≥n
base
BSC
Centro
conmutaci√≥n
m√≥vil
MSC
Abonados
m√≥viles
MSC
pasarela
Sistema
estaci√≥n
base
BSS
Sistema
estaci√≥n
base
BSS
Red
telef√≥nica
p√∫blica
Figura
6.19
Componentes
arquitectura
red
celular
GSM
2G.
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
532por
divisi√≥n
c√≥digo
v√©ase
Secci√≥n
6.2.1
lugar
t√©cnica
combinada
FDM/
TDM
tel√©fonos
usuario
GSM
puedan
operar
red
IS-95
viceversa
controlador
estaci√≥n
base
BSC
Base
Station
Controller
red
GSM
f√≠sicamente
ubicado
BTS
normalmente
BSC
dar√°
servicio
decenas
estaciones
transductoras
base
papel
BSC
consiste
asignar
canales
radio
BTS
abonados
m√≥viles
tareas
localizaci√≥n
abonados
paging
determinar
celda
usuario
m√≥vil
cabo
transferencia
usuarios
m√≥viles
tema
ocuparemos
Secci√≥n
6.7.2
controlador
estaciones
base
estacio-
nes
transductoras
base
controla
forman
colectivamente
Sistema
estaciones
base
BSS
Base
Station
System
GSM
veremos
Secci√≥n
6.7
Centro
conmutaci√≥n
m√≥vil
MSC
Mobile
Switching
Center
desempe√±a
papel
central
respecta
autorizaci√≥n
usuarios
facturaci√≥n
ejemplo
determinando
permite
dispositivo
m√≥vil
conectarse
red
celular
establecimiento
finalizaci√≥n
llamadas
transfe-
rencia
√∫nico
MSC
contendr√°
normalmente
BSC
per-
mite
200.000
abonados
MSC
red
proveedor
servicio
celular
serie
centros
MSC
MSC
especiales
conocidos
nombre
centros
MSC
pasarela
sirven
conectar
red
celular
proveedor
red
telef√≥nica
p√∫blica
tama√±o
Arquitectura
redes
celulares
2.5
ampliaci√≥n
Internet
abonados
telefon√≠a
celular
momento
explicaciones
centrado
conexi√≥n
usuarios
telefon√≠a
celular
red
telefon√≠a
p√∫blica
usuarios
m√≥viles
acce-
den
Internet
red
celular
utilizando
dispositivos
iPhones
Blackberries
computadoras
port√°tiles
forma
utilizando
infraestructura
mostrada
Figura
6.19
consiste
utilizar
conexi√≥n
telefon√≠a
celular
conexi√≥n
acceso
telef√≥nico
ISP
forma
usuarios
dom√©sticos
utilizaban
d√©cada
1990
tel√©fono
convencional
acceso
telef√≥nico
ISP
desventaja
enfoque
velocidad
transmisi√≥n
extremada-
mete
lenta
normalmente
decenas
kilobits
disponible
conexi√≥n
celular
acceso
telef√≥nico
Idealmente
gus-
tar√≠a
ampliar
alcance
IP
sistema
estaciones
base
utilizando
l√≠neas
alto
ancho
banda
emplear
m√∫ltiples
canales
voz
redes
mejoradas
acceso
radio
conectar
usuarios
m√≥viles
sistema
estaciones
base
alta
velocidad
precisamente
enfoque
adoptado
sistemas
celulares
2.5
3G.
Figura
6.20
muestra
arquitectura
red
celular
2.5
GSM
ampl√≠a
est√°ndar
GSM
proporcionar
acceso
alta
velocidad
Internet
enfoque
adop-
tado
dise√±adores
2.5
GSM
tocar
n√∫cleo
red
telefo-
n√≠a
celular
GSM
proporcionando
acceso
Internet
frontera
red
funcionalidad
a√±adida
independiente
lugar
funcionalidad
inte-
grada
n√∫cleo
red
telefon√≠a
celular
existente
hubiera
requerido
efectuar
cambios
n√∫cleo
capacidad
a√±adida
implementa
red
acceso
radio
BSC
introducci√≥n
red
separada
nodos
SGSN
Serving
GPRS
Support
Node
Nodo
soporte
GPRS
6.4
ACCESO
CELULAR
INTERNET
533
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
533En
BSC
canales
FDM
TDM
interfaz
a√©rea
transportan
datagramas
IP
reenv√≠an
BSC
nodo
SGSN
comunica
MSC
cabo
autorizaci√≥n
usuarios
transferencia
funciones
Ade-
tr√°fico
se√±alizaci√≥n
SGSN
encarga
reenviar
datagramas
IP
BSC
Internet
red
acceso
radio
introdujo
Servicio
general
paquetes
radio
GPRS
General
Packet
Radio
Service
GSM
2.5
permitir
usuarios
utilizar
din√°micamente
m√∫ltiples
canales
radio
datos
IP
obteni√©ndose
tasas
115
kbps
Siguiendo
estela
GPRS
introdujo
sistema
Velocidades
datos
mejoradas
evoluci√≥n
global
EDGE
Enhanced
Data
Rates
for
Global
Evolution
incrementar
velocidades
datos
red
GSM
GPRS
384
kbps
Ericsson
2009
proporciona
excelente
panor√°mica
EDGE
sistemas
celulares
ofrecen
servicios
telefon√≠a
velocidades
datos
signifi-
cativamente
mayores
contrapartidas
2.5G.
particular
sistemas
obli-
gados
proporcionar
144
kbps
velocidades
conducci√≥n
veh√≠culos
‚Ä¢3
caminando
Mbps
interiores
Servicio
universal
comunicaciones
m√≥viles
UMTS
Universal
Mobile
Tele-
communications
Service
tecnolog√≠as
populares
evoluci√≥n
GSM
2.5
soporta
capacidades
3G.
arquitectura
red
UMTS
asemeja
bas-
tante
arquitectura
redes
GSM
establecidas
particular
contin√∫an
utilizando
redes
datos
2.5
existentes
muestran
Figura
6.20
534
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
BSC
MSC
Clave
Nodo
soporte
GPRS
servidor
SGSN
Nodo
soporte
GPRS
pasarela
GGSN
MSC
pasarela
Sistema
estaci√≥n
base
BSS
Red
telef√≥nica
p√∫blica
GGSNSGSNG
Internet
p√∫blica
Figura
6.20
Arquitectura
redes
voz
datos
celulares
GSM
2.5G.
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
534que
redes
2.5
respetaban
redes
voz
existentes
momento
introducci√≥n
cambio
significativo
UMTS
lugar
utilizar
esquema
FDMA
TDMA
GSM
utiliza
t√©cnica
CDMA
denominada
CDMA
banda
ancha
secuencia
directa
DS-WCDMA
Direct
Sequence
Wideband
CDMA
particiones
TDMA
marcos
particiones
TDMA
disponibles
m√∫ltiples
frecuencias
constituye
interesante
t√©cnicas
dedicadas
compartici√≥n
canal
identificado
anteriormente
cambio
requiere
red
acceso
inal√°mbrico
celu-
lar
operando
paralelo
red
sistemas
BSS
mostrada
Figura
6.20
servicio
datos
asociado
especificaci√≥n
WCDMA
conoce
siglas
HSDPA
HSUPA
High
Speed
Downlink
Uplink
Packet
Access
Acceso
paquetes
alta
velocidad
descen-
dente
ascendente
promete
velocidades
datos
14
Mbps
encontrar
detalles
relativos
redes
sitio
web
Proyecto
Consorcio
Gene-
raci√≥n
3GPP
3rd
Generation
Partnership
Project
3GPP
2009
junio
2007
conectados
200
millones
abonados
3G.
representa
6,7
ciento
3.000
millones
abonados
telefon√≠a
m√≥vil
mundo
pa√≠ses
sistemas
introducidos
Jap√≥n
Corea
Sur
mitad
abonados
utilizan
3G.
Europa
pa√≠s
pun-
tero
Italia
tercio
abonados
utilizando
3G.
pa√≠ses
punteros
incluyen
Reino
Unido
Austria
Australia
Singapur
Habi√©ndose
definido
generaciones
especificaciones
estando
marcha
correspondientes
implementaciones
tendremos
esperar
aparezcan
sistemas
inal√°mbricos
respuesta
definici√≥n
formal
sistemas
fabricantes
dise√±ando
equipos
ejemplo
WiMAX
superan
prestaciones
sistemas
3G.
definan
implementen
sistemas
operar√°n
velocidades
altas
sistemas
Gbps
asimismo
permitir√°n
integrar
estre-
chamente
protocolos
Internet
probable
centren
comunicacio-
nes
multimedia
servicios
basados
ubicaci√≥n
seguridad
6.5
Gesti√≥n
movilidad
principios
Habiendo
cubierto
naturaleza
inal√°mbrica
enlaces
comunicaciones
existentes
red
inal√°mbrica
momento
volver
atenci√≥n
movilidad
enlaces
inal√°mbricos
permiten
sentido
amplio
nodo
m√≥vil
cambia
punto
conexi√≥n
red
tiempo
Puesto
t√©rmino
movilidad
adoptado
significados
mundo
computadoras
telefon√≠a
conviene
considerar
detalle
diversas
dimensiones
movilidad
punto
vista
capa
red
m√≥vil
usuario
usuario
f√≠sicamente
m√≥vil
plantear√°
conjunto
distinto
desaf√≠os
capa
red
dependiendo
mueva
puntos
conexi√≥n
red
extremo
espectro
Figura
6.21
usuario
computadora
port√°-
til
tarjeta
interfaz
red
inal√°mbrica
pasea
edificio
vimos
Secci√≥n
6.3.4
usuario
m√≥vil
perspectiva
capa
red
usuario
asocia
punto
acceso
independientemente
6.5
GESTI√ìN
MOVILIDAD
PRINCIPIOS
535
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
535de
ubicaci√≥n
usuario
siquiera
m√≥vil
perspectiva
capa
enlace
extremo
espectro
considere
usuario
viajando
150
kil√≥metros
hora
autov√≠a
BMW
pasando
m√∫ltiples
redes
acceso
inal√°mbricas
mantener
conexi√≥n
TCP
ininterrumpida
aplicaci√≥n
remota
viaje
usuario
m√≥vil
tipo
dudas
extremos
encontrar√≠a
usuario
traslada
computadora
port√°til
ubicaci√≥n
ejemplo
oficina
domicilio
ejemplo
cafeter√≠a
aula
conectarse
red
ubicaci√≥n
usuario
m√≥vil
conductor
BMW
necesita
mantener
conexi√≥n
activa
moviendo
puntos
conexi√≥n
red
Figura
6.21
ilustra
espectro
movilidad
usuario
perspectiva
capa
red
punto
importante
direcci√≥n
nodo
m√≥vil
telefon√≠a
m√≥vil
n√∫mero
tel√©fono
b√°sicamente
direcci√≥n
capa
red
tel√©fono
contin√∫a
medida
desplaza-
mos
red
telefon√≠a
m√≥vil
proveedor
computado-
ras
port√°tiles
mantener
forma
similar
direcci√≥n
IP
desplazando
redes
IP
respuesta
cuesti√≥n
depender√°
medida
aplicaciones
est√©n
ejecutando
conductor
BMW
mantener
conexi√≥n
TCP
ininte-
rrumpida
aplicaci√≥n
remota
viaja
autov√≠a
conveniente
man-
direcci√≥n
IP
Recuerde
Cap√≠tulo
aplicaci√≥n
Internet
necesita
direcci√≥n
IP
n√∫mero
puerto
entidad
remota
comunicando
entidad
m√≥vil
capaz
mantener
direcci√≥n
IP
medida
desplaza
movilidad
convertir√°
transparente
punto
vista
aplicaci√≥n
transparencia
enorme
valor
aplicaci√≥n
preocuparse
cuesti√≥n
direcciones
IP
puedan
potencialmente
cambiar
c√≥digo
aplicaci√≥n
permitir√°
servicio
conexiones
m√≥viles
m√≥viles
Veremos
secci√≥n
tecnolog√≠a
IP
m√≥vil
proporciona
transparencia
permitiendo
nodo
m√≥vil
mantener
direcci√≥n
IP
permanente
desplazando
red
usuario
m√≥vil
glamuroso
simplemente
querer
apagar
computadora
port√°til
oficina
llevarla
domicilio
volver
encenderla
trabajar
casa
computadora
port√°til
funciona
principalmente
cliente
536
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
usuario
√∫nicamente
mueve
red
acceso
inal√°mbrica
movilidad
Alta
movilidad
usuario
mueve
redes
acceso
desconect√°ndose
moverse
red
usuario
mueve
redes
acceso
manteniendo
conexiones
activas
Figura
6.21
Diversos
grados
movilidad
punto
vista
capa
red
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
536aplicaciones
cliente-servidor
ejemplo
enviar
leer
correo
electr√≥nico
navegar
Web
conectarse
Telnet
host
remoto
domicilio
direcci√≥n
IP
concreta
utilizada
computadora
port√°til
tanta
importancia
particular
usuario
perfectamente
funcionar
direcci√≥n
ISP
servicio
domicilio
asignara
temporalmente
computadora
port√°til
visto
Secci√≥n
4.4
DHCP
proporciona
funcionalidad
infraestructura
cableada
soporte
disponible
escenarios
ante-
riores
impl√≠citamente
infraestructura
fija
usua-
rio
m√≥vil
conectarse
ejemplo
red
ISP
servicio
domicilio
red
acceso
inal√°mbrica
oficina
redes
acceso
inal√°mbrico
atraviesan
autov√≠a
sucede
infraestructura
usuarios
punto
vista
comunicaciones
establecer
conexi√≥n
red
ausencia
infraestructura
capa
red
redes
ad
hoc
proporcionan
precisamente
capacidades
√°rea
r√°pido
desarrollo
constituye
vanguardia
investigaciones
redes
m√≥viles
cae
alcance
libro
Perkins
2000
p√°ginas
web
grupo
trabajo
redes
m√≥viles
ad
hoc
manet
IETF
manet
2009
proporciona
tratamiento
exhaustivo
materia
ilustrar
problemas
implicados
autorizar
usuario
m√≥vil
mantener
conexiones
activas
desplazando
redes
con-
siderar
analog√≠a
humana
veintea√±ero
domicilio
familiar
pasa
adulto
m√≥vil
viviendo
serie
habitaciones
apartamentos
cambiando
direcci√≥n
viejo
conocido
ponerse
contacto
cono-
cido
encontrar
direcci√≥n
amigo
m√≥vil
forma
com√∫n
contactar
familia
adulto
m√≥vil
registrar√°
familia
comunicar√°
direc-
ci√≥n
actual
padres
puedan
enviarle
dinero
pagarle
alquiler
domicilio
familiar
direcci√≥n
permanente
convertir√°
lugar
acudir
lugar
comunicarse
adulto
m√≥vil
comunicaciones
posteriores
viejo
conocido
indirectas
ejemplo
conocido
enviar
correo
domicilio
padres
reenviar
correo
adulto
m√≥vil
directas
ejemplo
viejo
conocido
utiliza
direcci√≥n
facilitado
padres
enviar
correo
directamente
amigo
m√≥vil
entorno
red
domicilio
permanente
nodo
m√≥vil
ejemplo
computadora
port√°til
PDA
conoce
nombre
red
home
net-
work
entidad
red
encarga
cabo
funciones
gesti√≥n
movilidad
hablaremos
nodo
m√≥vil
conoce
agente
home
agent
red
reside
actualmente
nodo
m√≥vil
conoce
nombre
red
ajena
visitada
foreing
or
visited
network
entidad
red
ajena
ayuda
nodo
m√≥vil
funciones
gesti√≥n
movilidad
veremos
conoce
nombre
agente
ajeno
foreing
agent
profesionales
m√≥viles
probable
red
red
empresa
red
ajena
colega
est√©n
visitando
corresponsal
correspondent
entidad
comunicar
nodo
m√≥vil
Figura
6.22
ilustra
conceptos
conceptos
direccionamiento
considera-
Figura
6.22
observe
agentes
muestran
estuvieran
ubicados
routers
ejemplo
procesos
ejecut√°ndose
routers
ejecutarse
hosts
servidores
red
6.5
GESTI√ìN
MOVILIDAD
PRINCIPIOS
537
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
5376.5.1
Direccionamiento
observado
anteriormente
movilidad
usuarios
transparente
ojos
aplicaciones
red
deseable
nodos
m√≥viles
conserven
direcci√≥n
mueven
red
nodo
m√≥vil
reside
red
ajena
tr√°fico
dirigido
direcci√≥n
permanente
nodo
enrutado
red
ajena
hacerse
opci√≥n
red
ajena
anuncie
redes
nodo
m√≥vil
residiendo
red
hacerse
intercambio
usual
informaci√≥n
enrutamiento
dominios
dominios
requerir√≠a
cambios
infraestructura
enrutamiento
existente
red
ajena
simplemente
anunciar
vecinos
dispone
ruta
altamente
espec√≠fica
direcci√≥n
permanente
nodo
m√≥vil
b√°sicamente
consistir√≠a
informar
redes
dispone
ruta
correcta
enviar
datagramas
direcci√≥n
permanente
nodo
m√≥vil
v√©ase
Secci√≥n
4.4
vecinos
propagar√≠an
informaci√≥n
enrutamiento
red
procedimiento
nor-
actualizaci√≥n
informaci√≥n
enrutamiento
tablas
reenv√≠o
nodo
m√≥vil
abandone
red
ajena
red
ajena
anunciar√°
ruta
altamente
espec√≠fica
nodo
m√≥vil
antigua
red
ajena
retirar√°
infor-
maci√≥n
enrutamiento
relativa
nodo
m√≥vil
538
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
Agente
Red
128.119.40/24
Red
visitada
79.129.13/24
Nodo
m√≥vil
Direcci√≥n
permanente
128.119.40.186
Direcci√≥n
permanente
128.119.40.186
Agente
ajeno
Direcci√≥n
COA
79.129.13.2
Red
√°rea
extensa
Corresponsal
Figura
6.22
Elementos
iniciales
arquitectura
red
m√≥vil
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
538Esto
resuelve
problemas
cabo
cambios
significativos
infraestructura
capa
red
redes
conocer√°n
ubicaci√≥n
nodo
m√≥vil
f√°cil
enrutar
datagramas
tablas
reenv√≠o
dirigir√°n
datagra-
red
ajena
desventaja
significativa
escalabilidad
gesti√≥n
movilidad
tuviera
responsabilidad
routers
red
routers
tendr√≠an
mantener
entradas
tablas
reenv√≠o
n√∫mero
potencialmente
alto
millones
nodos
m√≥viles
actualizar
dichas
entrada
medida
nodos
movieran
problemas
incluidos
cap√≠tulo
exploran
desventajas
adicionales
enfoque
alternativo
adoptado
pr√°ctica
consiste
trasladar
funcionalidad
movilidad
n√∫cleo
red
frontera
tema
recurrente
estudio
arquitectura
Internet
forma
natural
red
nodo
m√≥vil
forma
padres
veintea√±ero
m√≥vil
encargan
controlar
ubicaci√≥n
hijo
agente
situado
red
nodo
m√≥vil
controlar
red
ajena
reside
nodo
m√≥vil
Obviamente
necesario
exista
protocolo
nodo
m√≥vil
agente
ajeno
represente
nodo
m√≥vil
agente
actualizar
ubicaci√≥n
nodo
m√≥vil
Consideremos
agente
ajeno
detalle
enfoque
concep-
tualmente
simple
mostrado
Figura
6.22
consiste
ubicar
agentes
ajenos
routers
frontera
red
ajena
papel
agente
ajeno
consiste
crear
deno-
minada
direcci√≥n
cedida
COA
care-of
address
nodo
m√≥vil
red
COA
corresponde
red
ajena
direcciones
aso-
ciadas
nodo
m√≥vil
direcci√≥n
permanente
an√°loga
direcci√≥n
domicilio
familiar
veintea√±ero
m√≥vil
COA
denominada
direcci√≥n
ajena
an√°loga
direcci√≥n
vivienda
residiendo
actualmente
veintea-
√±ero
m√≥vil
ejemplo
Figura
6.22
direcci√≥n
permanente
nodo
m√≥vil
128.119.40.186
visitando
red
79.129.13/24
nodo
m√≥vil
COA
79.129.13.2
papel
agente
ajeno
consiste
informar
agente
pro-
pio
nodo
m√≥vil
reside
red
agente
ajeno
COA
indicada
Veremos
COA
utiliza
re-enrutar
datagramas
nodo
m√≥vil
agente
ajeno
separado
funcionalidad
nodo
m√≥vil
agente
ajeno
merece
pena
indicar
nodo
m√≥vil
asumir
responsabilidades
agente
ajeno
ejemplo
nodo
m√≥vil
obtener
COA
red
ajena
ejemplo
uti-
lizando
protocolo
DHCP
informar
agente
COA
6.5.2
Enrutamiento
nodo
m√≥vil
visto
nodo
m√≥vil
obtener
COA
informar
agente
dicha
direcci√≥n
agente
conozca
COA
resuelve
problema
deber√≠an
direccionarse
datagramas
deber√≠an
reenviarse
nodo
m√≥vil
Puesto
agente
routers
resto
red
conoce
ubicaci√≥n
nodo
m√≥vil
bastar√°
dirigir
simplemente
datagrama
direcci√≥n
permanente
nodo
m√≥vil
enviarlo
infraestructura
capa
red
identificar
enfoques
distintos
denominaremos
enrutamiento
indirecto
enrutamiento
directo
6.5
GESTI√ìN
MOVILIDAD
PRINCIPIOS
539
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
539Enrutamiento
indirecto
nodo
m√≥vil
Consideremos
lugar
corresponsal
desea
enviar
datagrama
nodo
m√≥vil
t√©cnica
enrutamiento
indirecto
corresponsal
simplemente
direcciona
datagrama
direcci√≥n
permanente
nodo
m√≥vil
env√≠a
red
completamente
ignorante
nodo
m√≥vil
reside
red
visitando
red
ajena
movilidad
completamente
transparente
corresponsal
Dichos
datagramas
enrutan
forma
habitual
red
nodo
m√≥vil
ilustra
paso
Figura
6.23
Vo
interactuar
ajeno
momento
COA
nodo
m√≥vil
agente
pro-
pio
funci√≥n
importante
tarea
consiste
atento
llegan
datagramas
dirigidos
nodos
cuya
red
agente
est√©n
actualmente
residiendo
red
ajena
agente
intercepta
datagra-
reenv√≠a
nodo
m√≥vil
siguiendo
proceso
pasos
datagrama
reenviado
agente
ajeno
utilizando
direcci√≥n
COA
nodo
m√≥-
vil
paso
Figura
6.23
reenviado
agente
ajeno
nodo
m√≥vil
paso
Figura
6.23
instructivo
analizar
re-enrutamiento
detalle
agente
necesitar√°
direccionar
datagrama
utilizando
COA
nodo
m√≥vil
capa
red
enruta
datagrama
red
ajena
deseable
dejar
datagrama
540
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
Agente
Red
128.119.40/24
Red
visitada
79.129.13/24
Nodo
m√≥vil
Direcci√≥n
permanente
128.119.40.186
Direcci√≥n
permanente
128.119.40.186
Agente
ajeno
Direcci√≥n
COA
79.129.13.2
Red
√°rea
extensa
Corresponsal
Figura
6.23
Enrutamiento
indirecto
nodo
m√≥vil
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
540del
corresponsal
intacto
aplicaci√≥n
recibir
datagrama
cons-
ciente
datagrama
reenviado
agente
objetivos
satisfacerse
agente
encapsule
datagrama
completo
original
corresponsal
datagrama
datagrama
tama√±o
direcciona
entrega
COA
nodo
m√≥vil
agente
ajeno
posee
COA
recibir√°
desencapsular√°
datagrama
extraer√°
datagrama
original
corresponsal
datagrama
encapsula
reenviar√°
paso
Figura
6.23
datagrama
original
nodo
m√≥vil
Figura
6.24
muestra
datagrama
original
corresponsal
enviado
red
datagrama
encapsulado
enviado
agente
ajeno
datagrama
original
entregado
nodo
m√≥vil
lector
atento
observar√°
encapsulaci√≥n
desencapsulaci√≥n
descrita
id√©ntica
concepto
tunelizaci√≥n
explicado
Cap√≠tulo
contexto
multidifusi√≥n
IP
IPv6
Consideremos
nodo
m√≥vil
env√≠a
datagramas
corresponsal
simple
nodo
m√≥vil
dirigir
datagramas
directamente
corres-
ponsal
utilizando
direcci√≥n
permanente
direcci√≥n
origen
direc-
ci√≥n
corresponsal
direcci√≥n
destino
Puesto
nodo
m√≥vil
conoce
direcci√≥n
corresponsal
necesidad
enrutar
datagrama
agente
muestra
paso
Figura
6.23
Resumamos
explicaciones
acerca
enrutamiento
indirecto
indicando
funcionalidad
requerida
capa
red
soportar
movilidad
protocolo
nodo
m√≥vil
agente
ajeno
nodo
m√≥vil
registrar√°
agente
ajeno
conecte
red
ajena
forma
similar
nodo
m√≥vil
desre-
gistrar√°
agente
ajeno
abandone
red
ajena
6.5
GESTI√ìN
MOVILIDAD
PRINCIPIOS
541
Agente
Direcci√≥n
permanente
128.119.40.186
Direcci√≥n
permanente
128.119.40.186
Agente
ajeno
Corresponsal
dest
128.119.40.186
dest
79.129.13.2
dest
128.119.40.186
dest
128.119.40.186
Direcci√≥n
COA
79.129.13.2
Figura
6.24
Encapsulaci√≥n
desencapsulaci√≥n
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
541‚Ä¢
protocolo
registro
agente
ajeno
agente
agente
ajeno
regis-
trar√°
COA
nodo
m√≥vil
agente
agente
ajeno
necesita
desre-
gistrar
expl√≠citamente
COA
nodo
m√≥vil
abandona
red
subsi-
guiente
registro
COA
nodo
m√≥vil
desplace
red
encargar√°
protocolo
encapsulaci√≥n
datagramas
agente
protocolo
encargar√°
encapsulaci√≥n
reenv√≠o
datagrama
original
corresponsal
datagrama
dirigido
COA
protocolo
desencapsulaci√≥n
agente
ajeno
protocolo
encargar√°
extracci√≥n
datagrama
original
corresponsal
datagrama
encapsu-
lante
reenv√≠o
datagrama
original
nodo
m√≥vil
exposici√≥n
proporciona
elementos
agentes
ajenos
agente
pro-
pio
reenv√≠o
indirecto
necesarios
nodo
m√≥vil
mantener
conexi√≥n
activa
desplaza
red
ejemplo
elemen-
tos
encajan
suponga
nodo
m√≥vil
conectado
red
ajena
registrado
COA
red
agente
recibiendo
datagramas
enrutando
indirectamente
agente
nodo
m√≥vil
desplaza
red
ajena
registra
agente
ajeno
red
informa
agente
COA
nodo
m√≥vil
momento
agente
re-enrutar√°
datagramas
red
ajena
B.
corresponsal
respecta
movilidad
trans-
parente
datagramas
enrutan
agente
nodo
m√≥vil
desplazado
respecta
agente
interrupci√≥n
flujo
datagramas
datagramas
vayan
llegando
reenv√≠an
red
ajena
cambio
COA
reen-
v√≠an
red
ajena
B.
pasa
nodo
m√≥vil
Experimentar√°
interrupci√≥n
flujo
datagramas
desplaza
red
tiempo
transcurre
desconexi√≥n
nodo
m√≥vil
red
cuyo
momento
recibir
datagramas
conexi√≥n
red
cuyo
momento
regis-
trar√°
COA
agente
peque√±o
perder√°n
data-
gramas
Recuerde
Cap√≠tulo
conexiones
terminal
terminal
sufrir
p√©rdidas
datagramas
debidas
congesti√≥n
red
p√©rdida
ocasional
datagramas
conexi√≥n
nodo
desplaza
red
constituye
problema
catastr√≥fico
hiciera
falta
comunicaci√≥n
libre
p√©rdidas
mecanismos
capa
superior
recuperarse
p√©rdida
datagramas
inde-
pendientemente
dicha
p√©rdida
resultado
congesti√≥n
red
movi-
lidad
usuario
est√°ndar
IP
m√≥vil
RFC
3344
hablaremos
Secci√≥n
6.6
utiliza
t√©cnica
enrutamiento
indirecto
Enrutamiento
directo
nodo
m√≥vil
t√©cnica
basada
enrutamiento
indirecto
ilustrada
Figura
6.23
ve
aquejada
ineficiencia
conocida
problema
enrutamiento
triangular
datagramas
dirigidos
nodo
m√≥vil
enrutarse
lugar
agente
red
ajena
exista
ruta
eficiente
corresponsal
nodo
m√≥vil
caso
imagine
usuario
m√≥vil
visitando
red
ajena
colega
sentados
intercambiando
datos
red
542
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
542Los
datagramas
corresponsal
caso
colega
visitante
enrutar√°n
agente
usuario
m√≥vil
volver√°n
red
ajena
t√©cnica
enrutamiento
directo
elimina
ineficiencia
enrutamiento
triangular
precio
pagar
complejidad
t√©cnica
enrutamiento
directo
agente
corresponsal
situado
red
corresponsal
determina
COA
nodo
m√≥vil
conseguirse
agente
corresponsal
consulte
agente
suponiendo
caso
enrutamiento
indirecto
nodo
m√≥vil
registrado
valor
actualizado
COA
agente
corresponsal
lleve
cabo
funci√≥n
agente
corresponsal
nodo
m√≥vil
funci√≥n
agente
ajeno
muestra
pasos
Figura
6.25
agente
corresponsal
tuneliza
datagramas
pasos
Figura
6.25
directamente
COA
nodo
m√≥vil
forma
an√°loga
tunelizaci√≥n
cabo
agente
enrutamiento
directo
resuelve
problema
enrutamiento
triangular
plan-
tea
problemas
adicionales
importancia
‚Ä¢H
protocolo
localizaci√≥n
usuarios
m√≥viles
agente
corres-
ponsal
consulte
agente
obtener
COA
nodo
m√≥vil
pasos
Figura
6.25
6.5
GESTI√ìN
MOVILIDAD
PRINCIPIOS
543
Agente
Red
128.119.40/24
Red
visitada
79.129.13/24
Nodo
m√≥vil
Direcci√≥n
permanente
128.119.40.186
Clave
Direcci√≥n
permanente
128.119.40.186
Agente
ajeno
Direcci√≥n
COA
79.129.13.2
Red
√°rea
extensa
Corresponsal
Mensajes
control
Agente
corresponsal
Flujo
datos
Figura
6.25
Enrutamiento
directo
usuario
m√≥vil
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
543‚Ä¢C
reenviar
datos
red
ajena
caso
enrutamiento
indirecto
problema
resolv√≠a
f√°cilmente
actualizando
COA
mantenida
agente
enrutamiento
directo
agente
corresponsal
consulta
COA
agente
comienzo
sesi√≥n
actualizaci√≥n
COA
agente
necesaria
suficiente
resolver
problema
enrutar
datos
red
ajena
nodo
m√≥vil
soluci√≥n
crear
protocolo
notificar
corresponsal
cambio
COA
soluci√≥n
alternativa
veremos
adoptada
pr√°ctica
redes
GSM
funciona
forma
suponga
datos
reenviados
actualmente
nodo
m√≥vil
red
ajena
nodo
ubicado
momento
comenzar
sesi√≥n
paso
Figura
6.26
Identificaremos
agente
ajeno
dicha
red
ajena
nodo
m√≥vil
encontraba
inicialmente
nombre
agente
ajeno
ancla
nodo
m√≥vil
desplaza
red
ajena
paso
Figura
6.26
registra
agente
ajeno
paso
agente
ajeno
proporciona
agente
ajeno
ancla
COA
nodo
m√≥vil
paso
agente
ajeno
ancla
recibe
datagrama
encapsulado
nodo
m√≥vil
salido
red
reen-
capsular
datagrama
reenviarlo
nodo
m√≥vil
paso
utilizando
COA
nodo
m√≥vil
desplaza
posteriormente
red
ajena
agente
ajeno
red
visitada
contactar√°
agente
ajeno
ancla
establecer
reenv√≠o
red
ajena
544
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
Agente
Red
Red
ajena
visitada
inicio
sesi√≥n
red
ajena
Agente
ajeno
ancla
agente
ajeno
Red
√°rea
extensa
Corresponsal
Agente
corresponsal
Figura
6.26
Transferencia
m√≥viles
redes
enrutamiento
directo
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
5446.6
IP
m√≥vil
protocolos
arquitectura
Internet
necesarios
soporte
movilidad
colectivamente
conocidos
nombre
IP
m√≥vil
definidos
principalmente
RFC
3344
IPv4
IP
m√≥vil
est√°ndar
flexible
soporta
modos
distintos
operaci√≥n
ejemplo
operaci√≥n
agente
ajeno
m√∫ltiples
formas
agentes
nodos
m√≥viles
descubran
utilizaci√≥n
direcciones
COA
√∫nicas
m√∫ltiples
diversas
formas
encapsulaci√≥n
IP
m√≥vil
est√°ndar
complejo
har√≠a
falta
libro
completo
describirlo
detalle
tales
libros
Perkins
1998b
objetivo
modesto
proporcionar
panor√°-
mica
aspectos
importantes
IP
m√≥vil
ilustrar
escena-
rios
comunes
arquitectura
IP
m√≥vil
contiene
elementos
presentado
anteriormente
incluyendo
conceptos
agente
agente
ajeno
direcciones
COA
encapsulaci√≥n
desencapsulaci√≥n
est√°ndar
actual
RFC
3344
especifica
enru-
tamiento
indirecto
nodo
m√≥vil
est√°ndar
IP
m√≥vil
consta
elementos
principales
Descubrimiento
agentes
IP
m√≥vil
define
protocolos
utilizados
agente
pro-
pio
ajeno
anunciar
servicios
nodos
m√≥viles
protocolos
nodos
m√≥viles
soliciten
servicios
agente
ajeno
Registro
agente
IP
m√≥vil
define
protocolos
utilizados
nodo
m√≥vil
agente
ajeno
registrar
desregistrar
direcciones
COA
agente
nodo
m√≥vil
Enrutamiento
indirecto
datagramas
est√°ndar
define
forma
agente
reenv√≠a
datagramas
nodos
m√≥viles
incluyendo
reglas
reenv√≠o
datagramas
reglas
gesti√≥n
condiciones
error
diversas
for-
encapsulaci√≥n
RFC
2003
RFC
2004
consideraciones
seguridad
importancia
est√°ndar
IP
m√≥vil
ejemplo
clara
necesidad
nodo
m√≥vil
autenti-
garantizar
usuarios
maliciosos
puedan
registrar
direcci√≥n
COA
falsa
agente
har√≠a
datagramas
destinados
direcci√≥n
IP
fueran
redirigidos
usuario
malicioso
IP
m√≥vil
seguridad
utili-
zando
mecanismos
examinaremos
Cap√≠tulo
explicaciones
siguen
tocar
problemas
seguridad
Descubrimiento
agentes
nodo
IP
m√≥vil
llegue
red
independientemente
conectando
red
ajena
volviendo
averiguar
identidad
agente
ajeno
correspondiente
descubrimiento
agente
ajeno
direcci√≥n
red
permite
capa
red
nodo
m√≥vil
averiguar
acaba
entrar
red
ajena
proceso
conoce
nombre
descubrimiento
agentes
descubrimiento
agentes
realizarse
formas
anuncios
agentes
solicitudes
agente
6.6
IP
M√ìVIL
545
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
545Con
anuncio
agente
agente
ajeno
anuncia
servicios
utilizando
extensi√≥n
protocolo
existente
descubrimiento
router
RFC
1256
agente
difunde
peri√≥dicamente
mensaje
ICMP
campo
tipo
valor
descubrimiento
router
enlaces
est√©
conectado
mensaje
descubri-
miento
router
contiene
direcci√≥n
IP
router
agente
permitiendo
nodos
m√≥viles
conozcan
direcci√≥n
IP
agente
mensaje
descubrimiento
router
contiene
extensi√≥n
anuncio
agente
movilidad
contiene
informaci√≥n
adicional
nodo
m√≥vil
necesita
campos
importantes
extensi√≥n
encuentran
siguientes
Bit
agente
Indica
agente
agente
red
reside
Bit
agente
ajeno
Indica
agente
agente
ajeno
red
reside
Bit
registro
requerido
Indica
usuarios
m√≥viles
red
deber√°n
regis-
trarse
agente
ajeno
particular
usuario
m√≥vil
obtener
direc-
ci√≥n
COA
red
ajena
ejemplo
utilizando
DHCP
asumir
funcionalidad
agente
ajeno
registrarse
agente
ajeno
Bits
encapsulaci√≥n
G.
Indican
utilizar√°
tipo
encapsulaci√≥n
distinta
encapsulaci√≥n
IP-en-IP
Campos
direcci√≥n
COA
lista
direcciones
COA
proporcionada
agente
ajeno
ejemplo
indicamos
direcci√≥n
COA
asociada
agente
ajeno
recibir√°
datagramas
destinados
COA
reenviar√°
nodo
m√≥vil
apropiado
usuario
m√≥vil
seleccionar√°
direc-
ciones
direcci√≥n
COA
hora
registrarse
agente
Figura
6.27
ilustra
campos
clave
contenidos
mensaje
anuncio
agente
solicitud
agente
nodo
m√≥vil
quiera
averiguar
informaci√≥n
acerca
agentes
esperar
recibir
anuncio
agente
difundir
mensaje
solicitud
agente
simplemente
mensaje
ICMP
campo
tipo
contiene
valor
10
agente
reciba
solicitud
enviar√°
directamente
nodo
m√≥vil
anuncio
agente
mensaje
unidifusi√≥n
pudiendo
nodo
m√≥vil
proceder
hubiera
recibido
anuncio
solicitado
Registro
agente
nodo
IP
m√≥vil
recibido
direcci√≥n
COA
registrar
dicha
direc-
ci√≥n
agente
hacerse
agente
ajeno
encargar√°
registrar
COA
agente
directamente
nodo
IP
m√≥vil
analizar
casos
consta
pasos
recibir
anuncio
agente
ajeno
nodo
m√≥vil
env√≠a
mensaje
registro
IP
m√≥vil
agente
ajeno
mensaje
registro
transporta
datagrama
UDP
env√≠a
puerto
434
mensaje
registro
incluye
direc-
ci√≥n
COA
anunciada
agente
ajeno
direcci√≥n
agente
direcci√≥n
permanente
nodo
m√≥vil
MA
tiempo
vida
solicitado
546
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
546el
registro
identificador
registro
64
bits
tiempo
vida
solicitado
registro
n√∫mero
segundos
registro
validez
registro
renueva
agente
tiempo
vida
especificado
registro
quedar√°
invalidado
identificador
registro
act√∫a
n√∫mero
secuencia
sirve
establecer
correspondencia
respuesta
registro
reci-
bida
solicitud
registro
indica
agente
ajeno
recibe
mensaje
registro
anota
direcci√≥n
IP
permanente
nodo
m√≥vil
agente
ajeno
buscar
datagramas
contengan
datagrama
encapsulado
cuya
direcci√≥n
destino
coincida
direcci√≥n
perma-
nente
nodo
m√≥vil
agente
ajeno
env√≠a
continuaci√≥n
mensaje
registro
IP
m√≥vil
datagrama
UDP
puerto
434
agente
mensaje
contiene
direcciones
COA
MA
formato
encapsulaci√≥n
solici-
tado
tiempo
vida
registro
solicitado
identificador
registro
agente
recibe
solicitud
registro
comprueba
autenticidad
correc-
ci√≥n
agente
establece
asociaci√≥n
direcci√≥n
IP
per-
manente
nodo
m√≥vil
direcci√≥n
COA
futuro
datagramas
agente
reciba
est√©n
dirigidos
nodo
m√≥vil
encapsulados
tunelizados
direcci√≥n
COA
agente
env√≠a
respuesta
registro
IP
m√≥vil
contiene
direcciones
MA
tiempo
vida
real
registro
identificador
registro
correspondiente
solicitud
est√©
satisfaciendo
respuesta
agente
ajeno
recibe
respuesta
registro
continuaci√≥n
reenv√≠a
nodo
m√≥vil
6.6
IP
M√ìVIL
547
Tipo
C√≥digo
Tipo
16
Longitud
N√∫mero
secuencia
Tiempo
vida
registro
ReservadoBits
RBHFMGrT
Suma
comprobaci√≥n
Campos
ICMP
est√°ndar
16
24
Direcci√≥n
router
direcciones
COA
Extensi√≥n
anuncio
agente
movilidad
Figura
6.27
Mensaje
descubrimiento
router
ICMP
extensi√≥n
anuncio
agente
movilidad
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
547Llegados
punto
proceso
registro
terminado
nodo
m√≥vil
recibir
datagramas
enviados
direcci√≥n
permanente
Figura
6.28
ilustra
pasos
Observe
agente
especifica
tiempo
vida
peque√±o
tiempo
vida
solicitado
nodo
m√≥vil
agente
ajeno
necesita
desregistrar
expl√≠citamente
direcci√≥n
COA
nodo
m√≥vil
abandone
red
proceso
cancelaci√≥n
direcci√≥n
lugar
auto-
m√°ticamente
nodo
m√≥vil
desplace
red
independientemente
red
ajena
red
registre
direcci√≥n
COA
est√°ndar
IP
m√≥vil
permite
capacidades
escenarios
adicionales
descrito
lector
interesado
consultar
Perkins
1998b
RFC
3344
548
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
Agente
128.119.40.7
Agente
m√≥vil
MA
128.119.40.186
Red
visitada
79.129.13/24
Anuncio
agente
ICMP
COA
79.129.13.2
COA
79.129.13.2
HA:128.119.40.7
MA
128.119.40.186
Tiempo
vida
9999
identificador
714
Solicitud
registro
COA
79.129.13.2
HA:128.119.40.7
MA
128.119.40.186
Tiempo
vida
9999
identificador
714
formato
encapsulaci√≥n
Solicitud
registro
Tiempo
Tiempo
Tiempo
128.119.40.7
MA
128.119.40.186
Tiempo
vida
4999
identificaci√≥n
714
formato
encapsulaci√≥n
Respuesta
registro
128.119.40.7
MA
128.119.40.186
Tiempo
vida
4999
identificador
714
Respuesta
registro
Agente
ajeno
COA
79.129.13.2
Figura
6.28
Anuncio
agente
registro
IP
m√≥vil
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
5486.7
Gesti√≥n
movilidad
redes
celulares
Habiendo
examinado
gestiona
movilidad
redes
IP
volvamos
atenci√≥n
redes
historia
dilatada
soporte
movili-
dad
redes
telefon√≠a
celular
Secci√≥n
6.4
centrado
enlace
inal√°mbrico
salto
redes
celulares
centrarnos
movilidad
utilizando
caso
estudio
arquitectura
redes
celulares
GSM
Goodman
1997
Mouly
1992
Scourias
1997
Kaaranen
2001
Korhonen
2003
Turner
2009
tecnolog√≠a
madura
amplia
implantaci√≥n
caso
IP
m√≥vil
veremos
arquitectura
redes
GSM
integra
princi-
pios
fundamentales
identificado
Secci√≥n
6.5
IP
m√≥vil
GSM
adopta
t√©cnica
basada
enrutamiento
indirecto
v√©ase
Secci√≥n
6.5.2
enrutando
llamada
corresponsal
red
usuario
m√≥vil
red
visitada
terminolog√≠a
GSM
red
usuario
m√≥vil
denomina
red
m√≥vil
terrestre
p√∫blica
home
PLMN
home
Public
Land
Mobile
Network
acr√≥nimo
PLMN
resulta
complicado
pronunciar
tratamos
evitar
sopa
letras
acr√≥nimos
sucesivo
referire-
mos
PLMN
GSM
simplemente
nombre
red
red
proveedor
telefon√≠a
celular
abonado
usuario
m√≥vil
pro-
veedor
factura
usuario
servicios
mensuales
telefon√≠a
celular
PLMN
visitada
denominaremos
sencillamente
red
visitada
red
reside
actualmente
usuario
m√≥vil
caso
IP
m√≥vil
responsabilidades
redes
visitada
distintas
‚Ä¢L
Registro
ubicaciones
HLR
Home
Location
Register
contiene
n√∫mero
tel√©-
fono
celular
permanente
informaci√≥n
perfil
abonado
abo-
nados
importante
resaltar
base
datos
HLR
contiene
informaci√≥n
acerca
ubicaciones
actuales
abonados
usuario
m√≥vil
actualmente
situaci√≥n
itinerancia
roaming
red
celular
provee-
dor
HLR
contendr√°
suficiente
informaci√≥n
obtener
proceso
describir
direcci√≥n
red
visitada
enrutar
llamadas
dirigidas
usuario
m√≥vil
veremos
conmutador
especial
red
conocido
Centro
conmutaci√≥n
pasarela
servi-
cios
m√≥viles
GMSC
Gateway
Mobile
services
Switching
Center
contactado
corresponsal
realiza
llamada
usuario
m√≥vil
tratar
evitar
excesivo
acr√≥nimos
sucesivo
referir
GMSC
t√©rmino
descriptivo
MSC
‚Ä¢L
Registro
ubi-
caci√≥n
visitantes
VLR
Visitor
Location
Register
base
datos
VLR
contiene
entrada
usuario
m√≥vil
actualmente
red
servicio
VLR
entradas
VLR
aparecen
desaparecen
medida
usuarios
m√≥viles
entran
salen
red
base
datos
VLR
normal-
mente
co-ubicada
centro
conmutaci√≥n
m√≥vil
MSC
coordina
esta-
blecimiento
llamadas
red
visitada
6.7
GESTI√ìN
MOVILIDAD
REDES
CELULARES
549
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
549En
pr√°ctica
red
celular
proveedor
sirve
red
abonados
red
visitada
usuarios
m√≥viles
est√©n
abonados
proveedor
telefon√≠a
celular
6.7.1
Enrutamiento
llamadas
usuario
m√≥vil
describir
realiza
llamada
usuario
m√≥vil
GSM
red
ajena
continuaci√≥n
proporcionamos
ejemplo
simple
lector
inte-
resado
encontrar
escenarios
complejos
Mouly
1992
pasos
ilustra-
Figura
6.29
siguientes
corresponsal
marca
n√∫mero
telef√≥nico
usuario
m√≥vil
n√∫mero
referencia
l√≠nea
telef√≥nica
ubicaci√≥n
concreta
n√∫mero
telef√≥nico
fijo
usuario
m√≥vil
d√≠gi-
tos
n√∫mero
suficientes
identificar
globalmente
red
m√≥vil
pertenece
llamada
enrutada
corresponsal
red
tele-
f√≥nica
conmutada
p√∫blica
PSTN
Public
Switched
Telephone
Network
MSC
red
m√≥vil
tramo
llamada
MSC
recibe
llamada
interroga
HLR
determinar
ubicaci√≥n
usuario
m√≥vil
caso
simple
HLR
devuelve
N√∫mero
itinerancia
estaci√≥n
m√≥vil
MSRN
Mobile
Station
Roaming
Number
sucesivo
denominaremos
simplemente
n√∫mero
itinerancia
Observe
n√∫mero
dife-
rente
n√∫mero
telef√≥nico
permanente
m√≥vil
asociado
red
m√≥vil
n√∫mero
itinerancia
ef√≠mero
asignado
tmporalmente
m√≥vil
entra
red
visitada
n√∫mero
itinerancia
juega
papel
similar
direcci√≥n
COA
IP
m√≥vil
direcci√≥n
COA
invisible
corresponsal
m√≥vil
registro
HLR
n√∫mero
itinerancia
devuelve
direcci√≥n
VLR
red
visitada
caso
mostrado
Figura
6.29
MSC
necesitar√°
consultar
VLR
obtener
n√∫mero
itine-
rancia
nodo
m√≥vil
obtiene
HLR
n√∫mero
itinerancia
direc-
ci√≥n
VLR
sucede
valores
usuario
m√≥vil
desplaza
red
visitada
Analizaremos
importantes
cuestiones
Conocido
n√∫mero
itinerancia
MSC
establece
tramo
lla-
mada
red
MSC
red
visitada
llamada
completado
produci√©ndose
enrutamiento
corresponsal
MSC
MSC
visitado
estaci√≥n
base
servicio
usuario
m√≥vil
cuesti√≥n
resuelta
paso
HLR
obtiene
informaci√≥n
acerca
ubicaci√≥n
usuario
m√≥vil
enciende
tel√©fono
m√≥vil
entra
red
visitada
cubierta
VLR
m√≥vil
registrarse
red
visitada
realiza
intercambiando
mensajes
se√±alizaci√≥n
m√≥vil
VLR
VLR
visitado
env√≠a
mensaje
solicitud
actualizaci√≥n
ubicaci√≥n
HLR
m√≥vil
mensaje
informa
HLR
n√∫mero
itineran-
cia
contactar
m√≥vil
direcci√≥n
VLR
consultar
obtener
n√∫mero
itinerancia
m√≥vil
intercambio
VLR
obtiene
informaci√≥n
abonado
base
datos
HLR
acerca
m√≥vil
determina
servicios
caso
proporcionar
red
visitada
usuario
m√≥vil
550
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
5506.7.2
Transferencia
llamadas
GSM
estaci√≥n
m√≥vil
cambia
asociaci√≥n
estaci√≥n
base
llamada
produce
denomina
transferencia
cesi√≥n
llamada
muestra
Figura
6.30
llamada
m√≥vil
enrutada
inicialmente
transfe-
rencia
m√≥vil
estaci√≥n
base
denominaremos
estaci√≥n
base
antigua
transferencia
enruta
m√≥vil
estaci√≥n
base
denominaremos
estaci√≥n
base
Observe
transferencia
6.7
GESTI√ìN
MOVILIDAD
REDES
CELULARES
551
Usuario
m√≥vil
Red
visitada
Red
Red
telef√≥nica
conmutada
p√∫blica
Corresponsal
VLR
HLR
Figura
6.29
Establecimiento
llamada
usuario
m√≥vil
enrutamiento
indirecto
Antigua
BS
BS
Antiguo
enrutamiento
enrutamiento
VLR
Figura
6.30
Escenario
transferencia
llamadas
estaciones
base
MSC
com√∫n
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
551de
llamada
estaciones
base
resultado
m√≥vil
transmita
reciba
estaci√≥n
base
llamada
activa
re-enrute
punto
conmutaci√≥n
red
estaci√≥n
base
Inicialmente
suponer
estaciones
base
antigua
comparten
MSC
re-
enrutamiento
lugar
MSC
razones
produzca
transferencia
llamada
citar
se√±al
estaci√≥n
base
actual
m√≥vil
deteriorado
punto
exista
riesgo
llamada
interrumpa
celda
haberse
sobrecargado
gestionando
n√∫mero
llama-
das
congesti√≥n
aliviarse
transfiriendo
usuarios
m√≥viles
celdas
cercanas
congestionadas
asociado
estaci√≥n
base
m√≥vil
mide
peri√≥dicamente
intensidad
se√±al
baliza
recibida
estaci√≥n
base
actual
se√±ales
baliza
procedentes
estaciones
base
cercanas
m√≥vil
escuchar
medidas
reenviadas
estaci√≥n
base
actual
m√≥vil
estaci√≥n
base
antigua
inicia
transferencia
llamada
GSM
bas√°ndose
medidas
carga
actual
m√≥viles
existente
celdas
cercanas
fac-
tores
Mouly
1992
est√°ndar
GSM
especifica
algoritmo
concreto
estaci√≥n
base
utilizar
hora
determinar
transferir
llamada
Figura
6.31
ilustra
pasos
llevan
cabo
estaci√≥n
base
decide
transferir
usuario
m√≥vil
estaci√≥n
base
BS
antigua
informa
MSC
visitado
transferencia
estaci√≥n
base
conjunto
estaciones
base
transferir
m√≥vil
MSC
visitado
inicia
operaciones
establecimiento
ruta
esta-
ci√≥n
base
asignando
recursos
necesarios
transportar
llamada
re-enrutada
se√±alizando
estaci√≥n
base
producir
transferencia
estaci√≥n
base
asigna
activa
canal
radio
utilice
m√≥vil
552
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
Antigua
BS
BS
78
VLR
Figura
6.31
Pasos
necesarios
transferencia
estaciones
base
MSC
com√∫n
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
5524
estaci√≥n
base
env√≠a
vuelta
MSC
visitado
estaci√≥n
base
antigua
se√±al
indicativa
establecido
ruta
MSC
visitado
esta-
ci√≥n
base
informar
m√≥vil
transferencia
producir
estaci√≥n
base
proporciona
informaci√≥n
m√≥vil
necesitar√°
asociarse
m√≥vil
informado
transferencia
Observe
punto
m√≥vil
completamente
ignorante
red
realizando
trabajo
necesario
cabo
transferencia
ejemplo
asignar
canal
estaci√≥n
base
asignar
ruta
MSC
visitado
estaci√≥n
base
m√≥vil
estaci√≥n
base
intercambian
mensajes
activar
com-
pletamente
canal
estaci√≥n
base
m√≥vil
env√≠a
estaci√≥n
base
mensaje
indicando
completado
transferencia
reenviado
MSC
visitado
MSC
visitado
re-
enruta
llamada
activa
m√≥vil
estaci√≥n
base
liberan
recursos
asignados
ruta
llevaba
antigua
esta-
ci√≥n
base
concluir
an√°lisis
transferencia
llamadas
considerando
ocu-
rre
m√≥vil
desplaza
estaci√≥n
base
asociada
MSC
antigua
estaci√≥n
base
sucede
tipo
transferencia
MSC
lugar
muestra
Figura
6.32
GSM
define
6.7
GESTI√ìN
MOVILIDAD
REDES
CELULARES
553
Red
Corresponsal
a.
transferencia
MSC
ancla
Red
telef√≥nica
conmutada
p√∫blica
b.
transferencia
Corresponsal
MSC
ancla
Red
telef√≥nica
conmutada
p√∫blica
Red
Figura
6.32
Re-enrutamiento
MSC
ancla
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
553el
concepto
MSC
ancla
MSC
ancla
MSC
visitado
m√≥vil
comienzo
llamada
MSC
ancla
llamada
dure
llamada
independientemente
n√∫mero
transfe-
rencias
inter-MSC
realizadas
m√≥vil
llamada
enrutada
MSC
MSC
ancla
MSC
ancla
MSC
visitado
m√≥vil
est√©
situado
actualmente
m√≥vil
desplaza
√°rea
cobertura
MSC
llamada
activa
re-enruta
MSC
ancla
MSC
visitado
contiene
estaci√≥n
base
momento
MSC
MSC
MSC
ancla
MSC
visitado
corresponsal
m√≥vil
Figura
6.32
ilustra
enrutamiento
llamada
MSC
visitados
usuario
m√≥vil
lugar
mantener
√∫nico
salto
MSC
MSC
ancla
MSC
actual
t√©cnica
alternativa
habr√≠a
encadenar
simplemente
MSC
visitados
m√≥vil
MSC
antiguo
reenv√≠e
llamada
activa
MSC
m√≥vil
desplace
MSC
encadenamiento
centros
MSC
lugar
redes
celulares
IS-41
paso
opcional
minimizaci√≥n
ruta
eli-
minar
MSC
existentes
MSC
ancla
MSC
visitado
actual
Lin
2001
Terminamos
exposici√≥n
acerca
gesti√≥n
movilidad
GSM
compa-
raci√≥n
gesti√≥n
movilidad
GSM
IP
m√≥vil
comparaci√≥n
Tabla
6.2
indica
redes
celulares
IP
fundamentalmente
distintos
aspectos
comparten
sorprendente
n√∫mero
elementos
funcionales
comunes
t√©cnicas
globa-
hora
gestionar
movilidad
Elemento
GSM
Comentarios
elemento
GSM
Elemento
IP
m√≥vil
Sistema
Red
pertenece
n√∫mero
tel√©fono
permanente
Red
usuario
m√≥vil
Centro
conmutaci√≥n
m√≥vil
pasarela
MSC
punto
contacto
obtener
direcci√≥n
Agente
simplemente
MSC
enrutable
usuario
m√≥vil
HLR
base
datos
Registro
ubicaci√≥n
HLR
sistema
contiene
n√∫mero
tel√©fono
permanente
informaci√≥n
perfil
ubicaci√≥n
actual
usuario
m√≥vil
informaci√≥n
abono
Sistema
visitado
Red
distinta
sistema
reside
Red
visitada
actualmente
usuario
m√≥vil
Centro
conmutaci√≥n
servicios
MSC
visitado
responsable
establecer
llamadas
Agente
ajeno
m√≥viles
visitados
nodos
m√≥viles
celdas
asociadas
Registro
ubicaci√≥n
visitantes
VLR
MSC
VLR
entrada
temporal
base
datos
sistema
visitado
contiene
informaci√≥n
subscripci√≥n
usuario
m√≥vil
visitante
N√∫mero
itinerancia
estaci√≥n
Direcci√≥n
enrutable
segmento
llamada
telef√≥nica
Direcci√≥n
COA
m√≥vil
MSRN
simplemente
MSC
MSC
visitado
visible
n√∫mero
itinerancia
m√≥vil
corresponsal
Tabla
6.2
Aspectos
comunes
IP
m√≥vil
GSM
respecta
movilidad
554
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
5546.8
Tecnolog√≠a
inal√°mbrica
movilidad
impacto
protocolos
capas
superiores
cap√≠tulo
visto
redes
inal√°mbricas
difieren
significativamente
contrapartidas
cableadas
capa
enlace
resultado
caracter√≠sticas
canal
inal√°mbrico
tales
desvanecimiento
multicamino
terminales
ocultos
capa
red
resultado
existencia
usuarios
m√≥viles
cambian
puntos
asociaci√≥n
red
diferencias
importantes
capas
transporte
aplicaci√≥n
Resulta
tentador
pensar
diferencias
menores
capa
red
proporciona
capas
superiores
modelo
servicio
entrega
esfuerzo
redes
cableadas
inal√°mbricas
forma
similar
utilizan
protocolos
TCP
UDP
proporcionar
servicios
capa
transporte
aplicaciones
redes
inal√°mbricas
cableadas
capa
aplicaci√≥n
tendr√≠a
modificada
sentido
intui-
ci√≥n
correcta
TCP
UDP
operar
redes
enlaces
ina-
l√°mbricos
protocolos
transporte
general
TCP
particular
ocasiones
rendimiento
distinto
redes
cableadas
inal√°mbri-
cas
t√©rminos
rendimiento
diferencias
manifiestan
Veamos
Recuerde
TCP
retransmite
segmentos
perdidos
corruptos
ruta
existente
emisor
receptor
caso
usuarios
m√≥viles
p√©rdidas
resultado
congesti√≥n
red
desbordamiento
buffers
routers
transferencia
llamadas
ejemplo
retardos
re-enrutamiento
seg-
mentos
punto
asociaci√≥n
red
m√≥vil
casos
mensajes
ACK
receptor
emisor
TCP
indican
segmento
reci-
bido
intacto
emisor
consciente
segmento
perdido
causa
con-
gesti√≥n
transferencia
detectado
bits
err√≥neos
casos
respuesta
emisor
retransmitir
segmento
respuesta
control
congesti√≥n
TCP
casos
TCP
disminuye
tama√±o
ventana
congesti√≥n
explica
Secci√≥n
3.7
Reduciendo
incon-
dicionalmente
ventana
congesti√≥n
TCP
asume
impl√≠citamente
p√©rdidas
seg-
mento
congesti√≥n
corrupci√≥n
transferencia
llamadas
visto
Secci√≥n
6.2
errores
bit
comunes
redes
inal√°mbricas
redes
cableadas
producen
tales
errores
bits
lugar
p√©rdidas
mecanismo
transferencia
realmente
nin-
guna
raz√≥n
emisor
TCP
reduzca
ventana
congesti√≥n
veloci-
dad
env√≠o
darse
perfectamente
caso
buffers
routers
est√©n
vac√≠os
paquetes
est√©n
fluyendo
ruta
terminal
terminal
congesti√≥n
represente
obst√°culo
investigadores
principios
mediados
d√©cada
1990
dadas
tasas
errores
bit
enlaces
inal√°mbricos
posibilidad
produzcan
p√©rdidas
transferencia
llamadas
respuesta
control
congesti√≥n
TCP
problem√°tica
configuraci√≥n
inal√°mbrica
resolver
pro-
blema
clases
gen√©ricas
t√©cnicas
Recuperaci√≥n
local
protocolos
recuperaci√≥n
local
permiten
recuperarse
errores
bit
lugar
momento
errores
producen
ejemplo
6.8
TECNOLOG√çA
INAL√ÅMBRICA
MOVILIDAD
555
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
555en
enlace
inal√°mbrico
caso
protocolo
ARQ
802.11
estudiado
Secci√≥n
6.3
t√©cnicas
sofisticadas
utilizan
ARQ
FEC
Ayanoglu
1995
Conocimiento
emisor
TCP
enlaces
inal√°mbricos
t√©cnicas
recuperaci√≥n
local
emisor
TCP
afortunadamente
inconsciente
segmen-
tos
atravesando
enlace
inal√°mbrico
t√©cnica
alternativa
emisor
receptor
TCP
conscientes
existencia
enlace
inal√°mbrico
distin-
guir
p√©rdidas
congesti√≥n
lugar
red
cableada
p√©rdidas/
corrupciones
producen
enlace
inal√°mbrico
invocar
mecanismos
control
congesti√≥n
respuesta
p√©rdidas
debidas
red
cableada
congestionada
Balakrishnan
1997
investiga
diversos
tipos
TCP
suposi-
ci√≥n
sistemas
terminales
puedan
cabo
distinci√≥n
Wei
2004
investiga
t√©cnicas
distinguir
p√©rdidas
segmentos
cableados
inal√°m-
bricos
ruta
terminal
terminal
T√©cnicas
conexi√≥n
dividida
t√©cnica
conexi√≥n
dividida
Bakre
1995
cone-
xi√≥n
terminal
terminal
usuario
m√≥vil
punto
terminal
divide
conexiones
capa
transporte
host
m√≥vil
punto
acceso
ina-
l√°mbrico
punto
acceso
inal√°mbrico
punto
terminal
comunicaci√≥n
asumiremos
host
cableado
conexi√≥n
terminal
terminal
forma
concatenaci√≥n
inal√°m-
brica
cableada
capa
transporte
segmento
inal√°mbrico
conexi√≥n
TCP
est√°ndar
Bakre
1995
protocolo
recuperaci√≥n
errores
especialmente
adaptado
ejecut√°ndose
UDP
Yavatkar
1994
investiga
protocolo
repetici√≥n
selectiva
capa
transporte
cone-
xi√≥n
inal√°mbrica
medidas
contenidas
Wei
2006
indican
conexiones
TCP
divididas
utilizan
ampliamente
redes
datos
celulares
llevarse
cabo
mejoras
significativas
utilizando
tipo
conexiones
divididas
tratamiento
TCP
enlaces
inal√°mbricos
necesariamente
Animamos
lector
consultar
referencias
detalles
acerca
√°rea
activa
investigaci√≥n
Habiendo
considerado
protocolos
capa
transporte
veamos
continuaci√≥n
efecto
tecnolog√≠a
inal√°mbrica
movilidad
protocolos
capa
apli-
caci√≥n
consideraci√≥n
importante
enlaces
inal√°mbricos
suelen
anchos
banda
relativamente
bajos
vimos
Figura
6.2
resultado
apli-
caciones
operan
enlaces
inal√°mbricos
particularmente
enlaces
inal√°mbri-
cos
celulares
tratar
ancho
banda
recurso
escaso
ejemplo
servidor
web
est√©
enviando
contenido
navegador
web
ejecuta
tel√©-
fono
probablemente
proporcionar
contenido
riqueza
im√°-
genes
env√≠a
navegador
est√©
operando
conexi√≥n
cableada
enlaces
inal√°mbricos
presentan
desaf√≠os
capa
aplicaci√≥n
movilidad
permiten
amplio
conjunto
aplicaciones
conscientes
ubicaci√≥n
contexto
Chen
2000
t√©rminos
generales
redes
inal√°mbricas
m√≥viles
desempe√±ar√°n
papel
crucial
hora
disponer
entornos
computaci√≥n
ubicua
futuro
Weiser
1991
terminemos
dejando
punta
iceberg
respecta
impacto
redes
inal√°mbricas
m√≥viles
aplicaciones
red
protocolos
556
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
5566.9
Resumen
redes
inal√°mbricas
m√≥viles
revolucionado
telefon√≠a
teniendo
impacto
profundo
mundo
redes
computadoras
acceso
restringido
momento
lugar
infraestructura
global
red
acceso
red
ubicuo
permi-
ten
conjunto
excitante
servicios
dependientes
ubicaci√≥n
Dada
creciente
importancia
redes
inal√°mbricas
m√≥viles
cap√≠tulo
centrado
principios
tecnolog√≠as
enlaces
comunes
arquitecturas
red
necesarias
soporte
comunicaciones
inal√°mbricas
m√≥viles
comenzado
cap√≠tulo
introducci√≥n
redes
inal√°mbricas
m√≥viles
estableciendo
importante
distinci√≥n
desaf√≠os
planteados
naturaleza
inal√°mbrica
enlaces
comunicaciones
tales
redes
movilidad
enlaces
inal√°mbricos
permitido
aislar
identificar
dominar
conceptos
clave
√°rea
centrado
comunicaci√≥n
inal√°mbrica
considerando
caracter√≠sticas
enlace
inal√°mbrico
Secci√≥n
6.2
Secciones
6.3
6.4
examinado
aspectos
nivel
enlace
est√°ndar
redes
LAN
inal√°mbricas
802.11
IEEE
WiFi
est√°ndar
WiMAX
802.16
est√°ndar
Bluetooth
802.15.1
acceso
celular
Internet
vuelto
atenci√≥n
problema
movilidad
Secci√≥n
6.5
identificado
diversas
formas
movilidad
viendo
diversos
puntos
espectro
planteaban
desaf√≠os
admit√≠an
distintas
soluciones
considerado
problemas
localizar
usuario
m√≥vil
efectuar
enrutamiento
t√©cnicas
transferir
usuarios
m√≥viles
desplazan
din√°micamente
punto
asociaci√≥n
red
Secciones
6.6
6.7
respectivamente
examinado
resolv√≠an
cuestiones
est√°ndar
IP
m√≥vil
GSM
considerado
impacto
enlaces
inal√°mbricos
movilidad
protocolos
capa
trans-
porte
aplicaciones
red
Secci√≥n
6.8
dedicado
cap√≠tulo
completo
estudio
redes
inal√°mbricas
m√≥viles
har√≠a
falta
libro
completo
explorar
totalmente
campo
atrac-
tivo
r√°pida
expansi√≥n
Animamos
lector
profundizar
campo
consul-
tando
referencias
proporcionado
cap√≠tulo
Problemas
cuestiones
repaso
Cap√≠tulo
Cuestiones
repaso
SECCI√ìN
6.1
R1
red
inal√°mbrica
operando
infraestruc-
tura
red
infraestructura
opera-
ci√≥n
diferencia
operaci√≥n
infraestructura
R2
tipos
redes
inal√°mbricas
identificados
taxonom√≠a
Secci√≥n
6.1
tipos
redes
inal√°mbricas
usado
PROBLEMAS
CUESTIONES
REPASO
557
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
557SECCI√ìN
6.2
R3
diferencias
siguientes
tipos
deficiencias
canales
ina-
l√°mbricos
p√©rdida
ruta
propagaci√≥n
multicamino
interferencia
or√≠ge-
nes
R4
medida
nodo
m√≥vil
alejando
estaci√≥n
base
acciones
cabo
estaci√≥n
base
garantizar
probabilidad
p√©rdida
tramas
transmitidas
incremente
SECCI√ìN
6.3
R5
Describa
papel
tramas
baliza
802.11
R6
falso
estaci√≥n
802.11
transmita
trama
datos
lugar
enviar
trama
RTS
recibir
correspondiente
trama
CTS
R7
utilizan
reconocimientos
802.11
Ethernet
cableada
R8
falso
Ethernet
802.11
utilizan
estructura
trama
R9
Describa
funciona
umbral
RTS
R10
Suponga
tramas
RTS
CTS
IEEE
802.11
fueran
largas
tramas
DATA
ACK
est√°ndar
Proporcionar√≠a
ventaja
tramas
CTS
RTS
R11
Secci√≥n
6.3.4
analizado
movilidad
est√°ndares
802.11
estaci√≥n
inal√°mbrica
desplaza
BSS
subred
puntos
acceso
interconectados
conmutador
punto
acceso
necesitar
enviar
trama
direcci√≥n
MAC
suplan-
tada
conmutador
reenv√≠e
trama
adecuadamente
R12
diferencias
dispositivo
maestro
red
Bluetooth
estaci√≥n
base
red
802.11
R13
erdadero
falso
WiMAX
estaci√≥n
base
transmitir
nodos
velocidad
canal
R14
t√©rmino
planificaci√≥n
oportunista
WiMAX
R15
Secci√≥n
6.3.2
visto
est√°ndares
principales
UMTS
CDMA-2000
est√°ndares
2.5
herederos
est√°ndares
SECCI√ìN
6.5‚Äì6.6
R16
nodo
dispone
conexi√≥n
inal√°mbrica
Internet
m√≥vil
nodo
Explique
respuesta
Suponga
usuario
computadora
port√°til
paseando
domicilio
accede
Internet
punto
acceso
usuario
m√≥vil
punto
vista
red
Explique
res-
puesta
R17
diferencia
direcci√≥n
permanente
direcci√≥n
cedida
COA
asigna
direcci√≥n
COA
558
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
558R18
Considere
conexi√≥n
TCP
pasa
IP
m√≥vil
Indique
falsa
afirmaci√≥n
fase
conexi√≥n
TCP
corresponsal
host
m√≥vil
pasa
red
m√≥vil
fase
transferencia
datos
cabo
directamente
corresponsal
host
m√≥vil
pasar
red
SECCI√ìN
6.7
R19
objetivos
registros
HLR
VLR
redes
GSM
ele-
mentos
IP
m√≥vil
similares
HLR
VLR
R20
papel
MSC
ancla
redes
GSM
SECCI√ìN
6.8
R21
t√©cnicas
utilizarse
evitar
√∫nico
enlace
inal√°mbrico
degrade
rendimiento
conexi√≥n
TCP
terminal
terminal
capa
trans-
porte
Problemas
P1
Considere
ejemplo
CDMA
√∫nico
emisor
Figura
6.5
salida
emisor
bits
datos
mostrados
c√≥digo
CDMA
emisor
P2
Considere
emisor
Figura
6.6
salida
emisor
canal
sume
se√±al
procedente
emisor
Z2
P3
Suponga
receptor
Figura
6.6
deseara
recibir
datos
enviados
emisor
Demuestre
c√°lculos
necesarios
recep-
tor
efectivamente
recuperar
datos
emisor
se√±al
agregada
canal
utilizando
c√≥digo
correspondiente
emisor
P4
ejemplo
emisores
receptores
proporcione
ejemplo
c√≥di-
gos
CDMA
contengan
valores
/H110021
permitan
receptores
extraer
bits
originales
transmitidos
emisores
CDMA
P5
Suponga
ISP
proporcionan
acceso
WiFi
determinada
cafete-
r√≠a
operando
ISP
punto
acceso
disponiendo
bloque
direcciones
IP
a.
Suponga
accidente
ISP
configurado
punto
acceso
operar
canal
11
Dejar√≠a
completamente
funcionar
protocolo
802.11
situaci√≥n
Explique
sucede
estaciones
asociada
ISP
tratan
transmitir
tiempo
b.
Suponga
puntos
acceso
opera
canal
opera
canal
11
modifica
respuestas
anteriores
P6
paso
protocolo
CSMA
CA
estaci√≥n
transmite
√©xito
trama
inicia
protocolo
CSMA
CA
transmitir
trama
paso
lugar
paso
razones
mente
dise√±adores
PROBLEMAS
559
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
559CSMA
CA
dicha
estaci√≥n
transmita
trama
forma
inmediata
detecta
canal
inactivo
P7
Suponga
configuramos
estaci√≥n
802.11b
reservar
canal
secuencia
RTS
CTS
Suponga
estaci√≥n
desea
transmitir
1.000
bytes
datos
estaciones
inactivas
momento
Calcule
tiempo
requerido
transmitir
trama
recibir
mensaje
reconoci-
miento
funci√≥n
SIFS
DIFS
ignorando
retardo
propagaci√≥n
supo-
niendo
produce
error
bit
P8
Considere
escenario
mostrado
Figura
6.33
nodos
inal√°m-
bricos
D.
radio
cobertura
nodos
muestra
√≥valos
sombreados
nodos
comparten
frecuencia
trans-
mite
escuchada
recibida
transmite
escuchar
recibir
transmite
escu-
char
recibir
transmite
escuchar
recibir
D.
Suponga
nodo
suministro
infinito
mensajes
enviar
nodos
destino
mensaje
vecino
inmediato
nodo
mensajes
reenviados
ejemplo
desea
enviar
mensaje
enviarse
env√≠a
env√≠a
D.
tiempo
particionado
tiempo
transmisi√≥n
mensaje
exactamente
partici√≥n
tiempo
sucede
ejemplo
proto-
colo
Aloha
particiones
partici√≥n
tiempo
nodo
cosas
siguientes
enviar
mensaje
ii
recibir
mensaje
enviando
exactamente
mensaje
nodo
iii
permanecer
silencio
nodo
escucha
transmisiones
simult√°neas
produce
coli-
si√≥n
mensajes
transmitidos
recibido
correctamente
asu-
mir
errores
nivel
bit
enviando
exactamente
mensaje
recibido
correctamente
nodos
encuentren
radio
transmisi√≥n
emisor
a.
Suponga
controlador
omnisciente
controlador
conoce
nodos
red
ordenar
nodo
haga
controlador
omnisciente
enviar
mensaje
recibir
mensaje
permanecer
silencio
controlador
omnisciente
velocidad
m√°xima
transmitirse
mensaje
mensaje
par
nodos
origen
destino
560
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
AB
Figura
6.33
Escenario
Problema
P8
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
560b
Suponga
env√≠a
mensajes
env√≠a
mensajes
C.
tasa
m√°xima
combinada
fluir
mensajes
datos
c.
Suponga
env√≠a
mensajes
env√≠a
mensajes
D.
tasa
m√°xima
combinada
fluir
mensajes
datos
d.
Suponga
sustituimos
enlaces
inal√°mbricos
enlaces
cableados
Repita
apartados
escenario
cableado
e.
suponga
volvemos
escenario
inal√°mbrico
mensa-
jes
datos
enviados
origen
destino
destino
responde
men-
saje
ACK
dirigido
origen
ejemplo
TCP
Suponga
mensaje
ACK
ocupa
partici√≥n
Repita
apartados
anteriores
escenario
P9
Describa
formato
trama
Bluetooth
802.15.1
leer
referen-
cias
libro
encontrar
informaci√≥n
correspondiente
formato
trama
limite
inherente
n√∫mero
nodos
acti-
vos
red
802.15.1
nodos
Explique
respuesta
P10
Considere
escenario
WiMAX
idealizado
subtrama
descendente
v√©ase
Figura
6.17
particionada
tiempo
particiones
descendentes
sub-
trama
teniendo
particiones
tiempo
duraci√≥n
nodos
alcanzables
estaci√≥n
base
velocidades
10
Mbps
Mbps
2,5
Mbps
Mbps
respectivamente
canal
descendente
estaci√≥n
base
cantidad
infinita
datos
enviar
nodos
enviar
cualquiera
nodos
cualquiera
particiones
tiempo
subtrama
descendente
a.
velocidad
m√°xima
estaci√≥n
base
enviar
nodos
suponiendo
enviar
nodo
elija
partici√≥n
tiempo
equitativa
soluci√≥n
Explique
respuesta
defina
t√©rmino
equitativa
b.
imponemos
requisito
comunicaci√≥n
equitativa
sentido
nodo
deba
recibir
cantidad
datos
subtrama
des-
cendente
velocidad
media
transmisi√≥n
estaci√≥n
base
nodos
subtrama
descendente
Explique
llegado
obtener
respuesta
c.
Suponga
criterio
comunicaci√≥n
equitativa
nodo
recibir
doble
datos
nodo
subtrama
velocidad
media
transmisi√≥n
estaci√≥n
base
nodos
subtrama
Explique
obtenido
respuesta
P11
Secci√≥n
6.5
soluci√≥n
propuesta
permitir
usuarios
m√≥viles
man-
tengan
direcciones
IP
medida
desplazan
redes
ajenas
red
ajena
anunciara
ruta
altamente
espec√≠fica
usuario
m√≥vil
infraestructura
enrutamiento
existente
propagar
informaci√≥n
red
soluci√≥n
dijimos
escalabilidad
problema
Suponga
usuario
m√≥vil
desplaza
red
red
ajena
anuncia
PROBLEMAS
561
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
561ruta
espec√≠fica
usuario
m√≥vil
red
ajena
antigua
retira
ruta
Con-
sidere
propagar√≠a
informaci√≥n
enrutamiento
algoritmo
vector
distancia
particularmente
caso
enrutamiento
dominios
redes
abarquen
globo
terr√°queo
a.
routers
capaces
enrutar
datagramas
inmediatamente
red
ajena
red
ajena
comience
anunciar
ruta
b.
routers
crean
usuario
m√≥vil
redes
ajenas
c.
Analice
escala
temporal
routers
red
terminar√°n
apren-
der
ruta
usuarios
m√≥viles
P12
Suponga
corresponsal
Figura
6.22
m√≥vil
Dibuje
infraestructura
adicional
capa
red
necesaria
enrutar
datagrama
usua-
rio
m√≥vil
original
m√≥vil
corresponsal
Muestre
estructura
da-
tagrama
datagramas
usuario
m√≥vil
original
m√≥vil
corresponsal
Figura
6.23
P13
IP
m√≥vil
efecto
movilidad
retardos
terminal
terminal
datagramas
enviados
origen
destino
P14
Considere
ejemplo
encadenamiento
analizado
Secci√≥n
6.7.2
Suponga
usuario
m√≥vil
visita
redes
ajenas
corresponsal
inicia
conexi√≥n
usuario
m√≥vil
reside
red
ajena
A.
Enumere
secuencia
mensajes
agentes
ajenos
agentes
ajenos
agente
medida
usuario
m√≥vil
desplaza
red
red
red
C.
continuaci√≥n
suponga
realizamos
encadenamiento
noti-
ficar
expl√≠citamente
corresponsal
agente
cambios
direcci√≥n
COA
usuario
m√≥vil
Enumere
secuencia
mensajes
habr√≠a
intercambiar
escenario
P15
Considere
nodos
m√≥viles
red
ajena
dispone
agente
ajeno
nodos
m√≥viles
utilicen
direcci√≥n
COA
IP
m√≥vil
Explique
respuesta
P16
an√°lisis
registro
VLR
actualizaba
HLR
informaci√≥n
acerca
ubicaci√≥n
actual
m√≥vil
ventajas
desventajas
pro-
porcionar
HLR
MSRN
lugar
direcci√≥n
VLR
Preguntas
discusi√≥n
D1
Enumere
productos
est√©n
actualmente
mercado
proporcionen
interfaz
Bluetooth
802.15
D2
servicio
inal√°mbrico
disponible
regi√≥n
precio
apli-
caciones
soporta
D3
usuario
IEEE
802.11
tipos
problemas
observado
pue-
den
evolucionar
dise√±os
802.11
solventar
problemas
562
CAP√çTULO
REDES
INAL√ÅMBRICAS
M√ìVILES
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
562D4
Realice
b√∫squeda
Web
localizar
pruebas
implantaci√≥n
WiMAX
extensi√≥n
proyectos
piloto
velocidades
conse-
guido
distancias
usuarios
D5
Realice
b√∫squeda
Web
implantaciones
EVDO
HSDPA
tecnolog√≠a
implantada
fecha
Pr√°cticas
laboratorio
Wireshark
sitio
web
libro
http://www.awl.com/kurose-ross
encontrar√°
pr√°ctica
labo-
ratorio
Wireshark
cap√≠tulo
capturan
analizan
tramas
802.11
intercambiadas
computadora
port√°til
inal√°mbrica
punto
acceso
PR√ÅCTICAS
LABORATORIO
WIRESHARK
563
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
563¬øPor
decidi√≥
especializarse
tecnolog√≠a
inal√°mbrica
m√≥vil
implicaci√≥n
redes
inal√°mbricas
movilidad
consecuencia
natural
trabajo
proyectos
departamento
investigaci√≥n
IBM
finales
d√©cada
1980
Dispon√≠amos
enlaces
v√≠a
radio
est√°bamos
intentando
construir
tipo
dispositivo
estilo
ThinkPad
Palm
Pilot
conectividad
inal√°mbrica
reconocimiento
escritura
manuscrita
Desarrollamos
soluci√≥n
simple
posteriormente
denominada
IP
m√≥vil
dimos
funcionaba
Utilizando
experiencia
IP
m√≥vil
desarrollamos
modificaci√≥n
r√°pida
efectiva
RIP
permit√≠a
construir
redes
ad
hoc
funcion√≥
funcion√≥
quiero
aplicaciones
funcionaban
perfectamente
modificaci√≥n
red
ven√≠a
abajo
causa
dise√±os
propiedades
suelen
denominar
transparencia
aplicaci√≥n
escalabilidad
trabajo
laboratorio
enormemente
distinto
√©xito
comercial
tecnolog√≠as
potencial
comercial
visto
satisfecho
564
Charlie
Perkins
Charles
E.
Perkins
Technical
Fellow
WiChorus
dedica
investigar
t√©cnicas
aplicaci√≥n
protocolos
gesti√≥n
movilidad
Internet
generaciones
medios
inal√°mbricos
WiMAX
LTE
tecnolog√≠as
comenzado
conexio-
nes
inal√°mbricas
banda
ancha
realidad
abriendo
oportunidades
expansi√≥n
Internet
suministro
contenido
multimedia
carta
editor
documental
grupo
trabajo
IP
m√≥vil
IETF
Internet
Engineering
Task
Force
autor
co-autor
documentos
estandarizaci√≥n
grupos
trabajo
mip4
mip6
manet
mext
dhc
seamoby
movilidad
transparente
autoconf
editor
diversas
revistas
ACM
IEEE
relacionadas
redes
inal√°mbricas
WiChorus
continuado
implicaci√≥n
desarrollos
avanzados
emplean
IP
m√≥vil
IPv6
protocolos
basados
trabajos
IETF
autor
editor
libros
IP
m√≥vil
redes
ad
hoc
publicado
diversos
art√≠culos
premiados
√°reas
redes
m√≥viles
redes
ad
hoc
optimizaci√≥n
rutas
redes
m√≥viles
descubrimiento
recursos
configuraci√≥n
autom√°tica
computadoras
m√≥viles
creadores
MobiHoc
actuado
General
Chair
Program
Committee
Chair
participado
Consejo
Arquitectura
Internet
IETF
comit√©s
Consejo
Nacional
Investigaci√≥n
Unidos
formado
diversos
paneles
evaluaci√≥n
t√©cnica
Laboratorio
Investigaci√≥n
Ej√©rcito
programa
MICS
suizo
recientemente
actuado
General
Chair
conferencia
WiNS-DR
MASS
2006
ENTREVISTA
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
564¬øCu√°l
trabajo
industria
computadoras
Trabaj√©
TRW
Controls
Houston
Texas
cambio
dr√°stico
estu-
dios
universitarios
cosa
aprend√≠
TRW
Controls
pobre
software
soporte
sistemas
control
utilidades
cr√≠ticos
supone
sistemas
deb√≠an
controlar
flujo
electricidad
enormes
redes
el√©ctricas
software
subyacente
desarrollado
pon√≠a
pelos
punta
planes
desarrollo
ten√≠an
tiempos
apre-
tados
programadores
enormemente
c√≠nicos
acerca
intenciones
direcci√≥n
condiciones
trabajo
sistema
completo
necesitaba
redise√±ado
principio
razones
creer
cosas
hayan
cambiado
30
a√±os
especialmente
dadas
recientes
noti-
cias
acerca
apag√≥n
2003
dada
desregulaci√≥n
vivido
sector
seguro
cosas
recuerdo
satisfizo
dejar
TRW
Controls
entrar
trabajar
Tektronix
Tek
Labs
trabajo
constituye
desaf√≠o
reto
trabajo
comprender
debo
ayudar
empresa
Asimismo
considero
trabajo
forma
tecnolog√≠as
inal√°mbricas
entro
contacto
puedan
proporcionar
servicio
experiencia
cotidiana
agradable
gente
negocio
empresa
consiste
proporcionar
equipos
infraestructura
conec-
tividad
inal√°mbrica
alta
velocidad
evolucionar
documentos
estandarizaci√≥n
relevantes
espero
encontrar
formas
simplificar
sistemas
resultantes
aplicando
diversas
t√©c-
nicas
relacionadas
trabajos
IETF
forma
permita
maximizar
beneficio
potencial
tecnolog√≠as
desarrollamos
convierte
desaf√≠o
cosas
oportunidades
inmensas
Au
resolver
problemas
protocolos
red
forma
impongan
menor
carga
dis-
positivos
inal√°mbricos
bater√≠as
presenten
usuarios
m√≠nimas
incomodidades
posibles
Interconectar
dispositivos
inal√°mbricos
actuales
Internet
tecno-
log√≠as
inal√°mbricas
alta
velocidad
enormemente
interesante
punto
vista
t√©cnico
ofrece
potencial
ilimitado
√©xito
comercial
puedan
encontrar
correcta
proseguir
desarrollos
comenzando
enfrentarnos
intere-
sante
desaf√≠o
medida
espacio
direcciones
IPv4
subyacente
empieza
agotar
previ√©ndose
agotamiento
lugar
a√±os
IPv6
resultado
bas-
tante
dif√≠cil
implantar
predijo
a√±os
especificaciones
b√°si-
cas
est√©n
maduras
cree
futuro
tecnolog√≠a
inal√°mbrica
industria
inal√°mbrica
sufriendo
tremendo
cambio
emergiendo
tecnolog√≠as
inal√°mbricas
alta
velocidad
efectos
pr√°cticos
pre-
vistos
cambiar
forma
importante
sociedad
actuales
expectativas
acer-
ca
intimidad
limitaciones
capacidad
comunicarnos
voz
im√°-
genes
datos
irreconocibles
a√±os
medida
empresas
vayan
convirtiendo
comunicaciones
inal√°mbricas
resulta
tomen
nue-
vas
medidas
seguridad
cambiar√°n
significativamente
experiencia
trabajo
asignar√°n
partes
espectro
distintos
esquemas
comunicaciones
radio
esquemas
alta
velocidad
comuni-
dades
experimentos
ofrecer
ciudadanos
comunicaciones
inal√°m-
bricas
alta
velocidad
ciudad
completa
convertirse
red
inal√°mbrica
√°rea
local
565
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
565Esto
efecto
reforzar
sentimiento
comunidad
perdido
sociedad
Unidos
comunidad
seguir√°
demandando
acce-
so
Internet
capacidad
disco
creciendo
r√°pidamente
precios
econ√≥micos
bolsillos
Wikipedia
probablemente
n√∫mero
tel√©fono
mundo
mencionar
bibliotecas
personales
precedentes
llenas
libros
m√∫sica
pel√≠cu-
tecnolog√≠a
inal√°mbrica
acelerando
crecimiento
Internet
medida
abaratan
dispositivos
inal√°mbricos
viendo
comunicaciones
Internet
partes
pendientes
juegos
multijugador
lectores
billetes
metro
motivando
aparici√≥n
apli-
caciones
soluciones
seguridad
566
M06_KURO9675_05_SE_CH06.qxd
22/3/10
09:57
P√°gina
566CAP√çTULO
Redes
multimedia
567
Actualmente
testigos
amplia
implantaci√≥n
aplicaciones
audio
v√≠deo
Internet
Cientos
sitios
incluyen
CCN
Rhapsody
Napster
MSN
AOL
Yahoo
ponen
disposici√≥n
flujos
contenido
audio
v√≠deo
You-
Tube
sitios
compartici√≥n
v√≠deo
permiten
usuarios
utilizar
demanda
clips
v√≠deo
cargados
usuarios
Millones
usuarios
utilizan
forma
regular
Skype
cubrir
necesidades
telefon√≠a
videoconferencia
algu-
canales
televisi√≥n
tradicionales
distribuyendo
Internet
permi-
tiendo
usuarios
Internet
canales
televisi√≥n
origen
rincones
mundo
explosivo
crecimiento
aplicaciones
multimedia
Internet
principalmente
resultado
creciente
penetraci√≥n
acceso
residencial
banda
ancha
acceso
inal√°mbrico
alta
velocidad
ejemplo
WiFi
visto
Secci√≥n
1.2
velocidades
acceso
banda
ancha
continuar√°n
aumentando
animando
implantaci√≥n
excitantes
aplicaciones
multimedia
requisitos
servicio
aplicaciones
multimedia
difieren
significativamente
aplicaciones
el√°sticas
tradicionales
correo
electr√≥nico
navegaci√≥n
Web
inicios
sesi√≥n
remotos
descarga
compartici√≥n
archivos
estudiado
Cap√≠tulo
particular
diferencia
aplicaciones
el√°sticas
apli-
caciones
multimedia
extremadamente
sensibles
retardos
terminal
terminal
variaci√≥n
retardo
tolerar
p√©rdidas
datos
ocasionales
Comenzaremos
cap√≠tulo
taxonom√≠a
aplicaciones
multimedia
Secci√≥n
7.1
Veremos
aplicaci√≥n
multimedia
clasificarse
flujo
audio
v√≠deo
almacenado
flujo
audio
v√≠deo
vivo
audio
v√≠deo
interactivo
tiempo
real
veremos
clases
aplicaci√≥n
conjunto
dife-
rente
requisitos
servicio
red
Secci√≥n
7.2
examinaremos
flujos
audio
v√≠deo
almacenado
Secci√≥n
7.3
investigaremos
t√©cnicas
nivel
aplica-
ci√≥n
mejorar
rendimiento
aplicaciones
multimedia
servicio
esfuerzo
red
Internet
actual
Secci√≥n
7.4
ocuparemos
protocolos
multimedia
emplean
actualmente
Internet
Secci√≥n
7.5
investi-
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
567garemos
mecanismos
red
utilizarse
diferenciar
clase
tr√°fico
ejemplo
aplicaciones
tolerantes
retardo
tales
multimedia
ejemplo
aplicaciones
el√°sticas
FTP
proporcionaremos
servicio
diferenciado
diversas
clases
tr√°fico
Secci√≥n
7.6
consideraremos
caso
red
proporcionar
garant√≠as
rendimiento
aplicaciones
ejemplo
llamada
telef√≥nica
IP
basada
paquetes
obtenga
rendimiento
llamada
hiciera
red
telef√≥nica
conmutaci√≥n
circuitos
Veremos
requiere
introducci√≥n
mecanismos
protocolos
red
7.1
Aplicaciones
redes
multimedia
exposici√≥n
Cap√≠tulo
acerca
requisitos
servicio
aplicaciones
identificamos
serie
ejes
clasificarse
requisitos
ejes
consideraciones
temporizaci√≥n
tolerancia
p√©rdida
datos
particularmente
importantes
aplicaciones
multimedia
red
consideracio-
nes
temporizaci√≥n
importantes
aplicaciones
multimedia
extre-
madamente
sensibles
retardos
Veremos
aplicaciones
multimedia
paquetes
sufren
retardo
emisor-receptor
cien-
tos
milisegundos
resultan
in√∫tiles
receptor
aplicaciones
multi-
media
red
tolerantes
p√©rdidas
p√©rdidas
ocasionales
causan
fallos
ocasionales
reproducci√≥n
audio
v√≠deo
p√©rdidas
pue-
den
parcial
totalmente
disimuladas
caracter√≠sticas
sensibilidad
retardos
tolerancia
p√©rdidas
claramente
correspondientes
relativas
aplicaciones
el√°sticas
Web
correo
electr√≥nico
FTP
Telnet
aplicaciones
el√°sticas
retardos
largos
molestos
especialmente
da√±inos
com-
pletitud
integridad
datos
transferidos
suma
importancia
7.1.1
Ejemplos
aplicaciones
multimedia
Internet
soportar
amplia
variedad
atractivas
aplicaciones
multimedia
subsecci√≥n
considerar
clases
generales
aplicaciones
multimedia
flujos
audio
v√≠deo
almacenado
flujos
audio
v√≠deo
vivo
audio
v√≠deo
interactivo
tiempo
real
cap√≠tulo
ocuparnos
aplicaciones
descargan
reproducen
ejemplo
descarga
completa
archivo
MP3
apli-
caci√≥n
compartici√≥n
archivos
P2P
reproducirlo
aplicaciones
descargan
reproducen
aplicaciones
el√°sticas
transferencia
archi-
vos
requisito
especial
retardo
Cap√≠tulo
examinado
trans-
ferencia
archivos
HTTP
FTP
sistemas
compartici√≥n
archivos
P2P.
Flujos
audio
v√≠deo
almacenado
clase
aplicaciones
clientes
solicitan
archivos
audio
v√≠deo
comprimidos
demanda
almacenados
servidores
miles
sitios
pro-
porcionan
flujos
audio
v√≠deo
almacenado
incluyen
CNN
Microsoft
Video
YouTube
tipo
aplicaciones
presentan
caracter√≠sticas
diferenciadoras
568
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
568‚Ä¢
Medios
almacenados
contenido
multimedia
pregrabado
almacena
servidor
Puesto
contenido
pregrabado
usuario
cliente
pau-
sar
rebobinar
pasar
buscar
contenido
multimedia
instante
usuario
solicitudes
acci√≥n
lugar
cliente
orden
segundos
respuesta
aceptable
Flujos
aplicaci√≥n
flujo
audio
v√≠deo
almacenado
normalmente
cliente
inicia
reproducci√≥n
audio
v√≠deo
segundos
comienza
recibir
archivo
procedente
servidor
significa
cliente
reproducir√°
audio/
7.1
APLICACIONES
REDES
MULTIMEDIA
569
IPTV
Tradicionalmente
contenido
televisi√≥n
distribuido
microondas
terres-
sistemas
h√≠bridos
fibra
cable
coaxial
HFC
canales
sat√©lites
geoestacionarios
v√©ase
Secci√≥n
1.2
√©poca
actual
Internet
tremendo
inter√©s
IPTV
distribuci√≥n
contenido
televisi√≥n
Internet
desaf√≠os
tecnolog√≠a
IPTV
cantidad
ancho
banda
necesa-
rio
especialmente
servidor
origen
ejemplo
considere
distribuci√≥n
evento
deportivo
importante
partido
Copa
Mundo
√∫nico
servidor
100
millones
usuarios
concurrentes
Internet
velocidad
v√≠deo
Mbps
ancho
banda
requerido
servidor
orden
100
tera-
bits
cl√°sica
distribuci√≥n
cliente-servidor
completamente
inaceptable
multidifusi√≥n
IP
estuviera
ampliamente
implantada
Internet
f√°cil
IPTV
realidad
alternativa
distribuir
v√≠deo
red
sola-
pada
multidifusi√≥n
proporcionadas
redes
distribuci√≥n
contenido
CDN
Content
Distribution
Network
v√©ase
Secci√≥n
7.3
alternativa
emplear
distribuci√≥n
pares
par
recibe
canal
televisi√≥n
ayuda
redistribuir
canal
pares
atractivo
t√©cnica
coste
distribuci√≥n
pares
individuales
proporcio-
nan
colectivamente
suficiente
ancho
banda
carga
necesite
ancho
banda
servidor
velocidad
v√≠deo
coste
usuario
equipado
c√°mara
web
distribuir
programa
vivo
millones
usuarios
coste
despreciable
fecha
serie
sistemas
IPTV
P2P
similares
BitTorrent
disfrutado
exitosa
implantaci√≥n
pionero
campo
CoolStreaming
4.000
usuarios
simult√°neos
2003
CoolStreaming
2005
recientemente
sistemas
incluyen
PPLive
ppstream
informado
√©xitos
decenas
miles
usuarios
simult√°neos
viendo
canales
velocidades
300
kbps
Mbps
sistemas
tipo
BitTorrent
pares
forman
red
solapada
din√°mica
intercam-
bian
fragmentos
v√≠deo
vecinos
red
interesante
evoluciona
IPTV
a10
a√±os
tecnolog√≠a
subyacente
utilizar√°
CDN
P2P
h√≠brido
ambas
significativa
aficionados
Copa
Mundo
vean
partidos
Internet
2014
HISTORIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
569v√≠deo
posici√≥n
archivo
recibiendo
servidor
partes
poste-
riores
t√©cnica
conocida
transmisi√≥n
flujos
evita
descargar
archivo
completo
incurrir
retardo
potencialmente
comenzar
reproducci√≥n
clientes
reproducci√≥n
flujos
multimedia
RealPlayer
RealNetworks
RealNetworks
2009
QuickTime
Apple
QuickTime
2009
Windows
Media
Microsoft
Microsoft
Media
Player
2009
Reproducci√≥n
continua
inicia
reproducci√≥n
contenido
multimedia
deber√≠a
proseguir
temporizaci√≥n
original
grabaci√≥n
datos
recibirse
servidor
tiempo
reproducci√≥n
cliente
usuario
experimentar√°
frustrantes
retardos
almacenamiento
buffer
Aun-
aplicaciones
multimedia
almacenadas
cumplir
requisitos
repro-
ducci√≥n
continua
restricciones
retardo
terminal
terminal
restrictivas
aplicaciones
interactivas
vivo
telefon√≠a
videoconferencia
Internet
v√©ase
Flujos
audio
v√≠deo
vivo
tipo
aplicaciones
similar
difusi√≥n
tradicional
radio
televisi√≥n
transmisi√≥n
lugar
Internet
aplicaciones
permiten
usua-
rio
recibir
transmisi√≥n
radio
televisi√≥n
vivo
emitida
rinc√≥n
mundo
ejemplo
autores
libro
frecuencia
escucha
emisora
radio
favorita
Filadelfia
viaja
autor
normalmente
escuchaba
difusio-
nes
vivo
partidos
querido
equipo
baloncesto
universidad
viviendo
Francia
a√±o
aplicaciones
conocen
IPTV
radio
Internet
miles
emisoras
radio
emiten
Inter-
net
n√∫mero
implantaciones
IPTV
v√©ase
recuadro
dedicado
IPTV
flujos
audio
v√≠deo
vivo
almacenados
cliente
avance
r√°pido
almacenamiento
local
datos
recibidos
operaciones
interactivas
tales
puesta
pausa
rebobinado
posibles
aplicaciones
vivo
tipo
difusi√≥n
clientes
reciben
programa
audio
v√≠deo
distribuci√≥n
audio
v√≠deo
vivo
receptores
llevarse
cabo
forma
eficiente
t√©cnicas
multidifusi√≥n
IP
descritas
Secci√≥n
4.7
actualmente
distribuci√≥n
audio
v√≠deo
vivo
suele
conseguirse
flujos
multidifusi√≥n
capa
aplicaci√≥n
utili-
zando
P2P
CDN
m√∫ltiples
flujos
unidifusi√≥n
servidor-cliente
separados
flujos
multimedia
almacenados
requiere
reproducci√≥n
continua
aun-
restricciones
temporizaci√≥n
estrictas
aplicaciones
interac-
tivas
tiempo
real
tolerarse
retardos
decenas
segundos
momento
usuario
solicita
suministro
reproducci√≥n
transmisi√≥n
vivo
comienza
reproducci√≥n
Audio
v√≠deo
interactivo
tiempo
real
tipo
aplicaciones
permite
usuarios
emplear
audio
v√≠deo
comuni-
carse
tiempo
real
audio
interactivo
tiempo
real
Internet
suele
referirse
telefon√≠a
Internet
perspectiva
usuario
similar
servicio
telefon√≠a
conmutaci√≥n
circuitos
tradicional
telefon√≠a
Internet
proporcionar
centrales
telef√≥nicas
PBX
Private
Branch
Exchange
servicios
telef√≥nicos
570
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
570locales
larga
distancia
coste
facilitar
implantaci√≥n
servicios
redes
tradicionales
conmutaci√≥n
circuitos
soportan
f√°cil-
mente
ejemplo
detecci√≥n
presencia
comunicaci√≥n
grupo
filtrado
llamantes
integraci√≥n
telefon√≠a-Web
Actualmente
disponibles
nume-
rosos
productos
tele-fon√≠a
Internet
ejemplo
usuarios
Skype
llamadas
voz
PC-a-tel√©fono
PC-a-PC
v√≠deo
interactivo
tiempo
real
denominado
videoconferencia
individuos
comunicarse
forma
visual
oral
Actualmente
disponibles
productos
v√≠deo
interactivo
tiempo
real
Internet
incluyen
NetMeeting
Microsoft
v√≠deo
Skype
diversos
productos
Polycom
Observe
aplicaci√≥n
audio
v√≠deo
interactivo
tiempo
real
usuario
hablar
mover
cabeza
momento
conversaci√≥n
interacci√≥n
interlocutores
retardo
usuario
mueve
acci√≥n
manifiesta
hosts
receptores
menor
cientos
milisegundos
caso
voz
retardos
menores
50
milisegundos
percibidos
o√≠do
humano
retardos
comprendidos
150
400
milisegundos
aceptables
retardos
mayores
400
milisegundos
lugar
con-
versaciones
frustrantes
completamente
ininteligibles
7.1.2
Obst√°culos
informaci√≥n
multimedia
Internet
actual
Recuerde
protocolo
IP
implantado
red
Internet
actual
proporciona
servicio
esfuerzo
datagramas
transporta
palabras
Internet
trasladar
datagrama
emisor
receptor
r√°pido
promete
retardo
terminal
terminal
sufrir
paquete
individual
promesa
acerca
variaci√≥n
retardo
paquete
flujo
paquetes
Puesto
TCP
UDP
ejecutan
IP
deduce
protocolos
transporte
proporciona
garant√≠a
retardo
aplicaciones
invocan
falta
esfuerzo
especial
entregar
paquetes
tiempo
problema
extremadamente
desafiante
desarrollar
apli-
caciones
red
multimedia
√©xito
Internet
obstante
fecha
aplicacio-
nes
multimedia
Internet
alcanzado
notable
√©xito
ejemplo
flujos
audio
v√≠deo
almacenado
retardos
interactividad
usuario
10
segun-
actualmente
habituales
Internet
periodos
pico
tr√°fico
rendimiento
insatisfactorio
especialmente
enlaces
intervinientes
congestionados
enlaces
transoce√°nicos
congestionados
v√≠deo
interactivo
tiempo
real
telefon√≠a
Internet
encontrado
amplio
ejemplo
forma
rutinaria
millones
usuarios
Skype
l√≠nea
instante
tiempo
determinado
aplicaciones
v√≠deo
voz
inte-
ractivas
tiempo
real
imponen
estrictas
restricciones
retardo
fluctuaci√≥n
paquetes
fluctuaci√≥n
paquetes
packet
jitter
variabilidad
retardos
paquetes
flujo
paquetes
aplicaciones
voz
v√≠deo
tiempo
real
funcionar
ancho
banda
completamente
disponible
retardo
fluctuaci√≥n
m√≠nimos
calidad
deteriorarse
niveles
inaceptables
flujo
paquetes
voz
v√≠deo
tiempo
real
llegan
enlace
moderadamente
congestionado
dise√±o
aplicaciones
multimedia
realmente
sencillo
existieran
servicios
Internet
clase
paquetes
clase
estu-
7.1
APLICACIONES
REDES
MULTIMEDIA
571
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
571vieran
limitados
n√∫mero
recibieran
servicio
prioridad
colas
routers
servicio
clase
tipo
satisfactorio
aplicaciones
sen-
sibles
retardo
fecha
Internet
emplea
m√©todo
igualitario
planificaci√≥n
paquetes
colas
routers
paquetes
reciben
servicio
paquete
incluyendo
paquetes
audio
v√≠deo
sensibles
retardo
reciben
servicio
especial
prioridad
colas
routers
importa
dinero
importante
ponerse
cola
esperar
llegue
turno
mitad
cap√≠tulo
examinaremos
arquitecturas
pro-
puestas
plantean
eliminaci√≥n
restricci√≥n
momento
seguir
conviviendo
servicio
esfuerzo
conocida
restricci√≥n
tomar
decisiones
dise√±o
emplear
algu-
trucos
mejorar
calidad
percibida
usuario
aplicaciones
multimedia
red
ejemplo
enviar
datos
audio
v√≠deo
UDP
ignorar
baja
tasa
transferencia
TCP
protocolo
entra
fase
arranque
lento
retardar
reproducci√≥n
receptor
100
milisegundos
ate-
nuar
efectos
fluctuaci√≥n
inducida
red
incluir
marcas
tiempo
paquetes
emisor
receptor
sepa
deber√≠an
reproducirse
paquetes
caso
audio
v√≠deo
almacenado
extraer
datos
anticipada-
mente
reproducci√≥n
existan
espacios
almacenamiento
cliente
ancho
banda
adicionales
enviar
informaci√≥n
redundante
mitigar
efectos
p√©rdida
paquetes
inducida
red
Estudiaremos
t√©c-
nicas
cap√≠tulo
7.1.3
deber√≠a
evolucionar
Internet
soporte
aplicaciones
multimedia
debate
continuo
acerca
deber√≠a
evolucionar
Internet
acomo-
tr√°fico
multimedia
estrictas
restricciones
temporizaci√≥n
extremo
encuentran
investigadores
argumentan
habr√≠a
cabo
cambios
fundamentales
Internet
dichas
aplicaciones
puedan
reservar
expl√≠citamente
ancho
banda
terminal
terminal
recibir
garant√≠apara
ren-
dimiento
terminal
terminal
garant√≠a
estricta
aplicaci√≥n
recibir√°
calidad
servicio
QoS
solicitada
absoluta
seguridad
garant√≠a
parcialquiere
aplicaci√≥n
recibir√°
calidad
servicio
solicitada
alta
probabili-
dad
investigadores
creen
usuario
desea
ejemplo
llamada
telef√≥nica
Internet
host
host
aplicaci√≥n
telef√≥nica
Inter-
net
deber√≠a
reservar
ancho
banda
forma
expl√≠cita
enlaces
ruta
existente
hosts
permitir
aplicaciones
hagan
reservas
requerir
red
aceptar
reservas
requiere
cambios
lugar
nece-
sitamos
protocolo
nombre
aplicaciones
reserve
ancho
banda
enla-
ces
definen
camino
emisores
respectivos
receptores
lugar
modificar
pol√≠ticas
planificaci√≥n
colas
routers
reservas
ancho
banda
puedan
aceptadas
pol√≠ticas
pla-
nificaci√≥n
paquetes
recibir√°n
tratamiento
lugar
reserven
paguen
obtendr√°n
tercer
lugar
aceptar
reservas
apli-
caciones
proporcionar
red
descripci√≥n
tr√°fico
pretenden
enviar
red
vigilar
tr√°fico
aplicaci√≥n
garantizar
cumple
572
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
572con
descripci√≥n
red
disponer
determinar
suficiente
ancho
banda
disponible
soporte
solicitud
reserva
mecanismos
cuado
combinan
requieren
software
complejo
hosts
routers
tipos
servicios
Veremos
mecanismos
detalle
Secci√≥n
7.6
extremo
investigadores
argumentan
necesario
nin-
g√∫n
cambio
fundamental
servicio
esfuerzo
protocolos
Internet
subyacentes
lugar
defienden
m√©todo
laissez-faire
‚Ä¢A
rior
escalan
redes
satisfacer
demanda
Espec√≠ficamente
ISP
ofrecer√°n
suficiente
ancho
banda
suficiente
capacidad
conmutaci√≥n
propor-
cionar
redes
funcionamiento
satisfactorio
respecta
retardo
p√©rdida
paquetes
Huang
2005
ISP
proporcionar√°n
servicio
clientes
usuarios
ISP
clientes
traducir√°
mayores
ingresos
gracias
existencia
clientes
mayores
tasas
servicios
garantizar
aplicaciones
multimedia
recibir√°n
servicio
adecuado
caso
exista
sobrecarga
ISP
sobredimensionar
ancho
banda
capacidad
conmu-
taci√≥n
previsi√≥n
tr√°fico
provisi√≥n
ancho
banda
apropiadas
proporcionarse
garant√≠a
parcial
calidad
servicio
QoS
‚Ä¢L
insertan
fronteras
Internet
Puesto
tr√°fico
fluye
tra-
v√©s
Internet
contenido
almacenado
p√°ginas
web
archivos
MP3
v√≠deo
redes
CDN
aliviar
forma
significativa
cargas
tr√°fico
ISP
interfa-
ces
pares
ISP
redes
CDN
proporcionan
servicio
diferen-
ciado
proveedores
contenido
proveedores
contenido
pagan
servicio
CDN
suministrar
contenido
r√°pidamente
forma
efectiva
Secci√≥n
7.3
estudiaremos
redes
CDN
‚Ä¢E
env√≠a
millones
usuarios
simult√°neamente
implantarse
redes
solapadas
multidifusi√≥n
red
tipo
consta
hosts
usuario
posiblemente
ser-
vidores
dedicados
dispersos
Internet
hosts
servidores
enlaces
l√≥gicos
forman
colectivamente
red
solapada
multidifunde
v√©ase
Secci√≥n
4.7
tr√°fico
emisor
millones
usuarios
diferencia
IP
multidifusi√≥n
funci√≥n
multidifusi√≥n
realizada
routers
capa
IP
redes
solapadas
llevan
cabo
multidifusi√≥n
capa
aplicaci√≥n
ejemplo
host
origen
enviar
flujo
servidores
solapados
servidores
sola-
pados
reenviar
flujo
servidores
hosts
solapados
proceso
conti-
n√∫a
creando
√°rbol
distribuci√≥n
red
IP
subyacente
Transmitiendo
multidifusi√≥n
tr√°fico
vivo
popular
redes
solapadas
carga
tr√°fico
global
Internet
reducirse
caso
distribuci√≥n
unidifu-
si√≥n
grupo
defiende
reservas
defiende
laissez-faire
ter-
cer
grupo
defiende
servicios
diferenciados
Diffserv
grupo
desea
cambios
relativamente
peque√±os
capas
red
transporte
introducir
esquemas
simples
pol√≠ticas
precios
frontera
red
interfaz
usua-
7.1
APLICACIONES
REDES
MULTIMEDIA
573
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
573rio
ISP
usuario
idea
consiste
introducir
n√∫mero
peque√±o
clases
tr√°-
fico
posiblemente
clases
asignar
datagrama
clases
asignar
datagrama
nivel
servicio
dependiendo
clase
colas
routers
cobrar
usuarios
clase
paquetes
est√©
enviando
red
Secci√≥n
7.5
ocuparemos
servicios
diferenciados
enfoques
tratamiento
tr√°fico
multimedia
mejorar
servicio
esfuerzo
QoS
diferencial
QoS
garantizado
resumen
Tabla
7.1
abordan
Secciones
7.3
7.5
7.6
respectivamente
7.1.4
Compresi√≥n
audio
v√≠deo
transmitir
red
computadoras
audio
v√≠deo
necesario
digita-
lizarlo
comprimirlo
necesidad
digitalizaci√≥n
obvia
redes
computadoras
transmiten
bits
informaci√≥n
transmitida
representarse
secuencia
bits
compresi√≥n
importante
audio
v√≠deo
descompri-
midos
consumen
enormes
cantidades
almacenamiento
ancho
banda
eliminando
redundancias
inherentes
compresi√≥n
se√±ales
audio
v√≠deo
digitali-
zadas
reducirse
cantidad
datos
almacenar
transmitir
√≥rdenes
magnitud
ejemplo
√∫nica
imagen
1024
p√≠xeles
p√≠xel
codifi-
cado
24
bits
bits
colores
rojo
verde
azul
requiere
Mbytes
almacenamiento
compresi√≥n
tardar√≠an
minutos
enviar
imagen
enlace
64
kbps
imagen
comprime
relaci√≥n
comprensi√≥n
modesta
10:1
requisito
almacenamiento
reduce
300
kbytes
tiempo
transmisi√≥n
reduce
factor
10
tema
compresi√≥n
audio
v√≠deo
extenso
constituido
√°rea
investigaci√≥n
50
a√±os
actualmente
literalmente
cientos
t√©cnicas
est√°ndares
populares
compresi√≥n
audio
v√≠deo
universida-
des
ofrecen
cursos
completos
dedicados
compresi√≥n
audio
compresi√≥n
v√≠deo
proporcionar
introducci√≥n
car√°cter
general
tema
Unidad
Implantaci√≥n
Enfoque
asignaci√≥n
Garant√≠a
fecha
Complejidad
Mecanismos
Mejorar
servicio
m√≠nima
soporte
capa
esfuerzo
parcial
lugar
aplicaci√≥n
CDN
sobredimensionamiento
QoS
diferencial
clases
flujos
media
vigilancia
parcial
planificaci√≥n
QoS
garantizado
flujos
parcial
estricta
alta
vigilancia
individuales
planificaci√≥n
flujo
admitido
admisi√≥n
se√±alizaci√≥n
llamadas
Tabla
7.1
m√©todos
soporte
aplicaciones
multimedia
574
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
574Compresi√≥n
audio
Internet
se√±al
audio
anal√≥gica
var√≠a
forma
continua
voz
m√∫sica
nor-
malmente
convierte
se√±al
digital
‚Ä¢E
8.000
muestras
valor
muestra
n√∫mero
real
arbitrario
‚Ä¢A
res
operaci√≥n
conoce
nombre
cuantizaci√≥n
n√∫mero
valores
fini-
tos
denominados
valores
cuantizaci√≥n
normalmente
potencia
ejemplo
256
valores
cuantizaci√≥n
‚Ä¢C
ejemplo
256
valores
cuantizaci√≥n
valor
muestra
representa
byte
muestras
convierte
repre-
sentaci√≥n
bits
representaciones
bits
muestras
concatenan
formar
representaci√≥n
digital
se√±al
ejemplo
se√±al
audio
anal√≥gica
muestrea
tasa
8.000
mues-
muestra
cuantiza
representa
bits
se√±al
digital
resultante
tasa
64.000
bits
se√±al
digital
enton-
ces
convertirse
decodificarse
se√±al
anal√≥gica
reproduc-
ci√≥n
normalmente
se√±al
anal√≥gica
decodificada
se√±al
audio
original
Aumentando
tasa
muestreo
n√∫mero
valores
cuantizaci√≥n
se√±al
decodificada
aproximarse
se√±al
anal√≥gica
original
clara
relaci√≥n
compromiso
calidad
se√±al
decodificada
requisitos
almacenamiento
ancho
banda
se√±al
digital
t√©cnica
codificaci√≥n
b√°sica
acabamos
describir
conoce
Modulaci√≥n
c√≥digo
pulsos
PCM
Pulse
Code
Modulation
codificaci√≥n
voz
normalmente
utiliza
PCM
tasa
muestreo
8.000
muestras
bits
muestra
proporciona
tasa
64
kbps
discos
audio
com-
pacto
CD
emplean
modulaci√≥n
PCM
tasa
muestreo
44.100
muestras
16
bits
muestra
proporciona
tasa
705,6
kbps
mono
1,411
Mbps
est√©reo
tasa
bit
1,411
Mbps
m√∫sica
est√©reo
excede
mayor√≠a
veloci-
dades
acceso
64
kbps
voz
exceden
velocidad
acceso
usua-
rio
m√≥dem
acceso
telef√≥nico
razones
voz
m√∫sica
codificadas
PCM
rara
utilizan
Internet
lugar
emplean
t√©cnicas
compre-
si√≥n
reducir
tasas
bit
flujos
t√©cnicas
compresi√≥n
voz
popu-
lares
incluyen
GSM
13
kbps
G.729
kbps
G.723.3
6,4
5,3
kbps
cantidad
t√©cnicas
propietarias
t√©cnica
compresi√≥n
popular
m√∫sica
est√©reo
calidad
tipo
CD
MPEG
layer
com√∫nmente
conocida
MP3
codifica-
dores
MP3
normalmente
comprimen
tasas
96
kbps
128
kbps
160
kbps
degradan
sonido
archivo
MP3
divide
fragmentos
fragmento
reproducible
formato
archivo
cabecera
permite
transmitir
Internet
archivos
m√∫sica
MP3
fueran
flujos
suponiendo
velocidad
bit
reproducci√≥n
velocidad
conexi√≥n
Internet
compatibles
est√°ndar
compresi√≥n
MP3
complejo
utiliza
mecanismos
enmascaramiento
psicoac√∫stico
reducci√≥n
redundancia
buffers
reserva
bits
7.1
APLICACIONES
REDES
MULTIMEDIA
575
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
575Compresi√≥n
v√≠deo
Internet
v√≠deo
secuencia
im√°genes
normalmente
reproducidas
velocidad
cons-
tante
ejemplo
24
30
im√°genes
imagen
codificada
digitalmente
comprimida
consta
matriz
p√≠xeles
p√≠xel
codificado
serie
bits
representan
luminancia
color
tipos
redundancia
v√≠deo
explotados
mecanismos
compresi√≥n
redundancia
espacial
redundancia
contenida
imagen
ejemplo
imagen
cantidad
espacio
blanco
comprimida
forma
eficiente
redundancia
temporal
refleja
repetici√≥n
imagen
ejemplo
imagen
exactamente
iguales
raz√≥n
codificar
eficiente
indicar
simplemente
proceso
codificaci√≥n
imagen
exactamente
est√°ndares
compresi√≥n
MPEG
encuentran
t√©cnicas
compresi√≥n
populares
incluyen
MPEG
v√≠deo
calidad
CD-ROM
1,5
Mbps
MPEG
v√≠deo
alta
calidad
DVD
3-6
Mbps
MPEG
compresi√≥n
v√≠deo
orientada
objeto
est√°ndares
MPEG
basados
fundamentalmente
est√°ndar
JPEG
compresi√≥n
im√°genes
explotan
redundancia
temporal
im√°genes
redundancia
espacial
explotada
JPEG
est√°ndares
com-
presi√≥n
v√≠deo
H.261
populares
Internet
numerosos
esquemas
propietarios
incluyen
QuickTime
Apple
codificadores
Real
Networks
lectores
interesados
aprender
acerca
codificaci√≥n
audio
v√≠deo
consultar
Rao
1996
Solari
1997
libro
redes
multimedia
general
Crowcroft
1999
7.2
Flujos
audio
v√≠deo
almacenado
a√±os
transmisi√≥n
flujos
audio
v√≠deo
convertido
aplicaci√≥n
popular
consumidor
importante
ancho
banda
red
apli-
caciones
cliente
solicita
archivos
comprimidos
audio
v√≠deo
residen
servidores
veremos
servidores
servidores
web
normales
servidores
especiales
flujos
adaptados
aplicaciones
flujos
audio
v√≠deo
reci-
bida
solicitud
cliente
servidor
env√≠a
archivo
audio
v√≠deo
cliente
pasando
archivo
socket
utilizar
TCP
UDP
tr√°fico
flujos
audio
v√≠deo
transportado
TCP
cortafuegos
configuran
bloquear
tr√°fico
UDP
utilizando
TCP
servicio
entrega
fiable
archivo
completo
transferirse
cliente
p√©rdida
paquetes
permitiendo
archivo
reproducido
futuro
cach√©
local
Sri-
panidkulchai
2004
archivo
audio
v√≠deo
solicitado
comienza
llegar
cliente
inicia
reproducci√≥n
pasados
segundos
sistemas
pro-
porcionan
interactividad
usuario
ejemplo
usuario
pausar
reanudar
archivo
audio
v√≠deo
saltar
punto
protocolo
trans-
misi√≥n
flujos
tiempo
real
RTSP
Real-Time
Streaming
Protocol
veremos
secci√≥n
protocolo
dominio
p√∫blico
proporciona
interactividad
usuario
576
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
5767.2
FLUJOS
AUDIO
V√çDEO
ALMACENADO
577
FLUJOS
AUDIO
V√çDEO
ALMACENADO
REALNETWORKS
YOUTUBE
RealNetworks
empresa
pionera
transmisi√≥n
flujos
audio
v√≠deo
compa√±√≠a
ofreci√≥
audio
Internet
p√∫blico
general
producto
inicial
sistema
RealAudio
distribuido
1995
inclu√≠a
codificador
audio
servidor
audio
reproductor
audio
Permit√≠a
usuarios
navegar
seleccionar
reproducir
contenido
audio
Internet
demanda
r√°pidamente
convirti√≥
sistema
distribuci√≥n
popular
proveedores
contenido
entretenimiento
educativo
noticias
Actualmente
flujos
audio
v√≠deo
encuentran
servicios
populares
Internet
cantidad
empresas
ofrecen
contenido
tipo
empleando
multitud
distintos
servidores
reproductores
tec-
nolog√≠as
protocolo
ejemplos
interesantes
fecha
2009
‚Ä¢R
proporciona
usuarios
servicios
suscripci√≥n
descarga
transmisi√≥n
flujos
Rhapsody
utiliza
cliente
propietario
recupera
canciones
servidor
propietario
utilizando
HTTP
can-
ci√≥n
llega
HTTP
reproduce
cliente
Rhapsody
acceso
contenido
descargado
restringido
sistema
Gesti√≥n
derechos
digital
DRM
Digital
Rights
Management
‚Ä¢M
usuarios
descargan
amplia
variedad
contenidos
inclu-
yendo
noticias
internacionales
clips
v√≠deos
musicales
v√≠deo
reproduce
popular
reproductor
Windows
Media
Player
WMP
disponible
hosts
Windows
comunicaci√≥n
WMP
servidor
Microsoft
protocolo
propietario
MMS
Microsoft
Media
Server
normal-
mente
intenta
transmitir
flujos
RTSP
RTP
soluci√≥n
falla
causa
cortafuegos
prueba
recuperar
contenido
HTTP
‚Ä¢M
proporciona
servicio
muestras
audio
minoristas
BestBuy
Yahoo
muestras
m√∫sica
seleccionadas
sitios
minoristas
realmente
proceden
Muze
transmiten
WMP
Muze
Rhapsody
YouTube
proveedores
flujos
multimedia
utilizan
redes
distribuci√≥n
contenido
CDN
distribuir
contenidos
explica
Secci√≥n
7.3
‚Ä¢Y
tremendamente
popular
servicio
compartici√≥n
v√≠deos
utiliza
cliente
basado
Flash
integrado
p√°gina
web
comunicaci√≥n
cliente
servidores
YouTube
HTTP
deparar√°
futuro
Actualmente
flujos
v√≠deo
baja
calidad
codifican
tasas
500
kbps
menores
calidad
v√≠deo
realmente
mejorar√°
acceso
Internet
banda
ancha
fibra
domicilios
adquiera
predominancia
posiblemente
reproductores
port√°tiles
m√∫sica
almacenar√°n
m√∫sica
obtendr√°n
directamente
demanda
canales
inal√°mbricos
HISTORIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
577Los
usuarios
solicitan
transmisi√≥n
flujos
audio
v√≠deo
cliente
web
navegador
reproducen
controlan
reproducci√≥n
reproductor
multimedia
ejemplo
Windows
Media
Player
Flash
reproductor
multimedia
realiza
funciones
incluyen
siguientes
Descomprensi√≥n
audio
v√≠deo
comprime
ahorrar
espacio
almacenamiento
disco
ancho
banda
red
reproductor
multimedia
descomprimir
audio
v√≠deo
marcha
reproducci√≥n
Eliminaci√≥n
fluctuaciones
fluctuaci√≥n
paquetes
variabilidad
retardos
origen
destino
paquetes
contenidos
flujo
paquetes
Puesto
audio
v√≠deo
reproducirse
temporizaci√≥n
grabados
receptor
almacenar√°
buffer
paquetes
recibidos
corto
periodo
tiempo
eliminar
fluctuaci√≥n
Examinaremos
tema
deta-
lle
Secci√≥n
7.3
7.2.1
Acceso
audio
v√≠deo
servidor
web
audio
v√≠deo
almacenado
residir
servidor
web
entrega
archivos
audio
v√≠deo
cliente
HTTP
servidor
dedicado
flujos
audio
v√≠deo
utilizando
HTTP
protocolo
subsecci√≥n
examinar
entrega
flujos
audio
v√≠deo
servidor
web
subsecci√≥n
cen-
traremos
entrega
servidor
flujos
suministro
flujos
multimedia
v√≠a
HTTP
popular
gracias
cortafuegos
v√©ase
Cap√≠tulo
8)
suelen
permitir
tr√°fico
HTTP
atraviese
protocolos
propietarios
blo-
queados
Consideremos
lugar
caso
flujos
audio
archivo
audio
reside
servidor
web
archivo
objeto
ordinario
sistema
archivos
servidor
archivos
HTML
JPEG
usuario
desea
escuchar
archivo
audio
host
usuario
establece
conexi√≥n
TCP
servidor
web
env√≠a
solicitud
HTTP
objeto
recibir
solicitud
servidor
web
encapsula
archivo
audio
mensaje
respuesta
HTTP
env√≠a
vuelta
conexi√≥n
TCP
caso
archivo
v√≠deo
compli-
cado
partes
audio
v√≠deo
almacenadas
archivos
audio
v√≠deo
vayan
intercalados
archivo
cuyo
caso
enviar
objeto
cliente
simplificar
exposici√≥n
suponer
caso
v√≠deo
ambas
partes
audio
v√≠deo
contenidas
√∫nico
archivo
implementaciones
transmisi√≥n
flujos
audio
v√≠deo
HTTP
funcionalidad
cliente
divide
partes
tarea
navegador
solicitar
metarchivoque
proporciona
informaci√≥n
ejemplo
URL
tipo
codificaci√≥n
identificado
reproductor
multimedia
apropiado
acerca
archivo
multimedia
transmitido
HTTP
metarchivo
pasa
des-
navegador
reproductor
multimedia
cuyo
trabajo
consiste
contactar
servidor
HTTP
continuaci√≥n
env√≠a
archivo
multimedia
reproductor
v√≠a
HTTP
pasos
ilustran
Figura
7.1
usuario
clic
hiperv√≠nculo
correspondiente
archivo
audio
v√≠deo
hiperv√≠nculo
apunta
directamente
archivo
metarchivo
metar-
578
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
578chivo
contiene
URL
archivo
audio
v√≠deo
real
mensaje
respuesta
HTTP
encapsula
metarchivo
incluye
l√≠nea
cabecera
tipo
contenido
indica
aplicaci√≥n
audio
v√≠deo
espec√≠fica
navegador
cliente
examina
l√≠nea
cabecera
correspondiente
tipo
conte-
nido
mensaje
respuesta
ejecuta
reproductor
multimedia
asociado
pasa
cuerpo
mensaje
respuesta
metarchivo
reproductor
reproductor
multimedia
establece
conexi√≥n
TCP
directamente
servidor
HTTP
reproductor
multimedia
env√≠a
mensaje
respuesta
HTTP
archivo
audio
v√≠deo
conexi√≥n
TCP
archivo
audio
v√≠deo
env√≠a
mensaje
respuesta
HTTP
reproductor
reproduce
archivo
importancia
paso
intermedio
adquisici√≥n
metarchivo
evidente
navegador
ve
tipo
contenido
archivo
ejecutar
reproductor
apropiado
reproductor
contacte
directamente
servidor
Acabamos
metarchivo
reproductor
comunique
directamente
servidor
web
almacena
archivo
audio
v√≠deo
empresas
venden
productos
transmisi√≥n
flujos
audio
v√≠deo
recomiendan
arquitectura
acabamos
describir
lugar
recomiendan
transmitir
flujos
audio
v√≠deo
almacenado
servidores
flujos
dedicados
optimizados
dicha
tarea
7.2.2
Env√≠o
informaci√≥n
multimedia
servidor
flujos
aplicaci√≥n
ayuda
servidor
flujos
servidor
flujos
propietario
comercializados
RealNetworks
Microsoft
servidor
flujos
dominio
p√∫blico
servidor
flujos
audio
v√≠deo
enviarse
HTTP
TCP
7.2
FLUJOS
AUDIO
V√çDEO
ALMACENADO
579
Servidor
Servidor
web
archivos
audio/
v√≠deo
Navegador
web
Cliente
Solicitud
respuesta
HTTP
metarchivo
Archivo
multimedia
solicitado
enviado
utilizando
HTTP
Reproduc
multimedia
Metarchivo
Figura
7.1
servidor
web
env√≠a
directamente
flujo
audio
v√≠deo
reproductor
multimedia
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
579UDP
utilizando
protocolos
capa
aplicaci√≥n
adaptarse
HTTP
transmisi√≥n
flujos
audio
v√≠deo
arquitectura
requiere
servidores
muestra
Figura
7.2
servi-
dor
servidor
web
sirve
p√°ginas
web
incluyendo
metarchivos
servidor
servidor
flujos
sirve
archivos
audio
v√≠deo
servidores
ejecu-
tarse
sistema
terminal
sistemas
terminales
distintos
pasos
siguen
arquitectura
similares
descritos
subsecci√≥n
reproductor
multimedia
solicita
archivo
servidor
flujos
lugar
servidor
web
reproductor
servidor
flujos
interactuar
utili-
zando
protocolos
protocolos
permiten
rica
interacci√≥n
usuario
flujo
audio
v√≠deo
arquitectura
Figura
7.2
opciones
entrega
audio/
v√≠deo
servidor
flujos
reproductor
multimedia
continuaci√≥n
proporcionamos
lista
parcial
opciones
archivo
audio
v√≠deo
env√≠a
UDP
velocidad
constante
velo-
cidad
vaciado
receptor
tasa
codificaci√≥n
audio
v√≠deo
ejem-
plo
audio
comprime
utilizando
GSM
tasa
13
kbps
servidor
temporiza
transmisi√≥n
archivo
audio
comprimido
13
kbps
cliente
recibe
audio
v√≠deo
comprimido
red
descomprime
reproduce
opci√≥n
caso
reproductor
multime-
retarda
reproducci√≥n
segundos
eliminar
fluc-
tuaci√≥n
inducida
red
cliente
cabo
tarea
insertando
archivo
comprimido
recibe
red
buffer
cliente
muestra
Figura
580
CAP√çTULO
REDES
MULTIMEDIA
Navegador
web
solicitud
repuesta
HTTP
archivo
descripci√≥n
presentaci√≥n
Cliente
Reproduc
multimediaArchivo
descripci√≥n
presentaci√≥n
Servidores
Servidor
web
Archivo
multimedia
solicitado
enviado
Servidor
flujos
Figura
7.2
Transmisi√≥n
servidor
flujos
reproductor
multimedia
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
5807.3
cliente
precargado
segundos
archivo
comienza
vaciar
buffer
caso
opci√≥n
velocidad
relleno
x(t
velocidad
vaciado
paquetes
cuyo
caso
x(t
moment√°neamente
menor
d.
archivos
multimedia
env√≠an
TCP
servidor
inserta
archivo
multimedia
socket
TCP
r√°pidamente
cliente
reproductor
multi-
media
lee
socket
TCP
r√°pido
coloca
v√≠deo
comprimido
buffer
reproductor
retardo
inicial
segundos
repro-
ductor
lee
buffer
velocidad
reenv√≠a
archivo
comprimido
descompre-
si√≥n
reproducci√≥n
TCP
retransmite
paquetes
perdidos
potencial
proporcionar
calidad
sonido
UDP
velocidad
relleno
x(t
fluct√∫a
tiempo
causa
control
congesti√≥n
control
flujo
ventana
TCP
realidad
producirse
p√©rdida
paque-
tes
control
congesti√≥n
TCP
reducir
velocidad
instant√°nea
valor
menor
largos
periodos
tiempo
buffer
cliente
vaciarse
proceso
conocido
inanici√≥n
introducir
pausas
indeseables
salida
flujo
audio
v√≠deo
cliente
Wang
2004
demuestra
tasa
media
transferencia
TCP
veloci-
dad
media
bit
flujos
TCP
permiten
minimizar
inanici√≥n
obtener
retardos
arranque
peque√±os
opci√≥n
comportamiento
x(t
depender√°
medida
tama√±o
buffer
cliente
confundirse
buffer
receptor
TCP
buffer
suficientemente
almacenar
archivo
multimedia
completo
posi-
blemente
disco
TCP
har√°
ancho
banda
instant√°neo
disponi-
ble
conexi√≥n
x(t
hacerse
d.
x(t
largos
periodos
tiempo
archivo
multimedia
precarga
cliente
subsiguiente
inanici√≥n
cliente
improbable
contrario
buffer
cliente
peque√±o
x(t
fluctuar√°
valor
velocidad
vaciado
riesgo
inanici√≥n
cliente
7.2
FLUJOS
AUDIO
V√çDEO
ALMACENADO
581
Velocidad
relleno
x(t
Velocidad
vaciado
descompresi√≥n
reproducci√≥n
red
Datos
v√≠deo
precargados
Buffer
cliente
Figura
7.3
buffer
cliente
llena
velocidad
x(t
vac√≠a
velocidad
d.
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
5817.2.3
Protocolo
transmisi√≥n
flujos
tiempo
real
RTSP
usuarios
multimedia
Internet
especialmente
crecido
mando
TV
mano
desear√°n
controlar
reproducci√≥n
medios
continuos
pausando
reproducci√≥n
saltando
punto
posterior
avance
r√°pido
rebobinado
visual
reproducci√≥n
etc.
funcionalidad
similar
dispone
usuario
reproductor
DVD
visualizaci√≥n
v√≠deos
DVD
reproductor
discos
CD
escuchar
m√∫sica
usuario
controlar
reproducci√≥n
reproductor
multimedia
servidor
necesitan
proto-
colo
permita
intercambiar
informaci√≥n
control
reproducci√≥n
Protocolo
flujos
tiempo
real
RTSP
Real-Time
Streaming
Protocol
definido
RFC
2326
protocolo
abordar
detalles
RTSP
veamos
RTSP
‚Ä¢R
‚Ä¢R
red
RTP
protocolo
propietario
proporcionar
mecanismo
encapsulaci√≥n
flujos
multimedia
RTP
estudia
Secci√≥n
7.4
ejemplo
servidores
reproductores
audio
v√≠deo
RealNetworks
utili-
zan
RTSP
intercambiar
informaci√≥n
control
flujo
multimedia
encapsulado
paquetes
RTP
formato
datos
propietario
‚Ä¢R
UDP
TCP
‚Ä¢R
flujo
audio
v√≠deo
reproducirse
empieza
llegar
cliente
reproducirse
retardo
segundos
descargarse
completo
iniciar
reproducci√≥n
RTSP
RTSP
permite
repro-
ductor
multimedia
controle
transmisi√≥n
flujo
multimedia
mencio-
nado
acciones
control
pausar
reanudar
reposicionar
reproducci√≥n
avance
r√°pido
rebobinado
RTSP
protocolo
banda
particular
mensajes
RTSP
env√≠an
banda
flujos
multimedia
cuya
estructura
paquete
definida
RTSP
consideran
banda
mensajes
RTSP
utilizan
n√∫mero
puerto
544
empleado
flujos
multimedia
especificaci√≥n
RTSP
RFC
2326
permite
mensajes
RTSP
enviados
TCP
UDP
Recuerde
Secci√≥n
2.3
Protocolo
transferencia
archivos
FTP
utiliza
concepto
banda
particular
FTP
emplea
parejas
sockets
cliente/
servidor
teniendo
pareja
n√∫mero
puerto
pareja
sockets
cliente
servidor
soporta
conexi√≥n
TCP
transporta
informaci√≥n
control
pareja
sockets
cliente
servidor
soporta
conexi√≥n
TCP
realmente
transporta
archivo
canal
RTSP
similar
puntos
canal
control
FTP
Veamos
ejemplo
simple
RTSP
ilustra
Figura
7.4
lugar
navegador
web
solicita
servidor
web
archivo
descripci√≥n
presen-
taci√≥n
archivo
descripci√≥n
contener
referencias
archivos
multimedia
continuos
directivas
sincronizaci√≥n
referencia
archivo
multimedia
continuo
comienza
m√©todo
URL
rtsp://.
continuaci√≥n
pro-
porcionamos
archivo
presentaci√≥n
adaptado
Schulzrinne
1997
582
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
582esta
presentaci√≥n
reproducen
sendos
flujos
audio
v√≠deo
paralelo
sincroniza-
ci√≥n
movimiento
labios
grupo
flujo
audio
reproductor
multimedia
elegir
conmutar
grabaciones
audio
baja
fidelidad
alta
fidelidad
formato
archivo
similar
SMIL
SMIL
2009
formato
emplean
productos
transmisi√≥n
flujos
multimedia
definir
presentaciones
multimedia
sincronizadas
servidor
web
encapsula
archivo
descripci√≥n
presentaci√≥n
mensaje
respuesta
HTTP
env√≠a
navegador
navegador
recibe
dicha
respuesta
HTTP
invoca
reproductor
multimedia
aplicaci√≥n
ayuda
bas√°ndose
campo
define
tipo
contenido
mensaje
archivo
descripci√≥n
presentaci√≥n
referencia
flujos
multimedia
utilizando
m√©todo
URL
rtsp://
ejemplo
muestra
Figura
7.4
reproductor
servidor
intercambian
serie
mensajes
RTSP
reproductor
env√≠a
solicitud
RTSP
SETUP
servidor
responde
mensaje
RTSP
OK
reproductor
env√≠a
solici-
tud
RTSP
reproducci√≥n
PLA
digamos
audio
baja
fidelidad
servidor
res-
ponde
mensaje
RTSP
OK
punto
servidor
flujos
coloca
audio
baja
fidelidad
canal
banda
continuaci√≥n
reproductor
multimedia
env√≠a
solicitud
RTSP
pausa
mensaje
PAUSE
servidor
responde
mensaje
RTSP
OK
usuario
terminado
reproductor
multimedia
env√≠a
solicitud
RTSP
TEARDOWN
terminar
sesi√≥n
servidor
confirma
mensaje
respuesta
RTSP
OK
7.2
FLUJOS
AUDIO
V√çDEO
ALMACENADO
583
Cliente
Servidores
Navegador
web
GET
HTTP
Archivo
descripci√≥n
presentaci√≥n
Configuraci√≥n
SETUP
Reproducir
PLAY
Flujo
multimedia
Pausa
PAUSE
Terminar
TEARDOWN
Servidor
web
Reproductor
multimedia
Servidor
multimedia
Figura
7.4
Interacci√≥n
cliente
servidor
utilizando
RTSP
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
583
title
Twister</title
session
group
language
lipsync
switch
track
type
audio
e=‚ÄùPCMU/8000/1
src=‚Äùrtsp://audio.example.com
twister
audio.en
lofi
track
type
audio
e=‚ÄùDVI4/16000/2
pt=‚Äù90
DVI4/8000/1
src=‚Äùrtsp://audio.example.com
twister
audio.en
hifi
/switch
track
type=‚Äùvideo
jpeg
src=‚Äùrtsp://video.example.com
twister
video
/group
/session
Veamos
mensajes
RTSP
reales
listado
ejemplo
simplifi-
cado
sesi√≥n
RTSP
cliente
servidor
SETUP
rtsp://audio.example.com/twister/audio
RTSP/1.0
Cseq
Transport
rtp
udp
compression
port=3056
mode
PLAY
RTSP/1.0
200
OK
Cseq
Session
4231
PLAY
rtsp://audio.example.com/twister/audio.en/lofi
RTSP/1.0
Range
npt=0-
Cseq
Session
4231
RTSP/1.0
200
OK
Cseq
Session
4231
PAUSE
rtsp://audio.example.com/twister/audio.en/lofi
RTSP/1.0
Range
npt=37
Cseq
Session
4231
RTSP/1.0
200
OK
Cseq
Session
4231
TEARDOWN
rtsp://audio.example.com/twister/audio.en/lofi
RTSP/1.0
Cseq
Session
4231
RTSP/1.0
200
OK
Cseq
Session
4231
interesante
destacar
similitudes
HTTP
RTSP
mensajes
soli-
citud
respuesta
texto
ASCII
cliente
emplea
m√©todos
estandarizados
584
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
584(SETUP
PLAY
PAUSE
etc.
servidor
responde
c√≥digos
respuesta
estandariza-
obstante
diferencia
importante
servidor
RTSP
controla
cliente
sesi√≥n
RTSP
activa
ejemplo
servidor
controla
cliente
inicializaci√≥n
reproducci√≥n
pausa
v√©ase
tarea
pro-
gramaci√≥n
cap√≠tulo
sesi√≥n
n√∫meros
secuencia
forman
mensaje
solicitud
respuesta
RTSP
ayudan
servidor
controlar
sesi√≥n
n√∫mero
sesi√≥n
fija
sesi√≥n
completa
cliente
incrementa
n√∫mero
secuencia
env√≠a
mensaje
servidor
eco
n√∫mero
sesi√≥n
n√∫mero
secuencia
actual
muestra
ejemplo
cliente
inicia
sesi√≥n
solicitud
SETUP
pro-
porcionando
URL
archivo
transmitido
flujo
versi√≥n
RTSP
mensaje
configuraci√≥n
SETUP
incluye
n√∫mero
puerto
cliente
enviarse
archivo
multimedia
mensaje
configuraci√≥n
indica
archivo
deber√°
enviado
UDP
utilizando
protocolo
empaquetamiento
RTP
veremos
Secci√≥n
7.4
Observe
ejemplo
reproductor
elige
reproducir
presentaci√≥n
completa
baja
fidelidad
RTSP
realmente
capaz
explicado
introducci√≥n
particular
RTSP
dispone
facilidades
permiten
clientes
dirigir
flujos
servidor
ejemplo
grabar
RTSP
adoptado
RealNet-
works
l√≠deres
industria
flujos
audio
v√≠deo
Henning
Schulzrinne
pro-
porciona
p√°gina
web
RTSP
Schulzrinne-RTSP
2009
cap√≠tulo
encontrar
tarea
programaci√≥n
crear
sistema
flujos
v√≠deo
servidor
cliente
aprovecha
RTSP
tarea
pre-
cisa
escritura
c√≥digo
construya
env√≠e
realmente
mensajes
RTSP
cliente
tarea
proporciona
c√≥digo
servidor
RTSP
analiza
mensajes
RTSP
construye
respuestas
apropiadas
lectores
interesados
obtener
conocimientos
pro-
fundos
RTSP
animamos
lleven
cabo
interesante
tarea
7.3
Utilizaci√≥n
√≥ptima
servicio
entrega
esfuerzo
protocolo
Internet
capa
red
IP
proporciona
servicio
entrega
esfuerzo
servicio
transferir
datagrama
origen
destino
forma
r√°pida
realiza
tipo
promesa
refiere
duraci√≥n
retardo
terminal
ter-
minal
paquete
individual
intensidad
fluctuaciones
temporales
paquetes
acerca
p√©rdidas
paquetes
flujo
datos
falta
garant√≠as
acerca
retardo
fluctuaci√≥n
paquetes
impone
serie
desa-
f√≠os
significativos
dise√±o
aplicaciones
multimedia
tiempo
real
telefon√≠a
Internet
videoconferencias
tiempo
real
enormemente
sensibles
retardos
fluctuaciones
p√©rdida
paquetes
secci√≥n
diversas
formas
mejorarse
prestacio-
nes
aplicaciones
multimedia
red
basada
servicio
entrega
esfuerzo
centrar
t√©cnicas
capa
aplicaci√≥n
t√©cnicas
requieren
efectuar
modificaci√≥n
n√∫cleo
red
capa
7.3
UTILIZACI√ìN
√ìPTIMA
SERVICIO
ENTREGA
ESFUERZO
585
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
585de
transporte
hosts
terminales
lugar
describiremos
efectos
p√©rdida
paquetes
retardos
fluctuaciones
retardos
aplica-
ciones
multimedia
continuaci√≥n
pasaremos
analizar
t√©cnicas
utilizadas
sobre-
ponerse
deficiencias
describiremos
emplearse
redes
distribuci√≥n
contenido
t√©cnicas
sobredimensionamiento
recursos
evitar
aparici√≥n
deficiencias
7.3.1
Limitaciones
servicio
entrega
esfuerzo
mencionado
servicio
entrega
esfuerzo
conducir
p√©r-
dida
paquetes
experimente
retardo
excesivo
terminal
terminal
manifieste
alta
fluctuaci√≥n
temporal
paquetes
examinar
cuestiones
detalle
an√°lisis
concreto
hablar
mecanismos
contexto
aplicaci√≥n
telefon√≠a
Internet
descrita
abajo
situaci√≥n
similar
aplicaciones
videoconferencia
tiempo
real
Bolot
1994
hablante
ejemplo
telefon√≠a
Internet
genera
se√±al
audio
compuesta
serie
alternativa
periodos
conversaci√≥n
periodos
silencio
ahorrar
ancho
banda
aplicaci√≥n
telefon√≠a
Internet
genera
paquetes
periodos
conversaci√≥n
periodos
conversa-
ci√≥n
emisor
genera
bytes
velocidad
8.000
bytes
20
milise-
gundos
agrupa
bytes
serie
fragmentos
n√∫mero
bytes
fragmento
20
milisegundos
8.000
bytes
160
bytes
frag-
mento
asocia
cabecera
especial
cuyo
contenido
analizaremos
frag-
mento
cabecera
encapsulan
segmento
UDP
llamada
interfaz
socket
periodo
conversaci√≥n
env√≠a
segmento
UDP
20
milisegundos
paquete
llegar
receptor
retardo
terminal
terminal
duraci√≥n
constante
peque√±a
paquetes
llegar√°n
receptor
peri√≥dicamente
20
milisegundos
periodos
conversaci√≥n
condiciones
ideales
receptor
simplemente
reproducir
fragmento
recibe
lamenta-
blemente
paquetes
perderse
mayor√≠a
paquetes
retardo
terminal
terminal
Internet
est√©
congestionada
lige-
ramente
raz√≥n
receptor
cuidado
hora
determinar
reproducir
fragmento
falta
frag-
mento
P√©rdida
paquetes
Considere
segmentos
UDP
generados
aplicaci√≥n
telefon√≠a
Inter-
net
segmento
UDP
encapsula
datagrama
IP
medida
datagrama
viaja
red
pasa
serie
buffers
colas
routers
acce-
der
enlaces
salida
buffers
ruta
exis-
tente
emisor
receptor
est√©
lleno
admitir
datagrama
IP
caso
datagrama
IP
descartado
llegar√°
aplicaci√≥n
receptora
p√©rdidas
eliminarse
enviando
paquetes
TCP
lugar
UDP
Recuerde
TCP
retransmite
paquetes
llegan
destino
mecanismos
retransmisi√≥n
suelen
considerar
inaceptables
aplicaciones
586
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
586audio
interactivas
tiempo
real
telefon√≠a
Internet
incrementan
retardo
terminal
terminal
Bolot
1996
control
congesti√≥n
TCP
velocidad
transmisi√≥n
emisor
verse
reducida
p√©rdida
paquetes
fij√°ndose
velocidad
inferior
velocidad
consumo
paquetes
receptor
impacto
grave
inteligibilidad
voz
receptor
razones
mayor√≠a
aplicaciones
telefon√≠a
Internet
existentes
eje-
cutan
UDP
preocupan
retransmitir
paquetes
perdidos
Baset
2006
informa
Skype
utiliza
UDP
usuario
encuentre
traduc-
tor
NAT
cortafuegos
bloquee
segmentos
UDP
cuyo
caso
emplea
TCP
p√©rdidas
paquetes
necesariamente
desastrosas
pare-
cer
tolerar
perfectamente
tasas
p√©rdida
paquetes
20
ciento
dependiendo
codifique
transmita
voz
oculten
p√©rdidas
receptor
ejemplo
mecanismos
correcci√≥n
errores
FEC
Forward
Error
Correction
ayudar
ocultar
p√©rdidas
paque-
tes
Veremos
t√©cnicas
FEC
transmite
informaci√≥n
redundante
informaci√≥n
original
datos
originales
perdidos
recuperarse
informaci√≥n
redundante
enlaces
existentes
emisor
receptor
severamente
congestionado
tasa
p√©rdida
paquetes
excede
10
20
ciento
tasas
altas
raramente
observan
redes
dise√±adas
podamos
conse-
guir
calidad
sonido
aceptable
Claramente
servicio
entrega
esfuerzo
limitaciones
Retardo
terminal
terminal
retardo
terminal
terminal
suma
retardos
transmisi√≥n
procesamiento
puesta
cola
routers
retardos
propagaci√≥n
enlaces
retardos
procesamiento
sistemas
terminales
aplicaciones
audio
altamente
inte-
ractivas
telefon√≠a
Internet
retardos
terminal
terminal
inferiores
150
milisegundos
perceptibles
oyentes
humanos
retardos
150
400
milisegundos
aceptables
distan
ideales
retardos
mayores
400
milisegundos
afectar
seriamente
interactividad
conversaciones
voz
receptor
aplicaci√≥n
telefon√≠a
Internet
descartar√°
normalmente
paquetes
est√©n
retardados
umbral
ejemplo
400
milisegundos
paquetes
cuyo
retardo
superior
umbral
prefijado
perder√°n
Fluctuaci√≥n
paquetes
componente
crucial
retardo
terminal
terminal
retardos
aleatorios
puesta
cola
routers
causa
retardos
variables
red
tiempo
transcurre
momento
genera
paquete
origen
recibe
destino
fluctuar
paquete
fen√≥meno
conoce
fluctuaci√≥n
jitter
ejemplo
considere
paquetes
consecutivos
periodo
conversaci√≥n
aplicaci√≥n
telefon√≠a
Internet
emisor
env√≠a
paquete
20
milise-
gundos
enviar
receptor
espaciado
paquetes
20
milisegundos
suponga
paquete
llega
7.3
UTILIZACI√ìN
√ìPTIMA
SERVICIO
ENTREGA
ESFUERZO
587
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
587una
cola
pr√°cticamente
vac√≠a
router
justo
paquete
llegue
cola
entran
cola
n√∫mero
paquetes
procedentes
or√≠genes
Puesto
paquete
sufre
peque√±o
retardo
puesta
cola
paquete
sufre
retardo
puesta
cola
router
espaciado
paquete
superior
20
milisegundos
espaciado
paquetes
consecutivos
inferior
20
milisegundos
considere
paquetes
consecutivos
periodo
conversaci√≥n
Suponga
paquete
coloca
cola
contiene
n√∫mero
paquetes
paquete
llega
cola
paquetes
or√≠genes
entren
cola
caso
paquetes
estar√°n
cola
tiempo
tarda
transmitir
paquete
enlace
salida
router
inferior
20
milisegundos
espaciado
paquete
inferior
20
milisegundos
situaci√≥n
an√°loga
produce
circulan
veh√≠culos
carre-
tera
Suponga
amigo
viajan
autom√≥vil
San
Diego
F√©nix
Suponga
amigo
formas
similares
conducir
viajan
100
km
hora
tr√°fico
permite
Finalmente
suponga
amigo
comienza
viaje
hora
dependiendo
tr√°fico
encuentren
llegue
F√©nix
hora
hora
des-
pu√©s
amigo
receptor
ignora
presencia
fluctuaciones
reproduce
segmentos
llegan
calidad
audio
resultante
llegar
ininteligible
receptor
Afortunadamente
fluctuaciones
eliminarse
utilizando
n√∫me-
ros
secuencia
marcas
tiempo
retardo
reproducci√≥n
explica
con-
tinuaci√≥n
7.3.2
Eliminaci√≥n
fluctuaciones
reproducir
audio
receptor
aplicaci√≥n
voz
telefon√≠a
Internet
m√∫sica
demanda
receptor
tratar
reproducir
s√≠ncronamente
fragmentos
voz
presencia
fluctuaciones
aleatorias
red
aplicaciones
v√≠deo
requisitos
simi-
lares
normalmente
combinando
siguientes
mecanismos
Precediendo
fragmento
n√∫mero
secuencia
emisor
incrementa
n√∫mero
secuencia
unidad
paquetes
genera
Precediendo
fragmento
marca
tiempo
emisor
marca
fragmento
hora
fragmento
generado
Retardando
reproducci√≥n
fragmentos
receptor
retardo
reproduc-
ci√≥n
fragmentos
audio
recibidos
suficientemente
paquetes
reciban
instante
reproducci√≥n
plani-
ficado
retardo
reproducci√≥n
fijo
sesi√≥n
audio
variar
adaptativamente
dicha
sesi√≥n
paquetes
lleguen
tiempo
reproducci√≥n
planificado
consideran
paquetes
perdidos
ignoran
indicado
anteriormente
receptor
utilizar
tipo
interpola-
ci√≥n
voz
tratar
ocultar
p√©rdidas
588
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
588Veamos
aliviar
eliminar
efectos
fluctuaciones
mecanismos
combina
apropiadamente
examinar
estrategias
reproducci√≥n
retardo
reproducci√≥n
fijo
retardo
reproducci√≥n
adaptativo
Retardo
reproducci√≥n
fijo
estrategia
basada
retardo
fijo
receptor
intenta
reproducir
fragmento
exactamente
milisegundos
fragmento
generado
fragmento
marca
tiempo
indica
generado
instante
receptor
reproduce
fragmento
instante
suponiendo
fragmento
llegado
momento
paquetes
lleguen
instante
repro-
ducci√≥n
planificado
descartan
consideran
perdidos
valor
adecuado
telefon√≠a
Internet
permitir
retardos
400
milisegundos
experiencia
interactiva
satisfac-
toria
valores
menores
menor
400
milise-
gundos
paquetes
llegar
instante
reproducci√≥n
planificado
fluctuaci√≥n
paquetes
causa
red
simplificar
diga-
mos
suelen
experimentarse
variaciones
retardos
terminal
terminal
preferible
utilizar
valor
contrario
retardo
peque√±o
varia-
ciones
preferible
emplear
valor
peque√±o
inferior
150
milisegundos
Figura
7.5
ilustra
compromiso
retardo
reproducci√≥n
tasa
p√©rdida
paquetes
figura
muestra
instantes
generan
paquetes
ins-
tantes
paquetes
reproducen
√∫nico
periodo
conversaci√≥n
figura
consideran
retardos
reproducci√≥n
iniciales
muestra
l√≠nea
escalonada
izquierda
emisor
genera
paquetes
intervalos
peri√≥dicos
ejemplo
20
milisegundos
paquete
periodo
conversaci√≥n
recibe
7.3
UTILIZACI√ìN
√ìPTIMA
SERVICIO
ENTREGA
ESFUERZO
589
Paquetes
generados
Tiempo
Paquetes
Planificaci√≥n
reproducci√≥n
p‚Äìr
Planificaci√≥n
reproducci√≥n
p'‚Äìr
Paquetes
recibidos
Reproducci√≥n
omitida
Figura
7.5
P√©rdidas
paquetes
distintos
retardos
reproducci√≥n
fijos
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
589en
instante
r.
muestra
figura
instantes
llegada
paquetes
suce-
sivos
espaciados
uniforme
fluctuaciones
red
planificaci√≥n
reproducci√≥n
fija
retardo
reproducci√≥n
inicial
fijo
r.
planificaci√≥n
cuarto
paquete
llega
instante
repro-
ducci√≥n
planificado
reproductor
perdido
planificaci√≥n
reproducci√≥n
retardo
reproducci√≥n
inicial
fijo
p 
r.
planificaci√≥n
paquetes
llegan
instante
reproducci√≥n
plani-
ficado
produce
p√©rdida
Retardo
reproducci√≥n
adaptativo
ejemplo
ilustra
importante
compromiso
retardo
tasa
p√©rdidas
surge
hora
dise√±ar
estrategia
reproducci√≥n
retardos
repro-
ducci√≥n
fijos
retardo
inicial
reproducci√≥n
mayor√≠a
paquetes
llegar√°n
tiempo
tasa
p√©rdidas
despreciable
servicios
interactivos
telefon√≠a
Internet
retardos
resultar
molestos
intolerables
Idealmente
minimizar
retardo
reproducci√≥n
restricci√≥n
tasa
p√©rdidas
inferior
porcentaje
precisado
peque√±o
forma
natural
tratar
compromiso
estimar
retardo
red
varianza
retardo
ajustar
retardo
reproducci√≥n
correspondientemente
princi-
pio
periodo
conversaci√≥n
ajuste
adaptativo
retardos
reproducci√≥n
principio
periodos
conversaci√≥n
har√°
periodos
silencio
emisor
compriman
estiren
compresi√≥n
alargamiento
silencios
proporci√≥n
razonable
resulta
perceptible
conversaci√≥n
expuesto
Ramjee
1994
describir
algoritmo
gen√©rico
utilizar
receptor
ajustar
adaptativamente
retardos
repro-
ducci√≥n
marca
tiempo
paquete
i-√©simo
instante
paquete
generado
emisor
ri
instante
paquete
llega
receptor
pi
instante
receptor
reproduce
paquete
retardo
terminal
terminal
red
paquete
i-√©simo
ri
fluctuaci√≥n
red
retardo
variar√°
paquete
di
estimaci√≥n
retardo
promedio
red
recibirse
paquete
i-√©simo
estimaci√≥n
calcula
marca
tiempo
forma
di
di‚Äì1
ri
constante
fija
ejemplo
0,01
di
media
m√≥vil
retardos
red
observados
r1
t1
ri
estimaci√≥n
asigna
peso
retardos
red
recientemente
observados
distante
forma
estimaci√≥n
deber√≠a
resultarle
extra√±a
lector
idea
similar
emplea
estimar
tiempos
ida
vuelta
TCP
visto
Cap√≠tulo
vi
estima-
ci√≥n
desviaci√≥n
media
retardo
retardo
promedio
estimado
esti-
maci√≥n
construye
marcas
tiempo
590
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
590vi
vi‚Äì1
ri
di
estimaciones
di
vi
calculan
paquete
recibido
utilizan
determinar
punto
reproducci√≥n
paquete
periodo
conversaci√≥n
calculado
estimaciones
receptor
emplea
algo-
ritmo
reproducci√≥n
paquetes
paquete
periodo
conversaci√≥n
instante
reproducci√≥n
pi
calcula
pi
di
Kvi
constante
positiva
ejemplo
prop√≥sito
t√©rmino
Kvi
esta-
blecer
instante
reproducci√≥n
suficientemente
lejos
futuro
peque√±a
fracci√≥n
paquetes
correspondientes
periodo
conversaci√≥n
vayan
llegando
pierdan
llegada
tard√≠a
instante
reproducci√≥n
siguientes
paquetes
periodo
conversaci√≥n
calcula
desplazamiento
instante
paquete
periodo
conversaci√≥n
repro-
duce
particular
qi
pi
diferencia
temporal
instante
gener√≥
paquete
periodo
conversaci√≥n
instante
reprodujo
paquete
pertenece
periodo
conversaci√≥n
reproducir√°
instante
pj
tj
qi
algoritmo
reci√©n
descrito
sentido
asumiendo
receptor
determinar
paquete
correspondiente
periodo
conversaci√≥n
p√©rdidas
paquetes
receptor
determinar
paquete
periodo
conversaci√≥n
comparando
marca
tiempo
paquete
i-√©simo
paquete
1)-√©simo
ti‚Äì1
20
milisegundos
receptor
paquete
i-√©simo
dando
inicio
paquete
conversaci√≥n
suponga
p√©rdidas
ocasionales
paquetes
caso
paquetes
sucesivos
recibidos
destino
marcas
tiempo
difieren
20
milisegun-
paquetes
pertenecen
periodo
conversaci√≥n
raz√≥n
n√∫meros
secuencia
resultan
particularmente
√∫tiles
receptor
emplear
n√∫meros
secuencia
determinar
diferencia
20
milisegundos
marcas
tiempo
periodo
conversaci√≥n
p√©rdida
paquetes
Flujos
audio
v√≠deo
almacenado
Concluyamos
secci√≥n
palabras
acerca
flujos
audio
v√≠deo
alma-
cenado
Normalmente
aplicaciones
audio
v√≠deo
almacenado
utilizan
n√∫meros
secuencia
marcas
tiempo
retardo
reproducci√≥n
aliviar
eliminar
efectos
fluctuaci√≥n
red
importante
diferencia
audio
v√≠deo
interactivo
tiempo
real
flujos
audio
v√≠deo
almace-
nado
Espec√≠ficamente
flujos
audio
v√≠deo
almacenado
tolerar
retardos
signi-
ficativamente
mayores
usuario
solicita
clip
audio
v√≠deo
resulta
perfectamente
aceptable
esperar
segundos
reproducci√≥n
7.3
UTILIZACI√ìN
√ìPTIMA
SERVICIO
ENTREGA
ESFUERZO
591
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
591comience
mayor√≠a
usuarios
tolerar
retardos
similares
cabo
operaciones
interactivas
tales
salto
temporal
flujo
mul-
timedia
tolerancia
retardo
proporciona
desarrollador
aplicaciones
flexibilidad
hora
dise√±ar
aplicaciones
datos
multimedia
almacenados
7.3.3
Recuperaci√≥n
frente
p√©rdidas
paquetes
explicado
grado
detalle
aplicaci√≥n
telefon√≠a
Inter-
net
enfrentarse
fluctuaci√≥n
paquetes
describir
brevemente
diversos
esquemas
tratan
preservar
calidad
audio
aceptable
presencia
fen√≥meno
p√©rdida
paquetes
Dichos
esquemas
denominan
esquemas
recupera-
ci√≥n
frente
p√©rdidas
definimos
p√©rdida
paquetes
sentido
amplio
paquete
pierde
llega
receptor
llega
instante
reproducci√≥n
planificado
ejemplo
telefon√≠a
Internet
servir√°
contexto
describir
esquemas
recuperaci√≥n
frente
p√©rdidas
mencionado
principio
secci√≥n
retransmisi√≥n
paquetes
perdidos
generalmente
resulta
apropiada
aplicaci√≥n
interactiva
tiempo
real
telefon√≠a
Internet
retransmisi√≥n
paquete
lle-
gado
instante
reproducci√≥n
planificado
sentido
Retransmitir
paquete
desbordado
cola
router
suele
hacerse
suficiente
rapidez
consideraciones
aplicaciones
telefon√≠a
Internet
utilizan
tipo
esquema
anticipaci√≥n
p√©rdidas
tipos
esquemas
anti-
cipaci√≥n
p√©rdidas
correcci√≥n
errores
FEC
Forward
Error
Correction
intercalado
Correcci√≥n
errores
FEC
idea
b√°sica
t√©cnica
FEC
consiste
a√±adir
informaci√≥n
redundante
flujo
original
paquetes
cambio
incrementar
ligeramente
velocidad
transmisi√≥n
flujo
audio
informaci√≥n
redundante
utilizarse
reconstruir
aproximaciones
ver-
siones
exactas
paquetes
perdidos
Siguiendo
expuesto
Bolot
1996
Perkins
1998
esbozar
mecanismos
FEC
sencillos
env√≠a
fragmento
redundante
codificado
fragmentos
fragmento
redun-
dante
obtiene
aplicando
operaci√≥n
OR
exclusiva
fragmentos
originales
Sha-
cham
1990
paquete
grupo
paquetes
pierde
receptor
reconstruir
completamente
paquete
perdido
pierden
paquetes
grupo
receptor
reconstruirlos
Manteniendo
peque√±o
tama√±o
grupo
porcentaje
paquetes
perdidos
recuperarse
tasa
p√©rdidas
excesiva
peque√±o
tama√±o
grupo
incremento
relativo
velocidad
transmisi√≥n
flujo
audio
particular
velocidad
transmisi√≥n
incrementa
factor
1/
ejem-
plo
velocidad
transmisi√≥n
incrementa
33
ciento
esquema
sencillo
incrementa
retardo
reproducci√≥n
receptor
esperar
recibir
grupo
paquetes
completo
iniciar
reproducci√≥n
deta-
lles
pr√°cticos
acerca
funciona
mecanismo
FEC
transporte
datos
multimedia
consulte
RFC
2733
mecanismo
FEC
consiste
enviar
flujo
audio
menor
resoluci√≥n
informaci√≥n
redundante
ejemplo
emisor
crear
flujo
audio
nomi-
592
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
592nal
flujo
correspondiente
baja
resoluci√≥n
baja
tasa
bit
flujo
nominal
codificaci√≥n
PCM
64
kbps
flujo
menor
calidad
codi-
ficaci√≥n
GSM
13
kbps
flujo
baja
velocidad
bit
denomina
flujo
redundante
muestra
Figura
7.6
emisor
construye
n-√©simo
paquete
tomando
n-
√©simo
fragmento
flujo
nominal
a√±adi√©ndole
1)-
√©simo
fragmento
flujo
redundante
existan
p√©rdidas
paquetes
consecutivos
recep-
tor
ocultar
p√©rdida
reproduciendo
fragmento
codificado
baja
tasa
bit
llegue
paquete
fragmentos
baja
tasa
bit
proporcio-
nan
menor
calidad
fragmentos
nominales
flujo
compuesto
mayor√≠a
fragmentos
alta
calidad
fragmentos
ocasionales
baja
calidad
falte
fragmento
proporciona
calidad
global
audio
Observe
esquema
receptor
recibir
paquetes
comenzar
reproducir
incremento
retardo
reproducci√≥n
peque√±o
codificaci√≥n
baja
velocidad
inferior
codificaci√≥n
nominal
enton-
ces
incremento
velocidad
transmisi√≥n
peque√±o
resolver
problema
p√©rdida
paquetes
consecutivos
utili-
zar
sencilla
variante
lugar
a√±adir
simplemente
1)-√©simo
fragmento
tasa
bit
baja
n-√©simo
fragmento
nominal
emisor
a√±adir
-√©simo
2)-√©simo
fragmentos
baja
tasa
bit
a√±adir
-√©simo
3)-√©simo
frag-
mentos
baja
tasa
bit
etc.
A√±adiendo
fragmentos
baja
tasa
bit
fragmento
nominal
calidad
audio
receptor
aceptable
variedad
entor-
entrega
paquetes
esfuerzo
presencia
p√©rdidas
fragmento
adicional
incrementa
ancho
banda
transmisi√≥n
retardo
reproduc-
ci√≥n
RAT
RAT
2009
aplicaci√≥n
telefon√≠a
Internet
documentada
uti-
liza
mecanismos
FEC
transmitir
flujos
audio
menor
calidad
flujo
audio
nominal
descrito
anteriormente
Consulte
Rosenberg
2000
7.3
UTILIZACI√ìN
√ìPTIMA
SERVICIO
ENTREGA
ESFUERZO
593
11
p√©rdida
41
Redundancia
Flujo
recibido
Flujo
original
Flujo
reconstruido
Figura
7.6
Inserci√≥n
informaci√≥n
redundante
menor
calidad
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
593Intercalado
alternativa
transmisi√≥n
informaci√≥n
redundante
aplicaci√≥n
telefon√≠a
Internet
enviar
audio
intercalado
muestra
Figura
7.7
emisor
reordena
unidades
datos
audio
transmisi√≥n
forma
unidades
originalmente
adyacentes
separadas
distancia
flujo
transmi-
tido
intercalado
mitigar
efecto
p√©rdida
paquetes
ejemplo
unidades
longitud
milisegundos
fragmentos
longitud
20
milisegundos
unidades
fragmento
fragmento
contener
unidades
13
fragmento
contener
unidades
10
14
sucesivamente
Figura
7.7
muestra
p√©rdida
√∫nico
paquete
flujo
intercalado
resultado
serie
m√∫ltiples
huecos
peque√±os
flujo
reconstruido
lugar
√∫nico
hueco
tama√±o
aparecer√≠a
tuvi√©ramos
flujo
intercalado
intercalado
mejorar
significativamente
calidad
percibida
flujo
audio
Perkins
1998
baja
sobrecarga
datos
administrativos
des-
ventaja
obvia
intercalado
incrementa
latencia
limita
aplica-
ciones
interactivas
telefon√≠a
Internet
funcionar
env√≠o
flujos
audio
almacenado
principales
ventajas
intercalado
incrementa
requisitos
ancho
banda
flujo
Reparaci√≥n
flujos
audio
da√±ados
receptor
esquemas
recuperaci√≥n
basados
receptor
tratan
generar
sustituto
paquete
perdido
similar
original
explica
Perkins
1998
se√±ales
audio
particular
voz
exhiben
cantidad
594
CAP√çTULO
REDES
MULTIMEDIA
Flujo
original
Flujo
intercalado
Flujo
recibido
Flujo
reconstruido
131
41
41
131
10
146
86
86
10
14
perdido6
11
153
10
129
10
11
129
12
168
13
1614
13
15
1614
12
168
Figura
7.7
Env√≠o
audio
intercalado
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
594auto-similitud
corto
plazo
t√©cnicas
funcionan
tasas
p√©rdida
relati-
vamente
bajas
15
ciento
paquetes
peque√±o
tama√±o
4-40
mili-
segundos
longitud
p√©rdida
aproxima
longitud
fonema
5-100
milisegundos
t√©cnicas
dejan
funcionar
oyente
perderse
fonemas
completos
forma
simple
recuperaci√≥n
receptor
repetici√≥n
paquetes
repetici√≥n
paquetes
sustituye
paquetes
perdidos
copias
paque-
tes
hayan
llegado
inmediatamente
p√©rdida
t√©cnica
baja
com-
plejidad
computacional
proporciona
resultados
razonablemente
forma
recuperaci√≥n
basada
receptor
interpolaci√≥n
utiliza
audio
pos-
terior
p√©rdida
interpolar
paquete
adecuado
permita
cubrir
hueco
interpolaci√≥n
funciona
repetici√≥n
paquetes
requiere
significativamente
recursos
computaci√≥n
Perkins
1998
7.3.4
Distribuci√≥n
multimedia
red
Internet
actual
redes
distribuci√≥n
contenido
velocidades
transmisi√≥n
flujos
v√≠deo
var√≠an
centenares
kbps
v√≠deos
baja
resoluci√≥n
Mbps
v√≠deo
calidad
DVD
tarea
enviar
flujos
v√≠deo
almacenado
demanda
n√∫mero
usuarios
distribui-
geogr√°ficamente
plantear
desaf√≠o
magnitud
enfoque
simple
almacenar
v√≠deo
√∫nico
servidor
simplemente
transmitir
flujo
ser-
vidor
v√≠deo
granja
servidores
cliente
solicitud
cliente
explica
Secci√≥n
7.2
problemas
obvios
soluci√≥n
lugar
puesto
cliente
encontrarse
lejos
servidor
paquetes
servi-
dor
cliente
pasar
ISP
incrementando
probabilidad
retardos
p√©rdidas
significativos
lugar
v√≠deo
popular
pro-
bablemente
enviarlo
m√∫ltiples
ISP
enlaces
comunicaciones
consumiendo
ancho
banda
significativo
Cap√≠tulo
explicado
almacenamiento
cach√©
aliviar
proble-
analizamos
almacenamiento
cach√©
t√©rminos
contenido
web
tra-
dicional
deber√≠a
almacenamiento
cach√©
apropiado
contenido
multimedia
audio
v√≠deo
almacenado
secci√≥n
hablar
redes
distribuci√≥n
contenido
CDN
Content
Distribution
Networks
proporcionan
soluci√≥n
alternativa
distribuci√≥n
contenido
multimedia
almace-
nado
distribuci√≥n
contenido
web
tradicional
redes
CDN
basan
filosof√≠a
cliente
acercarse
conte-
nido
ruta
entrega
esfuerzo
servidor
cliente
soportar
flujos
v√≠deo
contenido
llevado
cliente
redes
CDN
utilizan
modelo
cach√©s
web
red
CDN
clientes
pago
ISP
proveedores
contenido
proveedor
contenido
v√≠deo
distribuir
ejemplo
CNN
paga
compa√±√≠a
CDN
Akamai
lleve
v√≠deo
usuarios
soliciten
menor
retardo
compa√±√≠a
CDN
suele
proporcionar
servicio
distribuci√≥n
contenido
forma
7.3
UTILIZACI√ìN
√ìPTIMA
SERVICIO
ENTREGA
ESFUERZO
595
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
5951
compa√±√≠a
CDN
instala
centenares
servidores
CDN
Internet
Normal-
mente
empresa
CDN
coloca
servidores
CDN
centros
datos
suelen
ubicados
ISP
nivel
inferior
cerca
redes
acceso
ISP
clientes
compa√±√≠a
CDN
replica
contenido
clientes
servidores
CDN
cliente
actualiza
contenido
empresa
CDN
redistribuye
contenido
servidores
CDN
empresa
CDN
proporciona
mecanismo
cliente
solicita
contenido
contenido
proporcionado
servidor
CDN
entreg√°rselo
cliente
espec√≠fico
servidor
servidor
cliente
ISP
cliente
servidor
CDN
disponga
ruta
libre
congesti√≥n
cliente
Figura
7.8
muestra
interacci√≥n
proveedor
contenido
empresa
CDN
proveedor
contenido
determina
objetos
ejemplo
v√≠deos
CDN
distribuya
proveedor
contenido
distribuye
restantes
objetos
CDN
intervenga
proveedor
contenido
etiqueta
contenido
env√≠a
nodo
CDN
replica
contenido
env√≠a
serie
servidores
CDN
selec-
cionados
empresa
CDN
poseer
red
privada
enviar
contenido
nodo
CDN
servidores
CDN
proveedor
contenido
modifica
596
CAP√çTULO
REDES
MULTIMEDIA
Servidor
origen
Am√©rica
Norte
Servidor
CDN
Am√©rica
Sur
Servidor
CDN
Europa
Servidor
CDN
Asia
Nodo
distribuci√≥n
CDN
Figura
7.8
red
CDN
env√≠a
objetos
etiquetados
proveedor
contenido
servidores
CDN
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
596objeto
distribuido
CDN
env√≠a
versi√≥n
nodo
CDN
replica
inmedia-
tamente
objeto
distribuye
servidores
CDN
importante
recordar
servidor
CDN
normalmente
contiene
objetos
proveedores
contenido
viene
pregunta
interesante
navegador
host
usuario
recibe
orden
extraer
objeto
espec√≠fico
identificado
URL
determina
navegador
extraer
objeto
servidor
origen
servido-
res
CDN
Normalmente
redes
CDN
t√©cnica
redirecci√≥n
DNS
guiar
navegadores
servidor
correcto
Kangasharju
2000
ejemplo
suponga
nombre
host
proveedor
contenido
www
foo.com
cdn.com
Suponga
proveedor
contenido
CDN
distribuya
archivos
v√≠deo
mpeg
objetos
incluyendo
p√°ginas
HTML
base
distri-
buidas
directamente
proveedor
contenido
proveedor
contenido
modifica
objetos
HTML
servidor
origen
URL
archivos
v√≠deo
vayan
precedidos
http://www.cdn.com
archivo
HTML
proveedor
contenido
originalmente
referencia
http://www.foo.com/sports/highlights.mpg
proveedor
contenido
etique-
tar√≠a
objeto
sustituyendo
referencia
archivo
HTML
http://www.cdn
com
www.foo.com
sports
highlights.mpg
navegador
solicita
p√°gina
web
contiene
v√≠deo
highlights
mpg
lugar
siguientes
acciones
navegador
env√≠a
solicitud
correspondiente
objeto
HTML
base
servi-
dor
origen
www.foo.com
env√≠a
objeto
HTML
solicitado
navegador
navegador
analiza
archivo
HTML
referencia
http://www.cdn
com
www.foo.com
sports
highlights.mpg
navegador
b√∫squeda
DNS
www.cdn.com
nombre
host
correspondiente
URL
referenciado
sistema
DNS
configurado
forma
consultas
acerca
www.cdn.comque
lleguen
servidor
DNS
ra√≠z
env√≠en
servidor
DNS
autoritativo
www.cdn.com
servidor
DNS
autoritativo
recibe
consulta
extrae
direcci√≥n
IP
navegador
solicitante
Utili-
zando
mapa
interno
red
construido
Internet
servidor
DNS
empresa
CDN
devuelve
direcci√≥n
IP
servidor
CDN
probablement
adecuado
navegador
solicitante
servidor
CDN
pr√≥-
ximo
navegador
cliente
DNS
host
realiza
solicitud
recibe
respuesta
DNS
direc-
ci√≥n
IP
navegador
env√≠a
solicitud
HTTP
servidor
CDN
direcci√≥n
IP
navegador
obtiene
archivo
v√≠deo
highlights.mpg
servi-
dor
CDN
subsiguientes
solicitudes
dirigidas
www.cdn.com
cliente
conti-
nuar√°
utilizando
servidor
CDN
direcci√≥n
IP
www.cdn.com
encontrar√°
cach√©
DNS
host
cliente
servidor
nombres
DNS
local
resumen
muestra
Figura
7.9
host
realiza
solicitud
acude
servidor
web
origen
obtener
objeto
HTML
base
servidor
DNS
autoritativo
correspondiente
empresa
CDN
obtener
direcci√≥n
IP
servidor
CDN
acude
servidor
CDN
obtener
v√≠deo
Observe
falta
cambio
HTTP
DNS
navegador
implementar
esquema
distribuci√≥n
7.3
UTILIZACI√ìN
√ìPTIMA
SERVICIO
ENTREGA
ESFUERZO
597
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
597Lo
queda
explicar
empresa
CDN
determina
servi-
dor
CDN
host
solicitante
empresa
CDN
propie-
taria
dif√≠cil
hacerse
idea
aproximada
ISP
acceso
Internet
contiene
potenciales
clientes
realizan
solicitudes
empresa
CDN
anotado
servidor
CDN
empresa
CDN
determina
servidor
CDN
bas√°ndose
conocimiento
tablas
enrutamiento
Internet
espec√≠ficamente
tablas
BGP
hablado
Cap√≠tulo
estimaciones
tiempo
ida
vuelta
medidas
dispone
comunicaciones
diversos
servidores
distintas
redes
acceso
consulte
Verma
2001
an√°lisis
detallado
forma
empresa
CDN
estima
servidor
CDN
proporcionar√°
servicio
entrega
esfuerzo
ISP
empresa
CDN
n√∫mero
ISP
acceso
Internet
emplea
dicha
informaci√≥n
configurar
servidor
DNS
autoritativo
an√°lisis
env√≠o
flujos
multimedia
punto
vista
empresa
CDN
operativa
Akamai
consulte
Sripanidkulchpai
2004
recientes
desarrollos
investi-
gaci√≥n
redes
CDN
consulte
Krishnamurthy
2001
Mao
2002
Saroiu
2002
Freed-
man
2004
2006
Huang
2008
7.3.5
Dimensionamiento
redes
servicio
entrega
esfuerzo
proporcionar
calidad
servicio
secciones
anteriores
visto
diversas
t√©cnicas
nivel
aplicaci√≥n
reproducci√≥n
paquetes
mecanismos
FEC
intercalado
paquetes
hosts
infraestructura
CDN
implantada
red
mejorar
calidad
aplicaciones
multimedia
red
Internet
actual
dispone
servicio
entrega
esfuerzo
Fundamentalmente
dificultades
soporte
aplicaciones
mul-
timedia
surgen
estrictos
requisitos
rendimiento
retardo
paquetes
terminal
598
CAP√çTULO
REDES
MULTIMEDIA
Servidor
origen
Solcititud
HTTP
Solicitud
HTTP
Consulta
DNS
Servidor
CDN
cercano
Servidor
DNS
autoritativo
empresa
CDN
Figura
7.9
redes
CDN
utilizan
sistema
DNS
dirigir
solicitudes
servidor
CDN
cercano
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
598a
terminal
baja
fluctuaci√≥n
retardo
baja
tasa
p√©rdidas
retardo
paquetes
fluctuaci√≥n
retardos
p√©rdidas
producen
red
congestionada
t√©cnica
definitiva
mejorar
calidad
aplicaciones
multime-
t√©cnica
emplearse
resolver
pr√°cticamente
pro-
blema
recursos
est√©n
restringidos
simplemente
meter
dinero
evitar
principio
exista
contienda
recursos
caso
aplicaciones
multimedia
red
proporcionar
suficiente
capacidad
enlace
red
produzca
produzca
raramente
congesti√≥n
red
consiguientes
retardos
p√©rdidas
paquetes
suficiente
capacidad
enlace
paquetes
atravesar
red
Internet
retardos
puesta
cola
p√©rdidas
puntos
vista
situaci√≥n
ideal
aplicacio-
nes
multimedia
funcionar√≠an
perfectamente
usuarios
estar√≠an
contentos
conseguirse
efectuar
cambio
arquitectura
Internet
basada
ser-
vicio
entrega
esfuerzo
cuesti√≥n
capacidad
sufi-
ciente
situaci√≥n
paradisiaca
costes
proporcionar
ancho
banda
suficiente
resultan
pr√°cticos
punto
vista
comercial
ISP
cuesti√≥n
capacidad
proporcionar
enlaces
red
topolog√≠a
dada
determinado
nivel
rendimiento
terminal
ter-
minal
suele
denominar
aprovisionamiento
ancho
banda
problema
complicado
dise√±ar
topolog√≠a
red
colocar
routers
interconectar
routers
enlaces
capacidad
asignar
enlaces
con-
seguir
nivel
prefijado
rendimiento
terminal
terminal
problema
dise√±o
redes
denomina
dimensionamiento
red
ancho
banda
dimensionamiento
red
temas
complejos
caen
alcance
libro
conviene
necesario
resolver
siguien-
tes
problemas
predecir
rendimiento
nivel
aplicaci√≥n
puntos
ter-
minales
red
prever
capacidad
suficiente
satisfacer
requisitos
rendimiento
aplicaci√≥n
Modelos
demanda
tr√°fico
puntos
terminales
red
modelos
especificarse
nivel
llamada
ejemplo
usuarios
llegan
red
inician
aplicaciones
terminal
terminal
nivel
paquetes
ejem-
plo
n√∫mero
paquetes
generados
aplicaciones
activas
Observe
carga
trabajo
variar
tiempo
Requisitos
rendimiento
definidos
ejemplo
requisito
rendimiento
soporte
tr√°fico
sensible
retardo
aplicaciones
interactivas
audio/
v√≠deo
probabilidad
retardo
terminal
terminal
aplicaci√≥n
supere
determinado
umbral
m√°ximo
tolerable
inferior
valor
peque√±o
Fraleigh
2003
Modelos
predecir
rendimiento
terminal
terminal
modelo
carga
trabajo
determinado
t√©cnicas
encontrar
asignaci√≥n
coste
m√≠nimo
ancho
banda
permita
satisfacer
requisitos
usuarios
aspecto
investigadores
trabajando
arduamente
desarrollar
mode-
v√©ase
Secci√≥n
1.4
permitan
cuantificar
rendimiento
carga
tra-
determinada
t√©cnicas
optimizaci√≥n
hallar
asignaciones
ancho
banda
coste
m√≠nimo
satisfagan
requisitos
rendimiento
7.3
UTILIZACI√ìN
√ìPTIMA
SERVICIO
ENTREGA
ESFUERZO
599
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
599Dado
red
Internet
actual
basada
servicio
entrega
esfuerzo
punto
vista
tecnol√≥gico
soportar
tr√°fico
multimedia
rendimiento
apropiado
estuviera
dimensionada
pregunta
natural
red
Internet
respuestas
principalmente
econ√≥micas
organizati-
vas
punto
vista
econ√≥mico
estar√≠an
dispuestos
usuarios
pagar
ISP
suficiente
dinero
ISP
instalaran
ancho
banda
suficiente
soportar
aplicaciones
multimedia
actual
Internet
cuestiones
organizativas
dif√≠ciles
Observe
ruta
terminal
terminal
puntos
extremos
comunicaci√≥n
multimedia
pasar
redes
m√∫ltiples
ISP
punto
vista
organizativo
estar√≠an
dispuestos
ISP
cooperar
compartiendo
recursos
asegurar
ruta
terminal
terminal
est√©
adecuadamente
dimensionada
d√©
soporte
aplicaciones
multimedia
an√°lisis
perspectiva
problemas
econ√≥micos
organizativos
consulte
Davies
2005
an√°lisis
dimensionamiento
redes
troncales
nivel
soporte
tr√°fico
sensible
retardo
consulte
Fraleigh
2003
7.4
Protocolos
aplicaciones
interactivas
tiempo
real
aplicaciones
interactivas
tiempo
real
incluidas
telefon√≠a
Internet
video-
conferencia
prometen
controlar
crecimiento
futuro
Internet
sorprendernos
organismos
estandarizaci√≥n
IETF
ITU
hayan
ocu-
pados
a√±os
contin√∫an
est√°ndolo
establecimiento
est√°ndares
clase
aplicaciones
Disponiendo
est√°ndares
apropiados
aplicacio-
nes
interactivas
tiempo
real
empresas
independientes
crear
convincen-
tes
productos
interoperen
secci√≥n
examinar
RTP
SIP
H.323
aplicaciones
interactivas
tiempo
real
conjuntos
est√°ndares
disfrutan
amplia
implementaci√≥n
productos
industriales
7.4.1
RTP
secci√≥n
visto
emisor
aplicaci√≥n
multimedia
a√±ade
campos
cabecera
fragmentos
audio
v√≠deo
pasarlos
capa
trans-
porte
campos
cabecera
incluyen
n√∫meros
secuencia
marcas
tiempo
mayor√≠a
aplicaciones
multimedia
red
n√∫meros
secuencia
marcas
tiempo
conveniente
disponer
estructura
paquete
estandarizada
incluya
campos
datos
audio
v√≠deo
n√∫meros
secuencia
marcas
tiempo
campos
potencialmente
√∫tiles
RTP
definido
documento
RFC
3550
est√°ndar
RTP
emplearse
transportar
formatos
comunes
PCM
GSM
MP3
sonido
MPEG
H.263
v√≠deo
utilizar
transportar
formatos
sonido
v√≠deo
propietarios
Actualmente
RTP
disfruta
amplia
implementaci√≥n
centenares
productos
prototipos
investi-
gaci√≥n
complementario
importantes
protocolos
interactivos
tiempo
real
SIP
H.323
600
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
600En
secci√≥n
proporcionamos
introducci√≥n
RTP
protocolo
compa√±ero
RTCP
Animamos
lectores
visitar
sitio
RTP
Henning
Schulzrinne
Schulz-
rinne-RTP
2009
proporciona
abundante
informaci√≥n
tema
visitar
sitio
RA
RAT
2009
documenta
aplicaci√≥n
telefon√≠a
Internet
emplea
RTP
Fundamentos
RTP
Normalmente
RTP
ejecuta
UDP
emisor
encapsula
fragmento
multime-
paquete
RTP
encapsula
paquete
segmento
UDP
pasa
segmento
IP
receptor
extrae
paquete
RTP
segmento
UDP
conti-
nuaci√≥n
extrae
fragmento
multimedia
paquete
RTP
pasa
reproductor
multime-
decodificaci√≥n
procesamiento
ejemplo
considere
RTP
transportar
voz
Suponga
origen
voz
codificado
PCM
voz
muestreada
cuantizada
digitalizada
64
kbps
Suponga
aplicaci√≥n
recopila
datos
codificados
fragmentos
20
milisegundos
fragmento
160
bytes
emisor
precede
frag-
mento
datos
audio
cabecera
RTP
incluye
tipo
codificaci√≥n
audio
n√∫mero
secuencia
marca
tiempo
cabecera
RTP
normalmente
12
bytes
fragmento
audio
cabecera
RTP
forman
paquete
RTP
paquete
RTP
env√≠a
interfaz
socket
UDP
receptor
aplicaci√≥n
recibe
paquete
RTP
procedente
interfaz
socket
aplicaci√≥n
extrae
fragmento
audio
paquete
RTP
utiliza
campos
cabecera
decodificar
repro-
ducir
apropiadamente
fragmento
aplicaci√≥n
incorpora
RTP
lugar
esquema
propietario
especificar
tipo
carga
√∫til
n√∫meros
secuencia
marcas
tiempo
aplicaci√≥n
interoperar√°
f√°cilmente
aplicaciones
multimedia
red
ejemplo
empresas
distintas
desarrollan
software
telefon√≠a
Internet
ambas
incorporan
producto
protocolo
RTP
existir√°
posibilidad
usuario
emplee
productos
telefon√≠a
Internet
comunicarse
usuario
use
producto
empresa
Secci√≥n
7.4.3
veremos
RTP
suele
utilizarse
est√°ndares
telefon√≠a
Internet
Debemos
destacar
RTP
proporciona
mecanismo
garantizar
entrega
tiempo
datos
garant√≠a
calidad
servicio
QoS
Quality-
of-Service
siquiera
garantiza
entrega
paquetes
evita
entrega
paquetes
desor-
denados
encapsulaci√≥n
RTP
percibe
sistemas
terminales
routers
diferencian
datagramas
IP
transportan
paquetes
RTP
RTP
permite
origen
ejemplo
c√°mara
micr√≥fono
asigne
flujo
independiente
paquetes
RTP
ejemplo
videoconferencia
participantes
abrirse
flujos
RTP
flujos
transmitir
audio
direcci√≥n
flujos
transmitir
v√≠deo
direc-
ci√≥n
t√©cnicas
codificaci√≥n
populares
incluyen
MPEG
MPEG
empaquetan
audio
v√≠deo
flujo
proceso
codificaci√≥n
codificador
empaqueta
audio
v√≠deo
genera
flujo
RTP
direcci√≥n
paquetes
RTP
limitados
aplicaciones
unidifusi√≥n
enviarse
√°rboles
multidifusi√≥n
uno-a-muchos
muchos-a-muchos
7.4
PROTOCOLOS
APLICACIONES
INTERACTIVAS
TIEMPO
REAL
601
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
601sesi√≥n
multidifusi√≥n
muchos-a-muchos
normalmente
emisores
or√≠genes
sesi√≥n
utilizan
grupo
multidifusi√≥n
enviar
flujos
RTP
flu-
jos
multidifusi√≥n
RTP
conjuntos
pertenecen
sesi√≥n
RTP
flujos
audio
v√≠deo
procedentes
m√∫ltiples
emisores
aplicaci√≥n
video-
conferencia
Campos
cabecera
paquetes
RTP
muestra
Figura
7.10
campos
principales
cabecera
RTP
tipo
carga
√∫til
n√∫mero
secuencia
marca
tiempo
identificador
origen
campo
Tipo
carga
√∫til
paquete
RTP
longitud
bits
flujo
audio
campo
Tipo
carga
√∫til
emplea
indicar
tipo
codificaci√≥n
audio
ejemplo
PCM
modulaci√≥n
delta
adaptativa
codificaci√≥n
predictiva
lineal
utilizando
emisor
decide
cambiar
tipo
codificaci√≥n
mitad
sesi√≥n
informar
receptor
cambio
campo
define
tipo
carga
√∫til
emisor
desear
cambiar
codificaci√≥n
aumentar
calidad
audio
disminuir
tasa
bit
flujo
RTP
Tabla
7.2
enumeran
tipos
carga
√∫til
audio
actualmente
soporte
RTP
flujo
v√≠deo
tipo
carga
√∫til
utiliza
indicar
tipo
codificaci√≥n
v√≠deo
ejemplo
JPEG
movimiento
MPEG
MPEG
H.261
emisor
cambiar
tipo
codificaci√≥n
v√≠deo
marcha
sesi√≥n
Tabla
7.3
enumeran
tipos
carga
√∫til
v√≠deo
soportados
actual-
mente
RTP
restantes
campos
importantes
siguientes
Campo
n√∫mero
secuencia
campo
n√∫mero
secuencia
longitud
16
bits
n√∫mero
secuencia
aumenta
unidad
paquete
RTP
enviado
N√∫mero
tipo
Formato
Frecuencia
Velocidad
carga
√∫til
audio
muestreo
PCM
/H9262-law
kHz
64
kbps
1016
kHz
4,8
kbps
GSM
kHz
13
kbps
LPC
kHz
2,4
kbps
G.722
16
kHz
48‚Äì64
kbps
14
MPEG
Audio
90
kHz
15
G.728
kHz
16
kbps
Tabla
7.2
Tipos
carga
√∫til
audio
soportados
RTP
602
CAP√çTULO
REDES
MULTIMEDIA
Tipo
carga
√∫til
N√∫mero
secuencia
Identificador
origen
sincronizaci√≥n
Diversos
campos
Marca
tiempo
Figura
7.10
Campos
cabecera
RTP
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
602N√∫mero
tipo
carga
√∫til
Formato
v√≠deo
26
JPEG
movimiento
31
H.261
32
MPEG
v√≠deo
33
MPEG
v√≠deo
Tabla
7.3
tipos
carga
√∫til
v√≠deo
soportados
RTP
utilizado
receptor
detectar
p√©rdidas
paquetes
restaurar
secuencia
paquetes
ejemplo
receptor
aplicaci√≥n
recibe
flujo
paquetes
RTP
hueco
n√∫meros
secuencia
86
89
receptor
faltan
paquetes
87
88
receptor
intentar
ocultar
datos
perdidos
Campo
marca
tiempo
campo
marca
tiempo
longitud
32
bits
designa
instante
muestreo
byte
paquete
datos
RTP
visto
secci√≥n
receptor
utilizar
marcas
tiempo
eliminar
fluctuaci√≥n
paquetes
introducida
red
proporcionar
reproducci√≥n
s√≠ncrona
receptor
marca
tiempo
obtiene
se√±al
reloj
muestreo
emisor
ejemplo
audio
se√±al
reloj
marca
tiempo
incrementa
unidad
periodo
muestreo
ejemplo
125
microsegundos
se√±al
reloj
muestro
kHz
aplicaci√≥n
audio
genera
fragmentos
constan
160
muestras
codificadas
marca
tiempo
incrementa
160
paquete
RTP
origen
activo
se√±al
reloj
marca
tiempo
contin√∫a
aumentando
velocidad
constante
origen
est√©
inactivo
Identificador
origen
sincronizaci√≥n
SSRC
Synchronization
Source
Identifier
campo
SSRC
longitud
32
bits
campo
identifica
origen
flujo
RTP
Normalmente
flujo
sesi√≥n
RTP
SSRC
distinto
SSRC
direcci√≥n
IP
emisor
n√∫mero
origen
asigna
aleatoriamente
inicia
flujo
probabilidad
flujos
obtengan
SSRC
peque√±a
caso
ocurriera
or√≠genes
deber√°n
elegir
valor
SSRC
Desarrollo
aplicaciones
software
RTP
enfoques
desarrollo
aplicaci√≥n
red
basada
RTP
enfoque
consiste
desarrollador
aplicaci√≥n
incorpore
manualmente
RTP
escriba
realmente
c√≥digo
lleve
cabo
encapsulaci√≥n
RTP
emi-
sor
procesamiento
RTP
receptor
enfoque
consiste
desa-
rrollador
aplicaci√≥n
utilice
bibliotecas
RTP
existentes
programadores
clases
Java
programadores
Java
realizan
encapsulaci√≥n
pro-
cesamiento
aplicaci√≥n
Puesto
est√©
interesado
escribir
pri-
mera
aplicaci√≥n
multimedia
red
utilizando
RTP
continuaci√≥n
elaborar
enfoques
tarea
programaci√≥n
disponible
cap√≠-
tulo
guiar√°
creaci√≥n
aplicaci√≥n
RTP
Haremos
contexto
comunicaci√≥n
unidifusi√≥n
lugar
contexto
multidifusi√≥n
7.4
PROTOCOLOS
APLICACIONES
INTERACTIVAS
TIEMPO
REAL
603
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
603Recuerde
Cap√≠tulo
API
UDP
requiere
proceso
emisor
establezca
segmento
UDP
env√≠a
direcci√≥n
destino
IP
n√∫mero
puerto
destino
enviar
paquete
socket
UDP
continuaci√≥n
segmento
UDP
trans-
mitir√°
Internet
segmento
pierde
ejemplo
causa
desbor-
damiento
buffer
router
terminar√°
llegando
puerta
proceso
receptor
aplicaci√≥n
puerta
queda
completamente
definida
direcci√≥n
IP
destino
n√∫mero
puerto
destino
datagrama
IP
contenga
direcci√≥n
IP
destino
n√∫mero
puerto
destino
dirigido
puerta
UDP
proceso
receptor
API
UDP
permite
desarrollador
aplicaci√≥n
establecer
n√∫mero
puerto
origen
UDP
valor
efecto
proceso
env√≠a
segmento
importante
destacar
RTP
obliga
emplear
n√∫mero
puerto
espec√≠fico
desarrollador
aplicaciones
crea
aplica-
ci√≥n
RTP
especifica
n√∫meros
puerto
lados
aplicaci√≥n
tarea
programaci√≥n
cap√≠tulo
escribir
servi-
dor
RTP
encapsule
tramas
v√≠deo
almacenado
paquetes
RTP
forma
manual
aplicaci√≥n
tomar√°
trama
v√≠deo
a√±adir√°
cabeceras
RTP
trama
crear
paquete
RTP
pasar√°
trama
RTP
socket
UDP
necesitar√°
crear
campos
contenedor
diversas
cabeceras
RTP
incluyendo
campo
n√∫mero
secuencia
campo
marca
tiempo
paquetes
RTP
creados
definir
apropiadamente
n√∫mero
secuencia
marca
tiempo
escribir
expl√≠citamente
c√≥digo
cabo
operaciones
RTP
emisor
aplicaci√≥n
muestra
Figura
7.11
API
red
API
est√°ndar
socket
UDP
m√©todo
alternativo
realiza
tarea
programaci√≥n
consiste
utili-
zar
clase
RTP
Java
biblioteca
RTP
programadores
implementar
operaciones
RTP
uestra
Figura
7.12
m√©todo
desarrollador
aplicaci√≥n
impresi√≥n
RTP
forma
capa
transporte
API
RTP
UDP
capa
aplicaci√≥n
capa
trans-
porte
entrar
demasiados
detalles
relativos
clase
biblioteca
env√≠a
fragmento
datos
multimedia
API
emisor
aplicaci√≥n
proporcionar
interfaz
fragmento
n√∫mero
tipo
carga
√∫til
identifi-
cador
SSRC
marca
tiempo
n√∫mero
puerto
destino
direcci√≥n
IP
destino
comentar
Java
Media
Framework
JMF
incluye
implementaci√≥n
completa
RTP
604
CAP√çTULO
REDES
MULTIMEDIA
IP
UDP
Enlace
datos
F√≠sica
RTP
Aplicaci√≥n
Socket
Figura
7.11
RTP
aplicaci√≥n
queda
socket
UDP
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
6047.4.2
Protocolo
control
RTP
RTCP
documento
RFC
3550
especifica
protocolo
RTCP
protocolo
apli-
caci√≥n
multimedia
red
emplear
RTP
muestra
escenario
multidifusi√≥n
Figura
7.13
participantes
sesi√≥n
RTP
transmite
paquetes
RTCP
participantes
sesi√≥n
multidifusi√≥n
IP
Nor-
malmente
sesi√≥n
RTP
√∫nica
direcci√≥n
multidifusi√≥n
paque-
tes
RTP
RTCP
pertenecientes
sesi√≥n
utilizan
direcci√≥n
multidifusi√≥n
paquetes
RTP
RTCP
distinguen
distintos
n√∫meros
puerto
n√∫mero
puerto
RTCP
establece
n√∫mero
puerto
RTP
paquetes
RTCP
encapsulan
fragmentos
audio
v√≠deo
lugar
paquetes
enviados
peri√≥dicamente
contienen
informes
emisor
receptor
anuncian
estad√≠sticas
√∫tiles
aplicaci√≥n
estad√≠sticas
inclu-
yen
n√∫mero
paquetes
enviados
n√∫mero
paquetes
perdidos
fluctuaci√≥n
7.4
PROTOCOLOS
APLICACIONES
INTERACTIVAS
TIEMPO
REAL
605
IP
UDP
Enlace
datos
F√≠sica
RTP
Transporte
Aplicaci√≥n
Figura
7.12
RTP
interpretarse
subcapa
capa
transporte
Receptor
Receptor
RTCP
RTCP
RTCP
Internet
Emisor
RTCP
Figura
7.13
emisores
receptores
env√≠an
mensajes
RTCP
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
605llegadas
especificaci√≥n
RTP
RFC
3550
establece
aplicaci√≥n
informaci√≥n
realimentaci√≥n
cuesti√≥n
depende
desarrollador
aplicaci√≥n
ejemplo
emisores
utilizar
informaci√≥n
realimentaci√≥n
modificar
velocidades
transmisi√≥n
emplear
prop√≥sitos
diagn√≥stico
ejemplo
receptores
determinar
problemas
car√°cter
local
regional
global
Tipos
paquetes
RTCP
flujo
RTP
recibe
receptor
sesi√≥n
receptor
genera
informe
recepci√≥n
receptor
agrega
informes
recepci√≥n
√∫nico
paquete
RTCP
enviado
√°rbol
multidifusi√≥n
conecta
participantes
sesi√≥n
informe
recepci√≥n
incluye
campos
importantes
siguientes
‚Ä¢E
‚Ä¢L
paquetes
RTP
perdidos
dividido
n√∫mero
paquetes
RTP
enviados
flujo
emisor
recibe
informes
recepci√≥n
indican
recepto-
res
llegando
peque√±a
fracci√≥n
paquetes
transmitidos
emisor
cambiar
tasa
codificaci√≥n
menor
disminuir
congesti√≥n
red
mejorar
tasa
recepci√≥n
n√∫mero
secuencia
recibido
flujo
paquetes
RTP
‚Ä¢L
tiempo
transcurre
llegada
paquetes
sucesivos
flujo
RTP
emisor
crea
transmite
paquetes
informe
emisor
TCP
flujo
RTP
transmite
paquetes
incluyen
informaci√≥n
acerca
flujo
RTP
incluye
‚Ä¢E
‚Ä¢L
flujo
‚Ä¢E
n√∫mero
bytes
enviados
flujo
informes
emisor
utilizar
sincronizar
distintos
flujos
multi-
media
sesi√≥n
RTP
ejemplo
consideremos
aplicaci√≥n
videoconfe-
rencia
emisor
genera
flujos
RTP
independientes
v√≠deo
audio
marcas
tiempo
paquetes
RTP
ligadas
relojes
muestreo
v√≠deo
audio
relacionadas
tiempo
absoluto
tiempo
real
informe
emisor
RTCP
contiene
paquete
generado
recien-
temente
flujo
RTP
asociado
marca
tiempo
paquete
RTP
tiempo
absoluto
paquete
creado
paquetes
informe
emisor
RTCP
aso-
cian
reloj
muestreo
reloj
tiempo
real
receptores
utilizar
asociaci√≥n
informes
emisor
RTCP
sincronizar
reproducci√≥n
audio
v√≠deo
flujo
RTP
transmite
emisor
crea
transmite
paquetes
descripci√≥n
origen
paquetes
contienen
informaci√≥n
acerca
origen
606
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
606direcci√≥n
correo
electr√≥nico
emisor
nombre
aplicaci√≥n
genera
flujo
RTP
incluye
SSRC
flujo
RTP
asociado
paquetes
proporcionan
correspondencia
identificador
origen
SSRC
nombre
usuario
host
paquetes
RTCP
apilables
informes
recepci√≥n
receptor
informes
emisor
descriptores
origen
concatenar
paquete
paquete
resultante
encapsula
segmento
UDP
reenv√≠a
√°rbol
multidifusi√≥n
Escalado
ancho
banda
RTCP
observado
RTCP
potencial
problema
escalado
ejemplo
considere
sesi√≥n
RTP
consta
emisor
n√∫mero
recep-
tores
receptores
genera
peri√≥dicamente
paquetes
RTCP
velo-
cidad
agregada
transmisi√≥n
paquetes
RTCP
exceder
medida
velocidad
paquetes
RTP
enviados
emisor
Observe
cantidad
tr√°fico
RTP
enviada
√°rbol
multidifusi√≥n
cambia
aumenta
n√∫mero
receptores
cantidad
tr√°fico
RTCP
crece
linealmente
n√∫mero
recepto-
res
resolver
problema
escalado
RTCP
modifica
velocidad
parti-
cipante
env√≠a
paquetes
RTCP
√°rbol
multidifusi√≥n
funci√≥n
n√∫mero
participantes
sesi√≥n
participante
env√≠a
paquetes
control
participante
estimar
n√∫mero
participantes
sesi√≥n
Friedman
1999
RTCP
intenta
limitar
tr√°fico
ciento
ancho
banda
sesi√≥n
ejemplo
suponga
emisor
enviando
v√≠deo
velocidad
Mbps
caso
RTCP
intenta
limitar
tr√°fico
ciento
Mbps
100
kbps
protocolo
proporciona
75
ciento
velocidad
75
kbps
receptores
restante
25
ciento
velocidad
25
kbps
emisor
75
kbps
dedicados
receptores
compartidos
forma
equitativa
receptores
receptores
enviar
tr√°fico
RTCP
velocidad
75
kbps
emisor
enviar
tr√°fico
RTCP
velocidad
25
kbps
participante
emisor
receptor
determina
periodo
transmisi√≥n
paquetes
RTCP
forma
din√°mica
calculando
tama√±o
promedio
paquete
RTCP
sesi√≥n
completa
dividiendo
valor
velocidad
asignada
resumen
emisor
periodo
transmisi√≥n
paquetes
RTCP
Ye
Pp
7.4.3
SIP
Imagine
mundo
trabajando
PC
llamadas
tel√©-
fono
llegan
PC
Internet
levanta
camina
llamadas
telef√≥ni-
  
N√∫mero
receptores
0,75
0,05
ancho
banda
sesi√≥n
tama√±o
paquetes
RTCP
N√∫mero
emisores
0,25
0,05
ancho
banda
sesi√≥n
tama√±o
paquetes
RTCP
7.4
PROTOCOLOS
APLICACIONES
INTERACTIVAS
TIEMPO
REAL
607
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
607cas
enrutadas
autom√°ticamente
PDA
conduciendo
llamadas
autom√°ticamente
enrutadas
dispositivo
Internet
disponible
coche
mundo
participando
conferencia
telef√≥nica
acce-
der
libro
direcciones
llamar
invitar
participen
conferen-
cia
participantes
encontrarse
sentados
frente
equipos
PC
paseando
PDA
conduciendo
autom√≥viles
independientemente
est√©n
invi-
taci√≥n
enrutada
forma
transparente
mundo
navegar
p√°gina
principal
individuo
existir√°
enlace
Ll√°mame
clic
establecer√°
sesi√≥n
telefon√≠a
Internet
PC
propietario
p√°gina
encuentre
encuentre
persona
mundo
red
telefon√≠a
conmutaci√≥n
circuitos
lugar
llamadas
pasan
Internet
extremo
extremo
mundo
empresas
utilizan
PBX
circuitos
conmutados
locales
permi-
ten
gestionar
llamadas
telef√≥nicas
empresas
lugar
tr√°fico
telef√≥nico
compa√±√≠as
fluye
red
LAN
alta
velocidad
sonarle
ciencia
ficci√≥n
redes
comutaci√≥n
circuitos
PBX
actuales
desaparecer
completamente
futuro
cercano
Jiang
2001
obstante
protocolos
productos
convertir
visi√≥n
realidad
protocolos
prometedores
direcci√≥n
Proto-
colo
iniciaci√≥n
sesiones
SIP
Session
Initiation
Protocol
definido
RFC
3261
RFC5411
SIP
protocolo
ligero
‚Ä¢P
red
IP
Permite
llama
notificar
llamado
desea
iniciar
comunicaci√≥n
permite
participantes
acordar
m√©todos
codificaci√≥n
datos
multimedia
terminadas
llamadas
‚Ä¢P
usuarios
√∫nica
direcci√≥n
fija
asignarse
din√°micamente
direcciones
DHCP
m√∫ltiples
dispositivos
IP
teniendo
direcci√≥n
IP
‚Ä¢P
multimedia
llamada
cambiar
m√©todo
codificaci√≥n
invitar
par-
ticipantes
lugar
llamada
mecanismos
transferencia
llamadas
mantenimiento
Establecimiento
llamada
direcci√≥n
IP
conocida
comprender
esencia
SIP
analizar
ejemplo
concreto
ejem-
plo
Alicia
PC
desea
llamar
Benito
traba-
jando
computadora
PC
Alicia
Benito
equipados
software
basado
SIP
permite
recibir
llamadas
telef√≥nicas
ejemplo
inicial
supondremos
Alicia
conoce
direcci√≥n
IP
computadora
Benito
Figura
7.14
ilustra
proceso
SIP
establecimiento
llamadas
Figura
7.14
vemos
inicia
sesi√≥n
SIP
Alicia
env√≠a
Benito
mensaje
INVITE
parecido
mensaje
solicitud
HTTP
mensaje
INVITE
env√≠a
UDP
puerto
conocido
5060
SIP
mensajes
SIP
pue-
den
enviar
TCP
mensaje
INVITE
incluye
identificador
Benito
608
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
608(benito@193.64.210.89
indicaci√≥n
direcci√≥n
IP
actual
Alicia
indicaci√≥n
Alicia
desea
recibir
audio
codificarse
formato
VP
codificaci√≥n
PCM
/H9262-law
encapsularse
RTP
indicaci√≥n
Alicia
desea
recibir
paque-
tes
RTP
puerto
38060
recibir
INVITE
Alicia
Benito
env√≠a
men-
saje
respuesta
SIP
similar
mensaje
respuesta
HTTP
mensaje
respuesta
SIP
env√≠a
puerto
SIP
5060
respuesta
Benito
incluye
men-
saje
200
OK
indicaci√≥n
direcci√≥n
IP
forma
codificaci√≥n
empaqueta-
miento
desea
recepci√≥n
n√∫mero
puerto
enviarse
paquetes
audio
Observe
ejemplo
Alicia
Benito
emplear
mecanis-
mos
codificaci√≥n
audio
Alicia
solicita
codifique
audio
GSM
mien-
Benito
pide
codifique
audio
PCM
/H9262-law
recibida
respuesta
Benito
Alicia
env√≠a
Benito
mensaje
reconocimiento
SIP
transacci√≥n
SIP
Benito
Alicia
hablar
comodidad
visual
Figura
7.14
muestra
Alicia
Benito
realidad
normalmente
tiempo
Benito
codificar√°
empaquetar√°
audio
forma
requerida
enviar√°
paquetes
audio
n√∫mero
puerto
38060
direcci√≥n
IP
167.180.112.24
Alicia
7.4
PROTOCOLOS
APLICACIONES
INTERACTIVAS
TIEMPO
REAL
609
Tiempo
Tiempo
167.180.112.24
INVITE
benito@193.64.210.89
IN
IP4
167.180.112.24
audio
38060
RTP
AVP
200
OK
In
IP4
193.64.210.89
audio
48753
RTP
AVP
terminal
Benito
suena
193.64.210.89
/H9262
Law
audio
puerto
5060
puerto
5060
puerto
38060
Alicia
Benito
puerto
5060
puerto
48753
ACK
GSM
Figura
7.14
Establecimiento
llamada
SIP
Alicia
conoce
direcci√≥n
IP
Benito
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
609tambi√©n
codificar√°
empaquetar√°
audio
formato
solicitado
enviar√°
paquetes
audio
n√∫mero
puerto
48753
direcci√≥n
IP
193.64.210.89
sencillo
ejemplo
aprendido
serie
caracter√≠sticas
clave
SIP
lugar
SIP
protocolo
banda
mensajes
SIP
env√≠an
reciben
sockets
utilizados
enviar
recibir
datos
multimedia
lugar
mensajes
SIP
mensajes
legibles
ASCII
parecidos
mensajes
HTTP
SIP
requiere
mensajes
reconocidos
ejecutar
UDP
TCP
Siguiendo
ejemplo
considerar
ocurrir√≠a
Benito
dis-
pone
codec
PCM
/H9262-law
codificar
audio
caso
lugar
responder
200
OK
Benito
probablemente
responder√≠a
mensaje
600
Not
Acceptablee
incluir√≠a
mensaje
codecs
utilizar
Alicia
elegir√≠a
codecs
lista
enviar√≠a
mensaje
INVITE
anunciando
ocasi√≥n
codec
elegido
Benito
simplemente
rechazar
llamada
enviando
posibles
c√≥digos
respuesta
rechazo
c√≥digos
tipo
incluyen
ocupado
ausente
pago
requerido
prohibido
Direcciones
SIP
ejemplo
direcci√≥n
SIP
Benito
sip:benito@193.64.210.89
deseable
mayor√≠a
direcciones
SIP
parezcan
direccio-
nes
correo
electr√≥nico
ejemplo
direcci√≥n
Benito
sip
benito
@dominio.com
dispositivo
SIP
Alicia
env√≠a
mensaje
INVITE
mensaje
incluir√≠a
direcci√≥n
similar
direcci√≥n
correo
electr√≥nico
infraestructura
SIP
enrutar√≠a
mensaje
dispositivo
IP
Benito
est√©
utilizando
momento
veremos
formato
direcci√≥n
SIP
n√∫mero
tel√©fono
Benito
simplemente
nombre
apellidos
suponiendo
fueran
√∫nicos
caracter√≠stica
interesante
direcciones
SIP
incluirse
p√°ginas
web
incluyen
direcciones
correo
electr√≥nico
p√°ginas
web
URL
mailto
ejemplo
suponga
Benito
p√°gina
web
personal
desea
proporcionar
visitantes
llamen
Benito
simplemente
incluir
URL
sip:benito@dominio.com
visitante
haga
clic
URL
aplicaci√≥n
SIP
dispositivo
visitante
ejecuta
env√≠a
mensaje
INVITE
Benito
Mensajes
SIP
introducci√≥n
protocolo
SIP
tratar
cabeceras
tipos
mensajes
SIP
lugar
examinar
brevemente
mensaje
SIP
INVITE
l√≠neas
cabecera
comunes
Supongamos
Alicia
desea
iniciar
llamada
tel√©fono
IP
Benito
ocasi√≥n
Alicia
conoce
direcci√≥n
SIP
Benito
benito@dominio.com
conoce
direcci√≥n
IP
dispositivo
Benito
utilizando
actualmente
mensaje
Alicia
similar
INVITE
sip:benito@dominio.com
SIP/2.0
Via
SIP/2.0
UDP
167.180.112.24
From
sip:alicia@hereway.com
To
sip:benito@dominio.com
610
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
610Call-ID
a2e3a@pigeon.hereway.com
Content-Type
application
sdp
Content-Length
885
IN
IP4
167.180.112.24
audio
38060
RTP
AVP
l√≠nea
INVITE
incluye
versi√≥n
SIP
mensaje
solicitud
HTTP
mensaje
SIP
atraviesa
dispositivo
SIP
incluyendo
dispositivo
origina
mensaje
asocia
l√≠nea
cabecera
Via
indica
direcci√≥n
IP
disposi-
tivo
Veremos
mensaje
INVITE
t√≠pico
atraviesa
dispositivos
SIP
llegar
aplicaci√≥n
SIP
llamado
formar
similar
mensaje
correo
electr√≥nico
mensaje
SIP
incluye
l√≠nea
cabecera
From
l√≠nea
cabecera
To
mensaje
incluye
l√≠nea
cabecera
Call-ID
identifica
forma
un√≠voca
llamada
forma
similar
message-ID
correo
electr√≥nico
incluye
l√≠nea
cabecera
Content-Type
define
formato
utilizado
describir
conte-
nido
mensaje
SIP
incluye
l√≠nea
cabecera
Content-Length
proporciona
longitud
bytes
contenido
mensaje
retorno
carro
salto
l√≠nea
incluye
contenido
mensaje
caso
contenido
proporciona
informaci√≥n
acerca
direcci√≥n
IP
Alicia
desea
recibir
audio
Traducci√≥n
nombres
localizaci√≥n
usuarios
ejemplo
Figura
7.14
dispositivo
SIP
Alicia
conoc√≠a
direcci√≥n
IP
contactar
Benito
suposici√≥n
rea-
lista
direcciones
IP
asignadas
din√°micamente
DHCP
Benito
dispone
dispositivos
IP
ejemplo
diversos
dispositivos
domicilio
trabajo
coche
suponer
Alicia
conoce
direcci√≥n
correo
electr√≥nico
Benito
benito@dominio
com
direcci√≥n
utiliza
llamadas
basadas
SIP
caso
Alicia
obtener
direcci√≥n
IP
dispositivo
utilizando
actualmente
usuario
benito@dominio.com
determinar
Alicia
crea
mensaje
INVITE
comienza
INVITE
benito@dominio.com
SIP/2.0y
env√≠a
mensaje
proxy
SIP
proxy
contestar√°
respuesta
SIP
incluir
direcci√≥n
IP
dispo-
sitivo
actualmente
utilizando
benito@dominio.com
forma
alternativa
res-
puesta
incluir
direcci√≥n
IP
buz√≥n
voz
Benito
incluir
URL
p√°gina
web
diga
Benito
durmiendo
molestar
resultado
devuelto
proxy
depender
llamada
llamada
esposa
Benito
aceptar√°
llamada
suministrar√°
direcci√≥n
IP
llamada
suegra
Benito
responder
URL
apunta
p√°gina
web
durmiendo
momento
est√©
preguntando
servidor
proxy
determinar
direcci√≥n
IP
actual
benito@dominio.com
responder
pre-
gunta
cosas
acerca
dispositivo
SIP
registra-
dor
SIP
usuarios
SIP
asociado
registrador
usuario
ejecuta
aplicaci√≥n
SIP
dispositivo
aplicaci√≥n
env√≠a
mensaje
registro
SIP
regis-
trador
inform√°ndole
direcci√≥n
IP
actual
ejemplo
Benito
ejecuta
apli-
caci√≥n
SIP
PDA
aplicaci√≥n
enviar√°
mensaje
siguientes
l√≠neas
7.4
PROTOCOLOS
APLICACIONES
INTERACTIVAS
TIEMPO
REAL
611
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
611REGISTER
sip
dominio.com
SIP/2.0
Via
SIP/2.0
UDP
193.64.210.89
From
sip:benito@dominio.com
To
sip:benito@dominio.com
Expires
3600
registrador
Benito
mantiene
direcci√≥n
IP
actual
Benito
cambia
dispositivo
SIP
env√≠a
mensaje
registro
indicando
direcci√≥n
IP
Benito
permanece
dispositivo
periodo
tiempo
dispositivo
enviar√°
mensajes
registro
refresco
indicando
direcci√≥n
IP
enviada
recientemente
contin√∫a
v√°lida
ejemplo
mensajes
refresco
necesariamente
enviados
3.600
segundos
mantener
direc-
ci√≥n
servidor
registrador
Merece
pena
comentar
registrador
an√°logo
servidor
nombres
DNS
autoritativo
servidor
DNS
traduce
nombres
fijos
host
direcciones
IP
fijas
registrador
SIP
traduce
identificadores
fijos
personas
ejemplo
benito@dominio.com
direcciones
IP
din√°micas
registradores
SIP
proxies
SIP
ejecutan
host
Examinemos
servidor
proxy
Alicia
obtiene
direcci√≥n
IP
actual
Benito
exposici√≥n
visto
servidor
proxy
simplemente
necesita
reenviar
mensaje
INVITE
Alicia
registrador
proxy
Benito
registrador
proxy
reenviar
mensaje
dispositivo
SIP
actual
Benito
Benito
recibido
mensaje
INVITE
Alicia
enviar
respuesta
SIP
Alicia
612
CAP√çTULO
REDES
MULTIMEDIA
registrador
SIP
upenn.edu
proxy
SIP
umass.edu
cliente
SIP
217.123.56.89
cliente
SIP
197.87.54.21
registrador
SIP
eurcom.fr
Figura
7.15
Iniciaci√≥n
sesi√≥n
implica
proxies
registradores
SIP
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
612Por
ejemplo
considere
Figura
7.15
juan@umass.edu
actualmente
trabajando
217.123.56.89
desea
iniciar
sesi√≥n
oz
IP
oIP
katy@upenn.edu
momento
trabajando
197.87.54.21
pasos
llevan
cabo
siguientes
Juan
env√≠a
mensaje
INVITE
proxy
SIP
umass
proxy
realiza
b√∫squeda
DNS
registrador
SIP
upenn.edu
mostrado
diagrama
reenv√≠a
mensaje
servidor
registrador
Puesto
katy@upenn.edu
registrada
registrador
upenn
env√≠a
res-
puesta
redirecci√≥n
indica
deber√≠a
probar
katy@eurecom.fr
proxy
umass
env√≠a
mensaje
INVITE
registrador
SIP
eurecom
registrador
eurecom
conoce
direcci√≥n
IP
katy@eurecom.fr
reenv√≠a
mensaje
INVITE
host
197.87.54.21
ejecutando
cliente
SIP
Katy
6-8
devuelve
cliente
SIP
217.123.56.89
respuesta
SIP
registradores
proxies
datos
multi-
media
env√≠an
directamente
clientes
mensaje
recono-
cimiento
SIP
muestra
figura
exposici√≥n
acerca
SIP
centrado
proceso
iniciaci√≥n
llamada
caso
llamadas
voz
SIP
general
protocolo
se√±alizaci√≥n
inicio
terminaci√≥n
llamadas
utilizarse
videoconferencia
sesiones
basadas
texto
SIP
convertido
componente
fundamental
aplicaciones
mensajer√≠a
instant√°nea
Animamos
lectores
deseen
aprender
acerca
SIP
visitar
sitio
web
Henning
Schulzrinne
Schulzrinne-SIP
2009
particular
sitio
encontrar√°
software
c√≥digo
abierto
clientes
servi-
dores
SIP
SIP
Software
2009
7.4.4
H.323
alternativa
SIP
H.323
est√°ndar
popular
audio
videoconferencia
tiempo
real
sistemas
terminales
Internet
muestra
Figura
7.16
est√°ndar
cubre
sistemas
terminales
conectados
Internet
comunican
tel√©fonos
conectados
redes
telef√≥nicas
conmutaci√≥n
circuitos
SIP
canalizador
H.323
dispositivo
similar
registrador
SIP
est√°ndar
H.323
especificaci√≥n
paraguas
incluye
siguientes
especifica-
ciones
‚Ä¢U
ficaci√≥n
comunes
audio
v√≠deo
Puesto
H.323
soporta
serie
est√°ndares
codificaci√≥n
audio
v√≠deo
necesita
protocolo
permita
comunicaci√≥n
puntos
terminales
acordar
sistema
codificaci√≥n
com√∫n
‚Ä¢U
v√≠deo
red
particular
H.323
obliga
RTP
prop√≥sito
‚Ä¢U
puntos
terminales
comunican
respecti-
vos
canalizadores
‚Ä¢U
pasarela
tel√©fonos
ordinarios
red
p√∫blica
telefon√≠a
conmutada
m√≠nimo
punto
terminal
H.323
soportar
est√°ndar
compresi√≥n
voz
G.711
G.711
utiliza
PCM
generar
voz
digitalizada
56
64
kbps
H.323
7.4
PROTOCOLOS
APLICACIONES
INTERACTIVAS
TIEMPO
REAL
613
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
613requiere
puntos
terminales
permitan
voz
G.711
capacidades
v√≠deo
opcionales
soporte
v√≠deo
opcional
fabricantes
termi-
nales
vender
terminales
voz
simples
terminales
complejos
soporten
audio
v√≠deo
capacidades
v√≠deo
punto
terminal
H.323
opcionales
punto
terminal
soporta
v√≠deo
sopor-
tar
m√≠nimo
est√°ndar
v√≠deo
QCIF
H.261
176
/H11003144
p√≠xeles
H.323
est√°ndar
amplio
est√°ndares
protocolos
descritos
anteriormente
impone
protocolo
control
H.245
canal
se√±alizaci√≥n
Q.931
protocolo
RAS
registro
canalizador
Concluimos
secci√≥n
examinando
diferencias
importantes
H.323
SIP
‚Ä¢H
multimedia
se√±alizaci√≥n
registro
control
admisi√≥n
transporte
codecs
codificado-
res-decodificadores
‚Ä¢P
√∫nico
componente
SIP
funciona
RTP
obligatorio
Funciona
codecs
voz
G.711
codecs
v√≠deo
QCIF
H.261
obligatorios
combinar
protocolos
servicios
‚Ä¢H
conceptos
Web
DNS
correo
electr√≥nico
Internet
H.323
est√°ndar
paraguas
complejo
SIP
utiliza
principio
sen-
cillez
KISS
keep
it
simple
stupid
desea
excelente
exposici√≥n
acerca
H.323
SIP
oIP
general
consulte
Hersent
2000
614
CAP√çTULO
REDES
MULTIMEDIA
Internet
Puntos
terminales
H.323
Tel√©fonos
Canalizador
Pasarela
Red
telef√≥nica
Figura
7.16
Sistemas
terminales
H.323
conectados
Internet
comunicarse
tel√©fonos
conectados
red
telef√≥nica
circuitos
conmutados
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
6147.5
M√∫ltiples
clases
servicios
secciones
anteriores
visto
aplicaciones
multimedia
utilizar
n√∫meros
secuencia
marcas
tiempo
FEC
RTP
H.323
red
Internet
actual
redes
CDN
representan
soluci√≥n
global
sistema
distribuir
contenido
mul-
timedia
t√©cnicas
suficientes
soportar
aplicaciones
fiables
robustas
tales
servicio
telefon√≠a
IP
equivalente
red
telef√≥-
nica
actual
responder
pregunta
recordemos
red
Internet
actual
proporciona
servicio
entrega
esfuerzo
aplicaciones
promesa
relativa
calidad
servicio
recibir√°
aplicaci√≥n
aplicaci√≥n
recibir√°
nivel
rendimiento
ejemplo
p√©rdida
retardos
paque-
tes
terminal
terminal
red
capaz
proporcionar
momento
Recuerde
red
Internet
p√∫blica
actual
permite
aplicaciones
multimedia
sensi-
bles
retardo
soliciten
tratamiento
especial
paquetes
inclu-
yendo
paquetes
audio
v√≠deo
sensibles
retardo
tratados
forma
routers
calidad
llamada
tel√©fono
IP
activa
arruinarse
suficiente
tr√°fico
interfiera
congesti√≥n
red
aumentar
forma
notable
retardo
p√©rdidas
afectan
llamada
objetivo
proporcionar
modelo
servicio
ofrezca
servicio
esfuerzo
red
Internet
actual
vale
tipo
servicio
proporcionar
exactamente
modelo
servicio
simple
mejorado
con-
sistir√≠a
clasificar
tr√°fico
clases
proporcionar
niveles
servicio
distintas
clases
tr√°fico
ejemplo
ISP
desear
proporcionar
clase
ser-
vicio
tr√°fico
teleconferencia
voz
IP
sensibles
retardo
cobrar
servicio
tr√°fico
el√°stico
FTP
HTTP
familiari-
zados
distintas
clases
servicio
vida
cotidiana
pasajeros
clase
l√≠nea
a√©rea
obtienen
servicio
pasajeros
clase
business
obtienen
servicio
proporciona
pasajeros
clase
turista
personas
VIP
entrar
forma
inmediata
eventos
esperar
fila
pa√≠ses
personas
mayores
tremenda-
mente
respetadas
ofrece
asientos
honor
exquisito
alimentos
mesa
importante
observar
servicio
diferenciado
proporciona
agregados
tr√°fico
clases
tr√°fico
conexiones
individuales
ejemplo
pasajeros
clase
tratados
pasajero
clase
recibe
tratamiento
pasajero
clase
paquetes
oIP
recibir√°n
tratamiento
red
independientemente
conexi√≥n
terminal
terminal
concreta
pertenezcan
veremos
tratar
n√∫mero
peque√±o
agregados
tr√°fico
lugar
cantidad
conexiones
individuales
mecanismos
red
requeridos
proporcionar
servicio
entrega
efectivo
esfuerzo
relativamente
simples
Evidentemente
dise√±adores
Internet
ten√≠an
idea
m√∫ltiples
cla-
ses
servicios
mente
Recuerde
campo
Tipo
servicio
ToS
cabecera
IPv4
Figura
4.13
IEN123
ISI
1979
describe
campo
ToS
presente
antecesor
datagrama
IPv4
campo
Tipo
servicio
proporciona
indicaci√≥n
par√°metros
abstractos
calidad
servicio
deseado
par√°metros
emplean
guiar
selecci√≥n
par√°metros
servicio
transmitir
datagrama
7.5
M√öLTIPLES
CLASES
SERVICIOS
615
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
615a
red
concreta
redes
ofrecen
mecanismos
precedencia
servicio
tratan
tr√°fico
precedencia
alta
importante
resto
tr√°fico
d√©cadas
visi√≥n
proporcionar
niveles
servicio
niveles
tr√°fico
clara
llevado
tiempo
pr√°ctica
dicha
visi√≥n
Comenzaremos
estudio
Secci√≥n
7.5.1
considerando
escenarios
motivar√°n
necesidad
mecanismos
espec√≠ficos
den
soporte
m√∫ltiples
clases
ser-
vicio
continuaci√≥n
ocuparemos
temas
importantes
planificaci√≥n
nivel
enlace
vigilancia
clasificaci√≥n
paquetes
Secci√≥n
7.5.2
Secci√≥n
7.5.3
cubriremos
servicios
diferenciados
Diffserv
est√°ndar
actual
Internet
propor-
cionar
servicios
diferenciados
7.5.1
Escenarios
Figura
7.17
muestra
escenario
red
simple
Suponga
fluyen
paquetes
aplicaci√≥n
originados
hosts
H1
H2
LAN
destinados
hosts
H3
H4
LAN
routers
redes
LAN
conectados
enlace
1,5
Mbps
Suponemos
velocidades
redes
LAN
significativamente
altas
1,5
Mbps
fijarnos
cola
salida
router
R1
producir√°
retardo
p√©rdida
paquetes
velocidad
agregada
transmisi√≥n
H1
H2
excede
1,5
Mbps
Consideremos
escenarios
presen-
tar
necesidad
mecanismos
espec√≠ficos
soporte
m√∫ltiples
clases
servicios
Escenario
aplicaci√≥n
audio
Mbps
transferencia
FTP
escenario
ilustra
Figura
7.18
caso
aplicaci√≥n
audio
Mbps
ejemplo
llamada
audio
calidad
CD
comparte
enlace
1,5
Mbps
R1
R2
aplicaci√≥n
FTP
transfiriendo
archivo
H2
H4
616
CAP√çTULO
REDES
MULTIMEDIA
R1
Enlace
1,5
Mbps
Cola
interfaz
salida
R1
R2
H2
H1
H4
H3
Figura
7.17
red
simple
aplicaciones
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
616servicio
entrega
esfuerzo
Internet
paquetes
audio
FTP
mezclan
cola
salida
R1
normalmente
transmiten
siguiendo
orden
entrar
salir
FIFO
First-In-First-Out
escenario
r√°faga
paquetes
procedentes
origen
FTP
potencialmente
llenar
cola
paquetes
audio
IP
retardaran
excesivamente
perdieran
causa
desbordamiento
buffer
R1
resolver
potencial
problema
aplicaci√≥n
FTP
restricciones
tiempo
intuici√≥n
llevarnos
pensar
deber√≠a
proporcionarse
prioridad
estricta
paquetes
audio
R1
Aplicando
disci-
plina
planificaci√≥n
prioridad
estricta
paquete
audio
buf-
fer
salida
R1
deber√≠a
transmitirse
paquete
FTP
encuentre
buffer
enlace
R1
R2
enlace
dedi-
cado
1,5
Mbps
tr√°fico
audio
tr√°fico
FTP
emplear√≠a
enlace
hubiera
tr√°fico
audio
cola
R1
distinga
paquetes
audio
paquetes
FTP
cola
paquetes
marcarse
perteneciente
clases
tr√°fico
objetivo
original
campo
Tipo
servicio
ToS
IPv4
parecer
obvio
principio
b√°sico
fundamentan
mecanismos
necesarios
proporcionar
m√∫ltiples
clases
tr√°fico
Principio
marcado
paquetes
permite
router
diferenciar
paquetes
pertenecientes
distintas
clases
tr√°fico
Escenario
aplicaci√≥n
audio
Mbps
transferencia
FTP
prioridad
alta
escenario
ligeramente
escenario
Suponga
usuario
FTP
comprado
ISP
servicio
platinum
alto
precio
usuario
audio
adquirido
servicio
Internet
presupuesto
barato
cuyo
coste
min√∫scula
fracci√≥n
coste
servicio
platinum
caso
deber√≠a
darse
prioridad
paquetes
audio
usuario
adquirido
servicio
7.5
M√öLTIPLES
CLASES
SERVICIOS
617
R1
Enlace
1,5
Mbps
R2
H2
H1
H4
H3
Figura
7.18
Competencia
aplicaciones
audio
FTP
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
617barato
frente
paquetes
FTP
Posiblemente
caso
razonable
dife-
renciar
paquetes
bas√°ndose
direcci√≥n
IP
emisor
general
vemos
nece-
sario
routers
clasifiquen
paquetes
determinados
criterios
Teniendo
modificar
ligeramente
principio
Principio
modificado
clasificaci√≥n
paquetes
permite
routers
diferenciar
paquetes
pertenecen
distintas
clases
tr√°fico
marcado
expl√≠cito
paquetes
forma
permite
diferenciarlos
marca
transporta
paquete
implica
paquete
reci-
bir√°
determinada
calidad
servicio
marcado
simplemente
mecanismo
distinguir
paquetes
router
distingue
paquetes
trat√°ndolos
forma
decisi√≥n
vigilancia
Escenario
aplicaci√≥n
audio
comportamiento
transferencia
FTP
Suponga
usando
mecanismos
estudiaremos
siguien-
tes
secciones
router
prioridad
paquetes
procedentes
aplica-
ci√≥n
audio
Mbps
Puesto
velocidad
enlace
salida
1,5
Mbps
paquetes
FTP
tengan
prioridad
menor
recibir√°n
promedio
servicio
transmisi√≥n
0,5
Mbps
ocurre
aplicaci√≥n
audio
comienza
enviar
paquetes
velocidad
1,5
Mbps
superior
maliciosamente
error
aplicaci√≥n
caso
paquetes
FTP
recibir√°n
servicio
enlace
R1
R2
producirse
problemas
similares
aplicaciones
ejemplo
llamadas
audio
prioridad
tuvieran
compartir
ancho
banda
enlace
flujo
conforme
degradar
arruinar
rendi-
miento
restantes
flujos
Idealmente
deseable
grado
aislamiento
clases
tr√°fico
posiblemente
flujos
clase
tr√°fico
proteger
flujos
flujos
presentan
comportamiento
err√≥-
neo
concepto
proteger
flujos
individuales
determinada
clase
frente
contradice
observaci√≥n
acerca
paquetes
flujos
pertenecientes
clase
deber√≠an
tratados
pr√°ctica
paque-
tes
clase
tratados
routers
n√∫cleo
red
frontera
red
paquetes
determinado
flujo
moni-
torizados
garantizar
velocidad
agregada
flujo
individual
excede
valor
consideraciones
llevan
principio
Principio
deseable
proporcionar
grado
aislamiento
clases
tr√°-
fico
flujos
clase
flujo
vea
afectado
forma
adversa
comportamiento
err√≥neo
secci√≥n
examinar
mecanismos
espec√≠ficos
propor-
cionar
aislamiento
entres
clases
tr√°fico
flujos
Debemos
comentar
posi-
ble
adoptar
enfoques
lugar
muestra
Figura
7.19
vigilar
tr√°fico
clase
tr√°fico
flujo
satisfacer
criterios
ejemplo
flujo
audio
exceda
velocidad
pico
Mbps
618
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
618utilizarse
mecanismo
vigilancia
garantizar
criterios
obser-
vados
aplicaci√≥n
monitorizando
presenta
comportamiento
enton-
ces
mecanismo
vigilancia
llevar√°
cabo
acci√≥n
ejemplo
descartar
retardar
paquetes
violando
criterios
tr√°fico
realmente
red
cumpla
criterios
mecanismo
goteo
cubeta
p√©rdidas
examinaremos
secci√≥n
mecanismo
vigilancia
ampliamente
utilizado
Figura
7.19
mecanismo
clasificaci√≥n
marcado
paquetes
Princi-
pio
mecanismo
vigilancia
Principio
localizados
frontera
red
sistema
terminal
router
frontera
enfoque
alternativo
proporcionar
aislamiento
clases
tr√°fico
flujos
mecanismo
planificaci√≥n
paquetes
nivel
enlace
asigne
expl√≠citamente
cantidad
fija
ancho
banda
enlace
clase
flujo
ejemplo
flujo
audio
asign√°rsele
Mbps
R1
flujo
FTP
asignar
0,5
Mbps
caso
flujos
audio
FTP
ven
enlace
l√≥gico
capacidad
1,0
0,5
Mbps
respec-
tivamente
muestra
Figura
7.20
cumplimiento
estricto
asignaci√≥n
ancho
banda
nivel
enlace
clase
flujo
cantidad
ancho
banda
asignada
con-
creto
utilizar
ancho
banda
est√©
actualmente
empleado
ejemplo
flujo
audio
silencia
ejemplo
pausa
genera
paquetes
audio
flujo
FTP
seguir√°
transmitir
0,5
Mbps
enlace
R1
R2
asignaci√≥n
ancho
banda
Mbps
flujo
audio
est√©
utilizada
momento
de-
7.5
M√öLTIPLES
CLASES
SERVICIOS
619
R1
Enlace
1,5
Mbps
Vigilancia
marcado
paquetes
Medici√≥n
vigilancia
Marcas
R2
H2
H1
Clave
H4
H3
Figura
7.19
Vigilancia
marcado
flujos
tr√°fico
audio
FTP
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
619seable
utilizar
ancho
banda
forma
eficiente
permitiendo
clase
tr√°fico
flujo
utilizar
ancho
banda
utilizado
ins-
tante
consideraciones
llevan
tercer
principio
Principio
proporciona
aislamiento
clases
flujos
deseable
utilizar
recursos
ejemplo
ancho
banda
enlace
buffers
forma
eficiente
7.5.2
Mecanismos
planificaci√≥n
vigilancia
identificado
principios
fundamentan
mecanismos
nece-
sarios
proporcionar
distintas
clases
servicios
considerar
detalle
mecanismos
importantes
planificaci√≥n
vigilancia
Mecanismos
planificaci√≥n
Recuerde
Secciones
1.3
4.3
visto
paquetes
pertenecen
flujos
red
multiplexan
ponen
cola
transmisi√≥n
buffers
salida
asociados
enlace
forma
paquetes
puestos
cola
seleccio-
nados
transmisi√≥n
enlace
conoce
disciplina
planificaci√≥n
enlace
considerar
detalladamente
disciplinas
planifi-
caci√≥n
enlace
importantes
entrar-primero
salir
FIFO
Figura
7.21
muestra
abstracciones
modelo
cola
disciplina
planifica-
ci√≥n
enlace
FIFO
paquetes
llegan
cola
salida
enlace
esperan
transmitidos
enlace
actualmente
ocupado
transmitiendo
paquete
suficiente
espacio
buffer
almacenar
paquete
llegado
pol√≠tica
eliminaci√≥n
paquetes
cola
determina
paquete
eliminado
paquete
per-
dido
eliminados
paquetes
cola
espacio
paquete
reci√©n
620
CAP√çTULO
REDES
MULTIMEDIA
R1
Enlace
1,5
Mbps
Enlace
l√≥gico
1,0
Mbps
Enlace
l√≥gico
0,5
Mbps
R2
H2
H1
H4
H3
Figura
7.20
Aislamiento
l√≥gico
flujos
aplicaciones
audio
FTP
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
620llegado
exposici√≥n
ignorar
eliminaci√≥n
paquetes
paquete
transmite
completamente
enlace
salida
recibe
servicio
elimina
cola
disciplina
planificaci√≥n
FIFO
conocida
FCFS
First-Come-First-
Served
entrar
servido
selecciona
paquetes
transmi-
si√≥n
enlace
orden
llegado
cola
enlace
salida
familiarizados
colas
FIFO
gracias
paradas
autobuses
especialmente
Inglaterra
colas
parecen
perfeccionadas
centros
servicios
clientes
llegan
colocan
fila
permane-
ciendo
orden
servidos
medida
llegan
principio
fila
Figura
7.22
muestra
funcionamiento
cola
FIFO
llegada
paquetes
indicada
flechas
numeradas
l√≠nea
tiempo
superior
indi-
cando
n√∫mero
orden
llegado
paquete
salida
paquetes
muestra
l√≠nea
tiempo
inferior
instante
paquete
recibe
servicio
transmitido
indica
rect√°ngulo
som-
breado
situado
l√≠neas
tiempo
disciplina
FIFO
paquetes
salen
orden
llegaron
Observe
salida
paquete
enlace
permanece
inactivo
paquetes
transmitidos
eliminados
cola
llegada
paquete
Colas
prioridad
colas
prioridad
paquetes
llegan
enlace
salida
clasifican
clases
prioridad
cola
salida
muestra
Figura
7.23
visto
secci√≥n
clase
prioridad
paquete
depender
marca
expl√≠cita
7.5
M√öLTIPLES
CLASES
SERVICIOS
621
Llegadas
Salidas
Cola
√°rea
espera
Enlace
servidor
Figura
7.21
Abstracci√≥n
cola
FIFO
Tiempo
Llegadas
Salidas
Paquete
servicio
Tiempo
10
12
14
Figura
7.22
cola
FIFO
funcionamiento
10
12
14
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
621que
transporta
cabecera
ejemplo
valor
bits
ToS
paquete
IPv4
direcci√≥n
IP
origen
destino
n√∫mero
puerto
destino
criterio
Normal-
mente
clase
prioridad
cola
seleccionar
paquete
transmi-
si√≥n
disciplina
colas
prioridad
transmitir√°
paquete
clase
prioridad
alta
cola
vac√≠a
paquetes
transmitidos
elecci√≥n
paquetes
clase
prioridad
normalmente
realiza
aplicando
disciplina
FIFO
Figura
7.24
ilustra
funcionamiento
cola
clases
prioridad
paquetes
pertenecen
clase
prioridad
alta
paquetes
pertenecen
clase
prioridad
baja
paquete
llega
enlace
inactivo
inicia
transmisi√≥n
transmisi√≥n
paquete
llegan
paquetes
colocan
respectivamente
colas
baja
alta
prioridad
transmi-
si√≥n
paquete
selecciona
paquete
paquete
prioridad
alta
trans-
misi√≥n
paquete
llegado
paquete
baja
prioridad
terminar
transmisi√≥n
paquete
inicia
transmisi√≥n
paquete
paquete
paquete
prioridad
alta
llega
transmisi√≥n
paquete
paquete
prioridad
baja
disciplina
colas
prioridad
expropiativa
transmisi√≥n
paquete
interrumpe
comenzado
caso
paquete
pone
cola
transmitido
comienza
enviado
transmisi√≥n
paquete
completada
622
CAP√çTULO
REDES
MULTIMEDIA
Llegadas
Salidas
Cola
baja
prioridad
√°rea
espera
Clasificaci√≥n
Cola
alta
prioridad
√°rea
espera
Enlace
servidor
Figura
7.23
Modelo
colas
prioridad
Llegadas
Salidas
Paquete
servicio
23
45
23
45
45
Tiempo
Tiempo
10
12
14
Figura
7.24
Funcionamiento
cola
prioridad
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
622Colas
turno
rotatorio
colas
equitativas
ponderadas
WFQ
disciplina
colas
turno
rotatorio
round
robin
paquetes
clasifican
cla-
ses
colas
prioridad
lugar
existir
servicio
prioridad
estricta
clases
planificador
turno
rotatorio
alterna
servicio
cla-
ses
forma
simple
planificaci√≥n
turno
rotatorio
transmite
paquete
clase
seguido
paquete
clase
seguido
paquete
clase
seguido
paquete
clase
sucesivamente
disciplina
colas
conservadora
permi-
tir√°
enlace
permanezca
inactivo
paquetes
clase
espe-
rando
transmitidos
disciplina
colas
turno
rotatorio
conservadora
busca
paquete
determinada
clase
comprueba
inmediatamente
clase
secuencia
turno
rotatorio
Figura
7.25
ilustra
funcionamiento
cola
turno
rotatorio
cla-
ses
ejemplo
paquetes
pertenecen
clase
paquetes
pertenecen
clase
paquete
comienza
transmitido
forma
inmediata
llegar
cola
salida
paquetes
llegan
transmi-
tiendo
paquete
ponerse
cola
transmitidos
paquete
transmitido
planificador
enlace
busca
paquete
clase
transmite
paquete
transmitir
paquete
planificador
busca
paquete
clase
transmite
paquete
transmitido
paquete
queda
cola
paquete
transmitido
inmediatamente
paquete
abstracci√≥n
generalizada
colas
turno
rotatorio
encontrado
con-
siderable
arquitecturas
QoS
denominada
disciplina
cola
equitativa
pon-
derada
WFQ
Weighted
Fair
Queuing
Demers
1990
Parekh
1993
Figura
7.26
ilustran
colas
WFQ
paquetes
llegan
clasifican
ponen
cola
√°rea
espera
clase
apropiada
planificaci√≥n
turno
rotatorio
planifica-
dor
WFQ
dar√°
servicio
clases
siguiendo
orden
circular
dar√°
servicio
clase
clase
clase
suponiendo
clases
repetir√°
patr√≥n
servicio
WFQ
disciplina
cola
conservadora
pasar√°
inmediatamente
clase
indicada
secuencia
servicio
encuentre
clase
cola
vac√≠a
WFQ
diferencia
mecanismo
turno
rotatorio
clase
recibir
cantidad
servicio
intervalo
tiempo
Espec√≠ficamente
clase
asigna
peso
wi
WFQ
intervalo
tiempo
existan
paquetes
clase
enviar
garantiza
clase
recibir√°
fracci√≥n
7.5
M√öLTIPLES
CLASES
SERVICIOS
623
Llegadas
Paquete
servicio
23
45
23
45
45
Salidas
Tiempo
Tiempo
10
12
14
Figura
7.25
Funcionamiento
cola
turno
rotatorio
clases
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
623servicio
wi/(‚àëwj
sumatorio
denominador
calcula
cla-
ses
tengan
paquetes
transmitidos
caso
clases
tengan
paquetes
cola
contin√∫a
estando
garantizado
clase
recibir√°
frac-
ci√≥n
wi/(‚àëwj
ancho
banda
caso
enlace
velocidad
transmisi√≥n
clase
alcanzar√°
tasa
transferencia
wi/(‚àëwj
descripci√≥n
colas
WFQ
proporcionado
corresponde
caso
ideal
considerado
paquetes
unidades
discretas
datos
transmisi√≥n
paquete
interrumpida
inicio
transmisi√≥n
paquete
Demers
1990
Parekh
1993
analiza
problema
veremos
siguientes
secciones
WFQ
desempe√±a
papel
fundamental
arquitecturas
QoS.
disponible
routers
actuales
Cisco
QoS
2009
Vigilancia
cubeta
p√©rdidas
principios
establecimos
Secci√≥n
7.5.1
vigilancia
regulaci√≥n
velocidad
clase
flujo
inyectar
paquetes
red
exposici√≥n
supondremos
unidad
vigilancia
flujo
vigi-
lancia
mecanismo
QoS
importante
aspectos
tasa
paquetes
flujo
deber√≠an
vigilados
identificar
importantes
criterios
vigilancia
escala
tiempo
vigilancia
flujo
paquetes
Tasa
promedio
red
querer
limitar
tasa
promedio
plazo
paquetes
intervalo
tiempo
paquetes
flujo
enviados
red
problema
crucial
caso
intervalo
tiempo
vigilar√°
tasa
promedio
flujo
cuya
tasa
promedio
est√©
limitada
100
paquetes
restringido
origen
limitado
6.000
paquetes
minuto
tengan
tasa
promedio
intervalo
tiempo
suficientemente
ejemplo
restricci√≥n
permitir√≠a
flujo
enviar
1.000
paquetes
determinado
intervalo
tiempo
restricci√≥n
impedir√≠a
comportamiento
env√≠os
Tasa
pico
restricci√≥n
tasa
promedio
limita
cantidad
tr√°fico
enviado
red
periodo
tiempo
relativamente
restric-
624
CAP√çTULO
REDES
MULTIMEDIA
Clasificar
llegadas
Salidas
w1
w2
w3
Enlace
Figura
7.26
Colas
equitativas
ponderadas
WFQ
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
624ci√≥n
tasa
pico
limita
n√∫mero
m√°ximo
paquetes
enviados
periodo
tiempo
corto
Siguiendo
ejemplo
red
vigilar
flujo
tasa
promedio
6.000
paquetes
minuto
limita
tasa
pico
flujo
1.500
paquetes
Tama√±o
r√°faga
red
desear
limitar
n√∫mero
m√°ximo
paque-
tes
r√°faga
paquetes
enviados
red
intervalo
tiempo
extremadamente
corto
l√≠mite
longitud
intervalo
tiende
cero
tama√±o
r√°faga
limita
n√∫mero
paquetes
enviados
red
forma
instant√°nea
f√≠sicamente
imposible
enviar
instant√°neamente
paquetes
red
enlaces
velocidad
transmi-
si√≥n
f√≠sica
excederse
abstracci√≥n
tama√±o
m√°ximo
r√°faga
√∫til
mecanismo
goteo
cubeta
p√©rdidas
abstracci√≥n
utili-
zarse
caracterizar
l√≠mites
vigilancia
muestra
Figura
7.27
cubeta
p√©rdidas
cubeta
almacenar
fichas
fichas
a√±adiendo
cubeta
forma
fichas
potencialmente
a√±adirse
cubeta
generan
velocidad
fichas
sim-
plificar
supondremos
unidad
tiempo
caso
cubeta
con-
fichas
genera
ficha
ficha
acaba
generar
a√±ade
cubeta
caso
contrario
dicha
ficha
reci√©n
generada
ignora
cubeta
conteniendo
fichas
Veamos
utilizar
cubeta
p√©rdidas
vigilar
monitori-
zar
flujo
paquetes
Supongamos
transmitir
paquete
red
necesa-
rio
eliminar
ficha
cubeta
caso
cubeta
vac√≠a
paquete
esperar
ficha
alternativa
eliminar
paquete
opci√≥n
considerarla
Consideremos
comportamiento
controla
flujo
tr√°fico
Puesto
m√°ximo
fichas
cubeta
tama√±o
m√°ximo
r√°faga
flujo
controlado
cubeta
p√©rdidas
fichas
7.5
M√öLTIPLES
CLASES
SERVICIOS
625
red
Paquetes
Eliminar
ficha
√Årea
espera
ficha
cubeta
contiene
fichas
fichas
Figura
7.27
controlador
cubeta
p√©rdidas
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
625Adem√°s
velocidad
generaci√≥n
fichas
n√∫mero
m√°ximo
paquetes
entrar
red
intervalo
tiempo
longitud
rt
b.
tasa
generaci√≥n
fichas
sirve
limitar
tasa
promedio
plazo
paquetes
acceder
red
utilizarse
cubetas
p√©r-
didas
concreto
cubetas
tipo
serie
controlar
tasa
pico
flujo
tasa
promedio
plazo
consulte
problemas
repaso
incluidos
cap√≠tulo
Cubeta
p√©rdidas
cola
WFQ
retardo
m√°ximo
probable
cola
examinar
m√©todos
Intserv
Diffserv
permiten
proporcionar
cali-
dad
servicio
Internet
Veremos
vigilancia
cubetas
p√©rdidas
planificaci√≥n
WFQ
desempe√±ar
papel
importante
continuaci√≥n
con-
cluiremos
secci√≥n
considerando
enlace
salida
router
multiplexa
flujos
estando
controlado
cubeta
p√©rdidas
cuyos
par√°metros
bi
ri
utilizando
disciplina
planificaci√≥n
WFQ
emplear
t√©rmino
flujo
referencia
conjunto
paquetes
planificador
distingue
pr√°ctica
flujo
comprender
tr√°fico
procedente
√∫nica
conexi√≥n
terminal
terminal
colecci√≥n
conexiones
tipo
v√©ase
Figura
7.28
Recuerde
disciplina
WFQ
garantiza
flujo
reciba
cuota
ancho
banda
enlace
m√≠nimo
wi/(‚àëwj
velocidad
transmisi√≥n
enlace
paquetes
caso
retardo
m√°ximo
experimentar√°
paquete
espera
recibir
servicio
cola
WFQ
atravesar
cubeta
p√©rdidas
centrarnos
flujo
Supongamos
cubeta
flujo
inicialmente
llena
llega
r√°faga
b1
paquetes
contro-
lador
cubeta
flujo
paquetes
extraer√°n
fichas
esperar
cubeta
pasar√°n
√°rea
espera
WFQ
correspondiente
flujo
Puesto
b1
paquetes
reciben
servicio
tasa
m√≠nimo
wi
/(‚àëwj
paquetes
626
CAP√çTULO
REDES
MULTIMEDIA
b1
r1
w1
wn
bn
rn
Figura
7.28
flujos
multiplexados
cubetas
p√©rdidas
planificaci√≥n
WFQ
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
626√∫ltimo
paquetes
sufrir√°
retardo
m√°ximo
dm√°x
complete
transmi-
si√≥n
fundamentaci√≥n
basa
f√≥rmula
b1
paquetes
cola
dando
servicio
eliminando
cola
tasa
m√≠nimo
w1/
‚àëwj
paquetes
cantidad
tiempo
transcurrido
bit
paquete
transmitido
b1/(R
w1/(‚àëwj
problemas
repaso
pide
demuestre
r1
w1/(‚àëwj
dm√°x
retardo
m√°ximo
paquete
flujo
experimentar√°
cola
WFQ
7.5.3
Diffserv
objetivo
arquitectura
Diffserv
Internet
RFC
2475
Kilkki
1999
propor-
cionar
diferenciaci√≥n
servicio
capacidad
manejar
clases
tr√°fico
formas
distintas
Internet
escalable
fle-
xible
necesidad
escalabilidad
surge
existir
centenares
miles
flujos
simult√°neos
tr√°fico
origen-destino
router
troncal
Internet
Vere-
mos
continuaci√≥n
necesidad
cubre
incluyendo
simple
funciona-
lidad
n√∫cleo
red
operaciones
control
complejas
implementadas
frontera
red
necesidad
flexibilidad
sur-
gir
clases
servicio
quedar
obsoletas
clases
servicio
antiguas
arquitectura
Diffserv
flexible
sentido
define
servicios
clases
servi-
cios
espec√≠ficos
lugar
Diffserv
proporciona
componentes
funcionales
piezas
arquitectura
red
construirse
tales
servicios
Exami-
nemos
componentes
detalle
Servicios
diferenciados
escenario
simple
establecer
marco
trabajo
definir
componentes
arquitect√≥nicos
modelo
servicios
diferenciados
Diffserv
comenzaremos
sencilla
red
mostrada
Figura
7.29
secci√≥n
describir
componentes
Diffserv
describe
documento
RFC
2475
posibles
variantes
objetivo
proporcionar
introducci√≥n
aspectos
clave
Diffserv
lugar
describir
modelo
arquitect√≥nico
forma
exhaustiva
Aninamos
lectores
interesados
aprender
cosas
acerca
Diffserv
consultar
libro
Kilkki
1999
arquitectura
servicios
diferenciados
consta
conjuntos
elementos
fun-
cionales
Funciones
frontera
clasificaci√≥n
paquetes
acondicionamiento
tr√°fico
frontera
entrada
red
host
soporte
modelo
Dif
fserv
genere
tr√°fico
router
compatible
Dif
fserv
pase
tr√°fico
marcan
paquetes
llegan
espec√≠ficamente
asigna
valor
campo
servicio
diferenciado
DS
Differentiated
Service
cabecera
paquete
ejemplo
Figura
7.29
paquetes
transmitidos
H1
H3
marcarse
R1
paquetes
env√≠an
H2
H4
pue-
wwm√°x
7.5
M√öLTIPLES
CLASES
SERVICIOS
627
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
627den
marcarse
R2
marca
recibe
paquete
identifica
clase
tr√°fico
pertenece
distintas
clases
tr√°fico
recibir√°n
servicio
red
principal
Funci√≥n
n√∫cleo
reenv√≠o
paquete
marcado
DS
llega
router
DS
paquete
reenviado
salto
comportamiento
salto
asociado
dicha
clase
paquete
comportamiento
salto
influye
clases
tr√°fico
competencia
comparten
bufferes
router
ancho
banda
enlace
principio
fundamental
arquitectura
Diffserv
comporta-
miento
salto
router
basar√°
√∫nicamente
marcas
paquetes
clase
tr√°fico
pertenece
paquete
paquetes
enviando
H1
H3
Figura
7.29
reciben
marca
paquetes
enviados
H2
H4
routers
red
tratan
paque-
tes
agregados
distinguir
paquetes
originados
H1
H2
ejemplo
R3
diferenciar√°
paquetes
H1
H2
reenviarlos
R4
arquitectura
servicios
diferenciados
obvia
necesidad
controlar
router
pareja
individual
origen-destino
consideraci√≥n
impor-
tante
cumplir
requisito
escalabilidad
comentado
principio
secci√≥n
momento
resultarnos
√∫til
comentar
analog√≠a
actos
socia-
escala
ejemplo
importante
recepci√≥n
p√∫blica
sala
baile
dis-
coteca
concierto
partido
f√∫tbol
personas
asisten
acto
reciben
distintos
tipos
entradas
pases
personalidades
reciben
entradas
VIP
mayores
18
a√±os
disponen
entradas
adulto
ejemplo
caso
vayan
servir
bebidas
alcoh√≥licas
pases
bastidores
conciertos
pases
prensa
periodistas
pase
ordinario
personas
normales
Normalmente
diversos
tipos
entradas
pases
distribuyen
entrada
acto
frontera
628
CAP√çTULO
REDES
MULTIMEDIA
R4
Router
hoja
Clave
Router
n√∫cleo
R2
R1
R6
R7
R3
R5
H1
H2
H4
H3
R2
R2
Figura
7.29
ejemplo
red
Diffserv
simple
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
628que
paso
acto
precisamente
frontera
llevan
cabo
operaciones
inten-
sivas
computaci√≥n
tales
abonar
entrada
comprobar
tipo
invitaci√≥n
apropiado
comprobar
invitaci√≥n
corresponde
tipo
identifica-
ci√≥n
existir
l√≠mite
relativo
n√∫mero
personas
determinado
tipo
asistir
acto
l√≠mite
gente
esperar
entrar
acto
accedido
acto
pase
permite
persona
reciba
servicio
diferenciado
distintas
zonas
lugar
acto
ejem-
plo
VIP
obtener
bebidas
gratis
mesa
comida
gratuita
acceso
salas
exclusivas
servicio
atenciones
contrario
persona
normal
queda
excluida
determinadas
√°reas
abonar
bebidas
recibir√°
servicio
b√°sico
casos
servicio
recibido
acto
depende
√∫nicamente
tipo
pase
disponga
persona
personas
pertenecientes
clase
tra-
tadas
forma
Clasificaci√≥n
acondicionamiento
tr√°fico
Diffserv
Figura
7.30
proporciona
visi√≥n
l√≥gica
funciones
clasificaci√≥n
marcado
router
frontera
lugar
paquetes
llegan
router
frontera
clasifi-
can
clasificador
selecciona
paquetes
bas√°ndose
valores
campos
cabecera
paquete
ejemplo
direcci√≥n
origen
direcci√≥n
destino
puerto
origen
puerto
destino
ID
protocolo
dirige
paquete
funci√≥n
marcado
apropiada
marca
paquete
transporta
campo
DS
RFC
3260
cabecera
paquete
IPv4
IPv6
definici√≥n
campo
DS
pretende
sustituir
defi-
niciones
anteriores
campo
Tipo
servicio
IPv4
campos
clase
tr√°fico
IPv6
explicaron
Cap√≠tulo
casos
usuario
limitar
velocidad
transmisi√≥n
paquetes
cumplir
perfil
declarado
tr√°fico
perfil
tr√°fico
contener
l√≠mite
tasa
pico
tama√±o
r√°faga
flujo
paquetes
visto
anteriormente
mecanismo
cubeta
p√©r-
didas
medida
usuario
env√≠a
paquetes
red
cumpliendo
perfil
tr√°fico
nego-
ciado
paquetes
reciben
marca
prioridad
reenviados
ruta
7.5
M√öLTIPLES
CLASES
SERVICIOS
629
Paquetes
Reenviar
Clasificador
Marcador
Eliminar
Conformador/
Eliminador
Medidor
Figura
7.30
Visi√≥n
l√≥gica
funciones
clasificaci√≥n
paquetes
acondicionamiento
tr√°fico
router
terminal
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
629alcanzar
destino
contrario
viola
perfil
tr√°fico
paquetes
cum-
plen
l√≠mites
impuestos
perfil
marcarse
forma
confor-
marse
ejemplo
retardados
observe
restricci√≥n
tasa
m√°xima
eliminados
frontera
red
papel
funci√≥n
medida
mostrada
Figura
7.30
comparar
flujo
paquetes
entrantes
perfil
tr√°fico
negociado
determinar
paquete
cumple
perfil
negociado
decisi√≥n
real
acerca
volver
marcar
forma
inmediata
reenviar
retardar
eliminar
paquete
pol√≠tica
establecer
administrador
red
espec√≠fica
arquitectura
Diffserv
Comportamientos
salto
momento
centrado
funciones
frontera
arquitectura
Diff-
serv
componente
clave
arquitectura
servicios
diferenciados
comportamiento
salto
PHB
Per-Hop
Behavior
routers
Diffserv
PHB
define
cr√≠ptica
descripci√≥n
comportamiento
reenv√≠o
observable
externamente
nodo
Diffserv
aplicado
agregado
comportamiento
Diffserv
particular
RFC
2475
Profundizando
definici√≥n
contiene
consideraciones
importantes
‚Ä¢U
comportamientos
reenv√≠o
observables
externamente
‚Ä¢A
obliga
mecanismo
concreto
comportamientos
cumplan
criterios
rendimiento
observables
externamente
aplicarse
mecanismo
implementaci√≥n
pol√≠tica
asigna-
ci√≥n
buffer
ancho
banda
ejemplo
PHB
requiere
emplee
disci-
plina
colas
paquetes
concreta
ejemplo
cola
prioridad
cola
WFQ
cola
FCFS
determinado
comportamiento
PHB
asig-
naci√≥n
recursos
mecanismos
implementaci√≥n
medios
‚Ä¢L
Actualmente
definidos
PHB
PHB
reenv√≠o
expedito
EF
Expedited
For-
warding
RFC
3246
PHB
reenv√≠o
garantizado
AF
Assured
Forwarding
RFC
2597
‚Ä¢E
reenv√≠o
expedito(EF
especifica
tasa
salida
clase
tr√°fico
router
tasa
configurada
cual-
quier
intervalo
tiempo
clase
tr√°fico
garantiza
recibir√°
suficiente
ancho
banda
tasa
salida
tr√°fico
tasa
m√≠nima
configurada
Observe
comportamiento
salto
EF
implica
forma
aislamiento
clases
tr√°fico
garant√≠a
implementa
indepen-
dientemente
intensidad
tr√°fico
clase
est√©
llegando
rou-
ter
restantes
clases
tr√°fico
est√©n
inundando
router
recursos
enlace
recursos
continuar
estando
dispo-
nibles
clase
garantizar
recibe
garant√≠a
tasa
m√≠nima
EF
proporciona
clase
simple
abstracci√≥n
enlace
ancho
banda
m√≠nimo
garantizado
630
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
630‚Ä¢E
reenv√≠o
garantizado(AF
complejo
reenv√≠o
garantizado
divide
tr√°fico
clases
clases
garantiza
recibir√°
can-
tidad
m√≠nima
ancho
banda
buffer
clase
paquetes
vuelven
clasificarse
categor√≠as
preferencia
eliminaci√≥n
clase
AF
produce
congesti√≥n
router
descartar
eliminar
paquetes
bas√°ndose
valores
preferencia
eliminaci√≥n
desea
detalles
consulte
RFC
2597
Variando
cantidad
recursos
asignados
clase
ISP
pro-
porcionar
niveles
rendimiento
distintas
clases
tr√°fico
AF
Retrospectiva
servicios
diferenciados
20
a√±os
numerosos
intentos
mayor√≠a
√©xito
introducir
calidad
servicio
QoS
redes
conmutaci√≥n
paquetes
dis-
tintos
intentos
fallado
razones
econ√≥micas
legado
cuestiones
t√©c-
nicas
intentos
incluyen
redes
ATM
terminal
terminal
redes
TCP
IP
Veamos
brevemente
problemas
contexto
servicios
diferenciados
cua-
estudiaremos
secci√≥n
momento
impl√≠citamente
Diffserv
implanta
dominio
administrativo
caso
t√≠pico
servicio
terminal
terminal
establecido
ISP
encuentran
sistemas
ter-
minales
comunicaci√≥n
proporcionar
servicio
diferenciado
terminal
terminal
ISP
existentes
sistemas
terminales
proporcionar
servicio
cooperar
establecer
acuerdos
ofrecer
usuario
servicio
terminal
terminal
clase
cooperaci√≥n
ISP
venden
directamente
servicio
diferenciado
clientes
tendr√≠an
continua-
mente
pagado
extra
servicio
ISP
nivel
superior
Sentimos
hayan
producido
hue-
cos
llamada
oIP
dominio
administrativo
Diffserv
sufi-
ciente
proporcionar
garant√≠as
calidad
servicio
clase
servicio
concreta
Diffserv
permite
clases
tr√°fico
reciban
distintos
niveles
rendi-
miento
red
extremadamente
infradimensionada
tr√°fico
prioridad
alta
recibir
rendimiento
inaceptable
efectivos
servicios
diferenciados
combinarse
dimensionado
apropiado
red
v√©ase
Secci√≥n
7.3.5
obstante
servicios
diferenciados
sacar
partido
inver-
si√≥n
ISP
capacidad
red
recursos
est√©n
disponibles
clases
tr√°fico
prioridad
alta
pagan
necesiten
expensas
clases
tr√°fico
prioridad
inferior
ISP
proporcionar
nivel
alto
rendi-
miento
clases
prioridad
alta
clases
prioridad
alta
necesitan
recursos
utilizarlos
clases
tr√°fico
prioridad
inferior
presumiblemente
habr√°n
pagado
clase
servicio
problema
servicios
avanzados
necesidad
vigilar
posiblemente
conformar
tr√°fico
resultar
complejo
costoso
necesario
factu-
rar
servicios
probablemente
volumen
lugar
actualmente
mayor√≠a
ISP
cobran
tarifa
mensual
fija
requisito
costoso
ISP
servicios
diferenciados
estuvieran
realmente
imple-
mentados
red
operara
carga
moderada
tiempo
per-
7.5
M√öLTIPLES
CLASES
SERVICIOS
631
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
631cibir√≠a
diferencia
servicio
esfuerzo
servicio
diferenciado
actualmente
retardo
terminal
terminal
normalmente
controla
velocidades
acceso
saltos
router
lugar
retardos
cola
routers
Imagine
infeliz
cliente
servicio
diferenciado
pagado
servicio
premium
descubrir
servicio
esfuerzo
proporcionando
clientes
rendimiento
servicio
premium
7.6
Garant√≠as
calidad
servicio
secci√≥n
visto
marcado
vigilancia
paquetes
aislamiento
tr√°fico
planificaci√≥n
nivel
enlace
proporcionar
clase
servicio
rendimiento
disciplinas
planificaci√≥n
planifica-
ci√≥n
prioridad
clases
tr√°fico
inferiores
pr√°cticamente
invisibles
clase
tr√°fico
prioridad
alta
dimensionamiento
apropiado
red
clase
servicio
alta
prioridad
tasas
p√©rdida
paquetes
retardos
extremadamente
bajos
rendimiento
esencialmente
id√©ntico
redes
conmutaci√≥n
circuitos
red
garantizar
flujo
activo
perte-
neciente
clase
tr√°fico
alta
prioridad
continuar√°
recibiendo
servicio
mien-
dure
flujo
utilizando
√∫nicamente
mecanismos
descrito
momento
realidad
secci√≥n
veremos
falta
mecanismos
red
protocolos
adicionales
proporcionar
garant√≠as
calidad
servicio
7.6.1
Ejemplo
explicativo
Vo
audio
Mbps
transmiten
paquetes
enlace
1,5
Mbps
mues-
tra
Figura
7.31
velocidad
combinada
datos
flujos
Mbps
excede
capacidad
enlace
utilizando
mecanismos
clasificaci√≥n
marcado
ais-
lamiento
flujos
compartici√≥n
ancho
banda
utilizado
realidad
cero
obvio
alcanzar
objetivo
Simplemente
suficiente
ancho
banda
satisfacer
necesidades
ambas
aplicaciones
tiempo
aplicaciones
comparten
equitativamente
ancho
banda
emplear
0,75
Mbps
Examinando
cosas
punto
vista
aplicaci√≥n
perder√≠a
25
ciento
paquetes
transmitidos
calidad
servicio
inaceptablemente
baja
ambas
aplicaciones
audio
completamente
inutilizables
siquiera
merece
pena
transmitir
paquete
audio
satisfacer
simult√°neamente
aplicaciones
Figura
7.31
deber√≠a
red
Permitir
ambas
contin√∫en
QoS
inaceptable
implica
desperdiciar
recursos
red
serie
flujos
aplicaci√≥n
extremo
utilidad
usuario
respuesta
simple
bloquear
flujos
aplicaci√≥n
denegarle
acceso
red
permite
continuar
utilizando
Mbps
completo
aplicaci√≥n
necesita
red
telef√≥nica
ejemplo
red
efect√∫a
tipo
bloqueo
llamadas
asignar
llamada
recursos
requeridos
circuito
termi-
nal
terminal
caso
red
telef√≥nica
bloquea
llamada
impide
cursarse
red
devuelve
se√±al
ocupado
usuario
ejemplo
632
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
632gana
permitiendo
flujo
red
recibir
QoS
suficiente
considerarlo
utilizable
coste
asociado
admisi√≥n
flujo
recibir
QoS
necesaria
estar√°n
empleando
recursos
red
soporte
flujo
utilidad
usuario
Admitiendo
bloqueando
expl√≠citamente
flujos
bas√°ndose
requisitos
recursos
requisitos
flujos
admitidos
red
garantizar
flujos
admitidos
recibir
QoS
solicitada
necesidad
proporcionar
QoS
garantizada
flujo
impl√≠cita
necesidad
flujo
declare
requisi-
tos
QoS.
proceso
flujo
declare
requisitos
QoS
red
acepte
flujo
QoS
requerida
bloquee
denomina
proceso
admisi√≥n
llamada
cuarto
principios
fundamentales
hablado
Secci√≥n
7.5.1
mecanismos
necesarios
proporcionar
calidad
servicio
QoS
Principio
recursos
suficientes
disponibles
necesa-
rio
garantizar
calidad
servicio
necesita
proceso
admisi√≥n
llamadas
flujos
declaren
requisitos
QoS
admita
red
QoS
requerida
bloquee
red
proporcionar
QoS
requerida
7.6.2
Reserva
recursos
admisi√≥n
llamadas
establecimiento
llamadas
ejemplo
introductorio
resalta
necesidad
diversos
mecanismos
proto-
colos
red
caso
garantizar
llamada
flujo
terminal
terminal
determinada
calidad
servicio
llamada
establecido
Reserva
recursos
√∫nica
forma
garantizar
llamada
dispondr√°
recursos
ancho
banda
enlace
buffers
necesarios
obtener
calidad
servi-
cio
deseada
consiste
asignar
expl√≠citamente
dichos
recursos
llamada
pro-
ceso
conoce
jerga
mundo
redes
nombre
reserva
recursos
reservados
recursos
llamada
dure
acceder
7.6
GARANT√çAS
CALIDAD
SERVICIO
633
R1
Enlace
1,5
Mbps
Audio
Mbps
Audio
Mbps
R2
H2
H1
H4
H3
Figura
7.31
aplicaciones
audio
competidoras
sobrecargan
enlace
R1a
R2
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
633demanda
dichos
recursos
independientemente
demandas
restantes
llamadas
llamada
reserva
recibe
garant√≠a
Mbps
ancho
banda
enlace
transmite
velocidad
superior
disfrutar
comunica-
ciones
p√©rdidas
retardos
Admisi√≥n
llamadas
reservar
recursos
red
disponer
mecanismo
llamadas
puedan
solicitar
reservar
recursos
pro-
ceso
conoce
nombre
proceso
admisi√≥n
llamadas
recur-
sos
infinitos
llamada
realiza
solicitud
admisi√≥n
llamada
admisi√≥n
denegada
llamada
bloqueada
disponibles
recursos
solicitados
tipo
admisi√≥n
llamadas
redes
telef√≥nicas
solicitamos
recursos
momento
marcar
n√∫mero
disponibles
circuitos
particiones
TDMA
necesarios
completar
lla-
mada
asignar√°n
circuitos
llamada
completarse
circuitos
disponibles
bloquear√°
llamada
recibiremos
se√±al
ocupado
llamada
bloqueada
volver
intentar
admitan
red
permi-
tir√°
enviar
tr√°fico
red
completado
proceso
admisi√≥n
lla-
mada
gestor
restaurante
Secci√≥n
1.3.1
deber√≠a
aceptar
reservas
mesas
restaurante
router
realiza
asignacio-
nes
ancho
banda
enlace
asignar
ancho
banda
est√©
dis-
ponible
enlace
Normalmente
llamada
reservar
fracci√≥n
ancho
banda
enlace
router
asignar
ancho
banda
enlace
llamada
suma
ancho
banda
asignado
lla-
madas
inferior
capacidad
enlace
Se√±alizaci√≥n
establecimiento
llamada
proceso
admisi√≥n
llamadas
des-
crito
requiere
llamadas
capaces
reservar
recursos
suficien-
tes
routers
formen
ruta
origen
destino
asegurarse
satisfacer
requisitos
QoS
terminal
terminal
router
deber√°
determinar
recursos
locales
requeridos
sesi√≥n
canti-
dad
recursos
comprometidos
sesiones
activas
determinar
dispone
suficientes
recursos
satisfacer
requisitos
QoS
salto
sesi√≥n
router
violar
garant√≠as
QoS
locales
hayan
concedido
sesiones
admitidas
falta
protocolo
se√±alizaci√≥n
coordinar
diversas
actividades
asignaci√≥n
recursos
locales
salto
decisi√≥n
global
terminal
terminal
llamada
capaz
reservar
recursos
suficientes
routers
ruta
terminal
terminal
trabajo
protocolo
establecimiento
llamada
Figura
7.32
describe
proceso
establecimiento
llamada
Consideremos
detalle
pasos
implicados
proceso
admisi√≥n
llamada
Caracterizaci√≥n
tr√°fico
especificaci√≥n
calidad
servicio
deseada
router
determinar
recursos
suficientes
satisfacer
requi-
sitos
QoS
llamada
dicha
llamada
declarar
lugar
requisitos
QoS
caracterizar
tr√°fico
enviar
red
solici-
tando
garant√≠a
QoS.
arquitectura
Intserv
Internet
especificaci√≥n
Rspec
letra
referencia
t√©rmino
reserva
RFC
2215
define
QoS
634
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
634espec√≠fica
llamada
solicitando
especificaci√≥n
denomina
Tspec
letra
referencia
t√©rmino
tr√°fico
RFC
2210
caracteriza
tr√°fico
emisor
enviar
red
receptor
recibir
red
respectivamente
forma
espec√≠fica
Rspec
Tspec
variar√°
dependiendo
servicio
solicitado
explica
redes
ATM
elementos
informaci√≥n
referentes
descripci√≥n
tr√°fico
usuario
par√°metro
QoS
transportan
informaci√≥n
pro-
p√≥sitos
similares
especificaciones
Tspec
Rspec
respectivamente
Se√±alizaci√≥n
establecimiento
llamada
necesario
transportar
rou-
ters
reservar
recursos
llamada
descriptor
tr√°fico
llamada
solicitud
QoS.
Internet
arquitectura
Intserv
uti-
liza
prop√≥sito
protocolo
RSVP
RFC
2210
redes
ATM
protocolo
Q2931b
transporta
informaci√≥n
conmutadores
red
ATM
punto
terminal
7.6
GARANT√çAS
CALIDAD
SERVICIO
635
Establecimiento
se√±alizaci√≥n
llamada
QoS
Solicitud
respuesta
Figura
7.32
Proceso
establecimiento
llamada
Establecimiento
se√±alizaci√≥n
llamada
QoS
Solicitud
especificar
tr√°fico
Tspec
garant√≠a
Rspec
Respuesta
solicitud
satisfecha
elemento
recursos
requeridos
recursos
reservados
Figura
7.33
Comportamiento
elemento
llamada
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
635636
CAP√çTULO
REDES
MULTIMEDIA
PRINCIPIO
FR√ÅGIL
RSVP
utiliza
instalar
reservas
ancho
banda
routers
protocolo
fr√°gil
soft-state
t√©rminos
generales
asociamos
t√©rmino
fr√°gil
t√©cnicas
se√±alizaci√≥n
instalado
caduca
eliminado
refrescado
peri√≥dicamente
recepci√≥n
mensaje
se√±alizaci√≥n
normalmente
enviado
entidad
instal√≥
inicialmente
indique
permanecer
instalado
Puesto
refrescado
terminar√°
caducar
se√±ali-
zaci√≥n
fr√°gil
requiere
eliminaci√≥n
expl√≠cita
procedimiento
eliminar
hu√©rfanos
caso
fallara
instalador
forma
simi-
lar
puesto
instalaci√≥n
mensajes
refresco
seguidos
sucesivos
mensajes
refresco
peri√≥dicos
falta
se√±alizaci√≥n
fiable
t√©rmino
fr√°-
gil
acu√±ado
Clark
Clark
1988
describi√≥
noci√≥n
mensajes
peri√≥dicos
refresco
enviados
sistema
terminal
sugiri√≥
dichos
mensajes
refres-
co
perderse
caso
fallo
restaurado
autom√°ticamente
mensajes
refresco
subsiguientes
forma
transparente
sistema
terminal
invocar
procedimiento
expl√≠cito
recuperaci√≥n
fallos
informaci√≥n
cr√≠tica
hora
mantener
tipo
deseado
servicio
asociado
flujo
lugar
tipo
servicio
impuesto
puntos
terminales
enviar√≠an
mensajes
peri√≥dicamente
garantizar
asocie
flujo
tipo
servicio
apropiado
forma
informaci√≥n
asocia-
flujo
perderse
consecuencia
fallo
provocara
interrupci√≥n
permanente
caracter√≠sticas
servicio
est√©n
utilizando
llamo
concepto
fr√°gil
concepto
permita
objetivos
principales
supervivencia
flexibilidad
Simplificando
esencia
t√©cnica
basada
fr√°gil
consiste
instalador
utilice
procedimiento
peri√≥dico
instalaci√≥n
refresco
basado
esfuerzo
procedimiento
eliminaci√≥n
caducidad
dispositivo
almacene
t√©cnicas
fr√°gil
adoptadas
numerosos
protocolos
incluyendo
RSVP
PIM
Secci√≥n
4.7
SIP
Secci√≥n
7.4.3
IGMP
Secci√≥n
4.7
tablas
reenv√≠o
puentes
transparentes
Secci√≥n
5.6
se√±alizaci√≥n
firme
hard-state
utiliza
t√©cnica
inversa
fr√°gil
instalado
continuar√°
instalado
expl√≠citamente
eliminado
receptor
mensaje
eliminaci√≥n
enviado
instalador
Puesto
contin√∫a
instalado
expl√≠citamente
eliminado
se√±alizaci√≥n
firme
requie-
re
mecanismo
eliminar
hu√©rfanos
hayan
quedado
falle
instalador
terminado
ejecuci√≥n
eliminar
forma
similar
instalaci√≥n
eliminaci√≥n
llevan
cabo
refrescos
caducidad
importante
instalador
instalado
eliminado
consecuencia
t√©cnicas
firme
suelen
asociarse
protocolos
se√±alizaci√≥n
fiables
lugar
basados
esfuerzo
simplificar
an√°lisis
esencia
t√©cnica
firme
consiste
ins-
talaci√≥n
eliminaci√≥n
fiables
expl√≠citas
informaci√≥n
t√©cnicas
firme
PR√ÅCTICA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
6363
Admisi√≥n
llamadas
elemento
router
recibe
especificaci√≥n
tr√°fico
par√°metro
QoS
determinar
admitir
llamada
decisi√≥n
admisi√≥n
llamada
depender√°
especificaci√≥n
tr√°fico
tipo
servicio
solicitado
compromisos
recursos
existentes
router
aceptado
llamadas
activas
Recuerde
visto
ejemplo
Secci√≥n
7.5.3
utilizarse
combinaci√≥n
origen
contro-
cubeta
p√©rdidas
WFQ
determinar
retardo
m√°ximo
puesta
cola
origen
Figura
7.33
ilustra
proceso
admisi√≥n
llamada
elemento
Consulte
Breslau
2000
Roberts
2004
detalles
acerca
proceso
admisi√≥n
establecimiento
llamadas
7.6.3
QoS
garantizada
Internet
Intserv
RSVP
arquitectura
servicios
integrados
Intserv
marco
trabajo
desarrollado
IETF
proporcionar
garant√≠as
QoS
individualizadas
sesi√≥n
aplicaci√≥n
indivi-
dual
Internet
especificaci√≥n
servicio
garantizado
Intserv
definida
RFC
2212
proporciona
cotas
firmes
matem√°ticamente
demostrables
retardos
puesta
cola
paquete
experimentar
router
detalles
subya-
centes
servicio
garantizado
complicados
idea
b√°sica
realidad
simple
aproximaci√≥n
proporciona
caracterizaci√≥n
tr√°fico
origen
mecanismo
cubeta
p√©rdidas
v√©ase
Secci√≥n
7.5.2
par√°metros
servicio
solicitado
caracteriza
velocidad
transmi-
si√≥n
enviar√°n
paquetes
esencia
llamada
est√©
solicitando
servicio
garantizado
pidiendo
garantice
bits
paquetes
veloci-
dad
reenv√≠o
bits
tr√°fico
especifica
caracteri-
zaci√≥n
basada
mecanismo
cubeta
p√©rdidas
solicitando
velocidad
garantizada
acotar
retardo
m√°ximo
puesta
cola
router
Recuerde
caracterizaci√≥n
tr√°fico
cubeta
p√©rdidas
cantidad
tr√°fico
bits
generada
intervalo
duraci√≥n
acotada
expresi√≥n
rt
b.
Recuerde
Secci√≥n
7.5.2
conecta
origen
cubeta
p√©rdidas
cola
garantiza
dar√°
servicio
tr√°fico
veloci-
dad
inferior
bits
retardo
m√°ximo
puesta
cola
experimentado
paquete
acotado
expresi√≥n
r.
definido
forma
garant√≠a
servicio
Intserv
conocida
7.6
GARANT√çAS
CALIDAD
SERVICIO
637
adoptado
protocolos
tales
ST-II
Partridge
1992
RFC
1190
Q.2931
ITU-T
Q.2931
1994
RSVP
proporcionado
concepci√≥n
mecanismo
eliminaci√≥n
expl√≠cita
opcional
reservas
se√±alizaci√≥n
fiable
basada
mensajes
reconocimiento
ACK
introducida
extensi√≥n
RSVP
RFC
2961
sugerida
Pan
1997
RSVP
adoptado
opcionalmente
elementos
t√©cnicas
se√±alizaci√≥n
firme
Consulte
Ji
2003
an√°lisis
comparativa
protocolos
fr√°gil
firme
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
637servicio
carga
controlada
especifica
llamada
recibir√°
calidad
servi-
cio
aproximar√°
grandemente
QoS
flujo
recibir√≠a
elemento
red
cargado
RFC
2211
Protocolo
reserva
recursos
RSVP
Resource
ReSerVation
Protocol
RFC
2205
Zhang
1993
protocolo
se√±alizaci√≥n
Internet
utilizarse
lle-
var
cabo
se√±alizaci√≥n
establecimiento
llamada
Intserv
necesita
RSVP
tam-
bi√©n
utilizado
Diffserv
coordinar
funciones
servicios
diferenciados
m√∫ltiples
redes
ampliada
utilizada
protocolo
se√±aliza-
ci√≥n
circunstancias
cabe
destacar
variante
RSVP-TE
RFC
3209
se√±alizaci√≥n
MPLS
visto
Secci√≥n
5.8.2
contexto
Intserv
protocolo
RSVP
permite
aplicaciones
reservar
ancho
banda
flujos
datos
protocolo
empleado
host
flujo
datos
aplicaci√≥n
solicitar
cantidad
espec√≠fica
ancho
banda
red
RSVP
utilizado
routers
reenviar
solicitudes
reserva
ancho
banda
implementar
RSVP
necesario
software
RSVP
est√©
pre-
sente
receptores
emisores
routers
situados
ruta
terminal
terminal
mostrada
Figura
7.32
caracter√≠sticas
principales
RSVP
‚Ä¢P
reservas
ancho
banda
√°rboles
multidifusi√≥n
gestion√°ndose
unidifusi√≥n
caso
degenerado
multidifusi√≥n
particularmente
impor-
tante
aplicaciones
multimedia
tales
flujos
televisi√≥n
IP
receptores
querer
recibir
tr√°fico
multimedia
enviando
√∫nico
origen
‚Ä¢E
orientado
receptor
receptor
flujo
datos
encarga
iniciar
mantener
reserva
recursos
utilizada
flujo
visi√≥n
innovadora
cen-
trada
receptor
RSVP
asigna
receptores
control
tr√°fico
reciben
permitiendo
ejemplo
distintos
receptores
reciban
visualicen
multidifusi√≥n
multimedia
resoluciones
contrasta
visi√≥n
centrada
emisor
se√±alizaci√≥n
adoptada
protocolo
Q2931b
ATM
est√°ndar
RSVP
RFC
2205
especifica
red
proporcionar
ancho
banda
reservado
flujos
datos
meramente
protocolo
permite
aplicaciones
reservar
ancho
banda
enlace
necesario
hechas
reservas
tarea
routers
Internet
proporcionar
ancho
banda
reservado
distintos
flujos
datos
asignaciones
probablemente
hagan
utilizando
mecanismos
vigilancia
planificaci√≥n
cubeta
p√©rdidas
planificaci√≥n
prioridades
colas
equita-
tivas
ponderadas
analizados
Secci√≥n
7.5
obtener
informaci√≥n
acerca
RSVP
consulte
RFC
2205
Zhang
1993
materiales
electr√≥nicos
l√≠nea
adicionales
asociados
libro
7.7
Resumen
campo
redes
multimedia
constituye
desarrollos
atractivos
terminado
materializarse
red
Internet
actual
personas
mundo
pasando
tiempo
radio
televisi√≥n
recu-
rriendo
lugar
Internet
acceder
transmisiones
audio
v√≠deo
vivo
638
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
638como
pregrabadas
medida
habiendo
hogares
acceso
alta
velo-
cidad
tendencia
har√°
acelerarse
telespectadores
t√≠picos
mundo
acceder√°n
programas
v√≠deo
favoritos
Internet
lugar
canales
tradicionales
se√±ales
televisi√≥n
distribuci√≥n
audio
v√≠deo
Internet
empleando
transportar
llamadas
telef√≥nicas
pr√≥xima
d√©cada
Internet
llegar
sistema
telef√≥nico
tradi-
cional
conmutaci√≥n
circuitos
quede
obsoleto
pa√≠ses
Internet
pro-
porcionar√°
servicios
telef√≥nicos
dinero
facilitar√°
numerosos
servicios
valor
a√±adido
videoconferencia
servicios
directorio
l√≠nea
servi-
cios
mensajer√≠a
vocal
integraci√≥n
web
Secci√≥n
7.1
clasificado
aplicaciones
multimedia
categor√≠as
dife-
rentes
flujos
audio
v√≠deo
almacenado
transmisi√≥n
uno-a-muchos
audio
v√≠deo
tiempo
real
audio
v√≠deo
interactivo
tiempo
real
recalcado
aplicacio-
nes
multimedia
sensibles
retardo
tolerantes
p√©rdidas
caracter√≠sticas
dis-
tintas
aplicaciones
contenido
est√°tico
tolerantes
retardo
intolerantes
p√©rdidas
explicado
dificultades
ser-
vicio
actual
entrega
esfuerzo
Internet
plantea
aplicaciones
multimedia
repasado
diversas
propuestas
resolver
problemas
plan-
teados
incluyendo
propuesta
mejorar
simplemente
infraestructura
red
existente
a√±adiendo
ancho
banda
cach√©s
red
nodos
CDN
implantando
tecno-
log√≠as
multidifusi√≥n
propuesta
a√±adir
funcionalidad
Internet
aplicaciones
puedan
reservar
recursos
terminal
terminal
red
satisfa-
cer
reservas
realizadas
finalmente
propuesta
introducir
clases
servicio
permitir
diferenciar
distintos
servicios
Secciones
7.2
7.4
examinado
arquitecturas
mecanismos
transmisi√≥n
informaci√≥n
multimedia
red
servicio
entrega
esfuerzo
Secci√≥n
7.2
repasado
diversas
arquitecturas
transmisi√≥n
flujos
audio
v√≠deo
almacenado
analizado
interacci√≥n
usuarios
√≥rdenes
pausa
reanudaci√≥n
reposicionamiento
avance
r√°pido
visual
introducci√≥n
RTSP
protocolo
proporciona
interacci√≥n
cliente-servidor
aplicaciones
flujos
multimedia
Secci√≥n
7.3
examinado
dise-
√±arse
aplicaciones
interactivas
tiempo
real
ejecutarse
red
servicio
entrega
esfuerzo
vimos
aliviarse
enormemente
efectos
fluctuaciones
inducidas
red
utilizando
combinaci√≥n
bufferes
cliente
n√∫meros
secuencia
paquetes
marcas
tiempo
explicado
CDN
facilita
transmisi√≥n
flujos
multimedia
almacenados
transmitir
proactiva-
mente
informaci√≥n
multimedia
almacenada
servidores
CDN
situados
cerca
puntos
terminales
usuario
Secci√≥n
7.5
visto
utilizarse
diversos
mecanismos
red
disciplinas
planificaci√≥n
nivel
enlace
mecanismos
vigilancia
tr√°fico
proporcionar
servicio
diferenciado
distintas
clases
tr√°fico
Finalmente
Sec-
ci√≥n
7.6
analizado
red
proporcionar
garant√≠asde
calidad
servicio
llamadas
admitidas
red
vimos
falta
protocolos
mecanismos
red
adicionales
incluyendo
reserva
recursos
admisi√≥n
llama-
das
se√±alizaci√≥n
llamadas
Juntos
elementos
red
redes
ma√±ana
capaces
proporcionar
garant√≠as
QoS
vayan
complejas
Internet
actual
basada
servicio
entrega
esfuerzo
7.7
RESUMEN
639
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
639Problemas
cuestiones
repaso
Cap√≠tulo
Cuestiones
repaso
SECCIONES
7.1‚Äì7.2
R1
interactividad
transmisi√≥n
flujos
audio
v√≠deo
almace-
nado
transmisi√≥n
audio
v√≠deo
interactivo
tiempo
real
R2
expuesto
campos
mejora
Internet
soporte
aplicaciones
multimedia
Resuma
brevemente
puntos
vista
campo
campo
pertenece
R3
tasas
compresi√≥n
t√≠picas
relaci√≥n
n√∫mero
bits
objeto
comprimido
n√∫mero
bits
versi√≥n
comprimida
objeto
aplicaciones
audio
im√°genes
t√©cnicas
compresi√≥n
examinadas
Secci√≥n
7.1
R4
Figuras
7.1
7.2
presentan
esquemas
transmisi√≥n
flujos
multimedia
almacenados
ventajas
desventajas
SECCIONES
7.3‚Äì7.4
R5
diferencia
retardo
terminal
terminal
fluctuaci√≥n
paque-
tes
causas
fluctuaci√≥n
paquetes
R6
paquete
recibe
instante
reproducci√≥n
planificado
paquete
perdido
R7
Secci√≥n
7.3
descrito
esquemas
FEC
Res√∫malos
brevemente
esquemas
incrementan
velocidad
transmisi√≥n
flujo
adici√≥n
sobrecarga
intercalado
aumenta
velocidad
transmisi√≥n
R8
papel
DNS
red
CDN
modificarse
sistema
DNS
soporte
CDN
informaci√≥n
proporcionar
CDN
sistema
DNS
proporcionar
R9
informaci√≥n
necesita
dimensionar
red
consiga
determinada
calidad
servicio
R10
flujos
RTP
distintos
sesiones
identificar
receptor
identifican
flujos
sesi√≥n
dis-
tinguen
paquetes
RTP
RTPC
sesi√≥n
R11
Secci√≥n
7.4
descrito
tipos
paquetes
RTCP
Resuma
brevemente
informaci√≥n
contenida
tipos
paquetes
R12
papel
registrador
SIP
diferencia
papel
registra-
dor
SIP
agente
IP
m√≥vil
SECCIONES
7.5‚Äì7.6
R13
Secci√≥n
7.5
visto
colas
prioridad
expropiativa
con-
sistir√≠an
colas
prioridad
expropiativa
sentido
colas
prioridad
expropiativa
redes
computadoras
640
CAP√çTULO
REDES
MULTIMEDIA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
640PROBLEMAS
641
R14
Proporcione
ejemplo
disciplina
planificaci√≥n
trabajo
conserva-
dora
R15
Proporcione
ejemplo
colas
vida
cotidiana
correspon-
esquemas
colas
FIFO
prioridad
turno
rotatorio
WFQ
R16
dificultades
asociadas
modelo
Intserv
reserva
recursos
flujos
Problemas
P1
Navegue
Web
localice
sitios
disponibles
flujos
audio
v√≠deo
almacenado
sitio
utilice
Wireshark
determinar
a.
utilizan
metarchivos
b.
audio
v√≠deo
env√≠a
UDP
TCP
c.
utiliza
RTP
d.
utiliza
RTSP
P2
Considere
buffer
cliente
mostrado
Figura
7.3
Suponga
sistema
transmisi√≥n
flujos
utiliza
opci√≥n
servidor
env√≠a
datos
mul-
timedia
socket
r√°pido
Suponga
ancho
banda
TCP
dis-
ponible
tiempo
Suponga
buffer
cliente
almacena
datos
Describa
x(t
contenido
buf-
fer
cliente
variar√°n
tiempo
P3
buffer
recepci√≥n
TCP
buffer
cliente
reproductor
multi-
media
interact√∫an
P4
ejemplo
telefon√≠a
Internet
Secci√≥n
7.3
n√∫mero
bytes
cabecera
a√±adido
fragmento
incluyendo
cabeceras
UDP
IP
a.
Suponiendo
env√≠a
datagrama
IP
20
milisegundos
determine
velo-
cidad
transmisi√≥n
bits
datagramas
generados
aplicaci√≥n
b.
valor
t√≠pico
utiliza
RTP
P5
Considere
procedimiento
descrito
Secci√≥n
7.3
estimar
retardo
prome-
di
Suponga
0,1
r1
t1
retardo
muestra
reciente
r2
t2
retardo
muestra
reciente
etc.
a.
aplicaci√≥n
audio
dada
suponga
llegado
paquetes
receptor
retardos
muestra
r4
t4
r3
t3
r2
t2
r1
t1
Exprese
esti-
maci√≥n
retardo
funci√≥n
muestras
b.
Generalice
f√≥rmula
retardos
muestra
c.
f√≥rmula
apartado
obtenga
f√≥rmula
resultante
tiende
infinito
Comente
procedimiento
obtener
media
denomina
media
m√≥vil
exponencial
P6
Repita
apartados
problema
obtener
estimaci√≥n
desviaci√≥n
media
retardo
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
641642
CAP√çTULO
REDES
MULTIMEDIA
P7
ejemplo
telefon√≠a
Internet
Secci√≥n
7.3
presentado
proce-
dimiento
l√≠nea
media
m√≥vil
exponencial
estimar
retardo
problema
examinar
procedimiento
alternativo
marca
tiempo
paquete
i-√©simo
recibido
ri
instante
paquete
i-√©simo
recibido
dn
estimaci√≥n
retardo
recibir
paquete
n-√©simo
recibir
paquete
establecemos
estimaci√≥n
retardo
d1
r1
t1
a.
Suponga
deseamos
dn
r1
t1
r2
t2
rn
tn)/n
n.
Pro-
porcione
f√≥rmula
recursiva
dn
funci√≥n
dn‚Äì1
rn
tn
b.
Describa
telefon√≠a
Internet
estimaci√≥n
retardo
descrita
Secci√≥n
7.3
apropiada
estimaci√≥n
dada
apartado
P8
Compare
procedimiento
descrito
Secci√≥n
7.3
estimar
retardo
procedimiento
Secci√≥n
3.5
estimar
tiempo
ida
vuelta
com√∫n
procedimientos
diferencian
P9
Considere
estrategia
reproducci√≥n
adaptativa
expuesta
Secci√≥n
7.3
a.
paquetes
recibidos
destino
sucesivamente
marcas
tiempo
difieren
20
milisegundos
paquetes
pertenecen
periodo
conversaci√≥n
b.
utilizar
receptor
n√∫meros
secuencia
determinar
paquete
periodo
conversaci√≥n
espec√≠fico
P10
Considere
figura
similar
Figura
7.5
emisor
comienza
enviar
audio
empaquetado
peri√≥dicamente
paquete
llega
receptor
a.
retardos
emisor
receptor
ignorando
retardo
reproducci√≥n
paquetes
Observe
segmento
l√≠nea
vertical
horizontal
figura
longitud
unidades
tiempo
Paquetes
generados
Tiempo
Paquetes
18
Paquetes
recibidos
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
642PROBLEMAS
643
b.
reproducci√≥n
audio
inicia
llega
paquete
receptor
paquetes
enviados
llegar√°n
tiempo
reproducci√≥n
c.
reproducci√≥n
audio
comienza
paque-
tes
enviados
llegar√°n
tiempo
reproducci√≥n
d.
retardo
m√≠nimo
reproducci√≥n
receptor
paquetes
lleguen
tiempo
reproducci√≥n
P11
Considere
figura
Problema
P10
muestra
tiempos
transmi-
si√≥n
recepci√≥n
paquetes
a.
Calcule
retardo
estimado
paquetes
utilizando
f√≥rmula
di
Secci√≥n
7.3.2
Utilice
valor
0,1
b.
Calcule
desviaci√≥n
estimada
retardo
promedio
estimado
paquetes
utilizando
f√≥rmula
vi
Secci√≥n
7.3.2
Utilice
valor
0,1
P12
Recuerde
esquemas
FEC
aplicaci√≥n
telefon√≠a
Internet
descritos
Secci√≥n
7.3
Suponga
esquema
genera
fragmento
redundante
fragmentos
originales
Suponga
esquema
utiliza
codificaci√≥n
tasa
bit
baja
cuya
velocidad
transmisi√≥n
25
ciento
velocidad
transmisi√≥n
flujo
nominal
a.
ancho
banda
adicional
requiere
esquema
retardo
reproducci√≥n
a√±ade
esquema
b.
funciona
esquemas
pierde
paquete
grupo
paquetes
esquema
proporcionar√°
calidad
audio
c.
funciona
esquemas
pierde
paquete
grupo
paquetes
esquema
proporcionar√°
calidad
audio
P13
Puesto
CDN
incrementa
cantidad
capacidad
enlace
red
suponiendo
CDN
utiliza
enlaces
existentes
distribuir
contenido
nodos
CDN
mejora
CDN
rendimiento
visto
hosts
Proporcione
ejemplo
P14
CDN
proporcionar
rendimiento
host
solici-
tado
objeto
multimedia
host
solicita
objeto
servidor
origen
dis-
tante
Explique
respuesta
P15
calcula
fluctuaci√≥n
temporal
llegadas
informe
recepci√≥n
RTCP
Sugerencia
lea
documento
RFC
dedicado
RTP
P16
a.
Suponga
enviado
Internet
datagramas
IP
transportando
segmento
UDP
datagrama
direcci√≥n
IP
origen
A1
direcci√≥n
IP
destino
puerto
origen
P1
puerto
des-
tino
T.
datagrama
direcci√≥n
IP
origen
A2
direcci√≥n
IP
destino
puerto
origen
P2
puerto
destino
T.
Suponga
A1
dife-
rente
A2
P1
P2
Suponiendo
datagramas
llegan
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
643644
CAP√çTULO
REDES
MULTIMEDIA
destino
recibidos
datagramas
UDP
socket
b.
Suponga
Alicia
Benito
Clara
desean
mantener
conferencia
voz
utili-
zando
SIP
RTP
Alicia
enviar
recibir
paquetes
RTP
proceden-
tes
Benito
Clara
basta
socket
UDP
socket
necesario
mensajes
SIP
caso
afirmativo
distingue
cliente
SIP
Alicia
paquetes
RTP
recibidos
Benito
procedentes
Clara
P17
Considere
sesi√≥n
RTP
consta
usuarios
env√≠an
reci-
ben
paquetes
RTP
direcci√≥n
multidifusi√≥n
usuario
env√≠a
v√≠deo
100
kbps
a.
Limitar√°
RTCP
tr√°fico
velocidad
b.
ancho
banda
RTCP
asignar√°
receptor
particular
c.
ancho
banda
RTCP
asignar√°
emisor
particular
P18
a.
RTSP
HTTP
RTSP
m√©todos
utilizarse
HTTP
solicitar
flujo
b.
diferencia
RTSP
HTTP
ejemplo
HTTP
protocolo
banda
banda
Mantiene
RTSP
informaci√≥n
acerca
cliente
considere
funci√≥n
pausar
reanudar
P19
falso
a.
flujo
v√≠deo
almacenado
descarga
directamente
servidor
web
reproductor
multimedia
aplicaci√≥n
usando
TCP
protocolo
transporte
subyacente
b.
usando
RTP
emisor
cambiar
codificaci√≥n
mitad
sesi√≥n
c.
aplicaciones
RTP
emplear
puerto
87
d.
sesi√≥n
RTP
flujo
separado
audio
v√≠deo
emisor
flujos
audio
v√≠deo
SSRC
e.
servicios
diferenciados
comportamiento
salto
define
diferen-
cias
rendimiento
clases
impone
mecanismo
concreto
rendimientos
f.
Suponga
Alicia
desea
establecer
sesi√≥n
SIP
Benito
Alicia
men-
saje
INVITE
incluye
l√≠nea
audio
48753
RTP
VP
VP
indica
audio
GSM
Alicia
indicado
mensaje
desea
enviar
audio
GSM
g.
afirmaci√≥n
Alicia
indicado
mensaje
INVITE
enviar√°
audio
puerto
48753
h.
Normalmente
mensajes
SIP
env√≠an
entidades
SIP
utilizando
n√∫mero
puerto
SIP
defecto
i.
mantener
registro
clientes
SIP
enviar
peri√≥dicamente
men-
sajes
REGISTER
j.
SIP
obliga
clientes
SIP
soporten
codificaci√≥n
audio
G.711
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
644PROBLEMAS
645
P20
Suponga
aplica
disciplina
planificaci√≥n
WFQ
buffer
soporta
clases
suponga
pesos
clases
0,5
0,25
0,25
a.
Suponga
clase
n√∫mero
paquetes
buffer
secuencia
dar√°
servicio
clases
obtener
pesos
WFQ
pla-
nificaci√≥n
turno
rotario
secuencia
natural
123123123
b.
Suponga
clases
cantidad
paquetes
buffer
paquetes
clase
buffer
secuencia
dar√°
servicio
clases
obtener
pesos
WFQ
P21
Considere
figura
abajo
similar
Figuras
7.22
7.25
Responda
siguientes
cuestiones
a.
Suponiendo
servicio
FIFO
indique
instante
paquetes
12
abandonan
cola
paquete
retardo
llegada
ini-
cio
partici√≥n
transmite
promedio
retardo
12
paquetes
b.
Suponga
servicio
prioridad
paquetes
n√∫mero
impar
prioridad
alta
paquetes
n√∫mero
par
prioridad
baja
Indique
instante
paquetes
12
abandonan
cola
paquete
retardo
llegada
inicio
partici√≥n
transmiten
promedio
retardo
12
paquetes
c.
Suponga
servicio
turno
rotatorio
Suponga
paquetes
11
12
pertenecen
clase
paquetes
10
clase
Indique
instante
paquetes
12
abandonan
cola
paquete
retardo
llegada
salida
pro-
retardo
12
paquetes
d.
suponga
servicio
WFQ
Weighted
Fair
Queueing
Suponga
paquetes
n√∫mero
impar
clase
paquetes
n√∫mero
clase
clase
peso
WFQ
clase
peso
WFQ
Observe
planificaci√≥n
WFQ
idealizada
descrito
texto
indicar
deci-
dido
paquete
concreto
servicio
partici√≥n
tiempo
paquete
retardo
llegada
salida
promedio
retardo
12
paquetes
Tiempo
Llegadas
Salidas
Paquete
servicio
Tiempo
932
10
11
74
12
10
12
14
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
645646
CAP√çTULO
REDES
MULTIMEDIA
e.
observado
retardo
promedio
casos
FCFS
turno
rotatorio
prioridad
WFQ
P22
Considere
figura
Problema
P21
a.
Suponga
servicio
prioridad
teniendo
paquetes
11
prioridad
alta
restantes
paquetes
prioridad
baja
Indique
particiones
tiempo
paquetes
12
salen
cola
b.
Suponga
utiliza
servicio
turno
rotatorio
perteneciendo
paquetes
11
clase
tr√°fico
restantes
paquetes
clase
tr√°fico
Indique
particiones
tiempo
paque-
tes
12
salen
cola
c.
Suponga
emplea
servicio
WFQ
perteneciendo
paquetes
11
clase
tr√°fico
restantes
paquetes
clase
tr√°fico
clase
peso
WFQ
clase
peso
WFQ
f√≠jese
pesos
cuesti√≥n
Indique
particiones
tiempo
paquetes
12
abandonan
cola
V√©ase
tam-
bi√©n
advertencia
indicada
cuesti√≥n
relativa
servicio
WFQ
P23
Considere
figura
p√°gina
muestra
cubeta
p√©rdidas
alimentada
flujo
paquetes
buffer
fichas
almacenar
m√°ximo
fichas
inicialmente
lleno
fichas
llegan
tasa
ficha
partici√≥n
tiempo
velocidad
enlace
salida
paquetes
obtienen
fichas
principio
partici√≥n
tiempo
dirigirse
enlace
salida
partici√≥n
tiempo
detalles
temporizaci√≥n
sistema
siguientes
paquetes
llegan
principio
partici√≥n
tiempo
figura
paquetes
llegan
partici√≥n
paquetes
cola
paquetes
llegan
colocan
cola
paquetes
avanzan
principio
cola
siguiendo
planificaci√≥n
FIFO
a√±adido
cola
fichas
llegan
paquete
cola
paquetes
dependiendo
n√∫mero
fichas
disponi-
bles
eliminar√°n
ficha
buffer
fichas
pasan
enlace
Llegadas
Cola
paquetes
espera
obtener
ficha
10
ficha
partici√≥n
fichas
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
646PREGUNTAS
DISCUSI√ìN
647
salida
dicha
partici√≥n
paquetes
eliminan
ficha
buffer
puesto
inicialmente
fichas
pasan
enlace
salida
partici√≥n
tiempo
buffer
fichas
lleno
a√±ade
ficha
velocidad
generaci√≥n
fichas
ficha
partici√≥n
tiempo
avanza
partici√≥n
tiempo
pasos
repiten
Responda
siguientes
preguntas
a.
partici√≥n
tiempo
identifique
paquetes
encuentran
cola
n√∫mero
fichas
cubeta
inmediatamente
lle-
gadas
hayan
procesadas
paso
cualquiera
paquetes
atravesado
cola
eliminado
ficha
partici√≥n
ejemplo
paquetes
cola
buffer
fichas
b.
partici√≥n
tiempo
indique
paquetes
aparecen
salida
hayan
eliminado
cola
fichas
partici√≥n
ejemplo
paquetes
aparecen
enlace
salida
buffer
p√©rdidas
partici√≥n
P24
Repita
Problema
P23
suponiendo
Suponga
ini-
cialmente
cubeta
llena
P25
Considere
Problema
P24
suponga
caso
Cambiar√≠a
respuesta
problema
P26
Considere
mecanismo
vigilancia
cubeta
p√©rdidas
visto
Secci√≥n
7.5
monitoriza
velocidad
promedio
tama√±o
r√°faga
flujo
paque-
tes
deseamos
monitorizar
velocidad
pico
p.
Explique
salida
mecanismo
vigilancia
cubeta
p√©rdidas
alimentar
mecanismo
tipo
cubetas
p√©rdidas
conec-
tadas
serie
monitoricen
velocidad
media
velocidad
pico
tama√±o
r√°faga
Aseg√∫rese
establecer
tama√±o
cubeta
velocidad
generaci√≥n
fichas
mecanismo
vigilancia
P27
flujo
paquetes
cumple
especificaci√≥n
cubeta
p√©rdidas
tama√±o
r√°faga
velocidad
media
n√∫mero
paque-
tes
llega
dicha
cubeta
menor
rt
paquetes
intervalo
tiempo
longitud
t.
flujo
paquetes
cumpla
especificaci√≥n
cubeta
p√©rdidas
esperar
controlador
cubeta
p√©rdidas
par√°metros
Justifique
respuesta
P28
Demuestre
r1
Rw
1/(‚àë
wj
dm√°x
retardo
m√°ximo
paquete
flujo
experimentar
cola
WFQ
Preguntas
discusi√≥n
D1
Localice
empresa
transmita
flujos
v√≠deo
vivo
utilizando
mecanismos
distribuci√≥n
P2P.
Escriba
art√≠culo
acerca
tecnolog√≠a
subyacente
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
647648
CAP√çTULO
REDES
MULTIMEDIA
D2
cree
transmitir
flujos
audio
v√≠deo
almacenado
TCP
UDP
D3
Escriba
informe
productos
SIP
Cisco
D4
resolverse
problema
proporcionar
garant√≠as
calidad
servicio
QoS
simplemente
aportando
suficiente
ancho
banda
actualizando
capaci-
dades
enlaces
limitaciones
ancho
banda
constituyan
problema
D5
mercado
emergente
interesante
utilizaci√≥n
telefon√≠a
Internet
red
LAN
alta
velocidad
empresa
reemplazar
PBX
empresa
Escriba
informe
p√°gina
acerca
tema
Responda
siguientes
preguntas
informe
a.
PBX
tradicional
utilizar√≠a
b.
Considere
llamada
usuario
empresa
usuario
externo
empresa
conectado
red
telef√≥nica
tradicional
clase
tecnolo-
g√≠a
necesita
interfaz
red
LAN
red
telef√≥nica
tradicional
c.
software
telefon√≠a
Internet
interfaz
mencionada
apar-
tado
necesita
reemplazar
PBX
D6
Piense
dimensiona
red
carreteras
ejemplo
determina
n√∫mero
carriles
autov√≠as
entran
salen
ciudad
Enumere
pasos
cree
seguir√≠a
ingeniero
caminos
dimensionar
red
carreteras
pasos
an√°logos
seguir√≠an
dimensionar
red
computadoras
Tareas
programaci√≥n
pr√°ctica
laboratorio
implementar
servidor
cliente
flujos
v√≠deo
cliente
utilizar√°
protocolo
RTSP
Real-Time
Streaming
Protocol
controlar
acciones
servidor
servidor
utilizar√°
protocolo
tiempo
real
RTP
empa-
quetar
v√≠deo
transportarlo
UDP
proporcionar√°
c√≥digo
Java
implementa
parcialmente
RTSP
RTP
cliente
servidor
trabajo
consistir√°
completar
c√≥digo
cliente
servidor
terminado
creado
aplicaci√≥n
cliente-servidor
har√°
‚Ä¢E
responde
comandos
‚Ä¢C
trama
JPEG
almacenada
empaqueta
RTP
env√≠a
paquete
RTP
socket
UDP
‚Ä¢E
reproduce
monitor
cliente
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
648El
c√≥digo
proporcionamos
implementa
protocolo
RTSP
servidor
desempaquetamiento
RTP
cliente
c√≥digo
ocupa
mostrar
v√≠deo
transmitido
implementar
RTSP
cliente
RTP
servidor
tarea
programaci√≥n
mejorar√°
significativamente
compresi√≥n
estudiante
RTP
RTSP
transmisi√≥n
flujos
v√≠deo
recomendamos
realice
tarea
sugiere
serie
ejercicios
opcionales
incluyendo
imple-
mentaci√≥n
comando
RTSP
DESCRIBE
cliente
servidor
encontrar
detalles
acerca
tarea
importantes
fragmentos
c√≥digo
Java
sitio
web
http://www
.awl.com
kurose-ross
TAREAS
PROGRAMACI√ìN
649
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
649650
especializarse
redes
multimedia
Ocuri√≥
causalidad
estudiante
doctorado
estuve
incolucrado
DARTnet
red
experimental
extend√≠a
Unidos
l√≠neas
T1
DARTnet
utiliz√≥
campo
pruebas
multidifusi√≥n
herramientas
tiempo
real
Internet
llev√≥
escribir
herramienta
audio
NeV
oT.
participantes
DARTnet
involucr√©
IETF
naciente
grupo
trabajo
Video
Transport
grupo
estan-
dariz√≥
RTP
trabajo
industria
computadoras
implic√≥
trabajo
industria
computadoras
soldar
kit
computadora
Altair
estudiante
bachillerato
Livermore
California
volv√≠
Alemania
comenc√©
empresa
peque√±a
consultor√≠a
dise√±√≥
programa
gesti√≥n
direcciones
agencia
viajes
almacenando
datos
cintas
casete
TRS-80
utilizando
impresora
m√°quina
escribir
IBM
Selectric
interfaz
hardware
casera
trabajo
laboratorios
AT&T
Bell
Laboratories
desarroll√©
emulador
red
construir
redes
experimentales
entorno
laboratorio
objetivos
Internet
Real-Time
Lab
objetivo
proporcionar
componentes
piezas
red
Internet
√∫nica
infraestructura
comunicaciones
futuro
incluye
desarrollo
protocolos
GIST
se√±alizaci√≥n
capa
red
LoST
localizar
recursos
ubica-
ci√≥n
mejorar
protocolos
funcionando
SIP
trabajando
sistemas
Rich
Presence
P2P
mecanismos
llamadas
emergencia
generaci√≥n
herramientas
creaci√≥n
servicios
Recientemente
centrado
especialmente
tam-
bi√©n
sistemas
inal√°mbricos
oIP
redes
802.11b
802.11n
tam-
bi√©n
redes
WiMax
tomen
importancia
tecnolog√≠as
campo
telefon√≠a
intentando
mejorar
forma
considerable
capacidad
usuarios
diagnosticar
fallos
complicada
mara√±a
proveedores
equipos
utilizando
sistema
diagn√≥stico
fallos
iguales
conocido
DYSWIS
Do
You
See
What
See
Intentamos
cabo
trabajo
relevante
forma
pr√°ctica
construyendo
prototipos
siste-
c√≥digo
abierto
midiendo
rendimiento
sistemas
reales
contribuyendo
est√°nda-
res
IETF
Henning
Schulzrinne
Henning
Schulzrinne
Catedr√°tico
Chair
departamento
Ciencias
Computaci√≥n
director
Internet
Real-Time
Laboratory
Universidad
Columbia
coautor
RTP
RTSP
SIP
GIST
protocolos
claves
comunicaciones
audio
v√≠deo
Internet
Henning
obtuvo
t√≠tulo
grado
Ingenier√≠a
El√©ctrica
Industrial
Universidad
T√©cnica
Darmstadt
Alemania
m√°ster
Ingenier√≠a
El√©ctrica
compu-
tadoras
Universidad
Cincinnati
doctor
Ingenier√≠a
El√©ctrica
Universidad
Massachusetts
Amherst
ENTREVISTA
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
650651
visi√≥n
futuro
redes
multimedia
encontramos
fase
transici√≥n
a√±os
IP
pla-
taforma
universal
servicios
multimedia
IPTV
oIP
confiamos
radio
tel√©fono
televisi√≥n
est√©n
disponibles
tormentas
nieve
terremotos
Internet
tome
papel
redes
dedicadas
usuarios
esperar√°n
nivel
fiabilidad
Tendremos
aprender
dise√±ar
tecnolog√≠as
red
ecosistema
operadoras
pro-
veedores
contenido
servicios
competidores
dar√°n
servicio
usuarios
for-
maci√≥n
t√©rcnica
defenderse
conjunto
peque√±o
destructivo
usuarios
maliciosos
criminales
Modificar
protocolos
comenzando
complicado
complejos
intereses
negocios
com-
petidores
temas
seguridad
confidencialidad
falta
transparencia
redes
debida
cortafuegos
traductores
direcciones
red
redes
multimedia
convirtiendo
base
aplicaciones
entretenimiento
consumo
hacerse
hincapi√©
gesti√≥n
redes
tama√±o
coste
usuarios
esperar√°n
disponer
facilidad
localizar
ejemplo
contenido
dispositivos
SIP
futuro
prometedor
Am
√∫nico
mecanismo
se√±alizaci√≥n
multimedia
extienda
tipos
redes
modems
cable
redes
telef√≥nicas
corporativas
redes
inal√°mbricas
p√∫blicas
radios
software
har√°
futuro
utilizarse
√∫nico
dispositivo
red
dom√©stica
ejemplo
tel√©fono
inal√°mbrico
BlueTooth
red
corporativa
802.11
√°rea
global
redes
3G.
dispongamos
dispositivo
inal√°mbrico
universal
√∫nico
mecanismos
movilidad
personal
har√°n
ocultar
dife-
rencias
redes
identificador
convertir√°
universal
localizaci√≥n
perso-
na
lugar
recordar
transmitir
media
docena
n√∫meros
telef√≥no
espec√≠ficos
tecnolog√≠a
ubicaci√≥n
SIP
rompe
provisi√≥n
transporte
voz
bits
servicios
voz
t√©cnicamente
romper
monopolio
telefon√≠a
local
empresa
proporcio-
na
transporte
bits
neutral
proporcionan
tono
marcado
IP
servicios
tele-
f√≥nicos
cl√°sicos
pasarelas
reenv√≠o
llamadas
identificador
llamante
all√°
se√±alizaci√≥n
multimedia
SIP
ofrece
servicio
exist√≠a
In
ternet
notificaci√≥n
sucesos
aproximaciones
tales
servicios
t√©cnicas
HTTP
correo
electr√≥nico
satisfactorias
sucesos
abs-
tracci√≥n
com√∫n
sistemas
distribuidos
simplificar
construcci√≥n
ser-
vicios
consejo
estudiantes
inician
campo
redes
campo
redes
abarca
m√∫ltiples
disciplinas
Deriva
ingenier√≠a
el√©ctrica
ciencias
computaci√≥n
investigaci√≥n
operativa
estad√≠stica
econom√≠a
disciplinas
investigadores
redes
familizarizados
temas
all√°
pro-
tocolos
algoritmos
enrutamiento
redes
convirtiendo
importante
vida
cotidiana
estu-
diantes
deseen
sobresalir
campo
pensar
restricciones
recursos
afectan
redes
tiempo
esfuerzo
personas
lugar
pensar
ancho
banda
capacidad
almacenamiento
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
651652
Trabajar
campo
investigaci√≥n
redes
resultar
tremendamente
satisfactorio
permite
personas
comunicarse
intercambiar
ideas
esencias
seres
humanos
Internet
convertido
infraestructura
global
importante
sistemas
transporte
distribuci√≥n
energ√≠a
Pr√°cticamente
econom√≠a
funcionar
redes
altas
prestaciones
futuro
repleto
oportuni-
dades
M07_KURO9675_05_SE_CH07.qxd
22/3/10
10:11
P√°gina
652CAP√çTULO
Seguridad
redes
computadoras
653
Secci√≥n
1.6
descrito
ataques
da√±inos
predominantes
Internet
incluyendo
ataques
software
malicioso
denegaci√≥n
servicio
hus-
meadores
enmascaramiento
or√≠genes
borrado
modificaci√≥n
mensajes
estudiado
mont√≥n
cosas
acerca
redes
computadoras
exa-
minado
dotar
seguridad
redes
defenderse
ataques
esboza-
Secci√≥n
1.6
Equipados
conocimientos
reci√©n
adquiridos
redes
computadoras
protocolos
Internet
estudiar
profundidad
comunicaciones
seguras
concreto
redes
computadoras
defen-
derse
malos
Presentemos
Alicia
Benito
personas
desean
comunicarse
desean
forma
segura
Puesto
texto
redes
debemos
resaltar
Alicia
Benito
routers
desean
intercambiar
tablas
enrutamiento
forma
segura
cliente
servidor
desean
establecer
conexi√≥n
transporte
segura
aplicaciones
correo
electr√≥nico
quieren
intercambiar
mensajes
correo
segu-
ros
casos
consideraremos
cap√≠tulo
Alicia
Benito
entidades
conoci-
das
comunidad
seguridad
nombres
divertidos
entidad
gen√©rica
desea
comunicarse
forma
segura
entidad
gen√©rica
asuntos
amorosos
il√≠citos
comunicaciones
tiempo
guerra
transac-
ciones
negocios
necesidades
humanas
comunicaci√≥n
segura
habituales
prefi-
riendo
necesidades
felices
utilizar
Alicia
Benito
emisor
receptor
imaginarlos
escenario
Alicia
Benito
desean
comunicarse
forma
segura
exactamente
veremos
seguridad
amor
matices
seguridad
caras
Realmente
Alicia
Benito
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
653desean
contenido
comunicaciones
secreto
conocerlo
esposo
celoso
Probablemente
desear√°n
seguros
manteniendo
comunicaci√≥n
realmente
est√©n
comunic√°ndose
comunicaci√≥n
alterada
alteraci√≥n
detectada
cap√≠tulo
abordar
t√©cnicas
fundamentales
criptograf√≠a
permiten
cifrar
comunicaciones
autenticar
interlocutor
establece
comunicaci√≥n
garantizar
integridad
mensaje
cap√≠tulo
examinaremos
utilizarse
principios
fundamentales
criptograf√≠a
crear
protocolos
red
seguros
siguiendo
m√©todo
arriba-abajo
examinaremos
protocolos
seguros
capas
superiores
comenzando
capa
aplicaci√≥n
Veremos
dotar
seguridad
correo
electr√≥nico
dotar
seguridad
conexi√≥n
TCP
proporcionar
seguridad
capa
red
dotar
seguridad
red
LAN
inal√°m-
brica
cap√≠tulo
consideraremos
seguridad
operacional
ocupa
protecci√≥n
redes
institucionales
frente
ataques
particular
estu-
diaremos
cortafuegos
sistemas
detecci√≥n
intrusiones
mejorar
seguridad
red
organizaci√≥n
8.1
seguridad
red
Comencemos
estudio
seguridad
redes
volviendo
amantes
Alicia
Benito
desean
comunicarse
forma
segura
significa
exacta-
mente
realidad
Alicia
Benito
capaz
comprender
mensajes
env√≠a
est√©n
comunic√°ndose
seguro
intruso
Tom√°s
ejemplo
interceptar
Alicia
transmite
Benito
Benito
seguro
mensaje
recibe
Alicia
realmente
enviado
Alicia
Alicia
segura
persona
comunicando
realmente
Benito
Alicia
Benito
quieren
seguros
conte-
nido
mensajes
alterado
camino
quieren
seguros
comunicarse
denegar
acceso
recursos
necesarios
comunicarse
Teniendo
consideraciones
identifi-
car
siguientes
propiedades
deseables
comunicaci√≥n
segura
Confidencialidad
emisor
receptor
deseado
deber√°n
comprender
contenido
mensajes
transmitidos
Puesto
curiosos
interceptar
mensajes
absolutamente
necesario
mensajes
cifrados
mensaje
interceptado
comprendido
interceptado
aspecto
confidencialidad
probablemente
concepto
com√∫nmente
percibido
t√©rmino
comunicaci√≥n
segura
Secci√≥n
8.2
estudiaremos
t√©cnicas
criptogr√°-
ficas
cifrado
descifrado
datos
Autenticaci√≥n
punto
terminal
emisor
receptor
deber√°n
confirmar
identidad
proceso
comunicaci√≥n
confirmar
comunicaci√≥n
humana
frente
frente
resuelve
problema
f√°cilmente
gracias
reconocimiento
visual
entidades
comu-
nican
autenticaci√≥n
sencilla
ejemplo
deber√≠a
creerse
mensaje
correo
electr√≥-
654
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
654nico
recibido
contiene
cadena
texto
mensaje
procede
amigo
realmente
procede
amigo
Integridad
mensaje
emisor
receptor
capaces
autenticarse
continuar√°n
queriendo
seguros
contenido
comunicaciones
alterado
transmisi√≥n
maliciosamente
accidente
emplear
extensiones
t√©cnicas
suma
comprobaci√≥n
visto
pro-
tocolos
enlace
datos
transporte
fiable
proporcionar
integridad
men-
sajes
Estudiaremos
autenticaci√≥n
punto
terminal
integridad
mensajes
Secci√≥n
8.3
Seguridad
operacional
organizaciones
empresas
universidades
etc.
actuales
disponen
redes
conectadas
red
p√∫blica
Internet
redes
potencialmente
verse
comprometidas
atacantes
acceder
Internet
atacantes
intentar
depositar
gusanos
hosts
red
secretos
corporativos
mapa
configuraciones
internas
red
ejecutar
ataques
DoS.
Secci√≥n
8.8
veremos
emplean
dispositivos
operacionales
cortafuegos
sistemas
detecci√≥n
intrusiones
res-
ponder
ataques
efectuados
red
organizaci√≥n
cortafuegos
coloca
red
organizaci√≥n
red
p√∫blica
controlando
acceso
paquetes
procedentes
red
sistema
detecci√≥n
intrusiones
realiza
inspecci√≥n
profunda
paquetes
alertando
administradores
red
detecta
cual-
quier
actividad
sospechosa
establecido
hablar
seguridad
red
exactamente
informaci√≥n
acceso
intruso
acciones
lle-
var
cabo
intruso
Figura
8.1
ilustra
escenario
Alicia
emisor
desea
enviar
datos
Benito
receptor
intercambiar
datos
forma
segura
cumplir
requisitos
confidencialidad
autenticaci√≥n
punto
terminal
integridad
mensajes
Alicia
Benito
intercambiar√°n
mensajes
control
mensajes
datos
forma
similar
emisores
receptores
TCP
intercambian
segmentos
control
segmentos
datos
Normalmente
mensajes
cifrados
visto
Secci√≥n
1.6
potencialmente
intruso
curiosear
husmear
registrar
mensajes
control
datos
transmiten
canal
modificar
insertar
borrar
mensajes
contenido
veremos
tomen
contramedidas
adecuadas
capacidades
permitir√°n
intruso
montar
amplia
variedad
ataques
seguridad
red
escuchando
comunicaciones
posiblemente
robando
contrase√±as
datos
suplan-
tando
entidad
pirateando
sesi√≥n
activa
denegando
servicio
usuarios
leg√≠-
timos
red
sobrecarga
recursos
sistema
etc.
resumen
ataques
conocidos
Centro
coordinaci√≥n
CERT
CERT
2009
Consulte
Cisco
Security
2009
oydock
1983
Bhimani
1996
Skoudis
2006
quedado
amenazas
reales
Internet
equivalentes
Internet
Alicia
Benito
amigos
necesitan
comunicarse
forma
segura
Realmente
Benito
Alicia
personas
situadas
sistemas
terminales
ejemplo
Alicia
real
Benito
real
desean
intercam-
biar
mensajes
correo
electr√≥nico
forma
segura
Asimismo
desear
par-
8.1
SEGURIDAD
RED
655
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
655ticipar
transacci√≥n
comercio
electr√≥nico
ejemplo
Benito
transferir
n√∫mero
tarjeta
cr√©dito
forma
segura
servidor
web
comprar
producto
l√≠nea
forma
similar
Alicia
real
querer
interactuar
banco
l√≠nea
participantes
necesitan
comunicaciones
seguras
infraestructura
red
Recuerde
sistema
nombres
dominio
DNS
v√©ase
Secci√≥n
2.5
demonios
enrutamiento
intercambian
informaci√≥n
enrutamiento
v√©ase
Secci√≥n
4.6
requieren
comunicaci√≥n
segura
ambas
partes
caso
aplicaciones
gesti√≥n
red
tema
examinare-
mos
Cap√≠tulo
intruso
pudiera
interferir
forma
activa
b√∫squedas
DNS
visto
Secci√≥n
2.5
c√°lculos
enrutamiento
Murphy
2003
funciones
gesti√≥n
red
RFC
2574
causar
estragos
Internet
establecido
marco
trabajo
definiciones
importantes
necesidad
dotar
seguridad
red
profundizar
continuaci√≥n
criptograf√≠a
criptograf√≠a
proporcionar
con-
fidencialidad
evidente
veremos
criptograf√≠a
resulta
fundamental
autenticaci√≥n
punto
terminal
verificaci√≥n
integridad
mensa-
jes
piedra
angular
mecanismos
seguridad
red
8.2
Principios
criptograf√≠a
criptograf√≠a
larga
historia
remonta
√©poca
Julio
C√©sar
t√©cnicas
criptogr√°ficas
modernas
incluyendo
utilizadas
Internet
basadas
avances
realizados
30
a√±os
libro
Kahn
The
Codebre-
akers
Kahn
1967
libro
Singh
The
Code
Book
The
Science
of
Secrecy
from
Ancient
Egypt
to
Quantum
Cryptography
Singh
1999
proporcionan
fascinante
visi√≥n
larga
historia
criptograf√≠a
exposici√≥n
completa
critpograf√≠a
requiere
libro
completo
Kaufman
1995
Schneier
1995
abordar
aspectos
esenciales
particular
pr√°ctica
Internet
Debemos
comentar
secci√≥n
centrarnos
criptograf√≠a
confidencialidad
veremos
t√©cnicas
cripto-
gr√°ficas
inextricablemente
unidas
autenticaci√≥n
integridad
mensajes
repudio
cuestiones
656
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Emisor
seguro
Alicia
Tom√°s
Canal
Mensaje
datos
control
Receptor
seguro
Benito
Datos
Datos
Figura
8.1
Emisor
receptor
intruso
Alicia
Benito
Tom√°s
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
656Las
t√©cnicas
criptogr√°ficas
permiten
emisor
ocultar
datos
intrusos
puedan
obtener
informaci√≥n
datos
interceptados
receptor
deber√°
capaz
recuperar
datos
originales
datos
ocultados
Figura
8.2
ilustra
terminolog√≠a
importante
Suponga
Alicia
enviar
mensaje
Benito
mensaje
Alicia
forma
original
ejemplo
Benito
quiero
Alicia
conoce
nombre
texto
texto
plano
cleartext
plaintext
Alicia
cifra
mensaje
texto
utilizando
algoritmo
cifrado
mensaje
cifrado
conoce
nombre
texto
cifrado
ciphertext
ininteligible
intruso
interesante
observar
sistemas
criptogr√°ficos
modernos
incluyendo
utilizados
Internet
t√©cnica
cifrado
conocida
sentido
p√∫blica
estandarizada
disponible
mundo
ejemplo
RFC
1321
RFC
2437
RFC
2420
NIST
2001
potenciales
intrusos
Evidentemente
mundo
conoce
m√©todo
utilizado
codificar
datos
deber√°
existir
tipo
informaci√≥n
secreta
impida
intruso
descifrar
datos
transmitidos
entran
acci√≥n
claves
Figura
8.2
Alicia
proporciona
clave
KA
cadena
n√∫meros
caracte-
res
entrada
algoritmo
cifrado
algoritmo
cifrado
toma
clave
mensaje
texto
entrada
genera
texto
cifrado
salida
nota-
ci√≥n
KA(m
referencia
formato
texto
cifrado
cifrado
utilizando
clave
KA
correspondiente
mensaje
texto
m.
algoritmo
cifrado
real
utilizar
clave
KA
resultar√°
evidente
contexto
forma
similar
Benito
proporcionar√°
clave
KB
algoritmo
descifrado
toma
texto
cifrado
clave
Benito
entrada
genera
salida
texto
original
palabras
Benito
recibe
mensaje
cifrado
KA(m
descifra
realizando
c√°lculo
KB(KA(m
m.
sistemas
clave
sim√©trica
claves
Alicia
Benito
id√©nticas
mantenerse
secreto
sistemas
clave
p√∫blica
emplea
pareja
claves
claves
conocida
Benito
Alicia
conocida
mundo
clave
conocida
Benito
Alicia
subsecciones
estudiar
sistemas
clave
sim√©trica
clave
p√∫blica
detalladamente
8.2
PRINCIPIOS
CRIPTOGRAF√çA
657
Algoritmo
cifrado
Texto
cifrado
Canal
Tom√°s
Alicia
Benito
Algoritmo
descifrado
Texto
Clave
clave
Texto
KA
KB
Figura
8.2
Componentes
criptogr√°ficos
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6578.2.1
Criptograf√≠a
clave
sim√©trica
algoritmos
criptogr√°ficos
implican
sustituir
cosa
ejemplo
toma
fragmento
texto
calcula
sustituye
texto
cifrado
apro-
piado
crear
mensaje
cifrado
estudiar
sistema
criptogr√°fico
moderno
basado
claves
entremos
materia
estudiando
algoritmo
clave
sim√©trica
simple
antiguo
atribuido
Julio
C√©sar
conoce
nombre
cifrado
C√©sar
palabra
cifrado
emplea
designar
m√©todo
permite
encriptar
datos
texto
espa√±ol
cifrado
C√©sar
funcionar√≠a
tomando
letra
men-
saje
sustituy√©ndola
letra
posiciones
alfabeto
vol-
viendo
principio
llega
letra
siga
letra
ejemplo
letra
texto
convertir√°
letra
texto
cifrado
letra
texto
convertir√°
letra
texto
cifrado
sucesivamente
valor
sirve
clave
ejemplo
mensaje
texto
benito
quiero.alicia
transformar√≠a
ehqlwr
whtxlhur.dolfld
texto
cifrado
texto
cifrado
sucesi√≥n
letras
sentido
realidad
tardar√≠a
romper
c√≥digo
utilizando
cifrado
C√©sar
25
posibles
valores
clave
mejora
cifrado
C√©sar
cifrado
monoalfab√©tico
susti-
tuye
letra
alfabeto
lugar
efectuar
sustituciones
patr√≥n
regular
ejemplo
utilizando
desplazamiento
letras
letra
sustituirse
√∫nica
letra
viceversa
regla
sustituci√≥n
Figura
8.3
muestra
codifi-
caci√≥n
texto
mensaje
texto
benito
quiero.alicia
convierte
ncj-
suk
uc
pyscok.mgsbsm
caso
cifrado
C√©sar
serie
letras
sentido
cifrado
monoalfab√©tico
cifrado
C√©sar
sentido
26
orden
10
26
posibles
parejas
letras
lugar
25
posibles
parejas
cifrado
C√©sar
proporciona
ataque
fuerza
bruta
consistiera
probar
10
26
posibles
parejas
requerir√≠a
trabajo
considerarlo
forma
factible
romper
algoritmo
cifrado
decodificar
mensaje
an√°lisis
estad√≠stico
idioma
utilizado
texto
ejemplo
letras
letras
frecuentemente
aparecen
texto
t√≠pico
espa√±ol
representando
14
12
ciento
respectiva-
mente
determinadas
combinaciones
letras
aparecen
frecuentemente
juntas
ejemplo
re
etc.
romper
forma
relativamente
f√°cil
c√≥digo
intruso
conocimiento
acerca
contenido
mensaje
f√°cil
romper
c√≥digo
ejemplo
intruso
Tom√°s
esposo
Alicia
sospecha
relaci√≥n
sentimental
Benito
deducir
nombres
benito
alicia
aparecer√°n
texto
658
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Letras
texto
Letras
texto
cifrado
Figura
8.3
Cifrado
monoalfab√©tico
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
658Si
Tom√°s
estuviera
seguro
nombres
aparecen
texto
cifrado
dispusiera
copia
mensaje
texto
cifrado
ejemplo
proporcionado
anterior-
mente
determinar
inmediatamente
26
parejas
letras
implica
reducir
factor
10
15
posibilidades
habr√≠a
comprobar
m√©todo
fuerza
bruta
Tom√°s
sospechara
Alicia
enga-
√±ando
esperar√≠a
encontrar
palabras
seleccionadas
mensaje
utilizado
Benito
Alicia
distinguir
escenarios
distintos
dependiendo
informaci√≥n
disponga
intruso
Ataque
texto
cifrado
casos
intruso
acceso
√∫nicamente
texto
cifrado
interceptado
disponer
informaci√≥n
segura
acerca
contenido
mensaje
visto
an√°lisis
estad√≠stico
ayudarnos
ataque
texto
cifrado
esquema
cifrado
Ataque
texto
conocido
Anteriormente
visto
Tom√°s
estuviera
seguro
palabras
benito
alicia
aparecen
mensaje
texto
cifrado
determinado
parejas
texto
texto
cifrado
letras
o.
Tom√°s
sufi-
cientemente
afortunado
grabado
transmisiones
texto
cifrado
encontrar
hoja
papel
versi√≥n
descifrada
Alicia
transmisiones
cifradas
intruso
conoce
parejas
texto
texto
cifrado
decimos
ataque
texto
conocido
esquema
cifrado
Ataque
texto
seleccionado
ataque
texto
seleccionado
intruso
posibilidad
elegir
mensaje
texto
obtener
correspon-
diente
texto
cifrado
algoritmos
cifrado
simples
visto
Tom√°s
pudiera
Alicia
enviara
mensaje
extra√±o
mojar
queso
cerveza
probar
whisky
garrafa
romper
completamente
esquema
cifrado
veremos
t√©cnicas
cifrado
sofisticadas
ataque
texto
seleccionado
implica
necesariamente
t√©cnica
cifrado
rota
quinientos
a√±os
invento
t√©cnica
denominada
cifrado
polialfab√©tico
permit√≠a
mejorar
cifrado
monoalfab√©tico
idea
subyacente
cifrado
polialfab√©tico
utilizar
cifrados
monoalfab√©ticos
utilizando
cifrado
monoalfab√©tico
espec√≠fico
codificar
letra
situada
posici√≥n
espec√≠fica
mensaje
texto
letra
aparezca
posiciones
men-
saje
codificar
forma
distinta
Figura
8.4
muestra
ejemplo
esquema
cifrado
polialfab√©tico
compuesto
cifrados
C√©sar
19
mostrados
sendas
filas
Podr√≠amos
decidir
utilizar
cifrados
C√©sar
C1
C2
patr√≥n
repetitivo
C1
C2
C1
C2
letras
texto
codificar√≠an
utilizando
aplicando
cuarta
utilizando
C1
quinta
utilizando
C2
continuaci√≥n
patr√≥n
repite
har√≠a
sexta
letra
codificara
utilizando
C1
s√©ptima
C1
sucesivamente
mensaje
texto
benito
quiero
tendr√≠a
equivalente
texto
cifrado
gjgnmt
yx
vnnjkt
Observe
mensaje
texto
cifra
utilizando
C1
cifra
utilizando
ejemplo
clave
8.2
PRINCIPIOS
CRIPTOGRAF√çA
659
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
659de
cifrado
descifrado
conocimiento
cifrados
C√©sar
19
patr√≥n
C1
C1
C2
C1
C2
Cifrado
bloque
Avancemos
tiempos
modernos
veamos
cabo
cifrado
clave
sim√©trica
clases
generales
t√©cnicas
cifrado
sim√©trico
cifrados
flujo
cifrados
bloque
Examinaremos
brevemente
cifrados
flujo
Secci√≥n
8.7
investiguemos
seguridad
redes
LAN
inal√°mbricas
secci√≥n
centraremos
cifrados
bloque
emplean
protoco-
seguros
Internet
incluyendo
PGP
correo
electr√≥nico
seguro
SSL
dotar
seguridad
conexiones
TCP
IPsec
dotar
seguridad
transporte
capa
red
cifrado
bloque
mensaje
cifrar
procesa
bloques
bits
ejemplo
64
mensaje
descompone
bloques
64
bits
blo-
cifra
forma
independiente
codificar
bloque
sistema
cifrado
asigna
correspondencia
uno-a-uno
asignar
bloque
bits
texto
bloque
bits
texto
cifrado
Veamos
ejemplo
Suponga
cifrado
bloque
asigna
entrada
bits
texto
salida
bits
texto
cifrado
Tabla
8.1
proporciona
correspondencias
Observe
aplicaci√≥n
uno-a-uno
salida
entrada
cifrado
bloque
descompone
mensaje
bloques
bits
cifra
bloque
correspondencia
verificar
cifra
mensaje
010110001111
obtiene
resultado
101000111001
Continuando
ejemplo
bloque
bits
observe
correspondencia
Tabla
8.1
simplemente
asignaci√≥n
posibles
posibles
correspondencias
responder
cuesti√≥n
simplemente
observe
correspondencia
cosa
permutaci√≥n
posibles
entradas
23
(=
8)
posibles
entradas
enumeradas
columnas
etiquetadas
Entrada
entradas
permutarse
40.320
formas
distintas
permutaciones
especifica
correspondencia
40.320
posibles
corresponden-
cias
interpretar
correspondencias
clave
Alicia
Benito
conocen
simult√°neamente
correspondencia
clave
cifrar
descifrar
mensajes
intercambien
ataque
fuerza
bruta
sistema
cifrado
consistir√≠a
tratar
descifrar
texto
utilizando
correspondencias
posibles
Puesto
40.320
corres-
pondencias
llevarse
cabo
r√°pidamente
PC
escritorio
evitar
ataques
fuerza
bruta
sistemas
cifrado
bloque
nor-
malmente
utilizan
bloques
tama√±o
compuestos
64
bits
mayores
Observe
n√∫mero
correspondencias
posibles
cifrado
cualquiera
660
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Letras
texto
C1(k
C2(k
19
Figura
8.4
Cifrado
polialfab√©tico
utilizando
cifrados
C√©sar
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6608.2
PRINCIPIOS
CRIPTOGRAF√çA
661
Entrada
Salida
Entrada
Salida
000
110
100
011
001
111
101
010
010
101
110
000
011
100
111
001
Tabla
8.1
cifrado
bloque
espec√≠fico
bits
bloques
bits
2k
valor
astron√≥mico
valores
moderados
ejemplo
64
cifrados
bloque
tabla
completa
acabamos
descri-
bir
producir
esquemas
cifrado
clave
sim√©trica
robustos
valo-
res
moderados
lamentablemente
resultan
dif√≠ciles
implementar
64
correspondencia
determinada
Alicia
Benito
necesitar√≠an
mantener
tabla
264
valores
entrada
tarea
imposible
Alicia
Benito
quisieran
cambiar
clave
tendr√≠an
volver
generar
tabla
utilizaci√≥n
cifrado
bloque
tabla
completa
proporcione
correspondencias
predeterminadas
entradas
salidas
ejemplo
resulta
simplemente
impracticable
lugar
sistemas
cifrado
bloque
suelen
utilizar
funciones
simu-
lan
generaci√≥n
tablas
aleatoriamente
permutadas
Figura
8.5
muestra
ejem-
plo
adaptado
Kaufman
1995
funci√≥n
tipo
64
funci√≥n
descompone
lugar
bloque
64
bits
fragmentos
estando
frag-
mento
compuesto
bits
fragmento
bits
procesa
tabla
bits
tama√±o
manejable
ejemplo
fragmento
procesa
Salida
64
bits
Bucle
ciclos
bits
bits
T1
bits
bits
T2
bits
bits
T3
bits
Entrada
64
bits
bits
T4
bits
bits
T5
bits
bits
T6
bits
bits
T7
bits
bits
T8
Aleatorizador
64
bits
Figura
8.5
Ejemplo
cifrado
bloque
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
661mediante
tabla
designada
continuaci√≥n
fragmentos
salida
recom-
ponen
bloque
64
bits
posiciones
64
bits
bloque
continuaci√≥n
aleatorizan
permutan
generar
salida
64
bits
salida
realimenta
entrada
64
bits
comienza
ciclo
ciclos
fun-
ci√≥n
proporciona
bloque
64
bits
texto
cifrado
prop√≥sito
distintos
ciclos
bit
entrada
afecte
mayor√≠a
bits
salida
finales
utilizara
ciclo
bit
entrada
afectar√≠a
64
bits
salida
clave
algoritmo
cifrado
bloque
estar√≠a
compuesta
tablas
permutaci√≥n
asumiendo
funci√≥n
aleatorizaci√≥n
dominio
p√∫blico
sistemas
cifrado
bloque
populares
incluyendo
DES
Data
Encryption
Standard
Est√°ndar
cifrado
datos
3DES
AES
Advanced
Encryption
Standard
Est√°ndar
avanzado
cifrado
est√°ndares
utiliza
funciones
lugar
tablas
predeterminadas
ideas
expuestas
Figura
8.5
complicadas
espec√≠ficas
sistema
cifrado
algoritmos
utiliza
cadena
bits
clave
ejemplo
DES
emplea
bloques
64
bits
clave
56
bits
AES
utiliza
bloques
128
bits
operar
claves
128
192
256
bits
longitud
clave
algoritmo
determina
mini-tablas
espec√≠ficas
asignaci√≥n
permutaci√≥n
algoritmo
ataque
fuerza
bruta
sistemas
cifrado
consistir√≠a
aplicando
sucesivamente
claves
usando
algoritmo
descifrado
Observe
longitud
clave
claves
posibles
NIST
NIST
2001
estima
m√°quina
pudiera
romper
algoritmo
DES
56
bits
pudiera
probar
256
claves
necesitar√≠a
149
trillones
a√±os
romper
clave
AES
128
bits
Encadenamiento
bloques
cifrados
aplicaciones
redes
computadoras
normalmente
necesario
cifrar
mensajes
tama√±o
largos
flujos
datos
aplicamos
cifrado
bloques
descrito
descomponiendo
simplemente
mensaje
bloques
bits
cifrando
independiente-
mente
bloque
aparece
problema
sutil
importancia
consiste
observe
bloques
texto
id√©nticos
ejemplo
texto
bloques
HTTP/1.1
bloques
id√©nticos
cifrado
bloque
producir√≠a
texto
cifrado
atacante
posiblemente
adivinar
texto
viera
bloques
texto
cifrado
id√©nticos
capaz
descifrar
mensaje
completo
identifi-
cando
bloques
texto
cifrado
id√©nticos
utilizando
conocimiento
acerca
estructura
protocolos
subyacente
Kaufman
1995
resolver
problema
introducir
aleatoriedad
texto
cifrado
id√©nticos
bloques
texto
produzcan
bloques
texto
cifrado
explicar
idea
m(i
i-√©simo
bloque
texto
c(i
i-√©simo
bloque
texto
cifrado
/H17053b
operaci√≥n
OR-exclusiva
XOR
cadenas
bits
b.
Recuerde
/H170530
/H170531
/H170531
/H170530
operaci√≥n
XOR
cadenas
bits
realiza
bit
bit
ejemplo
10101010
/H1705311110000
01011010
Asimismo
designaremos
KS
algoritmo
encripta-
ci√≥n
bloque
cifrado
clave
S.
idea
b√°sica
emisor
genera
n√∫mero
aleatorio
bits
r(i
i-√©simo
bloque
calcula
c(i
KS(m(i)/H17053r(i
662
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6628.2
PRINCIPIOS
CRIPTOGRAF√çA
663
Observe
selecciona
n√∫mero
aleatorio
bits
bloque
emi-
sor
env√≠a
c(1
r(1
c(2
r(2
c(3
r(3
etc.
Puesto
receptor
recibe
c(i
r(i
recuperar
bloque
texto
calculando
m(i
KS(c(i
/H17053r(i
importante
observar
r(i
env√≠e
cifrar
husmeado
Tom√°s
obtener
texto
m(i
conoce
clave
KS
Observe
bloques
texto
m(i
iguales
corres-
pondientes
bloques
texto
cifrado
c(i
n√∫meros
aleatorios
r(i
distintos
ocurre
alta
probabilidad
ejemplo
considere
sistema
cifrado
bloques
bits
Tabla
8.1
Suponga
texto
010010010
Alicia
cifra
secuencia
directamente
incluir
aleatoriedad
texto
cifrado
resultante
101101101
Tom√°s
captura
texto
cifrado
bloques
cifrado
suponer
correctamente
bloques
texto
coincidentes
suponga
lugar
Alicia
genera
bloques
aleatorios
r(1
001
r(2
111
r(3
100
aplica
t√©cnica
anteriormente
explicada
generar
texto
cifrado
c(1
100
c(2
010
c(3
000
Observe
bloques
texto
cifrado
distintos
bloques
texto
iguales
Alicia
env√≠a
c(1
r(1
c(2
r(2
lector
verificar
Benito
obtener
texto
original
utilizando
clave
compartida
KS
lector
astuto
deducido
introducir
aleatoriedad
resuelve
problema
crea
concreto
Alicia
transmitir
doble
bits
bit
cifrado
Alicia
enviar
bit
aleatorio
dupli-
cando
ancho
banda
requerido
misa
repicando
sistemas
cifrado
bloque
suelen
utilizar
t√©cnica
denominada
Encadena-
miento
bloques
cifrados
CBC
Cipher
Block
Chaining
idea
b√°sica
consiste
enviar
valor
aleatorio
mensaje
emisor
recep-
tor
utilicen
bloques
codificados
calculados
lugar
subsiguientes
n√∫meros
alea-
torios
Espec√≠ficamente
CBC
opera
cifrar
mensaje
flujo
datos
emisor
genera
cadena
aleatoria
bits
denominada
Vector
inicializaci√≥n
IV
Initialization
Vector
Denotaremos
vector
inicializaci√≥n
c(0
emisor
env√≠a
vector
IV
receptor
cifrar
bloque
emisor
calcula
m(1
/H17053c(0
calcula
operaci√≥n
OR
exclusiva
bloque
texto
IV
continuaci√≥n
introduce
resul-
tado
algoritmo
cifrado
bloque
obtener
correspondiente
bloque
texto
cifrado
c(1
KS(m(1
/H17053c(0
emisor
env√≠a
bloque
cifrado
c(1
receptor
i-√©simo
bloque
emisor
genera
i-√©simo
bloque
texto
cifrado
utilizando
f√≥rmula
c(i
KS(m(i
/H17053c(i
/H110021
Examinemos
consecuencias
m√©todo
lugar
receptor
continuar√°
pudiendo
recuperar
mensaje
original
receptor
reciba
c(i
descifrar√°
mensaje
KS
obtener
s(i
m(i
/H17053c(i
puesto
receptor
conoce
c(i
obtener
bloque
texto
par-
tir
f√≥rmula
m(i
s(i
/H17053c(i
lugar
bloques
texto
id√©nticos
textos
cifrados
correspondientes
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
663tercer
lugar
emisor
env√≠e
vector
IV
cifrar
intruso
descifrar
bloques
texto
cifrado
conocen
clave
secreta
S.
emisor
env√≠a
bloque
sobrecarga
vector
IV
ancho
banda
incrementa
forma
pr√°cticamente
despreciable
asumiendo
estemos
utilizando
mensajes
longitud
compuestos
centenares
bloques
ejemplo
determinemos
texto
cifrado
sistema
cifrado
blo-
bits
Tabla
8.1
utilizando
texto
010010001
vector
IV
c(0
001
lugar
emisor
utiliza
vector
IV
calcular
c(1
KS(m(1
/H17053
c(0
100
continuaci√≥n
calcula
c(2
KS(m(2
/H17053c(1
KS(010
/H17053
100
000
c(3
KS(m(3
/H17053c(2
KS(010
/H17053000
101
lector
verificar
receptor
cono-
ciendo
vector
IV
clave
KS
recuperar
texto
original
t√©cnica
CBC
importante
consecuencia
hora
dise√±ar
protocolos
red
seguros
necesitaremos
proporcionar
mecanismo
protocolo
transferir
vector
IV
emisor
receptor
Posteriormente
cap√≠tulo
veremos
diversos
protocolos
8.2.2
Cifrado
clave
p√∫blica
2.000
a√±os
√©poca
cifrado
C√©sar
d√©cada
1970
comunicaci√≥n
cifrada
requer√≠a
interlocutores
comunicando
com-
partieran
clave
secreta
clave
sim√©trica
utilizada
cifrado
descifrado
dificultad
t√©cnica
ambas
partes
acordar
clave
secreta
requiere
comuniquen
presumiblemente
forma
segura
ambas
partes
reunirse
acordar
persona
clave
ejemplo
centuriones
C√©sar
reunirse
termas
romanas
sucesivo
comunicarse
m√©todo
cifrado
mundo
conec-
tado
red
interlocutores
comunicando
llegar
encontrarse
forma
f√≠sica
lleguen
conversar
red
partes
comuniquen
forma
cifrada
antemano
clave
secreta
compartida
1976
Diffie
Hellman
Diffie
1976
inventaron
algoritmo
conoce
algoritmo
intercambio
claves
Diffie-Hellman
precisamente
enfoque
radicalmente
distinto
maravillosamente
elegante
comunicaciones
seguras
conducido
desarrollo
sistemas
actuales
clave
p√∫blica
veremos
sistemas
criptogr√°ficos
clave
p√∫blica
disfrutan
diversas
propiedades
atractivas
√∫tiles
cifrado
autenticaci√≥n
firmas
digitales
intere-
sante
observar
recientemente
salido
luz
ideas
similares
Dif-
fie
1976
RSA
1978
desarrolladas
independientemente
principios
d√©cada
1970
serie
informes
secretos
elaborados
investigadores
Grupo
seguridad
electr√≥nica
comunicaciones
Reino
Unido
Ellis
1987
suele
suceder
ideas
surgir
forma
independiente
lugares
distintos
afortunadamente
avances
relativos
sistemas
clave
p√∫blica
tuvieron
lugar
privado
vista
p√∫blico
Conceptualmente
utilizaci√≥n
sistema
criptograf√≠a
clave
p√∫blica
simple
Suponga
Alicia
comunicarse
Benito
muestra
Figura
8.6
lugar
Benito
Alicia
compartan
√∫nica
clave
secreta
caso
sistemas
clave
sim√©trica
Benito
receptor
mensajes
Alicia
dispone
664
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
664lugar
claves
clave
p√∫blica
disponible
mundo
incluyendo
Tom√°s
intruso
clave
privada
Benito
conoce
Utilizaremos
notaci√≥n
KB
KB
referencia
claves
p√∫blica
privada
Benito
respectivamente
comunicarse
Benito
Alicia
consulta
clave
p√∫blica
Benito
cifra
mensaje
destinado
Benito
utilizando
clave
p√∫blica
Benito
algoritmo
cifrado
conocido
ejemplo
algoritmo
estandarizado
Alicia
calcula
KB
Benito
recibe
mensaje
cifrado
Alicia
utiliza
clave
privada
algoritmo
desci-
frado
conocido
ejemplo
algoritmo
estandarizado
descifrar
mensaje
cifrado
Alicia
Benito
calcula
KB
KB
veremos
t√©cnicas
algoritmos
cifrado
descifrado
seleccionar
claves
p√∫blicas
privadas
tales
KB
KB
tales
aplicar
clave
p√∫blica
Benito
KB
mensaje
obtener
KB
aplicar
clave
privada
Benito
KB
versi√≥n
cifrada
calcular
KB
KB
vuelve
obtener
m.
resultado
realmente
maravi-
lloso
Alicia
utilizar
clave
Benito
p√∫blicamente
disponi-
ble
enviar
mensaje
secreto
Benito
distribuir
clave
secreta
veremos
intercambiar
papel
clave
p√∫blica
clave
privada
obtener
resultado
KB
KB
KB
KB
m.
utilizaci√≥n
criptograf√≠a
clave
p√∫blica
conceptualmente
sim-
ple
lector
surjan
inmediatamente
preguntas
pro-
blema
intruso
intercepte
mensaje
cifrado
Alicia
obtendr√°
datos
sentido
intruso
conoce
clave
clave
p√∫blica
Benito
dis-
ponible
mundo
vea
algoritmo
Alicia
utilizado
cifrado
Tom√°s
montar
ataque
texto
conocido
utilizando
algoritmo
cifrado
estandarizado
clave
cifrado
Benito
p√∫blicamente
disponible
codificar
mensaje
desee
Tom√°s
intentar
ejemplo
codificar
mensajes
partes
mensajes
piense
Alicia
enviar
suplantarla
Obviamente
criptograf√≠a
clave
p√∫blica
funcionar
selec-
ci√≥n
claves
cifrado
descifrado
hacerse
forma
imposible
suficientemente
dif√≠cil
pr√°cticamente
imposible
intruso
determinar
clave
privada
Benito
descifrar
adivinar
men-
8.2
PRINCIPIOS
CRIPTOGRAF√çA
665
Algoritmo
cifrado
Texto
cifrado
Algoritmo
descifrado
Mensaje
texto
Mensaje
texto
Clave
descifrado
privada
KB
KB
KB
KB
Clave
cifrado
p√∫blicaKB
Figura
8.6
Criptograf√≠a
clave
p√∫blica
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
665saje
Alicia
enviado
Benito
problema
potencial
clave
cifrado
Benito
p√∫blica
cualquiera
enviar
mensaje
cifrado
Benito
incluyendo
Alicia
alguien
haga
pasar
Alicia
caso
√∫nica
clave
secreta
compartida
caso
puesto
enviar
mensaje
cifrado
Benito
utilizando
clave
p√∫blicamente
disponible
necesaria
firma
digital
tema
estudiaremos
Secci√≥n
8.3
vincular
emisor
mensaje
RSA
existir
algoritmos
correspondan
descripci√≥n
realizada
algoritmo
RSA
llamado
inventores
Ron
Rivest
Adi
Shamir
Leonard
Adle-
man
convertido
sin√≥nimo
criptograf√≠a
clave
p√∫blica
lugar
funciona
RSA
examinaremos
funciona
RSA
extenso
operaciones
aritm√©ticas
m√≥dulo
n.
repasar
brevemente
aritm√©tica
modular
Recuerde
mod
simplemente
indica
resto
dividir
ejemplo
19
mod
aritm√©tica
modular
reali-
zan
operaciones
usuales
suma
multiplicaci√≥n
exponenciaci√≥n
resultado
operaci√≥n
sustituye
resto
entero
obtiene
dividir
resul-
tado
n.
realizaci√≥n
operaciones
suma
multiplicaci√≥n
aritm√©tica
modu-
lar
facilita
teniendo
siguientes
f√≥rmulas
utilidad
mod
mod
mod
mod
mod
mod
mod
mod
mod
mod
mod
mod
deduce
f√≥rmula
mod
n)d
mod
mod
identidad
veremos
resulta
√∫til
Supongamos
Alicia
desea
enviar
Benito
mensaje
cifrado
RSA
muestra
Figura
8.6
exposici√≥n
RSA
mente
mensaje
patr√≥n
bits
patr√≥n
bits
repre-
sentarse
un√≠voca
n√∫mero
entero
longitud
patr√≥n
bits
ejemplo
suponga
mensaje
patr√≥n
bits
1001
mensaje
representarse
entero
decimal
cifrar
mensaje
RSA
equiva-
lente
cifrar
n√∫mero
entero
√∫nico
representa
mensaje
RSA
componentes
interrelacionados
‚Ä¢L
‚Ä¢E
generar
claves
RSA
p√∫blica
privada
Benito
cabo
pasos
siguientes
Elige
n√∫meros
primos
q.
valores
dif√≠cil
romper
algoritmo
RSA
tardar√°
codificaci√≥n
decodificaci√≥n
RSA
Laborato-
ries
recomienda
producto
orden
1.024
bits
desea
obtener
informaci√≥n
acerca
determinar
n√∫meros
primos
consulte
Caldwell
2007
666
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6662
Calcula
pq
1)(q
Elige
n√∫mero
menor
factor
com√∫n
distinto
z.
caso
n√∫meros
primos
relativos
emplea
letra
valor
utilizar√°
cifrado
encriptaci√≥n
Determina
n√∫mero
ed
divisible
forma
exacta
resto
cero
letra
emplea
valor
utilizar√°
descifrado
forma
seleccionamos
ed
mod
clave
p√∫blica
Benito
pone
disposici√≥n
mundo
KB
pareja
n√∫meros
clave
privada
KB
pareja
n√∫meros
cifrado
Alicia
descifrado
cabo
Benito
realizan
‚Ä¢S
entero
codificaci√≥n
Alicia
cabo
operaci√≥n
expo-
nenciaci√≥n
calcula
resto
entero
obtiene
dividir
n.
palabras
valor
cifrado
mensaje
texto
Alicia
mod
patr√≥n
bits
correspondiente
texto
cifrado
env√≠a
Benito
‚Ä¢P
Benito
c√°lculo
cd
mod
requiere
clave
privada
Veamos
ejemplo
simple
RSA
Suponga
Benito
elige
Evidente-
mente
valores
peque√±os
seguros
35
24
Benito
selecciona
24
factores
comunes
Benito
elige
29
/H1108029
ed
divisible
forma
exacta
24
Beni-
to
p√∫blicos
valores
35
mantiene
secreto
valor
29
Obser-
vando
valores
p√∫blicos
supongamos
Alicia
enviar
Benito
letras
e.
Interpretando
letra
n√∫mero
comprendido
26
corres-
pondi√©ndose
26
Alicia
Benito
llevan
cabo
operaciones
cifrado
descifrado
mostradas
Tablas
8.2
8.3
respectivamente
Observe
ejemplo
consideramos
letras
mensaje
distinto
ejemplo
realista
convertir
letras
representaciones
ASCII
bits
cifrar
entero
correspondiente
patr√≥n
32
bits
resultante
ejemplo
rea-
lista
genera
n√∫meros
imprimirlos
ejemplo
simple
Tablas
8.2
8.3
lugar
n√∫meros
extremada-
mente
puesto
visto
anteriormente
longitu-
des
centenares
bits
plantearnos
cuestiones
pr√°cticas
relativas
RSA
seleccionan
n√∫meros
primos
eligen
cabo
exponenciaci√≥n
n√∫meros
an√°lisis
importantes
cuestiones
queda
alcance
texto
lector
consultar
Kaufman
1995
referencias
incluye
detalles
8.2
PRINCIPIOS
CRIPTOGRAF√çA
667
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
667Letra
texto
representaci√≥n
num√©rica
Texto
cifrado
mod
12
248832
17
15
759375
15
22
5153632
22
3125
10
Tabla
8.2
Cifrado
RSA
Alicia
35
Texto
cifrado
cc
cd
mod
Letra
texto
17
4819685721067509150915091411825223071697
12
15
127834039403948858939111232757568359375
15
22
851643319086537701956194499721106030592
22
10
1000000000000000000000000000000
Tabla
8.3
Descifrado
RSA
Benito
29
35
Claves
sesi√≥n
resaltar
exponenciaci√≥n
requerida
RSA
proceso
con-
sume
tiempo
contrario
DES
100
r√°pido
software
1.000
10.000
r√°pido
hardware
RSA
Fast
2007
resultado
RSA
utiliza
pr√°ctica
combinaci√≥n
mecanismo
criptogr√°-
fico
clave
sim√©trica
ejemplo
Alicia
desea
enviar
Benito
cantidad
datos
cifrados
elegir√≠a
clave
codificar
pro-
pios
datos
clave
conoce
clave
sesi√≥n
designa
KS
Alicia
comunicar
Benito
clave
sesi√≥n
clave
sim√©trica
compartida
utilizar√°n
sistema
cifrado
clave
sim√©trica
ejemplo
DES
AES
Alicia
cifra
clave
sesi√≥n
utilizando
clave
p√∫blica
Benito
calcula
KS)e
mod
n.
Benito
recibe
clave
sesi√≥n
cifrada
RSA
descifra
obtener
clave
sesi√≥n
KS
Benito
conoce
clave
sesi√≥n
Alicia
emplear√°
transferir
datos
cifrados
funciona
RSA
cifrado
descifrado
RSA
m√°gico
aplicar
algoritmo
cifrado
algoritmo
descifrado
recupera
mensaje
original
comprender
funciona
RSA
volvamos
fijarnos
ecuaci√≥n
pq
n√∫meros
primos
utilizados
algoritmo
RSA
Recuerde
cifrado
RSA
mensaje
representado
√∫nicamente
entero
eleva
potencia
utilizando
aritm√©tica
m√≥dulo
mod
668
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
668El
descifrado
elevando
valor
potencia
utilizando
aritm√©tica
m√≥dulo
n.
resultado
paso
cifrado
seguido
paso
descifrado
mod
n)d
mod
Veamos
acerca
valor
anteriormente
propiedad
importante
aritm√©tica
modular
mod
n)d
mod
ad
mod
cualesquiera
valores
d.
utilizando
propiedad
mod
n)d
mod
med
mod
queda
demostrar
med
mod
m.
intentando
eliminar
magia
acerca
funciona
RSA
demostrar
igualdad
necesitamos
utili-
zar
resultado
m√°gico
extra√≠do
teor√≠a
n√∫meros
Espec√≠ficamente
necesitamos
resultado
establece
primos
pq
1)(q
xy
mod
x(y
mod
mod
Kaufman
1995
Aplicando
resultado
ed
med
mod
m(ed
mod
mod
recuerde
seleccionado
ed
mod
med
mod
m1
mod
exactamente
resultado
est√°bamos
buscando
Elevando
lugar
potencia
cifrando
elevando
potencia
descifrando
obte-
nemos
valor
original
m.
maravilloso
elevamos
potencia
potencia
invertimos
orden
cifrado
desci-
frado
realizando
lugar
operaci√≥n
descifrado
aplicando
operaci√≥n
cifrado
obtenemos
valor
original
m.
estupendo
resultado
concluye
inmediatamente
reglas
aritm√©tica
modular
md
mod
n)e
mod
mde
mod
med
mod
mod
n)d
mod
seguridad
algoritmo
RSA
basa
algoritmos
cono-
cidos
factorizar
r√°pidamente
n√∫mero
caso
valor
p√∫blico
obtener
n√∫meros
primos
q.
alguien
conociera
calcular
f√°cil-
mente
valor
p√∫blico
clave
secreta
d.
conoce
seguri-
dad
algoritmos
r√°pidos
factorizar
n√∫mero
sentido
seguridad
RSA
garantizada
algoritmo
popular
cifrado
clave
p√∫blica
algoritmo
Diffie-Hellman
analizaremos
brevemente
problemas
repaso
algoritmo
Diffie-Hellman
vers√°til
RSA
sentido
utilizarse
cifrar
mensajes
longitud
arbitraria
emplearse
establecer
clave
sesi√≥n
sim√©trica
utilizar√°
cifrar
mensajes
8.3
Integridad
mensajes
autenticaci√≥n
puntos
terminales
secci√≥n
visto
utilizarse
cifrado
proporcionar
confi-
dencialidad
entidades
desean
comunicarse
secci√≥n
volver
nues-
8.3
INTEGRIDAD
MENSAJES
AUTENTICACI√ìN
PUNTOS
TERMINALES
669
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
669tra
atenci√≥n
tema
criptogr√°fico
igualmente
importante
proporcionar
integridad
mensajes
t√©cnica
conocida
autenticaci√≥n
mensajes
integri-
dad
mensajes
analizaremos
temas
relacionados
secci√≥n
firmas
digita-
autenticaci√≥n
puntos
terminales
definir
problema
integridad
mensajes
utilizando
Alicia
Benito
Suponga
Benito
recibe
mensaje
cifrado
texto
cree
mensaje
enviado
Alicia
autenticar
mensaje
Benito
verificar
origen
mensaje
efectivamente
Alicia
mensaje
alterado
viajaba
Benito
Veremos
Secciones
8.4
8.7
problema
integridad
mensajes
preocupaci√≥n
cr√≠tica
pr√°cticamente
protocolos
red
seguros
ejemplo
espec√≠fico
considere
red
computadoras
empleando
algoritmo
enrutamiento
enlace
ejemplo
OSPF
determinar
rutas
pareja
routers
red
v√©ase
Cap√≠tulo
algoritmo
enlace
router
necesita
multidifundir
mensaje
enlace
restantes
routers
red
mensaje
enlace
router
incluye
lista
vecinos
directamente
conectados
costes
direc-
tos
vecinos
router
recibe
mensajes
enlace
routers
crear
mapa
completo
red
ejecutar
algoritmo
enruta-
miento
coste
m√≠nimo
configurar
tabla
reenv√≠o
ataque
relativamente
senci-
llo
algoritmo
enrutamiento
consiste
Tom√°s
distribuya
mensajes
falsos
enlace
informaci√≥n
incorrecta
acerca
enlaces
necesidad
integridad
mensajes
router
recibe
mensaje
enlace
procedente
router
verificar
efectivamente
router
creado
mensaje
alterado
mensaje
encontraba
tr√°nsito
secci√≥n
describir
popular
t√©cnica
integridad
mensajes
utiliza
protocolos
red
seguros
tratar
tema
importante
campo
criptograf√≠a
funciones
hash
criptogr√°ficas
8.3.1
Funciones
hash
criptogr√°ficas
muestra
Figura
8.7
funci√≥n
hash
toma
entrada
calcula
cadena
tama√±o
fijo
H(m
conocida
nombre
hash
suma
comprobaci√≥n
Internet
Cap√≠tulo
c√≥digos
CRC
Cap√≠tulo
cumplen
definici√≥n
funci√≥n
hash
criptogr√°fica
necesita
exhibir
propiedad
adicional
‚Ä¢E
tales
H(x
H(y
informal
podr√≠amos
propiedad
significa
computa-
cionalmente
impracticable
intruso
sustituya
mensaje
protegido
fun-
ci√≥n
hash
mensaje
H(m
mensaje
valor
hash
mensaje
creado
emisor
intruso
generar
contenido
mensaje
valor
hash
mensaje
original
670
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
670Vamos
verificar
suma
comprobaci√≥n
simple
suma
comproba-
ci√≥n
Internet
proporcionar√≠a
funci√≥n
hash
criptogr√°fica
segura
lugar
aritm√©tica
complemento
suma
comprobaci√≥n
Internet
calculemos
suma
comprobaci√≥n
tratando
car√°cter
byte
sumando
bytes
fragmentos
bytes
Suponga
Benito
Alicia
100,99
euros
env√≠a
mensaje
confirmaci√≥n
cadena
texto
DEBO100
.99BENITO
representaci√≥n
ASCII
notaci√≥n
hexadecimal
letras
44
45
42
4F,31
30
30
2E
39
39
42
45
4E
49
54
4F.
Figura
8.8
superior
muestra
suma
comprobaci√≥n
bytes
mensaje
FC
F8
09
11
mensaje
ligeramente
distinto
costoso
Benito
muestra
inferior
figura
mensajes
DEBO100.99BENITO
DEBO900.19BENITO
suma
comprobaci√≥n
sencillo
algoritmo
suma
comprobaci√≥n
violar√≠a
requisito
mencionado
Dados
datos
originales
sencillo
encontrar
conjunto
datos
suma
comprobaci√≥n
Obviamente
prop√≥sitos
seguridad
nece-
sitaremos
funci√≥n
hash
potente
mera
suma
comprobaci√≥n
algoritmo
hash
MD5
Ron
Rivest
RFC
1321
utiliza
ampliamente
algoritmo
calcula
valor
hash
128
bits
proceso
pasos
con-
siste
paso
relleno
a√±adir
seguido
n√∫mero
ceros
suficiente
longitud
mensaje
satisfaga
condiciones
paso
agregaci√≥n
a√±adir
representaci√≥n
64
bits
longitud
mensaje
operaci√≥n
relleno
inicializaci√≥n
acumulador
bucle
procesan
blo-
ques
16
palabras
mensaje
pasadas
sucesivas
Consulte
RFC
1321
descripci√≥n
MD5
incluyendo
implementaci√≥n
c√≥digo
fuente
algoritmo
principal
hash
utiliza
denominado
algo-
ritmo
hash
seguro
SHA-1
Secure
Hash
Algorithm
FIPS
1995
algoritmo
basado
serie
principios
similares
utilizados
dise√±o
MD4
RFC
1320
predecesor
MD5
SHA-1
est√°ndar
federal
gobierno
Uni-
obligatorio
requiera
algoritmo
hash
criptogr√°fico
aplica-
ciones
gubernamentales
algoritmo
produce
resumen
mensaje
message
digest
160
bits
longitud
salida
SHA-1
seguro
8.3
INTEGRIDAD
MENSAJES
AUTENTICACI√ìN
PUNTOS
TERMINALES
671
Funci√≥n
hash
Mensaje
Querida
Alicia
carta
larga
cosas
decirte
Benito
Hash
longitud
fija
H(m
Opgmdvboijrtnsd
gghPPdogm;lcvkb
Figura
8.7
Funciones
hash
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6718.3.2
C√≥digo
autenticaci√≥n
mensaje
Vo
funciones
hash
veamos
aproximaci√≥n
podr√≠amos
garantizar
inte-
gridad
mensajes
Alicia
crea
mensaje
calcula
valor
hash
H(m
ejemplo
SHA-1
Alicia
a√±ade
continuaci√≥n
H(m
mensaje
creando
mensaje
ampliado
H(m
env√≠a
Benito
Benito
recibe
mensaje
ampliado
calcula
H(m
H(m
Benito
concluye
correcto
enfoque
fallo
fundamental
intruso
Tom√°s
crear
mensaje
ficticio
m¬¥e
rH(m
enviar
Benito
H(m
Benito
recibiera
mensaje
comprobaciones
paso
ser√≠an
correctas
Benito
consciente
producido
enga√±o
garantizar
integridad
mensajes
utilizar
funciones
hash
cripto-
gr√°ficas
Alicia
Benito
necesitan
secreto
compartido
s.
secreto
compartido
cadena
bits
denomina
clave
autenticaci√≥n
Utilizando
secreto
compartido
garantizarse
forma
integridad
mensajes
Alicia
crea
mensaje
concatena
crear
calcula
valor
hash
H(m
ejemplo
SHA-1
H(m
denomina
c√≥digo
autenticaci√≥n
mensajes
MAC
Message
Authentication
Code
Alicia
a√±ade
c√≥digo
MAC
mensaje
creando
mensaje
ampliado
H(m
env√≠a
Benito
Benito
recibe
mensaje
ampliado
conociendo
calcula
valor
MAC
H(m
H(m
Benito
concluye
correcto
672
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Figura
8.8
mensaje
inicial
mensaje
fraudulento
suma
comprobaci√≥n
Mensaje
DEBO
Representaci√≥n
ASCII
44
45
42
4F
31
30
30
2E
39
39
42
45
4E
49
54
4F
FC
F8
09
11
Suma
comprobaci√≥n
Mensaje
DEBO
Representaci√≥n
ASCII
44
45
42
4F
39
30
30
2E
31
39
42
45
4E
49
54
4F
FC
F8
09
11
Suma
comprobaci√≥n
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
672En
Figura
8.9
muestra
resumen
procedimiento
lector
fijarse
siglas
MAC
corresponden
Message
Authentication
Code
siglas
MAC
utilizadas
protocolos
capa
enlace
correspon-
den
Medium
Access
Control
caracter√≠stica
conveniente
valores
MAC
necesita
algoritmo
cifrado
aplicaciones
incluyendo
algoritmo
enruta-
miento
enlace
descrito
anteriormente
entidades
comunicando
preocupan
integridad
mensajes
confidencialidad
importa
Utilizando
c√≥digo
MAC
entidades
autenticar
mensajes
intercambian
incluir
complejos
algoritmos
cifrado
proceso
garant√≠a
integridad
cabr√≠a
esperar
a√±os
propuesto
diversos
est√°ndares
valores
MAC
est√°ndar
popular
HMAC
utilizarse
MD5
SHA-1
pr√°ctica
HMAC
pasar
datos
clave
autenticaci√≥n
tra-
v√©s
funci√≥n
hash
Kaufman
1995
RFC
2104
quedando
pendiente
cuesti√≥n
importante
distribuimos
clave
secreta
autenticaci√≥n
distintas
entidades
comunicarse
ejemplo
algoritmo
enrutamiento
enlace
necesitaremos
distribuir
clave
autenticaci√≥n
routers
sistema
aut√≥nomo
Observe
routers
utilizar
clave
autenticaci√≥n
administrador
red
cabo
distribuci√≥n
visitando
f√≠sicamente
rou-
ters
administrador
red
perezoso
router
clave
p√∫blica
administrador
distribuir
clave
autenticaci√≥n
cual-
quiera
routers
cifr√°ndola
clave
p√∫blica
router
enviando
clave
cifrada
router
red
8.3.3
Firmas
digitales
Piense
n√∫mero
firmado
nombre
papel
semana
acostumbrados
firmar
cheques
recibos
tarjetas
cr√©dito
documentos
legales
cartas
firma
atestigua
cual-
8.3
INTEGRIDAD
MENSAJES
AUTENTICACI√ìN
PUNTOS
TERMINALES
673
Internet
Comparar
Clave
Mensaje
Secreto
compartido
H(m+s
H(m+s
Figura
8.9
C√≥digo
autenticaci√≥n
mensaje
MAC
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
673quier
persona
aceptado
acordado
contenido
documento
mundo
digital
surge
necesidad
indicar
propietario
creador
docu-
mento
explicitar
contenido
documento
firma
digital
t√©cnica
criptogr√°fica
permite
objetivos
mundo
digital
ocurre
firmas
manuscritas
firmas
digitales
realizarse
forma
verificables
falsificables
demostrar
documento
firmado
persona
firmado
persona
firma
verificable
persona
firmado
documento
firma
falsificada
Consideremos
podr√≠amos
dise√±ar
esquema
firma
digital
Observe
Benito
firma
mensaje
mensaje
distintivo
Benito
pensar
asociar
valor
MAC
firma
cuyo
caso
crear√≠a
valor
MAC
a√±adiendo
clave
permite
distinguirle
resto
personas
mensaje
aplicando
funci√≥n
hash
Alicia
pudiera
verificar
firma
deber√≠a
disponer
copia
clave
cuyo
caso
clave
dejar√≠a
distintiva
Benito
c√≥digos
MAC
permiten
objetivo
caso
Recuerde
criptograf√≠a
clave
p√∫blica
Benito
dispone
sendas
claves
p√∫blica
privada
pareja
formada
claves
distintiva
Benito
criptograf√≠a
clave
p√∫blica
candidato
excelente
proporcionar
meca-
nismo
firma
digital
Veamos
estructura
mecanismo
Suponga
Benito
desea
firmar
digitalmente
documento
m.
pensar
documento
archivo
mensaje
Benito
firmar
enviar
muestra
Figura
8.10
firmar
documento
Benito
utiliza
simplemente
clave
privada
KB
calcular
KB
entrada
parecer
extra√±o
Benito
uti-
lice
clave
privada
vimos
Secci√≥n
8.2
utiliza
descifrar
men-
saje
cifrado
clave
p√∫blica
firmar
documento
recuerde
cifrado
descifrado
cosa
operaciones
matem√°ticas
consistentes
elevar
potencia
RSA
v√©ase
Secci√≥n
8.2
recuerde
obje-
tivo
Benito
cifrar
ocultar
contenido
documento
firmarlo
verificable
falsificable
firma
digital
documento
realizada
Benito
KB
674
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Algoritmo
cifrado
Mensaje
Clave
privada
Benito
KB
Querida
Alicia
Siento
podido
escribirte
tiempo
Benito
Mensaje
firmado
KB
fadfg54986fgnzmcnv
T98734ngldskg02j
ser09tugkjdflg
Figura
8.10
Creaci√≥n
firma
digital
documento
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
674¬øCumple
firma
digital
KB
requisitos
verificable
falsifica-
ble
Suponga
Alicia
dispone
KB
demostrar
tribunal
consecuencia
tipo
litigio
Benito
firmado
documento
√∫nica
persona
haberlo
firmado
Alicia
toma
clave
p√∫blica
Benito
KB
aplica
firma
digital
KB
asociada
documento
m.
calcula
KB
KB
voil√†
gesto
dram√°tico
obtiene
corresponde
exactamente
documento
original
Alicia
argumenta
continuaci√≥n
Benito
fir-
mado
documento
siguientes
razones
‚Ä¢Q
Benito
KB
hora
calcular
firma
KB
KB
KB
m.
‚Ä¢L
KB
Benito
Recuerde
exposici√≥n
RSA
Secci√≥n
8.2
conocimiento
clave
p√∫blica
KB
sirve
hora
determinar
clave
privada
KB
√∫nica
persona
KB
generado
pareja
claves
KB
KB
Benito
Observe
suponiendo
Benito
proporcionado
clave
privada
KB
robado
KB
importante
observar
documento
original
modificara
obtener
forma
alternativa
firma
Benito
generara
v√°lida
KB
KB
concluir
fir-
digitales
proporcionan
mecanismo
integridad
mensajes
permi-
tiendo
receptor
verificar
mensaje
alterado
verificar
origen
problemas
firma
datos
mecanismos
cifrado
cifrado
descifrado
computacionalmente
caros
Dada
cantidad
adicional
procesamiento
cifrado
descifrado
exigen
firmar
datos
v√≠a
cifr√°ndolos
des-
cifr√°ndolos
completamente
matar
moscas
ca√±onazos
t√©cnica
efi-
ciente
consiste
introducir
funciones
hash
mecanismo
firma
digital
Recuerde
Secci√≥n
8.3.2
algoritmo
hash
toma
mensaje
longitud
arbitraria
calcula
especie
huella
digital
longitud
fija
mensaje
designamos
H(m
Utilizando
funci√≥n
hash
Benito
firma
valor
hash
mensaje
lugar
fir-
mar
mensaje
Benito
calcula
KB
H(m
Puesto
H(m
general-
mente
peque√±o
mensaje
original
capacidad
proceso
necesario
generar
firma
digital
reduce
sustancialmente
contexto
env√≠o
mensaje
Alicia
Benito
Figura
8.11
pro-
porciona
resumen
procedimiento
operativo
requerido
crear
firma
digital
Benito
pasar
mensaje
original
longitud
funci√≥n
hash
con-
tinuaci√≥n
firma
digitalmente
valor
hash
resultante
utilizando
clave
privada
env√≠a
Alicia
mensaje
original
texto
resumen
mensaje
digitalmente
firmado
denominaremos
firma
digital
Figura
8.12
proporciona
resumen
procedimiento
operativo
firma
Alicia
aplica
clave
p√∫blica
emisor
mensaje
obtener
valor
hash
Asimismo
aplica
funci√≥n
hash
mensaje
recibido
texto
obtener
valor
hash
valores
coinciden
Alicia
segura
acerca
integridad
autor
mensaje
seguir
comparar
brevemente
firmas
digitales
c√≥digos
MAC
paralelismos
sistemas
8.3
INTEGRIDAD
MENSAJES
AUTENTICACI√ìN
PUNTOS
TERMINALES
675
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
675varias
diferencias
sutiles
importantes
firmas
digitales
c√≥digos
MAC
comienzan
mensaje
documento
obtener
valor
MAC
mensaje
a√±adimos
mensaje
clave
autenticaci√≥n
calculamos
valor
hash
resul-
tado
Observe
hora
crear
valor
MAC
involucrado
mecanismo
cifrado
clave
p√∫blica
clave
sim√©trica
crear
firma
digital
cal-
culamos
valor
hash
mensaje
ciframos
mensaje
clave
privada
utilizando
criptograf√≠a
clave
p√∫blica
firma
digital
t√©cnica
pesada
requiere
Infraestructura
clave
p√∫blica
PKI
Public
Key
Infrastruc-
ture
subyacente
existan
autoridades
certificaci√≥n
describen
Veremos
Secci√≥n
8.4
PGP
sistema
popular
correo
elec-
tr√≥nico
seguro
utiliza
firmas
digitales
garantizar
integridad
mensajes
visto
OSPF
utiliza
valores
MAC
garantizar
integridad
mensajes
Secciones
8.5
8.6
veremos
valores
MAC
emplean
protocolos
seguridad
populares
capas
transporte
red
Certificaci√≥n
clave
p√∫blica
importante
aplicaci√≥n
firmas
digitales
certificaci√≥n
clave
p√∫blica
certificar
clave
p√∫blica
pertenece
entidad
espec√≠fica
t√©cnicas
certificaci√≥n
clave
p√∫blica
utilizan
protocolos
populares
seguridad
comunicaciones
red
incluyendo
IPsec
SSL
tratar
comprender
problema
consideremos
versi√≥n
comercio
electr√≥-
nico
Internet
cl√°sico
servicio
pizza
domicilio
Alicia
trabaja
sector
venta
pizza
domicilio
acepta
pedidos
Internet
Benito
amante
676
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Figura
8.11
Transmisi√≥n
mensaje
firmado
digitalmente
Clave
privada
Benito
KB
Funci√≥n
hash
Mensaje
Querida
Alicia
carta
larga
decirte
Benito
Hash
longitud
fija
Opgmdvboijrtnsd
gghPPdogm;lcvkb
Hash
firmadoPaquete
datos
enviado
Alicia
Fgkopdgoo69cmxw
54psdterma[asofmz
Algoritmo
cifrado
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
676pizza
env√≠a
Alicia
mensaje
texto
incluye
direcci√≥n
particular
tipo
pizza
desea
mensaje
Benito
incluye
firma
digital
valor
hash
firmado
mensaje
original
demostrar
Alicia
ver-
dadero
origen
mensaje
verificar
firma
Alicia
obtiene
clave
p√∫blica
Benito
acudiendo
servidor
clave
p√∫blica
mensaje
correo
electr√≥nico
comprueba
firma
digital
forma
asegura
Benito
adolescente
gracioso
pedido
procedimiento
correcto
intruso
Tom√°s
entra
escena
muestra
Figura
8.13
Tom√°s
tratando
gastar
broma
env√≠a
mensaje
Alicia
Benito
proporciona
direcci√≥n
particular
Benito
pide
pizza
mensaje
incluye
clave
p√∫blica
Tom√°s
Alicia
asume
naturalmente
clave
p√∫blica
Benito
Tom√°s
adjunta
firma
digital
creado
clave
privada
recibir
mensaje
Alicia
aplica
clave
p√∫blica
Tom√°s
pensando
Benito
firma
digital
concluye
mensaje
texto
creado
Benito
Benito
que-
dar√°
sorprendido
repartidor
lleve
casa
pizza
pepperoni
anchoas
ejemplo
criptograf√≠a
clave
p√∫blica
resulte
√∫til
necesitamos
verificar
disponemos
clave
p√∫blica
8.3
INTEGRIDAD
MENSAJES
AUTENTICACI√ìN
PUNTOS
TERMINALES
677
Clave
publica
Benito
KB
Mensaje
Querida
Alicia
carta
larga
cosas
contarte
Benito
Hash
longitud
fija
Opgmdvboijrtnsd
gghPPdogm;lcvkb
Hash
firmado
Fgkopdgoo69cmxw
54psdterma[asofmz
Funci√≥n
hash
Comparar
Hash
longitud
fija
Opgmdvboijrtnsd
gghPPdogm;lcvkb
Algoritmo
cifrado
Figura
8.12
Verificaci√≥n
mensaje
firmado
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
677entidad
persona
router
navegador
etc.
comunicarnos
ejemplo
Alicia
comunicarse
Benito
empleando
criptograf√≠a
clave
p√∫blica
nece-
sita
verificar
clave
p√∫blica
supone
pertenece
Benito
verdaderamente
Benito
asociaci√≥n
clave
p√∫blica
entidad
concreta
normalmente
realiza
Autoridad
certificaci√≥n
CA
Certification
Authority
cuyo
trabajo
consiste
validar
identidades
emitir
certificados
autoridad
certificaci√≥n
desempe√±a
siguientes
papeles
CA
verifica
entidad
persona
router
etc.
procedimiento
establecido
forma
cabo
certificaci√≥n
verificaci√≥n
identidad
adecuadamente
rigurosa
ejemplo
Tomas
capaz
entrar
autoridad
certificaci√≥n
anunciar
simplemente
Alicia
recibir
certificados
asociados
identidad
Alicia
nin-
guno
podr√≠amos
fe
claves
p√∫blicas
certificadas
autoridad
certificaci√≥n
concreta
tender√≠a
confiar
autoridad
certificaci√≥n
dependa
gobierno
confiar
identi-
dad
asociada
clave
p√∫blica
medida
podamos
confiar
autori-
678
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Clave
privada
Tom√°s
KT
Clave
p√∫blica
Tom√°s
KT
Resumen
mensaje
firmado
utilizando
clave
privada
Tom√°s
Fgkopdgoo69cmxw
54psdterma[asofmz
Mensaje
Alicia
Env√≠ame
pizza
Benito
Funci√≥n
hash
Alicia
utiliza
clave
p√∫blica
Tom√°s
creyendo
Benito
concluye
mensaje
procede
Benito
PIZZA
Algoritmo
cifrado
Figure
8.13
Tom√°s
pasar
Benito
utilizando
criptograf√≠a
clave
p√∫blica
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
678dad
certificaci√≥n
t√©cnicas
verificaci√≥n
identidad
ve
necesario
establecer
aut√©ntica
red
confianza
distintas
entidades
autoridad
certificaci√≥n
verifica
identidad
entidad
genera
certificado
asocia
entidad
correspondiente
clave
p√∫blica
certificado
contiene
clave
p√∫blica
informaci√≥n
identificaci√≥n
globalmente
distintiva
acerca
propietario
clave
p√∫blica
ejemplo
nombre
persona
direcci√≥n
IP
certificado
firmado
digitalmente
autoridad
certificaci√≥n
pasos
muestran
Figura
8.14
Veamos
utilizarse
certificados
combatir
bromistas
pizza
Tom√°s
sujetos
indeseables
Benito
pedido
env√≠a
certificado
firmado
autoridad
certificaci√≥n
Alicia
utiliza
clave
p√∫blica
autoridad
certificaci√≥n
comprobar
validez
certificado
Benito
extraer
clave
p√∫blica
Benito
Uni√≥n
Internacional
Telecomunicaciones
ITU
International
Telecommuni-
cation
Union
IETF
desarrollado
est√°ndares
autoridades
certifica-
ci√≥n
ITU
X.509
ITU
1993
especifica
servicio
autenticaci√≥n
sintaxis
espec√≠fica
certificados
RFC
1422
describe
mecanismo
administraci√≥n
claves
basado
autoridades
certificaci√≥n
utilizaci√≥n
correo
electr√≥nico
seguro
Internet
compatible
X.509
all√°
est√°ndar
establecer
procedimientos
convenios
arquitectura
gesti√≥n
claves
Tabla
8.4
describe
campos
importantes
certificado
8.3.4
Autenticaci√≥n
punto
terminal
autenticaci√≥n
punto
terminal
proceso
demostrar
alguien
iden-
tidad
vida
cotidiana
personas
autenticamos
mutuamente
formas
8.3
INTEGRIDAD
MENSAJES
AUTENTICACI√ìN
PUNTOS
TERMINALES
679
Certificado
Benito
firmado
CA
contiene
clave
p√∫blica
KB
Autoridad
certificaci√≥n
CA)(KB
Clave
privada
CA
KCA
Algoritmo
cifrado
Figura
8.14
Benito
autoridad
certificaci√≥n
CA
certifique
clave
p√∫blica
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
679Nombre
campo
Descripci√≥n
Versi√≥n
N√∫mero
versi√≥n
especificaci√≥n
X.509
N√∫mero
serie
Identificador
√∫nico
certificado
emitido
CA
Firma
Especifica
algoritmo
utilizado
CA
firmar
certificado
Nombre
emisor
Identidad
CA
emite
certificado
formato
nombre
distintivo
DN
Distinguished
Name)[RFC
2253
Periodo
validez
Inicio
periodo
validez
certificado
Nombre
sujeto
Identidad
entidad
cuya
clave
p√∫blica
asociada
certificado
formato
DN
Clave
p√∫blica
sujeto
clave
p√∫blica
sujeto
indicaci√≥n
algoritmo
clave
p√∫blica
par√°me-
tros
algoritmo
clave
Tabla
8.4
Campos
seleccionados
clave
p√∫blica
X.509
RFC
1422
distintas
Reconocemos
cara
interlocutor
encontramos
reco-
nocemos
voces
tel√©fono
autenticados
empleados
aduanas
comparan
cara
fotograf√≠a
pasaporte
realizamos
autenticaci√≥n
red
partes
comunican
utilizar
infor-
maci√≥n
biom√©trica
apariencia
visual
timbre
voz
elementos
red
routers
procesos
cliente-servidor
autenticarse
mutua-
mente
bas√°ndose
exclusivamente
mensajes
datos
intercambiados
cuesti√≥n
debemos
plantearnos
valores
MAC
estudiados
Secci√≥n
8.3.2
utilizarse
autenticaci√≥n
puntos
terminales
Supongamos
Alicia
Benito
comparten
secreto
com√∫n
Alicia
desea
enviar
Benito
mensaje
ejemplo
segmento
TCP
Benito
asegurarse
mensaje
recibido
procede
Alicia
t√©cnica
natural
basada
valores
MAC
Alicia
crea
valor
MAC
utilizando
mensaje
secreto
compartido
a√±ade
valor
MAC
mensaje
env√≠a
mensaje
ampliado
resultante
Benito
recibe
mensaje
ampliado
utiliza
valor
MAC
contenido
verificar
ori-
gen
integridad
mensaje
puesto
Alicia
Benito
poseen
secreto
compartido
c√°lculos
valor
MAC
realizados
Benito
proporcionan
resultado
coincide
valor
MAC
incluido
mensaje
ampliado
Benito
seguro
Alicia
enviado
mensaje
mensaje
alterado
trayecto
Ataques
reproducci√≥n
n√∫meros
distintivos
realmente
seguros
Benito
confiar
Alicia
enviado
mensaje
Benito
100
cien
seguro
origen
mensaje
contin√∫a
existiendo
posibilidad
alguien
est√©
intentando
enga√±ar
denomina
ataque
reproducci√≥n
muestra
Figura
8.15
Tom√°s
necesita
husmear
guardar
mensaje
ampliado
Alicia
volver
enviarlo
momento
posterior
mensaje
repetido
autorizo
transfieras
mill√≥n
euros
Beato
Tom√°s
har√≠a
transfiriera
millones
euros
mensaje
680
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
680enlace
router
Alicia
router
Carlos
ca√≠do
env√≠a
justo
enlace
reparado
provocar
aparici√≥n
configuraciones
err√≥-
neas
tablas
reenv√≠o
escenario
fallo
Figura
8.15
produce
resultado
Benito
distinguir
mensaje
original
enviado
Alicia
posterior
repro-
ducci√≥n
mensaje
original
palabras
Benito
seguro
Alicia
activa
encontraba
realmente
extremo
conexi√≥n
momento
mensaje
recibido
grabaci√≥n
alguien
reproduciendo
lec-
tor
atento
recordar√°
protocolo
fases
TCP
necesitaba
resolver
exactamente
problema
servidor
conexi√≥n
TCP
aceptar
conexi√≥n
segmento
SYN
recibido
copia
antigua
retransmisi√≥n
segmento
SYN
correspondiente
conexi√≥n
hac√≠a
servidor
TCP
resolver
problema
determinar
cliente
realmente
activo
hac√≠a
seleccionar
n√∫mero
secuencia
inicial
hubiera
utilizado
periodo
tiempo
enviar
n√∫mero
cliente
esperar
cliente
respondiera
segmento
ACK
contuviera
n√∫mero
adoptar
idea
prop√≥sitos
autenticaci√≥n
n√∫mero
distintivo
nonce
number
used
once)e
emplear√°
vida
protocolo
utiliza
n√∫mero
dis-
tintivo
jam√°s
volver√°
n√∫mero
muestra
Figura
8.16
protocolo
emplea
n√∫mero
distintivo
forma
Benito
selecciona
n√∫mero
distintivo
env√≠a
Alicia
Observe
n√∫mero
distintivo
env√≠a
forma
texto
legible
Alicia
crea
valor
MAC
utilizando
mensaje
original
secreto
compartido
n√∫mero
distintivo
R.
ejemplo
crear
valor
MAC
Alicia
concatenar
secreto
compartido
n√∫mero
distintivo
mensaje
pasar
resultado
funci√≥n
hash
Alicia
a√±ade
valor
MAC
mensaje
crea
mensaje
ampliado
env√≠a
mensaje
Benito
8.3
INTEGRIDAD
MENSAJES
AUTENTICACI√ìN
PUNTOS
TERMINALES
681
Tom√°s
Alicia
Benito
Grabadora
cinta
Clave
Tom√°s
Benito
Transferir
euros
Beato
Tom√°s
MAC
Transferir
euros
Beato
Tom√°s
MAC
MAC
f(mensaje
Figura
8.15
Ataque
reproducci√≥n
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6812
Benito
calcula
valor
MAC
mensaje
contenido
mensaje
ampliado
n√∫mero
distintivo
secreto
compartido
s.
valor
MAC
resultante
valor
MAC
contenido
mensaje
ampliado
Benito
sabr√°
Alicia
generado
mensaje
generado
Benito
enviara
n√∫mero
distintivo
valor
n√∫mero
distintivo
necesario
calcular
valor
MAC
correcto
veremos
Secciones
8.5
8.6
hablar
SSL
IPsec
combinaci√≥n
n√∫meros
distintivos
valores
MAC
utiliza
protocolos
red
seguros
proporcionar
integridad
mensajes
autenticaci√≥n
punto
terminal
pasa
Alicia
desea
enviar
serie
mensajes
ejemplo
serie
segmentos
TCP
Benito
enviar
Alicia
n√∫mero
distintivo
mensajes
pr√°ctica
falta
√∫nico
n√∫mero
distintivo
vere-
mos
Secci√≥n
8.5
hablemos
SSL
√∫nico
n√∫mero
distintivo
combinado
n√∫meros
secuencia
permitir√°
Benito
verificar
mensajes
procedentes
Alicia
recientes
Autenticaci√≥n
criptograf√≠a
clave
p√∫blica
n√∫mero
distintivo
secreto
compartido
permite
definir
protocolo
autenticaci√≥n
perfectamente
adecuado
pregunta
natural
emplear
n√∫mero
distintivo
criptograf√≠a
clave
p√∫blica
resolver
problema
autenticaci√≥n
utilizaci√≥n
t√©cnica
basada
clave
p√∫blica
permitir√≠a
resolver
dificultad
sistema
basado
secreto
compartido
referimos
dificul-
tad
preocuparse
interlocutores
llegar
cono-
cer
valor
secreto
compartido
protocolo
natural
basado
criptograf√≠a
clave
p√∫blica
Alicia
env√≠a
Benito
mensaje
Alicia
Benito
selecciona
n√∫mero
distintivo
env√≠a
Alicia
n√∫mero
distintivo
emplea
garantizar
Alicia
activa
Alicia
utiliza
clave
privada
KA
cifrar
n√∫mero
distintivo
env√≠a
valor
resultante
KA
Benito
Puesto
Alicia
conoce
clave
privada
Alicia
generar
KA
682
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
MAC
f(mensaje
Alicia
Alicia
BenitoR
Transferir
euros
Beato
Tom√°s
MAC
Figura
8.16
Defensa
frente
ataques
reproducci√≥n
utilizando
n√∫meros
distintivos
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6824
Benito
aplica
clave
p√∫blica
Alicia
KA
mensaje
recibido
Benito
cal-
cula
KA
KA
Recuerde
exposici√≥n
criptograf√≠a
clave
p√∫blica
RSA
Secci√≥n
8.2
KA
KA
R.
Benito
calcula
auten-
tica
Alicia
operaci√≥n
protocolo
ilustra
Figura
8.17
seguro
protocolo
Puesto
utiliza
t√©cnicas
clave
p√∫blica
requiere
Benito
consulte
clave
p√∫blica
Alicia
conduce
escenario
interesante
mostrado
Figura
8.18
Tom√°s
capaz
hacerse
pasar
Alicia
Benito
Tom√°s
env√≠a
Benito
mensaje
Alicia
Benito
selecciona
n√∫mero
distintivo
env√≠a
Alicia
mensaje
interceptado
Tom√°s
Tom√°s
emplea
clave
privada
KT
cifrar
n√∫mero
distintivo
env√≠a
valor
resultante
KT
Benito
Benito
KT
simplemente
serie
bits
bits
representan
KT
KA
Benito
obtener
clave
p√∫blica
Alicia
aplicar
KA
valor
acaba
recibir
Env√≠a
mensaje
Alicia
pregunt√°ndola
clave
p√∫blica
KA
Benito
obtener
clave
p√∫blica
Alicia
sitio
web
Tom√°s
inter-
cepta
mensaje
responde
Benito
KT
clave
p√∫blica
Tom√°s
Benito
calcula
KT
KT
autentica
Tom√°s
Alicia
Teniendo
escenario
evidente
seguridad
protocolo
autenti-
caci√≥n
clave
p√∫blica
depende
completamente
seguridad
sistema
distribuci√≥n
claves
p√∫blicas
Afortunadamente
utilizar
certificados
distribuir
claves
p√∫blicas
forma
segura
vimos
Secci√≥n
8.3
8.3
INTEGRIDAD
MENSAJES
AUTENTICACI√ìN
PUNTOS
TERMINALES
683
Benito
calcula
KA
KA
autenticando
Alicia
KA
Alicia
KA
Env√≠ame
clave
p√∫blica
KA
Figura
8.17
Protocolo
autenticaci√≥n
clave
p√∫blica
funciona
correctamente
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
683En
escenario
Figura
8.18
Benito
Alicia
llegar
descubrir
Benito
afirme
interactuado
Alicia
Alicia
interactuado
Benito
ataque
insidioso
evita-
r√≠a
detecci√≥n
escenario
Figura
8.19
Alicia
Benito
hablando
explotando
agujero
seguridad
protocolo
autenticaci√≥n
Tom√°s
capaz
interponerse
forma
transparente
Alicia
Benito
particular
Benito
comienza
enviar
datos
cifrados
Alicia
utilizando
clave
cifrado
reci-
bido
Tom√°s
Tom√°s
extraer
texto
correspondiente
comunicaci√≥n
Benito
Alicia
tiempo
Tom√°s
reenviar
datos
Benito
Alicia
volver
cifrarlos
utilizando
clave
p√∫blica
real
Alicia
Benito
convencido
enviando
datos
cifrados
Alicia
convencida
recibiendo
datos
cifrados
utilizando
clave
p√∫blica
inconscientes
presencia
Tom√°s
Benito
Alicia
reunieran
posteriormente
hablaran
interacci√≥n
Alicia
habr√≠a
recibido
exactamente
Benito
envi√≥
detectar√≠a
ejemplo
denominado
ataque
interposici√≥n
man-in-the-middle
attack
8.4
Correo
electr√≥nico
seguro
secciones
anteriores
examinado
serie
problemas
fundamentales
campo
seguridad
red
incluyendo
t√©cnicas
criptograf√≠a
clave
sim√©trica
clave
p√∫blica
autenticaci√≥n
punto
terminal
mecanismos
distribuci√≥n
cla-
ves
problema
integridad
mensajes
t√©cnicas
firma
digital
examinar
utilizan
dichas
herramientas
proporcionar
segu-
ridad
Internet
684
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Benito
calcula
KT
KT
autenticando
Tom√°s
Alicia
KT
Alicia
KT
Env√≠ame
clave
p√∫blica
KA
Figura
8.18
agujero
seguridad
protocolo
autenticaci√≥n
clave
p√∫blica
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6848.4
CORREO
ELECTR√ìNICO
SEGURO
685
interesante
observar
proporcionar
servicios
seguridad
cual-
quiera
capas
superiores
pila
protocolos
Internet
propor-
ciona
seguridad
protocolo
espec√≠fico
capa
aplicaci√≥n
aplicaci√≥n
utiliza
protocolo
disfrutar√°
servicios
seguridad
confiden-
cialidad
autenticaci√≥n
integridad
mecanismos
seguridad
proporcionan
protocolo
capa
transporte
aplicaciones
protocolo
disfrutar√°n
servicios
seguridad
protocolo
transporte
seguridad
proporciona
capa
red
esquema
host
host
segmentos
capa
transporte
datos
capa
aplicaci√≥n
disfrutar√°n
servicios
seguridad
capa
red
proporciona
seguridad
nivel
enlace
datos
tramas
viajan
enlace
utilizar√°n
servicios
seguri-
dad
enlace
Secciones
8.4
8.7
examinar
utilizan
t√©cnicas
seguridad
capas
aplicaci√≥n
transporte
red
enlace
datos
coheren-
tes
estructura
general
libro
comenzaremos
superior
pila
pro-
tocolos
abordando
seguridad
capa
aplicaci√≥n
enfoque
consiste
utilizar
aplicaci√≥n
espec√≠fica
correo
electr√≥nico
caso
estudio
KT
KA
Alicia
Alicia
KT
KA
Env√≠ame
clave
p√∫blica
KA
Env√≠ame
clave
p√∫blica
KA
Benito
env√≠a
serie
datos
cifrados
utilizando
KT
Alicia
descifra
KA
extrae
Tom√°s
descifra
KT
extrae
calculando
KT
KT
cifra
utilizando
KA
reenv√≠a
KA
Alicia
Figura
8.19
Ataque
interposici√≥n
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
685t√©cnicas
seguridad
capa
aplicaci√≥n
descenderemos
pila
proto-
colos
examinaremos
protocolo
SSL
proporciona
seguridad
capa
transporte
IPsec
proporciona
seguridad
capa
red
mecanismos
seguridad
pro-
tocolo
IEEE
802.11
redes
LAN
inal√°mbricas
lector
estarse
preguntando
proporciona
funcionalidad
seguri-
dad
capa
Internet
bastar√≠a
simplemente
proporcionar
funcionalidad
seguridad
capa
red
respuestas
pregunta
lugar
seguridad
capa
red
proporcionar
funcionalidad
b√°sica
cifrado
datos
contenidos
datagramas
seg-
mentos
capa
transporte
autenticar
direcciones
IP
origen
ofrecer
seguridad
nivel
usuario
ejemplo
sitio
web
comercio
elec-
tr√≥nico
confiar
seguridad
capa
IP
autenticar
cliente
est√©
comprando
bienes
servicios
sitio
necesidad
incorporar
fun-
cionalidad
seguridad
capas
superiores
funcionalidad
b√°sica
capas
inferiores
lugar
f√°cil
generalmente
implantar
servicios
Internet
incluyendo
servicios
seguridad
capas
superiores
pila
protoco-
espera
mecanismo
seguridad
implante
forma
gene-
ralizada
capa
red
llegar
tardar
a√±os
desarrolladores
aplicaciones
simplemente
ponen
manos
obra
introducen
funcionalidad
seguri-
dad
aplicaciones
favoritas
ejemplo
cl√°sico
PGP
Pretty
Good
Privacy
proporciona
correo
electr√≥nico
seguro
hablaremos
posteriormente
sec-
ci√≥n
Requiriendo
√∫nicamente
c√≥digo
aplicaci√≥n
cliente
servidor
PGP
primeras
tecnolog√≠as
seguridad
utiliz√≥
ampliamente
Internet
8.4.1
Correo
electr√≥nico
seguro
utilizar
principios
criptogr√°ficos
Secciones
8.2
8.3
crear
sistema
correo
electr√≥nico
seguro
Crearemos
dise√±o
alto
nivel
forma
incremental
introduciendo
paso
servicios
seguridad
hora
dise√±ar
sistema
correo
electr√≥nico
seguro
debemos
presente
ejemplo
visto
Sec-
ci√≥n
8.1
relaci√≥n
amorosa
Alicia
Benito
Imagine
Alicia
enviar
mensaje
correo
electr√≥nico
Benito
Tom√°s
pretende
inmiscuirse
conversa-
ci√≥n
seguir
dise√±ar
sistema
correo
electr√≥nico
seguro
Alicia
Benito
considerar
caracter√≠sticas
seguridad
ser√≠an
deseables
principal
confidencialidad
explicado
Secci√≥n
8.1
Alicia
Benito
quieren
Tom√°s
lea
correo
electr√≥nico
Alicia
caracter√≠stica
Alicia
Benito
probablemente
deseen
sistema
correo
electr√≥-
nico
seguro
autenticaci√≥n
emisor
particular
Benito
recibe
men-
saje
quiero
quiero
verte
Olv√≠dame
Alicia
naturalmente
gustar√≠a
seguro
mensaje
procede
Alicia
intruso
caracter√≠stica
amantes
apreciar√≠an
integridad
mensajes
garant√≠a
mensajes
Alicia
env√≠e
modificados
camino
llegar
Benito
sistema
correo
electr√≥nico
proporcionar
autenticaci√≥n
receptor
Alicia
querr√°
asegurarse
enviando
mensaje
Benito
persona
ejemplo
Tom√°s
est√©
haci√©ndose
pasar
Benito
686
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
686As√≠
comencemos
analizando
objetivos
confidencialidad
forma
directa
proporcionar
confidencialidad
Alicia
cifre
mensaje
tecnolog√≠a
clave
sim√©trica
DES
AES
Benito
descifre
mensaje
reci-
birlo
explica
Secci√≥n
8.2
clave
sim√©trica
suficiente
larga
√∫ni-
camente
Alicia
Benito
clave
extremadamente
dif√≠cil
persona
incluyendo
Tom√°s
lea
mensaje
t√©cnica
sencilla
pre-
senta
dificultad
fundamental
hablado
Secci√≥n
8.2
distribuir
clave
sim√©trica
Alicia
Benito
tengan
copia
considerar
soluci√≥n
alternativa
criptograf√≠a
clave
p√∫blica
utilizando
ejemplo
RSA
t√©cnica
clave
p√∫blica
Benito
pone
disposici√≥n
mundo
clave
p√∫blica
ejemplo
servidor
claves
p√∫blicas
p√°gina
web
perso-
nal
Alicia
cifra
mensaje
clave
p√∫blica
Benito
env√≠a
mensaje
cifrado
direcci√≥n
correo
electr√≥nico
Benito
recibe
mensaje
simplemente
descifra
clave
privada
Suponiendo
Alicia
est√©
segura
clave
p√∫blica
uti-
lizada
Benito
t√©cnica
constituye
m√©todo
excelente
proporcionar
con-
fidencialidad
deseada
problema
cifrado
clave
p√∫blica
relativamente
eficiente
particularmente
mensajes
longitud
solventar
problema
eficiencia
clave
sesi√≥n
hablado
Secci√≥n
8.2.2
particular
Alicia
selecciona
clave
sesi√≥n
sim√©trica
aleatoria
KS
cifra
mensaje
clave
sim√©trica
cifra
clave
sim√©trica
clave
p√∫blica
Benito
KB
concatena
mensaje
cifrado
clave
sim√©trica
cifrada
formar
paquete
env√≠a
paquete
direcci√≥n
correo
electr√≥nico
Benito
pasos
ilustran
Figura
8.20
subsi-
guientes
figuras
s√≠mbolo
encerrado
c√≠rculo
representa
operaci√≥n
concate-
naci√≥n
signo
encerrado
c√≠rculo
representa
operaci√≥n
desconcatenaci√≥n
Benito
recibe
paquete
utiliza
clave
privada
KB
obtener
clave
sim√©-
trica
KS
utiliza
clave
sim√©trica
KS
descifrar
mensaje
m.
Habiendo
dise√±ado
sistema
correo
electr√≥nico
seguro
proporciona
servi-
cio
confidencialidad
dise√±ar
sistema
proporcione
autenti-
caci√≥n
emisor
integridad
mensajes
suponer
momento
Alicia
Benito
preocupa
confidencialidad
quieren
compartir
sentimien-
tos
mundo
preocupa
autenticaci√≥n
emisor
integridad
8.4
CORREO
ELECTR√ìNICO
SEGURO
687
KS
KS
KS
KS
KS
KS
KB
KB
KS
KB
KS
Internet
KB
Alicia
env√≠a
mensaje
correo
electr√≥nico
Benito
recibe
mensaje
correo
electr√≥nico
Figura
8.20
Alicia
utiliza
clave
sesi√≥n
sim√©trica
KS
enviar
mensaje
secreto
correo
electr√≥nico
Benito
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
687de
mensajes
cabo
tarea
utilizaremos
firmas
digitales
res√∫menes
mensajes
describe
Secci√≥n
8.3
Espec√≠ficamente
Alicia
aplica
fun-
ci√≥n
hash
ejemplo
MD5
mensaje
obtener
resumen
mensaje
firma
resultado
funci√≥n
hash
clave
privada
KA
crear
firma
digi-
concatena
mensaje
original
cifrado
firma
crear
paquete
env√≠a
paquete
direcci√≥n
correo
electr√≥nico
Benito
recibe
paquete
aplica
clave
p√∫blica
Alicia
KA
resumen
mensaje
firmado
compara
resultado
operaci√≥n
valor
hash
mensaje
pasos
ilustran
Figura
8.21
estudiado
Secci√≥n
8.3
resul-
tados
coinciden
Benito
seguro
mensaje
procede
Alicia
alterado
considerar
dise√±o
sistema
correo
electr√≥nico
proporcione
confidencialidad
autenticaci√≥n
emisor
integridad
mensajes
hacerse
combinando
procedimientos
Figuras
8.20
8.21
Alicia
crea
paquete
preliminar
exactamente
Figura
8.21
compuesto
mensaje
origi-
nal
valor
hash
digitalmente
firmado
mensaje
continuaci√≥n
paquete
pre-
liminar
mensaje
env√≠a
mensaje
pasos
emisor
Figura
8.20
creando
paquete
enviado
Benito
pasos
apli-
cados
Alicia
muestran
Figura
8.22
Benito
recibe
paquete
aplica
correspondiente
Figura
8.20
correspondiente
Figura
8.21
Deber√≠a
quedar
lector
dise√±o
permite
objetivo
proporcionar
confidencialidad
autenticaci√≥n
emisor
integridad
mensajes
Observe
esquema
Alicia
utiliza
criptograf√≠a
clave
p√∫blica
clave
privada
clave
p√∫blica
Benito
forma
similar
Benito
emplea
criptograf√≠a
clave
p√∫blica
clave
privada
clave
p√∫blica
Alicia
dise√±o
correo
electr√≥nico
seguro
esbozado
Figura
8.22
probablemente
pro-
porciona
seguridad
satisfactoria
mayor√≠a
usuarios
correo
electr√≥nico
mayor√≠a
ocasiones
continuamos
teniendo
problema
importante
resolver
dise√±o
Figura
8.22
requiere
Alicia
obtenga
clave
p√∫blica
Benito
Benito
obtenga
clave
p√∫blica
Alicia
distribuci√≥n
claves
688
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
KA
KA
KA
H(m
KA
H(m
Internet
Alicia
env√≠a
mensaje
correo
electr√≥nico
Benito
recibe
mensaje
correo
electr√≥nico
Comparar
Figura
8.21
Utilizaci√≥n
funciones
hash
firmas
digitales
proporcio-
nar
autenticaci√≥n
emisor
integridad
mensajes
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
688p√∫blicas
problema
trivial
ejemplo
Tom√°s
hacerse
pasar
Benito
darle
Alicia
clave
p√∫blica
creer
clave
p√∫blica
Benito
permitir√≠a
Tom√°s
recibir
mensaje
destinado
Benito
visto
Secci√≥n
8.3
t√©cnica
popular
distribuir
forma
segura
cla-
ves
p√∫blicas
consiste
certificar
claves
p√∫blicas
utilizando
autoridad
certifi-
caci√≥n
CA
8.4.2
PGP
Escrito
Phil
Zimmermann
1991
Pretty
Good
Privacy
PGP
esquema
cifrado
correo
electr√≥nico
convertido
est√°ndar
facto
sitio
web
sirve
mill√≥n
p√°ginas
mes
usuarios
166
pa√≠ses
distintos
PGPI
2007
ver-
siones
PGP
disponibles
dominio
p√∫blico
ejemplo
encontrar
soft-
ware
PGP
plataforma
favorita
cantidad
art√≠culos
interesantes
p√°gina
web
internacional
PGP
PGPI
2007
ensayo
particular-
mente
interesante
escrito
autor
PGP
Zimmermann
2007
B√°sicamente
dise√±o
PGP
mostrado
Figura
8.22
Dependiendo
versi√≥n
soft-
ware
PGP
utiliza
MD5
SHA
calcular
resumen
mensaje
CAST
triple-DES
IDEA
cifrado
clave
sim√©trica
RSA
cifrado
clave
p√∫blica
instala
PGP
software
crea
pareja
clave
p√∫blica
clave
privada
usuario
clave
p√∫blica
darse
mundo
sitio
web
usuario
almacenarse
servidor
clave
p√∫blica
clave
privada
protegida
contrase√±a
contrase√±a
introducirse
usuario
accede
clave
privada
PGP
usuario
opci√≥n
firmar
digitalmente
mensaje
cifrar
mensaje
operaci√≥n
firma
cifrado
Figura
8.23
muestra
mensaje
firmado
PGP
mensaje
aparece
cabecera
MIME
datos
codificados
mensaje
iguales
KA
H(m
resumen
fir-
mado
digitalmente
mensaje
comentado
anteriormente
Benito
verifique
integridad
mensaje
necesitar√°
acceso
clave
p√∫blica
Alicia
8.4
CORREO
ELECTR√ìNICO
SEGURO
689
KA
KS
KS
KA
H(m
Internet
KB
Figura
8.22
Alicia
utiliza
criptograf√≠a
clave
sim√©trica
criptograf√≠a
clave
p√∫blica
funci√≥n
hash
firma
digital
obtener
servicios
confidencialidad
autenticaci√≥n
emisor
integridad
mensajes
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
689La
Figura
8.24
muestra
mensaje
PGP
secreto
mensaje
aparece
cabecera
MIME
mensaje
texto
incluido
mensaje
secreto
correo
electr√≥nico
emisor
Alicia
confi-
dencialidad
integridad
PGP
contiene
mensaje
Figura
8.24
mensaje
Figura
8.23
-----BEGIN
PGP
SIGNED
MESSAGE-----
Hash
SHA1
Benito
verte
noche
Apasionadamente
Alicia
-----BEGIN
PGP
SIGNATURE-----
Version
PGP
for
Personal
Privacy
5.0
Charset
noconv
yhHJRHhGJGhgg/12EpJ+lo8gE4vB3mqJhFEvZP9t6n7G6m5Gw2
-----END
PGP
SIGNATURE-----
Figura
8.23
mensaje
firmado
PGP
690
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
PHIL
ZIMMERMANN
PGP
Philip
R.
Zimmermann
creador
Pretty
Good
Privacy
PGP
objeto
investigaci√≥n
criminal
dur√≥
a√±os
gobierno
americano
sosten√≠a
restricciones
exportaci√≥n
Unidos
software
criptogr√°fico
violadas
PGP
difundi√≥
mundo
publicaci√≥n
1991
software
gratuito
distribuir
PGP
shareware
persona
puso
Internet
ciudadanos
extranjeros
pudieron
descarg√°rselo
programas
criptogr√°ficos
Unidos
clasificados
municiones
leyes
federales
exportar
falta
financiaci√≥n
falta
personal
contratado
falta
empresa
apoyara
intervenciones
gubernamentales
PGP
modos
convertirse
software
cifrado
correo
electr√≥nico
ampliamente
utili-
zado
mundo
Resulta
ir√≥nico
gobierno
Unidos
contribuido
inadvertidamente
difusi√≥n
PGP
causa
caso
Zimmermann
gobierno
Unidos
abandon√≥
caso
principios
1996
anuncio
enormemente
celebrado
activistas
Internet
caso
Zimmermann
convertido
historia
persona
inocente
luchando
derechos
abusos
gobierno
fuerte
rendici√≥n
gobierno
recibida
campa√±a
favor
censura
Internet
teniendo
lugar
Congreso
americano
presiones
FBI
aumentaran
facultades
intercepci√≥n
comunicaciones
concedidas
gobierno
gobierno
abandonara
caso
Zimmermann
fund√≥
PGP
Inc
adquirida
Network
Associates
diciembre
1997
Zimmermann
consultor
independiente
campo
criptograf√≠a
HISTORIA
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6908.5
CONEXIONES
TCP
SEGURAS
SSL
691
-----BEGIN
PGP
MESSAGE-----
Version
PGP
for
Personal
Privacy
5.0
u2R4d+/jKmn8Bc5+hgDsqAewsDfrGdszX68liKm5F6Gc4sDfcXyt
RfdS10juHgbcfDssWe7
lKhnMikLo0
BvcX4t==Ujk9PbcD4
Thdf2awQfgHbnmKlok8iy6gThlp
-----END
PGP
MESSAGE
Figura
8.24
mensaje
PGP
secreto
PGP
proporciona
mecanismo
certificaci√≥n
clave
p√∫blica
mecanismo
distinto
sistema
convencional
basado
autoridades
cer-
tificaci√≥n
claves
p√∫blicas
PGP
certificadas
red
confianza
Alicia
certificar
pareja
clave
nombre
usuario
crea
pareja
realmente
correcta
PGP
permite
Alicia
diga
conf√≠a
usuario
hora
certificar
autenticidad
claves
usuarios
PGP
firman
mutuamente
claves
manteniendo
reuniones
espec√≠ficas
firma
claves
usuarios
re√∫nen
f√≠sicamente
intercambian
claves
p√∫blicas
certifican
claves
firm√°ndolas
claves
privadas
8.5
Conexiones
TCP
seguras
SSL
secci√≥n
visto
t√©cnicas
criptogr√°ficas
proporcionar
confidencialidad
integridad
datos
autenticaci√≥n
punto
terminal
aplicaci√≥n
espec√≠fica
caso
concreto
correo
electr√≥nico
secci√≥n
descender
nivel
pila
protocolos
examinar
utilizarse
criptograf√≠a
mejorar
servicios
seguridad
TCP
incluyendo
confidencialidad
integridad
datos
autenticaci√≥n
punto
terminal
versi√≥n
mejorada
TCP
conoce
com√∫nmente
Capa
sockets
seguros
SSL
Secure
Sockets
Layer
versi√≥n
ligeramente
modificada
SSL
versi√≥n
denominada
Seguridad
capa
transporte
TLS
Transport
Layer
Security
estandarizada
IETF
RFC
2246
SSL
dise√±ado
originalmente
Netscape
ideas
b√°sicas
subyacentes
dotar
seguridad
TCP
terminado
evolucionando
trabajos
Netscape
consulte
ejemplo
Woo
Woo
1994
invenci√≥n
SSL
disfrutado
amplia
implantaci√≥n
SSL
soportado
navegadores
servidores
web
populares
empleado
pr√°ctica
totalidad
sitios
comercio
electr√≥nico
Internet
incluyendo
Amazon
eBay
Yahoo
MSN
etc.
Anualmente
gastan
decenas
miles
millones
euros
SSL
lector
ocasi√≥n
compra
Internet
tarjeta
cr√©dito
comunicaci√≥n
navegador
servidor
dicha
compra
lugar
seguridad
SSL
verificar
navegador
usando
SSL
viendo
URL
comienza
https
lugar
http
entender
necesidad
SSL
analicemos
escenario
comercio
electr√≥nico
t√≠pico
Internet
Imagine
Benito
navegando
Web
accede
sitio
web
empresa
Alicia
Incorporated
dedica
venta
perfumes
sitio
Alicia
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
691Incorporated
muestra
formulario
supone
Benito
indicar
tipo
perfume
cantidad
deseada
direcci√≥n
n√∫mero
tarjeta
cr√©dito
Benito
introduce
informaci√≥n
clic
bot√≥n
Enviar
espera
recibir
correo
postal
ordinario
perfumes
adquiridos
espera
recibir
cargo
correspondiente
pedido
extracto
tarjeta
cr√©dito
suena
adopta
medida
seguridad
Benito
encontrarse
sor-pre-
sas
utiliza
tipo
confidencialidad
cifrado
intruso
interceptar
pedido
Benito
obtener
informaci√≥n
tarjeta
cr√©dito
intruso
compras
expensas
Benito
‚Ä¢S
modificar
pedido
Benito
haci√©ndole
comprar
frascos
per-
fume
deseados
‚Ä¢P
mostrar
famoso
logotipo
Alicia
Incorporated
realidad
encon-
tr√°ramos
sitio
mantenido
Tom√°s
haci√©ndose
pasar
Alicia
Incorpo-
rated
recibir
pedido
Benito
Tom√°s
tomar
dinero
Benito
salir
corriendo
Tom√°s
efectuar
robo
identidad
recopilando
datos
rela-
tivos
nombre
direcci√≥n
n√∫mero
tarjeta
cr√©dito
Benito
SSL
solventa
problemas
mejorando
TCP
servicios
confidencialidad
integridad
datos
autenticaci√≥n
servidor
autenticaci√≥n
cliente
SSL
emplea
proporcionar
seguridad
transacciones
lugar
HTTP
puesto
SSL
dota
seguridad
TCP
empleado
aplicaci√≥n
ejecute
TCP
SSL
proporciona
Interfaz
programaci√≥n
aplicaciones
API
Application
Programmer
Interface
simple
soc-
kets
similar
an√°loga
API
TCP
aplicaci√≥n
desea
utilizar
SSL
aplicaci√≥n
incluye
clases
bibliotecas
SSL
muestra
Figura
8.25
SSL
reside
t√©cnicamente
capa
aplicaci√≥n
perspectiva
desarrollador
protocolo
transporte
proporciona
servicios
TCP
mejorados
servicios
seguridad
692
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
TCP
subcapa
SSL
IP
Aplicaci√≥n
Capa
aplicaci√≥n
TCP
mejorado
SSL
socket
SSL
socket
TCP
TCP
IP
Aplicaci√≥n
API
TCP
socket
TCP
Figura
8.25
t√©cnicamente
SSL
reside
capa
aplicaci√≥n
perspectiva
desarrollador
protocolo
capa
transporte
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6928.5.1
Panor√°mica
general
Comenzaremos
describiendo
versi√≥n
simplificada
SSL
permitir
obtener
panor√°mica
general
SSL
Haremos
referencia
versi√≥n
simplificada
SSL
casi-SSL
describir
versi√≥n
subsecci√≥n
pasaremos
describir
detalle
protocolo
SSL
real
versi√≥n
casi-SSL
SSL
componen
fases
deducci√≥n
clave
trans-
ferencia
datos
continuaci√≥n
describir
fases
sesi√≥n
comuni-
caci√≥n
cliente
Benito
servidor
Alicia
teniendo
Alicia
pareja
claves
privada
p√∫blica
certificado
asocia
identidad
clave
p√∫blica
Fase
fase
Benito
establecer
conexi√≥n
TCP
Alicia
verificar
Alicia
realmente
Alicia
enviar
Alicia
clave
secreta
maestra
emplear√°n
generar
claves
sim√©tricas
necesiten
sesi√≥n
SSL
pasos
muestran
Figura
8.26
Observe
estable-
cido
conexi√≥n
TCP
Benito
env√≠a
Alicia
mensaje
saludo
continuaci√≥n
Alicia
responde
certificado
contiene
clave
p√∫blica
explicado
Sec-
ci√≥n
8.3
certificado
emitido
autoridad
certificaci√≥n
Benito
seguro
clave
p√∫blica
certificado
pertenece
Alicia
Benito
genera
clave
maestra
MS
Master
Secret
utilizar√°
sesi√≥n
SSL
cifra
MS
clave
p√∫blica
Alicia
crear
clave
maestra
cifrada
EMS
Encyrp-
ted
Master
Secret
env√≠a
Alicia
descifra
clave
maestra
cifrada
clave
privada
obtener
clave
maestra
MS
fase
Benito
Alicia
conocen
clave
maestra
sesi√≥n
SSL
8.5
CONEXIONES
TCP
SEGURAS
SSL
693
TCP
SYN
TCP
SYNACK
Descifra
EMS
KA
obtener
MS
EMS
KA
MS
TCP
ACK
SSL
hello
certificate(b
Crea
clave
maestra
MS
Figura
8.26
fase
casi-SSL
comienza
conexi√≥n
TCP
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
693Deducci√≥n
claves
principio
MS
compartida
Benito
Alicia
emplearse
clave
sesi√≥n
sim√©trica
cifrados
comprobaciones
integridad
datos
sub-
siguientes
generalmente
seguro
Alicia
Benito
utilicen
claves
criptogr√°ficas
distintas
empleen
claves
distintas
cifrado
comprobaciones
integridad
Alicia
Benito
utilizan
clave
maestra
generar
claves
‚Ä¢E
clave
cifrado
sesi√≥n
datos
Benito
env√≠a
Alicia
‚Ä¢M
clave
MAC
sesi√≥n
datos
Benito
env√≠a
Alicia
‚Ä¢E
clave
cifrado
sesi√≥n
datos
Alicia
env√≠a
Benito
‚Ä¢M
clave
MAC
sesi√≥n
datos
Alicia
env√≠a
Benito
Alicia
Benito
generan
claves
clave
maestra
MS
hacerse
simplemente
dividiendo
clave
maestra
claves
vere-
mos
complicado
protocolo
SSL
real
terminar
fase
deducci√≥n
claves
Alicia
Benito
disponen
claves
claves
cifrado
utilizar√°n
cifrar
datos
claves
MAC
emplear√°n
verifi-
car
integridad
datos
Transferencia
datos
Alicia
Benito
comparten
claves
sesi√≥n
EB
MB
EA
MA
comenzar
enviarse
datos
forma
segura
conexi√≥n
TCP
Puesto
TCP
protocolo
flujos
bytes
t√©cnica
natural
SSL
cifrara
datos
aplicaci√≥n
marcha
pasara
datos
cifrados
marcha
TCP
incluir√≠amos
valor
MAC
necesario
compro-
bar
integridad
Realmente
deseable
esperar
termine
sesi√≥n
TCP
verificar
integridad
datos
Benito
enviando
sesi√≥n
completa
resolver
problema
SSL
divide
flujo
datos
registros
a√±ade
c√≥digo
MAC
registro
comprobar
integridad
cifra
registro
c√≥digo
MAC
crear
valor
MAC
Benito
introduce
datos
registro
clave
MB
funci√≥n
hash
visto
Secci√≥n
8.3
cifrar
paquete
formado
registro
valor
MAC
Benito
utiliza
clave
cifrado
sesi√≥n
EB
paquete
cifrado
pasa
TCP
transportarlo
Internet
m√©todo
permite
resolver
bastantes
problemas
perfecto
refiere
proporcionar
integridad
datos
flujo
mensajes
particular
suponga
Tom√°s
intruso
cabo
ataque
interposici√≥n
capacidad
insertar
borrar
sustituir
segmentos
flujo
segmentos
TCP
enviados
Alicia
Benito
Tom√°s
ejemplo
capturar
segmentos
enviados
Benito
invertir
orden
ajustar
n√∫meros
secuencia
TCP
cifrados
enviar
segmentos
orden
inverso
Alicia
Suponiendo
segmento
TCP
encapsula
exactamente
registro
procesar√≠a
Alicia
dichos
segmentos
TCP
ejecuta
Alicia
pensar√°
correcto
pasar√°
registros
subcapa
SSL
694
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
6942
SSL
Alicia
descifrar√°
registros
SSL
Alicia
utilizar√≠a
clave
MAC
registro
verificar
integridad
datos
registros
SSL
pasar√≠a
continuaci√≥n
flujos
bytes
descifrados
registros
capa
aplicaci√≥n
flujo
bytes
completo
recibido
Alicia
estar√≠a
orden
correcto
inversi√≥n
orden
registros
Animamos
lector
examinar
escenarios
similares
casos
Tom√°s
elimine
reproduzca
segmentos
soluci√≥n
problema
probablemente
imaginado
consiste
uti-
lizar
n√∫meros
secuencia
SSL
forma
Benito
mantiene
conta-
dor
n√∫mero
secuencia
inicializa
cero
incrementa
env√≠a
registro
SSL
Benito
incluye
realmente
n√∫mero
secuencia
registro
calcula
c√≥digo
MAC
incluye
n√∫mero
secuencia
c√°lculo
c√≥digo
MAC
valor
MAC
hash
datos
clave
MAC
n√∫mero
secuencia
actual
Alicia
controla
n√∫meros
secuencia
Benito
pudiendo
verificar
integridad
datos
registro
incluyendo
n√∫mero
secuen-
cia
apropiado
c√°lculo
MAC
n√∫meros
secuencia
SSL
impide
Tom√°s
lleve
cabo
ataque
interposici√≥n
reordenaci√≥n
reproducci√≥n
segmentos
Registro
SSL
Figura
8.27
muestra
registro
SSL
registro
casi-SSL
registro
consta
campo
tipo
campo
versi√≥n
campo
longitud
campo
datos
campo
MAC
Observe
campos
cifrados
campo
tipo
indica
registro
mensaje
fase
mensaje
contiene
datos
aplicaci√≥n
utiliza
cerrar
conexi√≥n
SSL
explicamos
ade-
lante
SSL
terminal
receptor
utiliza
campo
longitud
extraer
registros
SSL
flujo
bytes
TCP
entrante
campo
versi√≥n
explica
8.5.2
panor√°mica
completa
subsecci√≥n
ocupado
protocolo
casi-SSL
servido
proporcionarnos
conocimiento
b√°sico
acerca
SSL
idea
b√°sica
SSL
profundizar
examinar
fundamen-
tos
protocolo
SSL
real
paralelo
lectura
descripci√≥n
protocolo
SSL
animamos
complete
pr√°ctica
laboratorio
acerca
SSL
Wireshark
disponi-
ble
sitio
web
libro
8.5
CONEXIONES
TCP
SEGURAS
SSL
695
Versi√≥n
LongitudTipo
Datos
MAC
Cifrado
EB
Figura
8.27
Formato
registro
SSL
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
695Fase
SSL
SSL
obliga
Alicia
Benito
utilicen
algoritmo
clave
sim√©trica
espec√≠fico
algoritmo
clave
p√∫blica
espec√≠fico
c√≥digo
MAC
espec√≠fico
lugar
SSL
per-
mite
Alicia
Benito
acuerden
principio
sesi√≥n
SSL
fase
algoritmos
criptogr√°ficos
emplear
fase
Alicia
Benito
intercambian
n√∫meros
distintivos
utilizan
creaci√≥n
claves
sesi√≥n
EB
MB
EA
MA
pasos
fase
protocolo
SSL
real
siguientes
cliente
env√≠a
lista
algoritmos
criptogr√°ficos
soporta
n√∫mero
distintivo
cliente
lista
servidor
elige
algoritmo
sim√©trico
ejemplo
AES
algo-
ritmo
clave
p√∫blica
ejemplo
RSA
longitud
espec√≠fica
clave
algoritmo
MAC
Devuelve
cliente
elecciones
certifi-
cado
n√∫mero
distintivo
servidor
cliente
verifica
certificado
extrae
clave
p√∫blica
servidor
genera
clave
pre-maestra
PMS
Pre-Master
Secret
cifra
PMS
clave
p√∫blica
servidor
env√≠a
PMS
cifrada
servidor
Utilizando
funci√≥n
deducci√≥n
clave
especificada
est√°ndar
SSL
cliente
servidor
calculan
independientemente
clave
maestra
MS
PMS
n√∫meros
distintivos
PMS
divide
generar
claves
cifrado
claves
MAC
cifrado
sim√©trico
elegido
emplea
CBC
3DES
AES
obtienen
PMS
vectores
inicializaci√≥n
IV
conexi√≥n
momento
mensajes
intercambiados
cliente
servi-
dor
cifrados
autenticados
c√≥digo
MAC
cliente
env√≠a
c√≥digo
MAC
mensajes
servidor
env√≠a
c√≥digo
MAC
mensajes
pasos
protegen
procedimiento
frente
posibles
modifica-
ciones
datos
comprobarlo
observe
paso
cliente
normalmente
ofrece
lista
algoritmos
fuertes
d√©biles
lista
algoritmos
env√≠a
texto
acordado
algorit-
mos
cifrado
claves
Tom√°s
atacante
interpuesto
man-in-the-middle
borrar
algoritmos
fuertes
lista
obligando
cliente
seleccionar
algoritmo
d√©bil
evitar
ataque
modificaci√≥n
paso
cliente
env√≠a
valor
MAC
concatenaci√≥n
mensajes
enviado
recibido
servidor
comparar
valor
MAC
valor
MAC
mensajes
recibido
enviado
incoherencia
servidor
terminar
conexi√≥n
forma
similar
servidor
env√≠a
mensaje
MAC
mensajes
visto
permitiendo
cliente
detectar
incoherencia
lector
pregunt√°ndose
introducen
valores
distintivos
pasos
bastar√≠a
utilizar
n√∫meros
secuencia
impedir
ataques
reproducci√≥n
segmentos
respuesta
n√∫meros
secuencia
impiden
ataques
reproducci√≥n
conexi√≥n
Considere
ejemplo
ataque
reproducci√≥n
conexi√≥n
suponga
Tom√°s
captura
696
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
696todos
mensajes
intercambiados
Alicia
Benito
Tom√°s
pasar
Benito
env√≠a
Alicia
exactamente
secuencia
mensajes
Benito
envi√≥
Alicia
utiliza
n√∫meros
distintivos
responder√°
exactamente
secuencia
mensajes
envi√≥
Alicia
sospechar√°
raro
mensaje
reciba
pasar√°
comprobaciones
integridad
Alicia
servi-
dor
comercio
electr√≥nico
pensar√°
Benito
realizando
pedido
solici-
tando
exactamente
art√≠culos
incluyendo
n√∫mero
distintivo
protocolo
Alicia
enviar√°
n√∫meros
distintivos
sesi√≥n
TCP
claves
cifrado
distintas
Alicia
reciba
serie
registros
SSL
reproducidos
procedentes
Tom√°s
registros
pasar√°n
comprobaciones
integridad
transacci√≥n
comercio
electr√≥nico
falsa
llegar√°
completarse
resumen
SSL
n√∫meros
distintivos
emplean
defen-
derse
ataques
reproducci√≥n
conexi√≥n
n√∫meros
secuencia
emplean
defenderse
frente
reproducci√≥n
paquetes
individuales
sesi√≥n
activa
Cierre
conexi√≥n
momento
Benito
Alicia
querr√°n
terminar
sesi√≥n
SSL
t√©cnica
consistir√≠a
dejar
Benito
terminara
sesi√≥n
SSL
simplemente
terminando
conexi√≥n
TCP
subyacente
Benito
env√≠e
segmento
TCP
Alicia
dise√±o
simplista
abre
puerta
ataques
truncamiento
Tom√°s
intro-
duce
mitad
sesi√≥n
SSL
activa
termina
sesi√≥n
prematuramente
segmento
TCP
Tom√°s
hiciera
Alicia
pensar√≠a
recibido
datos
Benito
realidad
recibido
soluci√≥n
problema
consiste
indicar
campo
tipo
registro
sirve
terminar
sesi√≥n
SSL
tipo
SSL
env√≠a
texto
autenticado
recep-
tor
utilizando
valor
MAC
registro
Incluyendo
campo
Alicia
recibiera
segmento
TCP
recibir
registro
SSL
cierre
deducir√≠a
inmediatamente
raro
sucediendo
completa
introducci√≥n
SSL
visto
tecnolog√≠a
utiliza
principios
criptogr√°ficos
explicados
Secciones
8.2
8.3
lectores
deseen
explorar
SSL
nivel
profundo
consultar
libro
Rescorla
SSL
c√≥modo
leer
Rescorla
2001
8.6
Seguridad
capa
red
IPsec
redes
privadas
virtuales
protocolo
seguridad
IP
conocido
IPsec
proporciona
seguridad
capa
red
IPsec
proporciona
seguridad
datagramas
IP
intercambiados
cualesquiera
entidades
capa
red
incluyendo
hosts
routers
veremos
instituciones
corporaciones
agencias
gubernamentales
organizaciones
√°nimo
lucro
etc.
utilizan
IPsec
crear
redes
privadas
virtuales
VPN
funcionan
red
Internet
p√∫blica
entrar
detalles
espec√≠ficos
IPsec
demos
paso
atr√°s
consideremos
implica
proporcionar
confidencialidad
capa
red
confidenciali-
8.6
SEGURIDAD
CAPA
RED
IPSEC
REDES
PRIVADAS
VIRTUALES
697
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
697dad
capa
red
pareja
entidades
red
ejemplo
routers
hosts
router
host
entidad
emisora
cifra
cargas
√∫tiles
datagramas
env√≠e
entidad
receptora
carga
√∫til
cifrada
seg-
mento
TCP
segmento
UDP
mensaje
ICMP
etc.
dispusi√©ramos
servicio
capa
red
datos
enviados
entidad
incluyendo
mensajes
correo
electr√≥nico
p√°ginas
web
mensajes
TCP
mensajes
adminis-
traci√≥n
ICMP
SNMP
estar√≠an
ocultos
ojos
posibles
terceros
pudieran
husmeando
mensajes
circulan
red
raz√≥n
decimos
seguridad
capa
red
proporciona
servicio
b√°sico
ocultaci√≥n
confidencialidad
protocolo
seguridad
capa
red
poten-
cialmente
proporcionar
servicios
seguridad
ejemplo
ofrecer
mecanismos
autenticaci√≥n
origen
entidad
receptora
verificar
origen
datagrama
seguro
protocolo
seguridad
capa
red
proporcionar
ser-
vicio
integridad
datos
entidad
receptora
comprobar
pro-
ducido
alteraci√≥n
datagrama
encontraba
tr√°nsito
servicio
seguridad
capa
red
proporcionar
mecanismos
prevenir
ataques
reproducci√≥n
significa
Benito
detectar
datagrama
duplicado
atacante
pudiera
insertar
veremos
IPsec
proporciona
mecanismos
servicios
seguridad
confidencialidad
autenticaci√≥n
origen
integridad
datos
prevenci√≥n
ataques
reproducci√≥n
8.6.1
IPsec
redes
privadas
virtuales
VPN
Normalmente
instituci√≥n
abarque
m√∫ltiples
regiones
geogr√°ficas
desear√°
disponer
red
IP
hosts
servidores
puedan
intercambiarse
datos
forma
segura
confidencial
objetivo
instituci√≥n
implantar
realmente
red
f√≠sica
independiente
incluyendo
routers
enlaces
infraestructura
DNS
est√©
completamente
separada
red
Internet
p√∫blica
Dicha
red
separada
dedi-
instituci√≥n
concreta
denomina
red
privada
sorprendente
tales
redes
privadas
puedan
llegar
costosas
instituci√≥n
necesitar√°
comprar
instalar
mantener
infraestructura
f√≠sica
red
lugar
implantar
mantener
red
privada
instituciones
crean
actual-
mente
redes
VPN
red
Internet
p√∫blica
existente
VPN
tr√°fico
sucur-
sales
env√≠a
red
Internet
p√∫blica
lugar
enviarse
red
f√≠sicamente
independiente
proporcionar
confidencialidad
tr√°fico
sucur-
sales
cifra
entrar
Internet
p√∫blica
Figura
8.28
muestra
ejemplo
simple
red
VPN
instituci√≥n
compuesta
oficina
principal
sucur-
sal
serie
vendedores
itinerantes
suelen
acceder
Internet
habitaci√≥n
hotel
figura
muestra
vendedores
VPN
hosts
situados
oficina
principal
intercambian
datagramas
IP
hosts
sucursal
quieren
comunicarse
utilizan
protocolo
simple
tradicional
IPv4
servicios
IPsec
hosts
instituci√≥n
comunican
ruta
atraviesa
red
Internet
p√∫blica
tr√°fico
cifra
entrar
Internet
entender
funciona
red
VPN
veamos
ejemplo
simple
contexto
Figura
8.28
host
oficina
principal
env√≠a
datagrama
IP
vendedor
hotel
router
pasarela
oficina
principal
convierte
data-
grama
IPv4
simple
datagrama
IPsec
reenv√≠a
datagrama
IPsec
Inter-
698
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
698net
datagrama
IPsec
cabecera
IPv4
tradicional
rou-
ters
red
Internet
p√∫blica
procesan
datagrama
tratara
datagrama
IPv4
normal
datagrama
muestra
Figura
8.28
carga
√∫til
datagrama
IPsec
incluye
cabecera
IPsec
utilizada
procesamiento
IPsec
carga
√∫til
datagrama
IPsec
cifrada
datagrama
IPsec
llega
port√°til
vendedor
sistema
operativo
equipo
descifra
carga
√∫til
proporciona
servicios
seguridad
verificaci√≥n
inte-
gridad
datos
pasa
carga
√∫til
descifrada
protocolo
capa
superior
ejemplo
TCP
UDP
peque√±a
panor√°mica
instituci√≥n
utilizar
IPsec
crear
red
VPN
√°rboles
oculten
bosque
dejado
consciente-
mente
detalles
importantes
Realicemos
examen
detallado
8.6.2
protocolos
AH
ESP
IPsec
protocolo
complejo
definido
docena
docu-
mentos
RFC
documentos
importantes
RFC
4301
describe
arquitectura
glo-
bal
seguridad
IP
RFC
2411
proporciona
panor√°mica
serie
protocolos
IPsec
objetivo
libro
texto
simplemente
repetir
arcanos
√°ridos
documentos
RFC
adoptar
enfoque
operativo
peda-
g√≥gico
hora
describir
protocolos
serie
protocolos
IPsec
protocolos
principales
protocolo
Cabe-
cera
autenticaci√≥n
AH
Authentication
Header
protocolo
Carga
√∫til
segu-
ridad
encapsulaci√≥n
ESP
Encapsulation
Security
Payload
entidad
8.6
SEGURIDAD
CAPA
RED
IPSEC
REDES
PRIVADAS
VIRTUALES
699
Cabecera
IP
Cabecera
IPsec
Carga
√∫til
segura
Cabecera
IP
Cabecera
IPsec
Carga
√∫til
segura
Cabecera
IP
Cabecera
IPsec
Carga
√∫til
segura
Cabecera
IP
Carga
√∫til
Cabecera
IP
Carga
√∫til
Port√°til
IPsec
Router
IPv4
IPsec
Router
IPv4
IPsec
Sucursal
Oficina
principal
Vendedor
hotel
Internet
Figura
8.28
Red
privada
virtual
VPN
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
699IPsec
origen
normalmente
host
router
env√≠a
datagramas
seguros
entidad
destino
host
router
protocolo
AH
protocolo
ESP
protocolo
AH
proporciona
autenticaci√≥n
origen
integridad
datos
pro-
porciona
confidencialidad
protocolo
ESP
proporciona
autenticaci√≥n
origen
integri-
dad
datos
confidencialidad
Puesto
confidencialidad
cr√≠tica
redes
VPN
aplicaciones
IPsec
protocolo
ESP
utiliza
amplia-
mente
protocolo
AH
desmitificar
IPsec
evitar
com-
plicaciones
asociadas
centrar
exclusivamente
protocolo
ESP
lectores
deseen
aprender
fundamentos
protocolo
AH
explorar
documentos
RFC
recursos
l√≠nea
8.6.3
Asociaciones
seguridad
datagramas
IPsec
intercambian
parejas
entidades
red
ejemplo
hosts
routers
host
router
enviar
datagramas
IPsec
entidad
origen
destino
ambas
entidades
crean
conexi√≥n
l√≥gica
capa
red
conexi√≥n
l√≥gica
denomina
asociaci√≥n
seguridad
SA
Security
Association
asociaci√≥n
seguridad
conexi√≥n
l√≥gica
tipo
simplex
conexi√≥n
unidireccional
origen
destino
ambas
entidades
desean
enviarse
datagramas
seguros
necesario
establecer
SA
cone-
xiones
l√≥gicas
direcci√≥n
ejemplo
considere
VPN
institucional
Figura
8.28
instituci√≥n
consta
oficina
principal
sucursal
n√∫mero
ejemplo
vendedores
itinerantes
Supongamos
ejemplo
tr√°fico
IPsec
bidireccional
oficina
principal
sucursal
oficina
principal
vendedores
VPN
aso-
ciaciones
seguridad
existir√≠an
responder
cuesti√≥n
observe
SA
router
pasarela
oficina
principal
router
pasarela
sucursal
direcci√≥n
computadora
port√°til
vendedor
SA
router
pasarela
oficina
principal
port√°til
direcci√≥n
2n
asociaciones
seguridad
recuerde
tr√°fico
enviado
Internet
routers
pasarela
computadoras
port√°tiles
protegido
IPsec
ejemplo
host
situado
oficina
principal
querer
acceder
servidor
web
Amazon
Google
disponible
red
Internet
p√∫blica
router
pasarela
port√°tiles
enviar√°
Internet
datagramas
IPv4
nor-
males
datagramas
dotados
seguridad
IPsec
Tratemos
examinar
interioridades
asociaci√≥n
seguridad
explicaciones
tangibles
concretas
contexto
asociaci√≥n
seguridad
existente
router
R1
router
R2
Figura
8.29
consi-
derar
router
R1
router
pasarela
oficina
principal
router
R2
router
pasarela
sucursal
contexto
Figura
8.28
router
R1
mantendr√°
informaci√≥n
acerca
SA
incluir√°
‚Ä¢U
√çndice
par√°metro
seguridad
SPI
Security
Parameter
Index
‚Ä¢L
SA
caso
193.68.2.23
‚Ä¢E
700
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
700‚Ä¢
clave
cifrado
tipo
comprobaci√≥n
integridad
ejemplo
HMAC
MD5
clave
autenticaci√≥n
router
R1
necesite
construir
datagrama
IPsec
reenviarlo
tra-
v√©s
SA
acceder√°
informaci√≥n
determinar
autenticar
cifrar
datagrama
forma
similar
router
R2
mantendr√°
informaci√≥n
SA
utilizar√°
informaci√≥n
autenticar
descifrar
data-
gramas
IPsec
lleguen
dicha
asociaci√≥n
seguridad
entidad
IPsec
router
host
suele
mantener
informaci√≥n
asociaciones
seguridad
ejemplo
ejemplo
red
VPN
Figura
8.28
vendedores
router
pasarela
oficina
principal
mantiene
informaci√≥n
2n
asociaciones
seguridad
entidad
IPsec
almacena
informaci√≥n
asociaciones
seguridad
Base
datos
asociaciones
seguri-
dad
SAD
Security
Association
Database
estructura
datos
contenida
kernel
sistema
operativo
entidad
8.6.4
datagrama
IPsec
Habiendo
descrito
asociaciones
seguridad
describir
estructura
real
datagrama
IPsec
IPsec
formas
distintas
paquete
denominado
t√∫nel
denominado
transporte
t√∫nel
apro-
piado
redes
VPN
ampliamente
implantado
transporte
desmitificar
IPsec
evitar
aspectos
complejos
centrar
exclusivamente
t√∫nel
s√≥lida
comprensi√≥n
lector
deber√≠a
aprender
deta-
lles
acerca
transporte
formato
paquete
datagrama
IPsec
muestra
Figura
8.30
lector
crea
formatos
paquete
aburridos
ins√≠pidos
comprobar√°
datagrama
IPsec
realidad
apariencia
sabor
manjar
tex-mex
Examinemos
campos
IPsec
contexto
Figura
8.29
Suponga
router
R1
recibe
datagrama
IPv4
normal
procedente
host
172.16.1.17
situado
red
oficina
principal
destinado
host
172.16.2.48
situado
red
sucursal
router
R1
utiliza
receta
convertir
datagrama
IPv4
original
datagrama
IPsec
8.6
SEGURIDAD
CAPA
RED
IPSEC
REDES
PRIVADAS
VIRTUALES
701
Figura
8.29
Asociaci√≥n
seguridad
SA
R1
R2
Internet
SAR1
172.16.1/24
Oficina
principal
Sucursal
200.168.1.100
193.68.2.23
172.16.2/24
R2
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
701‚Ä¢A
cera
campo
cola
ESP
‚Ä¢C
seguridad
‚Ä¢A
paquete
resultante
conoce
enchilada
‚Ä¢C
enchilada
utilizando
algoritmo
clave
especificados
SA
A√±ade
valor
MAC
enchilada
formando
carga
√∫til
‚Ä¢P
IPv4
suman
normalmente
20
bytes
longitud
a√±ade
dicha
cabecera
principio
carga
√∫til
Observe
datagrama
IPsec
resultante
datagrama
IPv4
perfectamente
normal
campos
tradicionales
cabecera
IPv4
seguidos
carga
√∫til
caso
carga
√∫til
contiene
cabecera
ESP
datagrama
IP
original
cola
ESP
campo
autenticaci√≥n
ESP
estando
cifrados
datagrama
original
cola
ESP
datagrama
IP
original
valor
172.16.1.17
direcci√≥n
IP
origen
172.16.2.48
direcci√≥n
IP
destino
Puesto
datagrama
IPsec
incluye
datagrama
IP
original
direcciones
incluyen
cifran
carga
√∫til
paquete
IPsec
sucede
direcciones
IP
origen
destino
contenidas
cabe-
cera
IP
cabecera
situada
izquierda
datagrama
IPsec
cabr√≠a
esperar
valores
configuran
direcciones
interfaces
router
origen
destino
situadas
extremos
t√∫neles
valores
200.168.1.100
193.68.2.23
Asimismo
n√∫mero
protocolo
campo
cabecera
IPv4
configura
valor
correspondiente
TCP
UDP
SMTP
valor
50
indica
datagrama
IPsec
empleando
protocolo
ESP
R1
env√≠e
datagrama
IPsec
red
Internet
p√∫blica
pasar√°
tra-
v√©s
routers
alcanzar
R2
routers
procesar√°
data-
grama
datagrama
normal
routers
conscientes
datagrama
est√©
transportando
datos
cifrados
IPsec
routers
702
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
cabecera
IP
Cabecera
ESP
Cola
ESP
MAC
ESP
Cabecera
IP
original
Carga
√∫til
datagrama
IP
original
Cifrado
Enchilada
autenticada
Long
rellenoRelleno
cabeceraSPI
N√∫mero
secuencia
Figura
8.30
Formato
datagrama
IPsec
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
702la
red
Internet
p√∫blica
puesto
direcci√≥n
IP
destino
contenida
cabecera
externa
R2
destino
datagrama
R2
Habiendo
examinado
ejemplo
construye
datagrama
IPsec
veamos
detalle
ingredientes
enchilada
Figura
8.30
cola
ESP
compuesta
campos
relleno
longitud
relleno
cabe-
cera
Recuerde
sistemas
cifrado
bloque
requieren
mensaje
cifrar
m√∫ltiplo
entero
longitud
bloque
emplea
relleno
com-
puesto
bytes
significado
a√±adirlo
datagrama
origi-
nal
campos
longitud
relleno
cabecera
mensaje
resultante
n√∫mero
entero
bloques
campo
longitud
relleno
indica
entidad
receptora
relleno
insertado
relleno
eli-
minar
campo
cabecera
indica
tipo
ejemplo
UDP
datos
con-
tenidos
campo
datos
carga
√∫til
datos
carga
√∫til
normalmente
datagrama
IP
original
cola
ESP
concatenan
cifran
unidad
cifrada
cabecera
ESP
env√≠a
texto
consta
campos
SPI
campo
n√∫mero
secuencia
SPI
indica
entidad
receptora
SA
pertenece
datagrama
entidad
recep-
tora
indexar
base
datos
SAD
√≠ndice
SPI
determinar
algoritmos
claves
apropiados
autenticaci√≥n
descifrado
campo
n√∫mero
secuen-
cia
utiliza
defenderse
frente
ataques
reproducci√≥n
entidad
emisora
a√±ade
c√≥digo
MAC
autenticaci√≥n
anteriormente
entidad
emisora
calcula
c√≥digo
MAC
enchilada
compuesta
cabecera
ESP
datagrama
IP
original
cola
ESP
estando
data-
grama
cola
cifrados
Recuerde
calcular
valor
MAC
emisor
a√±ade
clave
secreta
MAC
enchilada
calcula
valor
hash
longitud
fija
resul-
tado
R2
recibe
datagrama
IPsec
observa
direcci√≥n
IP
destino
data-
grama
R2
router
encarga
procesar
datagrama
Puesto
campo
protocolo
cabecera
IP
situada
izquierda
valor
50
R2
ve
aplicar
procesamiento
ESP
IPsec
datagrama
lugar
anali-
zando
enchilada
R2
utiliza
SPI
determinar
asociaci√≥n
seguridad
SA
pertenece
datagrama
lugar
calcula
valor
MAC
enchilada
verifica
coherente
valor
contenido
campo
ESP
MAC
router
sabr√°
enchilada
procede
router
R1
manipulada
tercer
lugar
comprueba
campo
n√∫mero
secuencia
verificar
datagrama
reciente
data-
grama
reproducido
cuarto
lugar
descifra
unidad
cifrada
utilizando
clave
algo-
ritmo
descifrado
asociados
SA
quinto
lugar
elimina
relleno
extrae
datagrama
IP
normal
original
finalmente
sexto
lugar
reenv√≠a
datagrama
original
red
sucursal
datagrama
llegue
destino
receta
complicada
dijimos
preparar
enchilada
f√°cil
sutileza
importante
necesitamos
explicar
centrada
cuesti√≥n
router
R1
recibe
datagrama
dotado
seguridad
pro-
cedente
host
red
oficina
principal
datagrama
destinado
direcci√≥n
IP
destino
situada
oficina
principal
R1
datagrama
convertido
datagrama
IPsec
procesado
IPsec
R1
SA
asociaciones
seguridad
existentes
base
datos
SAD
utilizar
construir
datagrama
IPsec
problema
resuelve
8.6
SEGURIDAD
CAPA
RED
IPSEC
REDES
PRIVADAS
VIRTUALES
703
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
703forma
base
datos
SAD
entidad
IPsec
mantiene
estructura
datos
denominada
Base
datos
pol√≠ticas
seguridad
SPD
Security
Policy
Database
SPD
indica
tipos
datagramas
funci√≥n
direcci√≥n
IP
origen
direcci√≥n
IP
destino
tipo
protocolo
procesar
IPsec
procesar
IPsec
SA
emplearse
sentido
informaci√≥n
SPD
indica
datagramas
lleguen
informaci√≥n
SAD
indica
Resumen
servicios
IPsec
servicios
proporciona
IPsec
exactamente
Examinemos
servicios
pers-
pectiva
atacante
ejemplo
Tom√°s
interpuesto
man-in-the-middle
comunicaci√≥n
situ√°ndose
lugar
ruta
routers
R1
R2
Figura
8.29
suponer
explicaciones
Tom√°s
conoce
cla-
ves
cifrado
autenticaci√≥n
empleadas
SA
cosas
Tom√°s
lugar
Tom√°s
datagrama
original
datos
datagrama
original
ocultos
ojos
Tom√°s
n√∫mero
protocolo
direcci√≥n
IP
origen
direcci√≥n
IP
destino
datagra-
enviados
SA
Tom√°s
datagrama
origen
host
red
172.16.1.0/24
destinado
host
red
172.16.2.0/24
transportando
datos
TCP
UDP
ICMP
transportando
HTTP
SMTP
tipo
datos
aplicaci√≥n
confidencialidad
all√°
SSL
lugar
suponga
Tom√°s
alterar
datagrama
SA
modificando
bits
datagrama
alterado
llegue
R2
pasar√°
comprobaciones
integridad
utilizando
valor
MAC
desbaratando
intenciones
Tom√°s
tercer
lugar
suponga
Tom√°s
intenta
hacerse
pasar
R1
creando
datagrama
IPsec
cuyo
origen
200.168.1.100
cuyo
destino
193.68.2.23
ataque
Tom√°s
efecto
datagrama
pasar√°
comprobaci√≥n
integridad
realizada
R2
Finalmente
puesto
IPsec
incluye
n√∫meros
secuencia
Tom√°s
desarrollar
√©xito
ataque
reproducci√≥n
resumen
dijimos
principio
secci√≥n
IPsec
propor-
ciona
pareja
dispositivos
procesen
paquetes
capa
red
meca-
nismos
confidencialidad
autenticaci√≥n
origen
integridad
datos
prevenci√≥n
ataques
reproducci√≥n
8.6.5
IKE
gesti√≥n
claves
IPsec
red
VPN
peque√±o
n√∫mero
puntos
terminales
ejemplo
routers
Figura
8.29
administrador
red
introducir
manualmente
informaci√≥n
SA
claves
algoritmos
cifrado
autenticaci√≥n
√≠ndices
SPI
bases
datos
SAD
puntos
terminales
tipo
introducci√≥n
manual
cla-
ves
resulta
obviamente
pr√°ctico
VPN
tama√±o
constar
centenares
miles
hosts
routers
IPsec
tareas
implantaci√≥n
envergadura
geogr√°ficamente
distribuidas
requieren
mecanismo
automatizado
creaci√≥n
SA
IPsec
cabo
tipo
tarea
protocolo
Intercam-
bio
claves
Internet
IKE
Internet
Key
Exchange
especificado
RFC
4306
IKE
presenta
similitudes
procedimiento
SSL
v√©ase
Sec-
ci√≥n
8.5
entidad
IPsec
certificado
incluye
clave
p√∫blica
entidad
704
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
704Al
SSL
protocolo
IKE
exige
entidades
intercambien
certificados
negocien
algoritmos
autenticaci√≥n
cifrado
intercambien
seguro
material
necesario
crear
claves
sesi√≥n
SA
IPsec
diferencia
SSL
IKE
emplea
fases
cabo
tareas
analizar
fases
contexto
routers
R1
R2
Figura
8.29
fase
compuesta
intercambios
parejas
mensajes
R1
R2
‚Ä¢D
problemas
incluidos
cap√≠tulo
crear
IKE
SA
bidireccional
routers
confundir
estudiosos
SA
IKE
bidireccional
enteramente
distinta
SA
IPsec
presentadas
Secciones
8.6.3
8.6.4
IKE
SA
propor-
ciona
canal
autenticado
cifrado
routers
intercam-
bio
parejas
mensajes
establecen
claves
cifrado
autenticaci√≥n
IKE
SA
establece
valor
secreto
maestro
utilizar√°
calcular
cla-
ves
IPSec
SA
posteriormente
fase
Observe
paso
utilizan
claves
p√∫blica
privada
RSA
particular
R1
R2
revelan
identidad
fir-
mando
mensaje
clave
privada
‚Ä¢D
identidad
firmando
mensajes
identidades
reveladas
est√©
husmeando
pasivamente
canal
comunicaci√≥n
mensajes
env√≠an
canal
IKE
SA
seguro
fase
lados
nego-
cian
algoritmos
cifrado
autenticaci√≥n
IPsec
empleados
asocia-
ciones
seguridad
IPsec
fase
IKE
lados
crean
SA
direcci√≥n
fase
claves
sesi√≥n
cifrado
autenticaci√≥n
habr√°n
establecidas
termina-
SA
lados
emplear
SA
enviar
datagramas
seguros
describe
Secciones
8.6.3
8.6.4
principal
motivaci√≥n
existan
fases
IKE
coste
computacional
puesto
fase
implica
tipo
criptograf√≠a
clave
p√∫blica
IKE
generar
n√∫mero
asocia-
ciones
seguridad
entidades
IPsec
coste
computaci√≥n
relativamente
8.7
Seguridad
redes
LAN
inal√°mbricas
seguridad
preocupaci√≥n
particular
importancia
redes
inal√°mbricas
ondas
radio
transportan
tramas
propagarse
all√°
l√≠mites
edificio
alberga
hosts
estaci√≥n
base
inal√°mbrica
secci√≥n
presentar
introducci√≥n
tema
seguridad
inal√°mbrica
lector
inte-
resado
tratamiento
detallado
leer
libro
Edney
Arbaugh
Edney
2003
legible
problema
seguridad
802.11
atra√≠do
considerable
atenci√≥n
c√≠rculos
t√©cnicos
medios
comunicaci√≥n
habido
discusi√≥n
realidad
producido
debate
existir
consenso
univer-
sal
especificaci√≥n
802.11
original
contiene
diversos
fallos
importantes
seguri-
dad
cualquiera
descargarse
actualmente
software
dominio
p√∫blico
8.7
SEGURIDAD
REDES
LAN
INAL√ÅMBRICAS
705
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
705aprovecha
agujeros
seguridad
usuarios
emplean
mecanis-
mos
seguridad
simples
802.11
vulnerables
usuarios
emplean
caracter√≠stica
seguridad
absoluto
secci√≥n
analizar
mecanismos
seguridad
inicialmente
estandarizados
especificaci√≥n
802.11
conocen
colectivamente
nombre
Privacidad
equivalente
cable
WEP
Wired
Equivalent
Privacy
nombre
sugiere
WEP
pretend√≠a
proporcionar
nivel
seguridad
similar
encontrar
redes
cableadas
Posteriormente
analizaremos
agujeros
seguridad
WEP
veremos
est√°ndar
802.11i
versi√≥n
segura
802.11
adopt√≥
a√±o
2004
8.7.1
WEP
Wired
Equivalent
Privacy
protocolo
WEP
est√°ndar
IEEE
802.11
IEEE
802.11
2009
proporciona
autenticaci√≥n
cifrado
datos
host
punto
acceso
inal√°mbrico
estaci√≥n
base
utilizando
t√©cnica
basada
clave
sim√©trica
compartida
WEP
especifica
algoritmo
gesti√≥n
claves
presupone
host
punto
acceso
inal√°mbrico
acordado
clave
utilizar
empleando
m√©todo
banda
autenticaci√≥n
cabo
forma
host
inal√°mbrico
solicita
autenticaci√≥n
punto
acceso
punto
acceso
responde
solicitud
autenticaci√≥n
n√∫mero
distintivo
128
bytes
host
inal√°mbrico
cifra
n√∫mero
distintivo
utilizando
clave
sim√©trica
com-
punto
acceso
punto
acceso
descifra
n√∫mero
distintivo
cifrado
host
n√∫mero
distintivo
descifrado
corresponde
valor
n√∫mero
distintivo
origi-
nalmente
enviado
host
host
quedar√°
autenticado
punto
acceso
algoritmo
cifrado
datos
WEP
ilustra
Figura
8.31
supone
host
punto
acceso
conocen
clave
sim√©trica
secreta
40
bits
KS
a√±ade
vector
inicializaci√≥n
IV
24
bits
clave
40
bits
crear
clave
64
bits
usar√°
cifrar
√∫nica
trama
vector
IV
cambiar√°
trama
trama
cifrada
clave
64
bits
distinta
706
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Generador
secuencia
claves
Ks
IV
dados
k1
IV
d1
c1
k2
IV
k3
IV
kN
IV
IV
kN+1
IVkN+4
Ks
clave
secreta
sim√©trica
40
bits
Datos
trama
texto
CRC
IV
trama
Cabec
802.11
IV
Datos
cifrados
WEP
CRC
d2
c2
d3
c3
dN
cN
CRC1
cN+1
cN+4
CRC4
Figura
8.31
Protocolo
WEP
802.11
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
706cifrado
realiza
lugar
calcula
valor
CRC
bytes
v√©ase
Secci√≥n
5.2
carga
√∫til
datos
carga
√∫til
bytes
CRC
cifran
utilizando
mecanismo
cifrado
flujo
RC4
analizar
detalles
RC4
encontrarlos
Schneier
1995
Edney
2003
pro-
p√≥sitos
basta
algoritmo
RC4
suministra
valor
clave
caso
clave
KS
IV
64
bits
produce
flujo
valores
claves
k1
IV
k2
IV
k3
IV
.q
Ae
considerar
operaciones
realizan
byte
byte
cifrado
cabo
combinando
XOR
i-√©simo
byte
datos
di
i-√©simo
valor
clave
ki
IV
perteneciente
flujo
valores
clave
generado
pareja
KS
IV
genera
i-√©simo
byte
texto
cifrado
ci
ci
di
/H17053ki
IV
valor
vector
IV
cambia
trama
incluye
texto
cabecera
trama
802.11
cifrada
WEP
muestra
Figura
8.31
receptor
toma
clave
sim√©trica
secreta
40
bits
comparte
emisor
a√±ade
vector
IV
emplea
clave
64
bits
resultante
id√©ntica
clave
usada
emisor
cifrado
descifrar
trama
di
ci
/H17053ki
IV
apropiado
algoritmo
RC4
requiere
utilice
valor
clave
64
bits
Recuerde
clave
WEP
cambia
trama
valor
KS
rara
cambia
cambia
224
claves
√∫nicas
claves
seleccionan
aleatoriamente
demostrar
Walker
2000
Edney
2003
probabilidad
elegido
valor
vector
IV
empleado
clave
64
bits
supe-
rior
99
ciento
12.000
tramas
tama√±o
trama
kbyte
velocidad
transmisi√≥n
11
Mbps
bastan
segundos
transmitir
12.000
tramas
puesto
valor
IV
transmite
texto
trama
curioso
est√©
capturando
comunicaci√≥n
utilizado
valor
IV
duplicado
comprender
problemas
presentan
utiliza
clave
duplicada
considere
ataque
texto
seleccionado
Tom√°s
Alicia
Suponga
Tom√°s
posiblemente
utilizando
t√©cnica
suplantaci√≥n
direcci√≥n
IP
env√≠a
solicitud
ejemplo
solicitud
HTTP
FTP
Alicia
transmitir
archivo
contenido
conocido
d1
d2
d3
d4
Tom√°s
observa
datos
cifrados
c1
c2
c3
c4
Puesto
di
ci
/H17053ki
IV
combinamos
XOR
ci
igualdad
obtenemos
di
/H17053ci
ki
IV
relaci√≥n
Tom√°s
utilizar
valores
conocidos
di
ci
calcular
ki
IV
Tom√°s
vea
utilizando
valor
IV
conocer√°
secuencia
clave
k1
IV
k2
IV
k3
IV
descifrar
mensaje
cifrado
problemas
adicionales
seguridad
afectan
WEP
Fluhrer
2001
describi√≥
ataque
aprovecha
debilidad
conocida
RC4
seleccionan
claves
d√©biles
Stubblefield
2002
analiza
formas
eficientes
8.7
SEGURIDAD
REDES
LAN
INAL√ÅMBRICAS
707
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
707implementar
aprovechar
ataque
problema
relativo
WEP
relacionado
bits
CRC
mostrados
Figura
8.31
transmitidos
trama
802.11
detectar
posibles
alteraciones
bits
carga
√∫til
atacante
cambie
con-
cifrado
sustituya
datos
cifrados
originales
bits
sentido
calcule
CRC
bits
sentido
insertados
coloque
CRC
trama
WEP
generar
trama
802.11
aceptada
receptor
falta
t√©cnicas
integridad
mensajes
estudiado
Secci√≥n
8.3
detectar
alteraci√≥n
sustituci√≥n
contenido
detalles
acerca
seguridad
WEP
consulte
Edney
2003
Walker
2000
Weatherspoon
2000
802.11
Secu-
rity
2009
referencias
contenidas
8.7.2
IEEE
802.11i
publicaci√≥n
1999
norma
IEEE
802.11
comenz√≥
trabajo
desarrollar
versi√≥n
mejorada
802.11
mecanismos
seguridad
robustos
est√°ndar
conocido
nombre
802.11i
obtuvo
ratificaci√≥n
2004
veremos
WEP
proporcionaba
cifrado
relativamente
d√©bil
√∫nica
forma
cabo
autenticaci√≥n
mecanismo
distribu-
ci√≥n
claves
IEEE
802.11i
proporciona
formas
fuertes
cifrado
conjunto
ampliable
mecanismos
autenticaci√≥n
mecanismo
distribuci√≥n
claves
presentar
panor√°mica
802.11i
encontrar
exce-
lente
presentaci√≥n
t√©cnica
flujo
audio
802.11i
TechOnline
2004
Figura
8.32
presenta
marco
conceptual
802.11i
punto
acceso
cliente
inal√°mbrico
802.11i
define
servidor
autenticaci√≥n
AP
708
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Descubrimiento
capacidades
seguridad
STA
AS
autentican
mutuamente
generan
conjuntamente
clave
maestra
MK
AP
sirve
punto
paso
STA
calcula
clave
maestra
par
PMK
AS
calcula
PMK
env√≠a
AP
STA
AP
utilizan
clave
PMK
calcular
clave
temporal
TK
utilizada
cifrado
comprobaciones
integridad
mensajes
Figura
8.32
802.11i
fases
operaci√≥n
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
708comunicarse
Separar
servidor
autenticaci√≥n
AP
permite
servidor
autenticaci√≥n
preste
servicio
puntos
acceso
centralizando
sensi-
bles
decisiones
concernientes
autenticaci√≥n
acceso
√∫nico
servidor
manteniendo
nivel
coste
complejidad
puntos
acceso
802.11i
opera
fases
Descubrimiento
fase
descubrimiento
AP
anuncia
presencia
formas
autenticaci√≥n
cifrado
proporcionar
nodo
cliente
inal√°mbrico
cliente
solicita
formas
espec√≠ficas
autenticaci√≥n
cifrado
desea
cliente
AP
intercambiando
mensajes
cliente
autenticado
dispondr√°
clave
cifrado
necesarios
pasos
cliente
comunicarse
host
remoto
arbitra-
rio
canal
inal√°mbrico
Autenticaci√≥n
mutua
generaci√≥n
clave
maestra
MK
Master
Key
autentica-
ci√≥n
lugar
cliente
inal√°mbrico
servidor
autenticaci√≥n
fase
punto
acceso
act√∫a
b√°sicamente
repetidor
reenviando
mensajes
cliente
servidor
autenticaci√≥n
Protocolo
ampliable
autenticaci√≥n
EAP
Extensible
Authentication
Protocol
RFC
2284
define
formatos
mensajes
terminal
terminal
utilizados
interacci√≥n
simple
tipo
solicitud
res-
puesta
cliente
servidor
autenticaci√≥n
muestra
Figura
8.33
mensajes
EAP
encapsulan
utilizando
EAPoL
EAP
LAN
IEEE
802.1X
env√≠an
enlace
inal√°mbrico
802.11
mensajes
EAP
desencapsulados
punto
acceso
re-encapsulados
utilizando
protocolo
RADIUS
transmisi√≥n
UDP
IP
servidor
autentica-
ci√≥n
protocolo
RFC
2865
servidor
RADIUS
requeridos
obliga-
toriamente
protocolo
802.11i
componentes
est√°ndar
facto
802.11i
8.7
SEGURIDAD
REDES
LAN
INAL√ÅMBRICAS
709
STA
estaci√≥n
cliente
AP
punto
acceso
Red
cableada
AS
servidor
autenticaci√≥n
EAP
TLS
EAP
EAP
LAN
EAPoL
RADIUS
IEEE
802.11
UDP
IP
Figura
8.33
EAP
protocolo
terminal
terminal
mensajes
EAP
encapsulan
utilizando
EAPoL
enlace
inal√°mbrico
existente
cliente
punto
acceso
empleando
RADIUS
UDP
IP
punto
acceso
servidor
autenticaci√≥n
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
709Es
protocolo
DIAMETER
RFC
3588
recientemente
estandarizado
sus-
tituya
RADIUS
futuro
EAP
servidor
autenticaci√≥n
seleccionar
formas
cabo
autenticaci√≥n
802.11i
impone
m√©todo
autenticaci√≥n
con-
creto
emplea
esquema
autenticaci√≥n
EAP-TLS
RFC
2716
EAP-
TLS
utiliza
t√©cnicas
clave
p√∫blica
incluyendo
cifrado
n√∫meros
distintivos
res√∫menes
mensajes
similares
estudiado
Secci√≥n
8.3
per-
mitir
cliente
servidor
autenticaci√≥n
autentiquen
mutuamente
calcular
clave
maestra
MK
conocida
ambas
partes
Generaci√≥n
clave
maestra
par
PMK
Pairwise
Master
Key
MK
secreto
compartido
conocen
cliente
servidor
autenticaci√≥n
emplean
generar
clave
clave
maestra
par
PMK
ser-
vidor
autenticaci√≥n
env√≠a
PMK
AP
quer√≠amos
llegar
cliente
AP
disponen
clave
compartida
recuerde
WEP
pro-
blema
distribuci√≥n
claves
siquiera
contemplaba
habr√°n
autenticado
mutuamente
listos
comenzar
operaci√≥n
real
Generaci√≥n
clave
temporal
TK
Temporal
Key
PMK
cliente
inal√°m-
brico
AP
generar
claves
adicionales
utilizar√°n
comuni-
caci√≥n
particular
inter√©s
clave
tem
poral
TK
utilizar√°
cifrado
nivel
enlace
datos
enviados
enlace
inal√°mbrico
host
remoto
arbitrario
802.11i
proporciona
formas
cifrado
incluyendo
esquema
cifrado
basado
AES
versi√≥n
fuerte
cifrado
WEP
8.8
Seguridad
operacional
cortafuegos
sistemas
detecci√≥n
intrusiones
visto
cap√≠tulo
Internet
lugar
seguro
malos
infligiendo
clase
estragos
Conocida
naturaleza
hostil
Internet
considerar
red
organizaci√≥n
administrador
red
gestiona
punto
vista
administrador
red
mundo
divide
forma
n√≠tida
bandos
pertenecen
red
organizaci√≥n
acceder
recursos
internos
forma
relativamente
restringida
malos
cuidadosamente
escrutados
hora
acceder
recursos
red
organizaciones
castillos
medievales
modernos
edificios
oficinas
√∫nico
punto
entrada
salida
comprobaci√≥n
seguridad
malos
entran
salen
organizaci√≥n
castillo
hac√≠a
puerta
situada
extremo
puente
levadizo
edificio
oficinas
control
segu-
ridad
entrada
red
computadoras
comprueba
tr√°fico
entra
sale
red
seguro
registra
tr√°fico
elimina
reenv√≠a
encargan
tareas
serie
dispositivos
operacionales
conocidos
cortafuegos
sistemas
detecci√≥n
intrusiones
IDS
Intrusion
Detection
System
sistemas
prevenci√≥n
intrusiones
IPS
Intrusion
Prevention
System
710
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
7108.8.1
Cortafuegos
cortafuegos
combinaci√≥n
hardware
software
a√≠sla
red
interna
organizaci√≥n
Internet
permitiendo
pasar
paquetes
bloqueando
cortafuegos
permite
administrador
red
controlar
acceso
mundo
exterior
recursos
red
administrada
gestionando
flujo
tr√°fico
recursos
cortafuegos
objetivos
tr√°fico
exterior
interior
red
viceversa
pasa
cortafuegos
Figura
8.34
muestra
cortafuegos
l√≠mite
red
administrada
resto
Internet
organizaciones
tama√±o
utilizar
niveles
cortafuegos
cortafuegos
distribuidos
Skoudis
2006
colocar
cortafuegos
√∫nico
punto
acceso
red
muestra
Figura
8.34
facilita
gesti√≥n
imponer
pol√≠tica
control
acceso
permite
paso
tr√°fico
autorizado
pol√≠tica
seguridad
local
tr√°fico
entrada
salida
red
institucional
pasando
cortafuegos
restringir
acceso
tr√°fico
autorizado
cortafuegos
inmune
penetraci√≥n
cortafuegos
disposi-
tivo
conectado
red
dise√±ado
instalado
apropiadamente
verse
com-
prometido
cuyo
caso
proporciona
falsa
sensaci√≥n
seguridad
disponer
cortafuegos
Cisco
Check
Point
empresas
l√≠deres
actuales
distribuci√≥n
cortafuegos
crearse
f√°cilmente
cortafuegos
filtro
paquetes
m√°quina
Linux
utilizando
iptables
software
dominio
p√∫blico
suministra
habitual-
mente
Linux
8.8
SEGURIDAD
OPERACIONAL
711
Red
administrada
Cortafuegos
Internet
p√∫blica
Figura
8.34
Colocaci√≥n
cortafuegos
red
administrada
mundo
exterior
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
711Los
cortafuegos
clasificar
categor√≠as
filtros
paquetes
tradiciona-
filtros
memoria
pasarelas
aplicaci√≥n
siguientes
subseccio-
nes
abordaremos
tipos
cortafuegos
Filtros
paquetes
tradicionales
muestra
Figura
8.34
organizaci√≥n
dispone
normalmente
router
pasarela
conecta
red
interna
ISP
red
Internet
p√∫blica
tr√°fico
sale
entra
red
interna
pasa
router
router
lugar
filtrado
paquetes
filtro
paquetes
examina
datagrama
ais-
ladamente
determinando
pasar
eliminado
bas√°ndose
reglas
especifi-
cadas
administrador
decisiones
filtrado
normalmente
basan
‚Ä¢L
‚Ä¢E
etc.
‚Ä¢E
‚Ä¢L
tipo
mensaje
ICMP
‚Ä¢D
‚Ä¢D
administrador
red
configura
cortafuegos
bas√°ndose
pol√≠tica
organi-
zaci√≥n
pol√≠tica
productividad
usuario
ancho
banda
problemas
seguridad
organizaci√≥n
Tabla
8.5
enumera
algu-
nas
posibles
pol√≠ticas
organizaci√≥n
controlarse
sistema
filtrado
paquetes
ejemplo
organizaci√≥n
desea
permi-
tir
conexi√≥n
TCP
entrante
destinadas
servidor
web
p√∫blico
bloquear
segmentos
TCP
SYN
entrantes
cuyo
puerto
des-
tino
puerto
80
cuya
direcci√≥n
IP
destino
correspondientes
servidor
web
organizaci√≥n
desea
usuarios
monopolicen
ancho
banda
acceso
aplicaciones
radio
Internet
bloquear
tr√°fico
UDP
cr√≠tico
radio
Internet
transmite
UDP
organizaci√≥n
desea
red
interna
analizada
Traceroute
alguien
externo
bloquear
mensa-
jes
ICMP
TTL
caducados
salen
red
organizaci√≥n
pol√≠tica
filtrado
basada
combinaci√≥n
direcciones
n√∫me-
ros
puerto
ejemplo
router
filtrado
reenviar
datagramas
Telnet
n√∫mero
puerto
23
dirigen
proceden
direcci√≥n
incluida
lista
direcciones
IP
especificadas
pol√≠tica
permite
conexiones
Telnet
dirigidas
procedentes
hosts
especificados
lista
direcciones
permitidas
Lamentablemente
basar
pol√≠tica
direcciones
externas
proporciona
nin-
guna
protecci√≥n
frente
datagramas
direcci√≥n
origen
falsificada
filtrado
basarse
configurado
bit
TCP
ACK
truco
resulta
√∫til
organizaci√≥n
desea
permitir
clientes
internos
conecten
servidores
externos
impedir
clientes
externos
conecten
servidores
internos
Recuerde
Secci√≥n
3.5
segmento
conexi√≥n
TCP
puesto
bit
ACK
restantes
segmentos
conexi√≥n
712
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
712Pol√≠tica
Configuraci√≥n
cortafuegos
acceso
web
externo
Eliminar
paquetes
salientes
direcci√≥n
IP
puerto
80
conexiones
TCP
entrantes
Eliminar
paquetes
TCP
SYN
entrantes
IP
destinadas
servidor
web
p√∫blico
130.207.244.203
puerto
80
organizaci√≥n
Impedir
aplicaciones
radio
web
Eliminar
paquetes
UDP
entrantes
paquetes
DNS
consuman
ancho
banda
disponible
Impedir
red
utilizada
Eliminar
paquetes
ping
ICMP
direcci√≥n
difusi√≥n
cabo
ataque
DoS.
ejemplo
130.207.255.255
Impedir
red
examinada
Eliminar
tr√°fico
ICMP
TTL
saliente
caducado
Traceroute
Tabla
8.5
Pol√≠ticas
reglas
filtrado
correspondientes
red
130.27/16
organizaci√≥n
servidor
web
130.207.244.203
puesto
bit
organizaci√≥n
desea
impedir
clientes
externos
inicien
conexiones
servidores
internos
basta
filtrar
segmentos
entran-
tes
tengan
bit
ACK
puesto
pol√≠tica
prohibe
conexiones
TCP
origen
exterior
permite
conexiones
originadas
internamente
reglas
cortafuegos
implementan
routers
listas
control
acceso
teniendo
interfaz
router
lista
Tabla
8.6
muestra
ejem-
plo
lista
control
acceso
organizaci√≥n
222.22/16
lista
control
acceso
interfaz
conecta
router
ISP
externos
organizaci√≥n
reglas
aplican
datagrama
atraviesa
interfaz
abajo
primeras
reglas
juntas
permiten
usuarios
internos
navegar
Web
regla
permite
salir
red
organizaci√≥n
paquete
TCP
puerto
destino
80
regla
permite
entrar
red
organizaci√≥n
paquete
TCP
puerto
origen
80
bit
ACK
activado
Observe
origen
externo
intenta
establecer
conexi√≥n
TCP
host
interno
conexi√≥n
bloqueada
aun-
puerto
origen
destino
puerto
80
reglas
siguientes
juntas
per-
miten
paquetes
DNS
entrar
salir
red
organizaci√≥n
resumen
lista
control
acceso
restrictiva
bloquea
tr√°fico
tr√°fico
web
ini-
ciado
organizaci√≥n
tr√°fico
DNS
CERT
Filtering
2009
proporciona
lista
filtros
paquetes
basados
puertos
protocolos
recomendados
evitar
serie
agujeros
seguridad
conocidos
aplicaciones
red
existentes
Filtros
paquetes
memoria
filtro
paquetes
tradicional
decisiones
filtrado
toman
paquete
forma
aislada
filtros
memoria
realmente
controlan
conexiones
TCP
utilizan
dicha
informaci√≥n
tomar
decisiones
filtrado
entender
filtros
memoria
examinemos
lista
con-
trol
acceso
Tabla
8.6
restrictiva
lista
control
acceso
tabla
permite
paquete
procedente
exterior
ACK
puerto
8.8
SEGURIDAD
OPERACIONAL
713
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
713Acci√≥n
Direcci√≥n
Direcci√≥n
Protocolo
Puerto
Puerto
Bit
origen
destino
origen
destino
indicador
Permitir
222.22/16
222.22/16
TCP
1023
80
cualquiera
Permitir
222.22/16
222.22/16
TCP
80
1023
ACK
Permitir
222.22/16
222.22/16
UDP
1023
53
Permitir
222.22/16
222.22/16
UDP
53
1023
Denegar
Tabla
8.6
Lista
control
acceso
interfaz
router
origen
80
atraviese
filtro
Tales
paquetes
utilizados
posibles
atacantes
intentar
fallar
sistemas
internos
paquetes
formados
cabo
ata-
ques
denegaci√≥n
servicio
mapa
red
interna
soluci√≥n
senci-
lla
consiste
bloquear
paquetes
TCP
ACK
m√©todo
impedir√≠a
usuarios
internos
organizaci√≥n
navegar
Web
filtros
memoria
resuelven
problema
almacenando
informa-
ci√≥n
conexiones
TCP
activas
tabla
conexiones
cortafuegos
observar
inicio
conexi√≥n
observando
fases
SYN
SYNACK
ACK
observar
conexi√≥n
ve
paquete
conexi√≥n
cortafuegos
suponer
forma
conserva-
dora
conexi√≥n
terminado
observado
actividad
ejemplo
60
segundos
Tabla
8.7
muestra
ejemplo
tabla
conexiones
cortafuegos
tabla
conexiones
indica
actualmente
conexiones
TCP
activas
habi√©ndose
iniciado
organizaci√≥n
Adicio-
nalmente
filtro
memoria
incluye
columna
Comprobar
cone-
xi√≥n
lista
control
acceso
muestra
Tabla
8.8
Observe
tabla
id√©ntica
lista
control
acceso
Tabla
8.6
indica
conexi√≥n
deber√≠a
comprobada
reglas
Veamos
ejemplos
examinar
trabajan
conjuntamente
tabla
cone-
xiones
lista
control
acceso
ampliada
Suponga
atacante
intenta
introducir
paquete
formado
red
organizaci√≥n
enviando
datagrama
puerto
origen
TCP
n√∫mero
80
bit
indicador
ACK
activado
Suponga
paquete
n√∫mero
puerto
origen
12543
direcci√≥n
IP
origen
150.23
23.155
paquete
llega
cortafuegos
comprueba
lista
control
acceso
Tabla
8.8
indica
tabla
conexiones
com-
probada
permitir
entrada
paquete
red
organizaci√≥n
cortafue-
gos
comprueba
debidamente
tabla
conexiones
ve
paquete
conexi√≥n
TCP
activa
rechaza
ejemplo
suponga
usuario
interno
desea
navegar
sitio
web
externo
Puesto
usuario
lugar
env√≠a
segmento
TCP
SYN
conexi√≥n
TCP
usuario
registra
tabla
conexiones
servidor
web
devuelve
paquetes
bit
ACK
necesariamente
activado
cortafuegos
comprueba
tabla
ve
correspondiente
conexi√≥n
curso
cortafuegos
deja
pasar
paquetes
interviniendo
actividad
navegaci√≥n
Web
usuario
interno
714
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
714Direcci√≥n
origen
Direcci√≥n
destino
Puerto
origen
Puerto
destino
222.22.1.7
37.96.87.123
12699
80
222.22.93.2
199.1.205.23
37654
80
222.22.65.143
203.77.240.43
48712
80
Tabla
8.7
Tabla
conexiones
filtro
memoria
Acci√≥n
Direcci√≥n
Direcci√≥n
Protocolo
Puerto
Puerto
Bit
Comprobar
origen
destino
origen
destino
indicador
conexi√≥n
Permitir
222.22/16
TCP
1023
80
cualquiera
222.22/16
Permitir
222.22/16
TCP
80
1023
ACK
222.22/16
Permitir
222.22/16
UDP
1023
53
222.22/16
Permitir
222.22/16
UDP
53
1023
222.22/16
Denegar
Tabla
8.8
Lista
control
acceso
filtro
memoria
Pasarela
aplicaci√≥n
ejemplos
anteriores
visto
filtrado
nivel
paquetes
permite
organizaci√≥n
filtrado
basto
bas√°ndose
contenidos
cabeceras
IP
TCP
UDP
incluyendo
direcciones
IP
n√∫meros
puerto
bits
reconocimiento
ACK
ocurre
organizaci√≥n
desea
proporcionar
servicio
Telnet
conjunto
restringido
usuarios
internos
oposici√≥n
direcciones
IP
ocurre
organizaci√≥n
desea
tales
usuarios
privilegiados
autentiquen
permitirles
establecer
conexiones
Telnet
mundo
exterior
Tales
tareas
quedan
capacidades
filtros
tradicionales
memoria
infor-
maci√≥n
acerca
identidad
usuarios
internos
datos
capa
aplica-
ci√≥n
incluida
cabeceras
IP
TCP
UDP
seguridad
nivel
granularidad
fino
cortafuegos
combinar
filtros
paquetes
pasarelas
aplicaci√≥n
pasarelas
aplicaci√≥n
miran
all√°
cabeceras
IP
TCP
UDP
toman
decisiones
bas√°ndose
datos
aplicaci√≥n
pasarela
aplicaci√≥n
servidor
espec√≠fico
aplicaci√≥n
pasar
datos
aplicaci√≥n
entrantes
salientes
ejecutarse
aplicaciones
pasarela
host
pasarela
servidor
sepa-
rado
procesos
8.8
SEGURIDAD
OPERACIONAL
715
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
715Con
proporcionar
nociones
pasarelas
aplicaci√≥n
dise√±ar
cortafuegos
permita
grupo
restringido
usuarios
internos
estable-
cer
conexi√≥n
Telnet
exterior
impida
clientes
externos
establecer
conexi√≥n
Telnet
red
interna
pol√≠tica
conseguirse
implementando
combinaci√≥n
filtro
paquetes
router
pasarela
aplicaci√≥n
Telnet
muestra
Figura
8.35
filtro
router
configurado
bloquear
conexiones
Telnet
origen
direcci√≥n
IP
pasarela
aplicaci√≥n
configuraci√≥n
filtro
fuerza
conexiones
Telnet
salientes
pasar
pasarela
aplicaci√≥n
Considere
usuario
interno
quiera
conectarse
Telnet
mundo
exterior
usuario
establecer
lugar
sesi√≥n
Telnet
pasarela
aplicaci√≥n
aplicaci√≥n
ejecute
pasarela
escucha
sesiones
Telnet
entrantes
pedir√°
usuario
introduzca
ID
usuario
contrase√±a
usuario
proporcione
infor-
maci√≥n
pasarela
aplicaci√≥n
comprobar√°
usuario
permiso
establecer
conexi√≥n
elnet
mundo
exterior
pasarela
termina
conexi√≥n
Telnet
usuario
interno
usuario
permiso
pasarela
pide
usuario
nombre
host
externo
desea
conectarse
establece
sesi√≥n
Telnet
pasarela
host
externo
reenv√≠a
host
externo
datos
lleguen
usuario
reenv√≠a
usuario
datos
lleguen
host
externo
pasarela
aplicaci√≥n
Telnet
encarga
autorizaci√≥n
usuario
act√∫a
servidor
cliente
Telnet
retransmitiendo
informaci√≥n
usuario
servidor
Telnet
remoto
Observe
filtro
permitir√°
lleve
cabo
paso
pasarela
inicia
conexi√≥n
Telnet
mundo
exterior
716
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Pasarela
aplicaci√≥n
Sesi√≥n
Telnet
host-pasarela
Sesi√≥n
Telnet
pasarela-
host
remoto
Router
filtro
Figura
8.35
Cortafuegos
consta
pasarela
aplicaci√≥n
filtro
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
716Las
redes
internas
disponen
m√∫ltiples
pasarelas
aplicaci√≥n
ejem-
plo
pasarelas
Telnet
HTTP
FTP
correo
electr√≥nico
servidor
correo
organizaci√≥n
v√©ase
Secci√≥n
2.4
cach√©
web
pasarelas
aplicaci√≥n
pasarelas
aplicaci√≥n
desventajas
lugar
falta
pasarela
aplicaci√≥n
aplicaci√≥n
lugar
rendi-
miento
ver√°
afectado
datos
reenviados
pasarela
convierte
problema
particularmente
casos
8.8
SEGURIDAD
OPERACIONAL
717
ANONIMATO
PRIVACIDAD
Suponga
deseamos
visitar
sitio
web
controvertido
ejemplo
sitio
activismo
pol√≠tico
revelar
direcci√≥n
IP
sitio
web
ISP
local
ISP
domicilio
empresa
sepa
visitan-
do
sitio
deseamos
ISP
local
vea
datos
intercambiando
sitio
emplea
m√©todo
tradicional
conexi√≥n
directa
sitio
web
tipo
cifrado
objetivos
anteriores
utilizando
SSL
objetivos
inalcanzables
direcci√≥n
IP
origen
presentada
sitio
web
datagrama
env√≠emos
direcci√≥n
destino
paquete
env√≠emos
f√°cilmente
husmeada
ISP
local
confidencialidad
anonimato
lugar
utilizar
com-
binaci√≥n
servidor
proxy
confianza
SSL
muestra
Figura
8.36
t√©cnica
establecemos
conexi√≥n
SSL
proxy
confianza
envia-
mos
conexi√≥n
SSL
solicitud
HTTP
p√°gina
situada
sitio
web
deseado
proxy
reciba
solicitud
HTTP
cifrada
SSL
descifrar√°
reenviar√°
solicitud
HTTP
texto
sitio
web
sitio
web
responder√°
proxy
reenviar√°
respuesta
SSL
Puesto
sitio
web
ve
direcci√≥n
IP
proxy
direcci√≥n
cliente
estaremos
obteniendo
acceso
verdaderamente
an√≥nimo
sitio
web
tr√°fico
proxy
cifrado
ISP
local
invadir
intimidad
almacenando
registro
nombre
sitio
visitado
datos
intercambiando
empresas
ofrecen
actualidad
tales
servicios
proxy
ejemplo
proxify.com
soluci√≥n
proxy
conoce
datos
conoce
direcci√≥n
IP
direcci√≥n
IP
sitio
navegando
texto
tr√°fico
intercambiado
sitio
web
Dicha
soluci√≥n
confianza
proxy
alta
enfoque
robusto
adoptado
servicio
anonimato
privacidad
TOR
consiste
enrutar
tr√°fico
serie
servidores
proxy
confabulados
TOR
2009
particular
TOR
permite
usuarios
sugerir
proxies
lista
usuario
conecta
servidor
utilizando
TOR
servicio
selecciona
aleatoriamente
lista
proxies
cadena
proxies
enruta
tr√°fico
cliente
servidor
cadena
forma
suponiendo
proxies
est√©n
confabulados
lugar
comunicaci√≥n
direcci√≥n
IP
sitio
web
objetivo
comunicaci√≥n
realice
texto
proxy
ser-
vidor
proxy
direcci√≥n
IP
enviando
recibiendo
texto
HISTORIA
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
717varios
usuarios
aplicaciones
utilizando
m√°quina
pasarela
Finalmente
soft-
ware
cliente
contactar
pasarela
usuario
realiza
soli-
citud
pasarela
aplicaci√≥n
servidor
externo
conectarse
8.8.2
Sistemas
detecci√≥n
intrusiones
visto
filtro
paquetes
tradicional
memoria
inspecciona
campos
cabecera
TCP
UDP
ICMP
hora
decidir
paquetes
pasar
cortafuegos
detectar
tipos
ataques
necesitamos
lle-
var
cabo
inspecci√≥n
profunda
paquetes
mirar
all√°
campos
cabecera
examinando
datos
aplicaci√≥n
transportados
paquetes
visto
Secci√≥n
8.8.1
pasarelas
aplicaci√≥n
realizan
inspec-
ci√≥n
profunda
paquetes
pasarela
aplicaci√≥n
cabo
tarea
aplicaci√≥n
espec√≠fica
existir√°
nicho
tipo
dispositivo
dispositivo
examine
cabeceras
paquetes
atraviesen
filtros
paquetes
lleve
cabo
inspecci√≥n
profunda
paquetes
diferencia
sucede
filtros
paquetes
tales
dispositivos
detecte
paquete
sospechoso
serie
sospechosa
paquetes
impedir
paquetes
entren
red
organizaci√≥n
actividad
sospechosa
dispositivo
dejar
pasar
paquetes
enviando
alertas
administrador
red
echar
vistazo
detallado
tr√°fico
tomar
medidas
oportunas
dispositivo
genere
alertas
observe
presencia
tr√°fico
potencialmente
malicioso
denomina
Sistema
detecci√≥n
intrusiones
IDS
Intrusion
Detection
System
dispositivo
filtre
tr√°fico
sospechoso
denomina
Sistema
preven-
ci√≥n
intrusiones
IPS
Intrusion
Prevention
System
secci√≥n
estudiar
tipos
sistemas
IDS
IPS
conjuntamente
aspecto
t√©cnico
intere-
sante
dichos
sistemas
detectan
tr√°fico
sospechoso
env√≠an
alertas
eli-
minan
paquetes
utilizar
t√©rmino
sistemas
IDS
referirnos
sistemas
IPS
IDS
sistema
IDS
emplearse
detectar
amplia
gama
ataques
incluyendo
mapeado
red
generados
ejemplo
nmap
escaneo
puertos
escaneos
718
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
Alicia
Anonymizing
Proxy
SSL
Texto
Figura
8.36
proporcionar
anonimato
privacidad
proxy
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
718la
pila
TCP
ataques
inundaci√≥n
ancho
banda
gusanos
virus
ataques
vulnerabilidades
sistema
operativo
ataques
vulnerabilidades
aplicaci√≥n
Secci√≥n
1.6
panor√°mica
ataques
red
Actualmente
miles
organi-
zaciones
utilizan
sistemas
IDS
sistemas
implementados
propietarios
comercializados
Cisco
Check
Point
fabricantes
equipos
seguridad
sistemas
IDS
implantados
sistemas
dominio
p√∫blico
tremendamente
popular
sistema
IDS
Snort
hablaremos
organizaci√≥n
implantar
sensores
IDS
red
Figura
8.37
muestra
organizaci√≥n
sensores
IDS
implantan
m√∫ltiples
sensores
normalmente
funcionan
concertada
enviando
informaci√≥n
acerca
activida-
des
tr√°fico
sospechoso
procesador
IDS
central
recopila
integra
informaci√≥n
env√≠a
alarmas
administradores
red
apropiado
Figura
8.37
organizaci√≥n
dividido
red
regiones
regi√≥n
alta
seguridad
prote-
gida
filtro
paquetes
pasarela
aplicaci√≥n
monitorizada
sensores
IDS
regi√≥n
menor
seguridad
denominada
Zona
desmilitarizada
DMZ
Demilitarized
Zone
protegida
filtro
paquetes
monitorizada
sensores
IDS
Observe
DMZ
incluye
servidores
organizaci√≥n
necesitan
comunicarse
mundo
exterior
servidor
web
p√∫blico
servidor
DNS
autoritativo
8.8
SEGURIDAD
OPERACIONAL
719
Internet
Servidor
web
Servidor
FTP
Servidor
DNS
Red
interna
Pasarela
aplicaci√≥n
Zona
desmilitarizada
Filtro
Clave
Sensores
IDS
Figura
8.37
organizaci√≥n
implantado
filtro
pasarela
aplicaci√≥n
sensores
IDS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
719El
lector
pregunt√°ndose
llegar
punto
emplean
m√∫ltiples
sensores
IDS
colocar
simplemente
sensor
IDS
justo
filtro
paquetes
integrado
filtro
paquetes
Figura
8.37
IDS
cabo
inspecci√≥n
profunda
paque-
tes
comparar
paquete
pasa
decenas
miles
fir-
requerir
cantidad
significativa
procesamiento
particular
organizaci√≥n
recibe
orden
gigabits
tr√°fico
procedente
Internet
Colo-
cando
sensores
IDS
aguas
abajo
sensor
ve
fracci√≥n
tr√°-
fico
organizaci√≥n
cumplir
f√°cilmente
tarea
modos
disponibles
sistemas
IDS
IPS
altas
prestaciones
organizaciones
sue-
len
conformarse
√∫nico
sensor
localizado
cerca
router
acceso
sistemas
IDS
clasificar
t√©rminos
generales
sistemas
basados
firma
sistemas
basados
anomal√≠as
IDS
basado
firmas
mantiene
amplia
base
datos
firmas
ataque
firma
conjunto
reglas
concernientes
actividad
intrusi√≥n
firma
simplemente
lista
caracter√≠sticas
acerca
determinado
paquete
ejemplo
n√∫meros
puerto
origen
destino
tipo
protocolo
cadena
espec√≠fica
bits
carga
√∫til
paquete
relacio-
serie
paquetes
firmas
normalmente
creadas
ingenieros
segu-
ridad
red
experimentados
dedican
investigar
ataques
conocidos
administrador
red
organizaci√≥n
personalizar
firmas
a√±adir
creaci√≥n
base
datos
Operacionalmente
sistema
IDS
basado
firmas
analiza
paquete
pasa
comparando
paquete
husmeado
firmas
base
datos
paquete
serie
paquetes
concuerda
firma
base
datos
IDS
genera
alerta
alerta
enviarse
administrador
red
mensaje
correo
elec-
tr√≥nico
mandarse
sistema
gesti√≥n
red
simplemente
almacenarse
registro
futura
inspecci√≥n
sistemas
IDS
basados
firma
ampliamente
implantados
presentan
serie
limitaciones
importante
requiere
conocimiento
previo
ataque
generar
firma
precisa
palabras
IDS
basado
firmas
comple-
tamente
in√∫til
frente
ataques
hayan
investigados
desven-
taja
produce
concordancia
firma
dicha
concordancia
resultado
ataque
generar√≠a
falsa
alarma
Final-
mente
puesto
necesario
comparar
paquete
amplia
colecci√≥n
firmas
IDS
verse
desbordado
necesidades
procesamiento
fraca-
sar
hora
detectar
paquetes
maliciosos
IDS
basado
anomal√≠as
crea
perfil
tr√°fico
observando
tr√°fico
operaci√≥n
normal
busca
flujos
paquetes
estad√≠sticamente
inusuales
ejemplo
porcentaje
inusual
paquetes
ICMP
crecimiento
exponencial
s√∫bito
escaneo
puertos
barridos
ping
sistemas
IDS
basados
anomal√≠as
dependen
conocimiento
previo
acerca
ataques
existentes
detectar
potencialmente
ataques
documentados
problema
distinguir
tr√°fico
normal
tr√°fico
estad√≠sticamente
inu-
sual
extremadamente
complejo
fecha
mayor√≠a
sistemas
IDS
implanta-
basados
signaturas
incluyen
caracter√≠sticas
sistemas
basados
anomal√≠as
720
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
720Snort
Snort
IDS
dominio
p√∫blico
c√≥digo
abierto
centenares
miles
implanta-
ciones
conocidas
Snort
2007
Koziol
2003
ejecutarse
plataformas
Linux
UNIX
Windows
Utiliza
interfaz
gen√©rica
an√°lisis
libpcap
utilizada
Wireshark
husmeadores
paquetes
gestionar
f√°cilmente
100
Mbps
tr√°fico
instalaciones
velocidades
tr√°fico
orden
gibabit/
necesario
emplear
m√∫ltiples
sensores
Snort
entender
funciona
Snort
examinemos
ejemplo
signatura
utilizada
Snort
alert
icmp
EXTERNAL_NET
any
HOME_NET
any
msg:‚ÄùICMP
PING
NMAP
dsize
itype
signatura
concordar√°
paquete
ICMP
red
organiza-
ci√≥n
HOME_NET
exterior
EXTERNAL_NET
tipo
ping
ICMP
carezca
carga
√∫til
dsize
Puesto
nmap
v√©ase
Secci√≥n
1.6
genera
paque-
tes
ping
caracter√≠sticas
espec√≠ficas
signatura
dise√±ada
detectar
barridos
ping
realizados
nmap
paquete
concuerda
signatura
Snort
genera
alerta
incluye
mensaje
ICMP
PING
NMAP
impresionante
acerca
Snort
enorme
comunidad
usuarios
expertos
seguridad
mantienen
base
datos
signaturas
Normalmente
cabo
horas
detectarse
ataque
comunidad
Snort
escribe
publica
signatura
ataque
descargada
centenares
miles
implantaciones
Snort
distribuidas
mundo
utilizando
sintaxis
signaturas
Snort
administradores
red
adaptar
signaturas
necesidades
organi-
zaci√≥n
modificando
signaturas
existentes
creando
completamente
8.9
Resumen
cap√≠tulo
examinado
diversos
mecanismos
amantes
secretos
Benito
Alicia
utilizar
comunicarse
forma
segura
visto
Benito
Alicia
interesados
confidencialidad
sentido
capa-
ces
entender
contenido
mensajes
transmitidos
autenticaci√≥n
punto
ter-
minal
seguros
hablando
integridad
mensajes
quieren
seguros
mensajes
alterados
camino
necesidad
comunicaciones
seguras
confinada
amantes
secretos
visto
Secciones
8.4
8.7
seguridad
utilizarse
capas
arquitectura
red
protegerse
frente
malos
manos
enorme
arsenal
posibles
ataques
cap√≠tulo
presentado
principios
subya-
cen
comunicaciones
seguras
Secci√≥n
8.2
cubierto
t√©cnicas
criptogr√°fi-
cas
cifrado
descifrado
datos
incluyendo
criptograf√≠a
clave
sim√©trica
criptograf√≠a
clave
p√∫blica
DES
RSA
examinado
casos
estudio
espe-
c√≠ficos
clases
principales
t√©cnicas
criptogr√°ficas
emplean
redes
actuales
8.9
RESUMEN
721
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
721En
Secci√≥n
8.3
examinado
m√©todos
permiten
proporcionar
mecanis-
mos
asegurar
integridad
mensajes
c√≥digos
autenticaci√≥n
mensajes
MAC
Message
Authentication
Code
firmas
digitales
m√©todos
presentan
serie
paralelismos
utilizan
funciones
hash
criptogr√°ficas
ambas
t√©cnicas
permiten
verificar
origen
mensaje
integridad
mensaje
diferencia
importante
c√≥digos
MAC
basan
cifrado
firmas
digitales
requieren
infraestructura
clave
p√∫blica
Ambas
t√©cnicas
ampliamente
pr√°ctica
visto
Secciones
8.4
8.7
fir-
digitales
utilizan
crear
certificados
digitales
importantes
verificar
validez
claves
p√∫blicas
investigado
autenticaci√≥n
punto
terminal
visto
emplearse
n√∫meros
distintivos
frustrar
ataques
reproducci√≥n
Secciones
8.4
8.7
examinado
protocolos
red
seguros
dis-
frutan
amplio
pr√°ctica
visto
criptograf√≠a
clave
sim√©trica
n√∫cleo
PGP
SSL
IPsec
seguridad
inal√°mbrica
visto
criptograf√≠a
clave
p√∫blica
crucial
PGP
SSL
visto
PGP
utiliza
firmas
digitales
proporcionar
integridad
mensajes
SSL
IPsec
utilizan
c√≥digos
MAC
Conociendo
principios
b√°sicos
criptogra-
f√≠a
habiendo
estudiado
utilizan
realmente
principios
lector
posici√≥n
dise√±ar
protocolos
red
seguros
t√©cnicas
cubiertas
Secciones
8.2
8.7
Benito
Alicia
comuni-
carse
forma
segura
Suponiendo
estudiantes
redes
aprovechado
material
libro
forma
evitar
Tom√°s
descubra
relaci√≥n
amo-
rosa
confidencialidad
peque√±a
panor√°mica
general
seguridad
redes
se√±alado
Secci√≥n
8.8
√©nfasis
seguridad
red
puesto
proteger
infraestructura
red
frente
potenciales
ataques
realizados
malos
cap√≠tulo
abordado
corta-
fuegos
sistemas
IDS
inspeccionan
paquetes
entran
salen
red
organizaci√≥n
cap√≠tulo
cubierto
cantidad
temas
centr√°ndose
aspectos
importantes
seguridad
redes
modernas
Animamos
lectores
deseen
profundizar
investigar
referencias
citadas
cap√≠tulo
particular
reco-
mendamos
Skoudis
2006
temas
relacionados
ataques
seguridad
opera-
cional
Kaufman
1995
estudio
criptograf√≠a
aplica
seguridad
redes
Rescorla
2001
proporciona
tratamiento
profundo
asequible
SSL
Edney
2003
ofrece
exposici√≥n
seguridad
802.11
incluyendo
investi-
gaci√≥n
intuitiva
WEP
desventajas
lectores
deseen
consultar
Ross
2009
amplio
conjunto
diapositivas
PowerPoint
400
seguridad
redes
pr√°cticas
laboratorio
basadas
Linux
722
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
722Problemas
cuestiones
repaso
Cap√≠tulo
Problemas
repaso
SECCI√ìN
8.1
R1
diferencias
confidencialidad
mensajes
integridad
existir
confidencialidad
integridad
existir
integri-
dad
confidencialidad
Justifique
respuesta
R2
entidades
Internet
routers
dispositivos
conmutaci√≥n
servidores
DNS
servi-
dores
web
sistemas
terminales
usuario
etc.
necesitan
comunicarse
forma
segura
Proporcione
parejas
espec√≠ficas
ejemplo
entidades
Internet
puedan
desear
comunicarse
forma
segura
SECCI√ìN
8.2
R3
perspectiva
servicio
diferencia
importante
sis-
tema
clave
sim√©trica
sistema
clave
p√∫blica
R4
Suponga
intruso
dispone
mensaje
cifrado
versi√≥n
desci-
frada
mensaje
intruso
montar
ataque
texto
cifrado
ataque
texto
conocido
ataque
texto
seleccionado
R5
Considere
cifrado
bloques
posibles
bloques
entrada
sistema
cifrado
posibles
correspondencias
interpretamos
correspondencia
clave
posibles
claves
sistema
cifrado
R6
Suponga
personas
desean
comunicarse
personas
utilizando
sistema
cifrado
clave
sim√©trica
comunicaciones
cualesquiera
personas
visibles
personas
grupo
pertenezca
grupo
decodificar
comuni-
caciones
claves
necesarias
sistema
considerado
Suponga
utiliza
sistema
cifrado
clave
p√∫blica
claves
requerir√°n
caso
R7
Suponga
10.000
10.023
10.004
Utilice
identidad
aritm√©tica
modular
calcular
mentalmente
mod
n.
R8
Suponga
desea
cifrar
mensaje
10101111
cifrando
n√∫mero
decimal
correspon-
diente
mensaje
n√∫mero
decimal
SECCI√ìN
8.3
R9
forma
funci√≥n
hash
proporciona
comprobaci√≥n
integri-
dad
mensajes
suma
comprobaci√≥n
suma
comproba-
ci√≥n
Internet
R10
descifrar
valor
hash
mensaje
obtener
mensaje
original
Explique
respuesta
PROBLEMAS
CUESTIONES
REPASO
723
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
723R11
Considere
variante
algoritmo
MAC
Figura
8.9
emisor
env√≠a
H(m
H(m
concatenaci√≥n
H(m
s.
defecto
variante
R12
documento
firmado
verificable
falsificable
R13
sentido
utilizar
firma
digital
versi√≥n
cifrada
clave
p√∫blica
valor
hash
mensaje
lugar
versi√≥n
cifrada
clave
p√∫blica
mensaje
completo
R14
Suponga
certificador.com
crea
certificado
foo.com
Normalmente
cer-
tificado
completo
cifrado
clave
p√∫blica
certificador.com
falso
R15
Suponga
Alicia
mensaje
dispuesta
enviar
cualquiera
solicite
Miles
personas
desean
obtener
mensaje
Alicia
desea
segura
integridad
mensaje
contexto
piensa
adecuado
esquema
integridad
basado
MAC
basado
firma
digi-
R16
prop√≥sito
n√∫mero
distintivo
protocolo
autenticaci√≥n
punto
terminal
R17
n√∫mero
distintivo
valor
vida
vida
R18
ataque
interposici√≥n
producirse
ataque
utilizan
claves
sim√©tricas
SECCIONES
8.4‚Äì8.7
R19
Suponga
Benito
recibe
mensaje
PGP
Alicia
Benito
seguro
Alicia
creado
mensaje
lugar
ejemplo
Tom√°s
Utiliza
PGP
valor
MAC
garantizar
integridad
mensaje
R20
registro
SSL
campo
n√∫meros
secuencia
SSL
falso
R21
prop√≥sito
n√∫meros
distintivos
aleatorios
proceso
SSL
R22
Suponga
sesi√≥n
SSL
emplea
cifrado
bloque
CBC
falso
servidor
env√≠a
cliente
vector
inicializaci√≥n
IV
R23
Suponga
Benito
inicia
conexi√≥n
TCP
Tom√°s
pretende
hacerse
pasar
Alicia
fase
Tom√°s
env√≠a
Benito
certificado
Alicia
paso
algoritmo
SSL
descubrir√°
Benito
comunic√°n-
dose
Alicia
R24
Considere
transmisi√≥n
flujo
paquetes
host
host
utilizando
IPsec
Normalmente
establecer√°
asociaci√≥n
seguridad
SA
paquete
enviado
flujo
falso
R25
Suponga
TCP
ejecut√°ndose
IPsec
sucursales
oficina
prin-
cipal
Figura
8.29
TCP
retransmite
paquete
paque-
724
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
724tes
correspondientes
enviados
R1
n√∫mero
secuencia
cabecera
ESP
falso
R26
asociaci√≥n
seguridad
IKE
asociaci√≥n
seguridad
IPsec
falso
R27
Considere
protocolo
WEP
802.11
Suponga
datos
10101100
flujo
claves
1111000
texto
cifrado
resultante
R28
WEP
trama
env√≠a
vector
inicializaci√≥n
IV
falso
SECCI√ìN
8.8
R29
filtros
paquetes
memoria
mantienen
estructuras
datos
N√≥mbrelas
describa
brevemente
R30
Considere
filtro
paquetes
tradicional
conocimiento
filtro
filtrar
paquetes
bas√°ndose
bits
indicadores
TCP
cam-
pos
cabecera
falso
R31
filtro
paquetes
tradicional
interfaz
lista
con-
trol
acceso
falso
R32
pasarela
aplicaci√≥n
trabajar
conjuntamente
filtro
rou-
ter
efectiva
R33
sistemas
IDS
IPS
basados
firma
inspeccionan
cargas
√∫tiles
segmen-
tos
TCP
UDP
falso
Problemas
P1
Utilizando
cifrado
monoalfab√©tico
Figura
8.3
codifique
mensaje
pro-
blema
f√°cil
Decodifique
mensaje
rmij‚Äôu
uamu
xyj
P2
Demuestre
ataque
texto
conocido
Tom√°s
Tom√°s
conoce
parejas
traducci√≥n
texto
cifrado
texto
letras
reduce
n√∫mero
posibles
sustituciones
comprobarse
ejemplo
Sec-
ci√≥n
8.2.1
factor
1015
P3
Considere
sistema
polialfab√©tico
mostrado
Figura
8.4
ataque
texto
seleccionado
capaz
obtener
codificaci√≥n
texto
men-
saje
Esextra√±omojarquesoenlacervezao
probar
whisky
garrafa
suficiente
decodificar
mensajes
P4
Considere
cifrado
bloque
Figura
8.5
Suponga
cifrado
bloque
simplemente
invierte
orden
bits
entrada
ejem-
plo,11110000
convierte
00001111
Suponga
aleatorizador
64
bits
modifica
bits
valor
salida
bit
m-√©simo
valor
entrada
bit
entrada
64
bits
original
10100000
repetido
valor
salida
Repita
apartado
cambie
bit
entrada
64
bits
original
PROBLEMAS
725
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
7251
Repita
apartados
suponga
aleatorizador
64
bits
invierte
orden
64
bits
P5
Considere
cifrado
bloque
Figura
8.5
determinada
clave
Alicia
Benito
mantener
tablas
bits
bits
Alicia
Benito
almacenar
tablas
bits
almacena-
miento
necesarios
compara
n√∫mero
n√∫mero
bits
requeri-
sistema
cifrado
bloque
64
bits
tabla
completa
P6
Considere
cifrado
bloque
bits
Tabla
8.1
dispone
texto
100100100
Suponga
inicialmente
utiliza
CBC
texto
cifrado
resultante
Suponga
Tom√°s
husmea
texto
cifrado
Suponiendo
Tom√°s
utilizando
cifrado
bloque
bits
CBC
cifrado
espec√≠fico
cosas
deducir
Tom√°s
suponga
utiliza
CBC
IV
111
texto
cifrado
resultante
P7
Utilizando
algoritmo
RSA
elija
11
codifique
palabra
perro
cifrando
letra
separado
Aplicando
algoritmo
descifrado
versi√≥n
cifrada
recupere
mensaje
texto
original
Repita
apartado
cifrando
palabra
perro
mensaje
m.
P8
Considere
RSA
11
a.
Calcule
valor
z.
b.
valor
aceptable
c.
Determine
mod
160
d.
Cifre
mensaje
utilizando
clave
texto
cifrado
correspon-
diente
Indique
detalles
c√°lculos
realizados
Sugerencia
sim-
plificar
c√°lculos
utilice
f√≥rmula
mod
mod
mod
mod
P9
problema
explorar
algoritmo
cifrado
clave
p√∫blica
Diffie-
Hellman
DH
permite
entidades
acordar
clave
compartida
algoritmo
Diffie-Hellman
utiliza
n√∫mero
primo
n√∫mero
menor
p.
p√∫blicos
atacante
conocerlos
algoritmo
DH
Alicia
Benito
seleccionan
forma
inde-
pendiente
sendas
claves
secretas
SA
SB
respectivamente
Alicia
calcula
clave
p√∫blica
TA
elevando
SA
reduciendo
resultado
mod
p.
Benito
calcula
forma
similar
clave
p√∫blica
TB
elevando
SB
tomando
mod
p.
Ali-
cia
Benito
intercambian
claves
p√∫blicas
Internet
continua-
ci√≥n
Alicia
calcula
clave
secreta
compartida
elevando
TB
SA
reduciendo
mod
p.
forma
similar
Benito
calcula
clave
compartida
elevando
TA
SB
tomando
mod
p.
a.
Demuestre
general
Alicia
Benito
obtienen
clave
sim√©trica
demuestre
b.
11
suponga
Alicia
Benito
seleccionan
sendas
claves
priva-
das
SA
SB
12
respectivamente
Calcule
claves
p√∫blicas
Alicia
Benito
TA
TB
Indique
c√°lculos
realizados
726
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
726c
Continuando
apartado
calcule
clave
sim√©trica
compartida
S.
Indique
c√°lculos
realizados
d.
Dibuje
diagrama
temporizaci√≥n
muestre
atacarse
algo-
ritmo
Diffie-Hellman
utilizando
ataque
interposici√≥n
diagrama
temporizaci√≥n
l√≠neas
verticales
Alicia
Benito
atacante
Tom√°s
P10
Suponga
Alicia
comunicarse
Benito
utilizando
criptograf√≠a
clave
sim√©trica
clave
sesi√≥n
KS
Secci√≥n
8.2
visto
utili-
zarse
criptograf√≠a
clave
p√∫blica
distribuir
clave
sesi√≥n
Alicia
Benito
problema
analizar
distribuirse
clave
sesi√≥n
criptograf√≠a
clave
p√∫blica
utilizando
centro
distribuci√≥n
claves
KDC
Key
Distribution
Center
KDC
servidor
comparte
clave
sim√©-
trica
secreta
√∫nica
usuario
registrado
Alicia
Benito
designar
claves
KA-KDC
KB-KDC
Dise√±e
esquema
utilice
KDC
distribuir
KS
Alicia
Benito
esquema
utilizar
mensajes
distribuir
clave
sesi√≥n
mensaje
Alicia
KDC
mensaje
KDC
Alicia
finalmente
mensaje
Alicia
Benito
mensajes
KA-KDC
Utilizando
notaci√≥n
KA-KDC
B-KDC
responda
siguientes
cuestiones
a.
mensaje
b.
C√∫al
tercer
mensaje
P11
Calcule
tercer
mensaje
mensajes
Figura
8.8
suma
comprobaci√≥n
mensajes
Figura
8.8
P12
Suponga
Alicia
Benito
comparten
claves
secretas
clave
autentica-
ci√≥n
S1
clave
sim√©trica
cifrado
S2
Ampl√≠e
Figura
8.9
forma
pro-
porcionen
integridad
confidencialidad
P13
protocolo
distribuci√≥n
archivos
P2P
BitTorrent
v√©ase
Cap√≠tulo
semilla
descompone
archivo
bloques
pares
redistribuyen
bloques
utilizara
protecci√≥n
atacante
f√°cilmente
torrente
dejara
funcionar
haci√©ndose
pasar
par
benevolente
enviando
bloques
falsos
peque√±o
subconjunto
pares
torrente
pares
sospechosos
redistribuir√≠an
bloques
falsos
pares
distribuir√≠an
cr√≠tico
funcionamiento
BitTorrent
sistema
mecanismo
permita
par
verificar
integridad
blo-
redistribuyan
bloques
falsos
Suponga
par
une
torrente
obtiene
inicialmente
archivo
.torrent
origen
completa-
mente
confianza
Describa
esquema
simple
permita
pares
verificar
integridad
bloques
P14
protocolo
enrutamiento
OSPF
utiliza
valor
MAC
lugar
firmas
digitales
garantizar
integridad
mensajes
cree
eligi√≥
valor
MAC
lugar
firmas
digitales
P15
Considere
protocolo
autenticaci√≥n
Figura
8.16
Alicia
autentica
Benito
visto
funciona
encon-
trado
fallo
Suponga
Alicia
autenticando
Benito
autenticarse
Alicia
Indique
escenario
PROBLEMAS
727
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
727Tom√°s
haci√©ndose
pasar
Alicia
autenticarse
Benito
Alicia
Sugerencia
considere
secuencia
operaciones
protocolo
Tom√°s
iniciador
iniciador
Benito
entre-
mezclarse
arbitrariamente
Preste
atenci√≥n
especial
Benito
Alicia
utilizan
n√∫mero
distintivo
cuidado
alguien
utili-
zar
maliciosamente
n√∫mero
distintivo
P16
ataque
interposici√≥n
man-in-the-middle
Figura
8.19
Alicia
autenticado
Benito
Alicia
requiriera
Benito
autenticara
utilizando
pro-
tocolo
autenticaci√≥n
clave
p√∫blica
evitarse
ataque
interposici√≥n
Explique
razonamiento
P17
Figura
8.20
muestra
operaciones
Alicia
PGP
pro-
porcionar
confidencialidad
autenticaci√≥n
integridad
mensajes
Haga
dia-
grama
correspondientes
operaciones
Benito
paquete
recibido
Alicia
P18
Suponga
Alicia
enviar
correo
electr√≥nico
Benito
Benito
pareja
claves
p√∫blica-privada
KB
KB
Alicia
dispone
certificado
Benito
Alicia
pareja
claves
p√∫blica
privada
Alicia
Benito
mundo
comparten
funci√≥n
hash
H(/H11080
a.
situaci√≥n
dise√±ar
esquema
Benito
verificar
Alicia
creado
mensaje
caso
afirmativo
indique
diagrama
bloques
Alicia
Benito
b.
dise√±ar
esquema
proporcione
confidencialidad
enviar
mensaje
Alicia
Benito
caso
afirmativo
indique
dia-
grama
bloques
Alicia
Benito
P19
Considere
salida
Wireshark
mostrada
p√°gina
sesi√≥n
SSL
a.
paquete
Wireshark
112
enviado
cliente
servidor
b.
n√∫mero
puerto
direcci√≥n
IP
servidor
c.
Suponiendo
p√©rdidas
retransmisiones
n√∫mero
secuencia
segmento
TCP
enviado
cliente
d.
registros
SSL
contiene
paquete
Wireshark
112
e.
paquete
112
contiene
clave
maestra
MS
clave
maestra
cifrada
EMS
f.
Suponiendo
campo
tipo
byte
campo
longitud
bytes
valores
byte
clave
maestra
clave
maestra
cifrada
g.
registros
SSL
mensaje
cifrado
cliente
h.
registros
SSL
mensaje
cifrado
servidor
P20
Secci√≥n
8.5.1
muestra
n√∫meros
secuencia
Tom√°s
man-in-the
middle
causar
cat√°strofe
sesi√≥n
SSL
intercambiando
segmentos
TCP
Tom√°s
similar
borrando
segmento
TCP
necesitar√≠a
√©xito
ataque
borrado
efecto
tendr√≠a
728
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
728P21
Suponga
Alicia
Benito
comunicando
sesi√≥n
SSL
Suponga
atacante
dispone
claves
compartidas
inserta
segmento
TCP
falso
flujo
paquetes
suma
comprobaci√≥n
TCP
n√∫meros
secuencia
correctos
direcciones
IP
n√∫meros
puerto
correctos
Aceptar√°
SSL
receptor
paquete
falso
pasar√°
correspondiente
carga
√∫til
aplicaci√≥n
receptora
P22
Responda
siguientes
preguntas
tipo
falso
referencia
Figura
8.29
a.
host
172.16.1/24
env√≠a
datagrama
servidor
Amazon.com
router
R1
cifrar√°
datagrama
utilizando
IPsec
b.
host
172.16.1/24
env√≠a
datagrama
host
172.16.2/24
router
R1
cambiar√°
direcci√≥n
origen
destino
datagrama
IP
c.
Suponga
host
172.16.1/24
inicia
conexi√≥n
TCP
servidor
web
situado
172.16.2/24
conexi√≥n
datagramas
envia-
R1
n√∫mero
protocolo
50
campo
cabecera
IPv4
situado
izquierda
d.
Considere
env√≠o
segmento
TCP
host
situado
172.16.1/24
host
172.16.2/24
Suponga
reconocimiento
seg-
mento
pierde
TCP
reenv√≠a
segmento
Puesto
IPsec
utiliza
n√∫meros
secuencia
R1
reenviar√°
segmento
TCP
PROBLEMAS
729
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
729P23
Considere
ejemplo
Figura
8.29
Suponga
Tom√°s
realizando
ataque
interposici√≥n
man-in-the-middle
insertar
datagramas
flujo
data-
gramas
R1
R2
ataque
reproducci√≥n
Tom√°s
env√≠a
copia
duplicada
datagramas
enviados
R1
R2
Descifrar√°
R2
datagrama
duplicado
reenviar√°
red
sucursal
caso
negativo
des-
criba
detalle
detecta
R2
datagrama
duplicado
P24
Considere
protocolo
pseudo-WEP
clave
bits
vector
IV
bits
vector
IV
a√±ade
clave
generar
flujo
claves
Suponga
clave
secreta
compartida
1010
flujos
claves
entradas
posibles
siguientes
101000
0010101101010101001011010100100
101001
1010011011001010110100100101101
101010
0001101000111100010100101001111
101011
1111101010000000101010100010111
Suponga
mensajes
longitud
bits
Suponga
ICV
comprobaci√≥n
integridad
longitud
bits
calcula
combi-
nando
XOR
bits
datos
bits
datos
Suponga
paquete
pseudo-WEP
consta
campos
campo
IV
campo
mensaje
campo
ICV
estando
campos
cifrados
a.
Deseamos
enviar
mensaje
10100000
utilizando
vector
IV
11
WEP
valores
campos
WEP
b.
Demuestre
receptor
descifra
paquete
WEP
recupera
mensaje
ICV
c.
Suponga
Tom√°s
intercepta
paquete
WEP
necesariamente
vector
IV
11
modificarlo
reenviarlo
receptor
Suponga
Tom√°s
invierte
bit
ICV
Suponiendo
Tom√°s
conoce
flujos
claves
vectores
IV
bit
bits
invertir
Tom√°s
paquete
recibido
pase
comprobaci√≥n
ICV
d.
Justifique
respuesta
modificando
bits
paquete
WEP
apartado
des-
cifrando
paquete
resultante
verificando
paquete
pasa
comprobaci√≥n
integridad
P25
Proporcione
tabla
filtrado
tabla
conexi√≥n
cortafuegos
memoria
restrictivo
lleve
cabo
a.
Permitir
usuarios
internos
establecer
sesiones
Telnet
hosts
externos
b.
Permitir
usuarios
externos
navegar
sitio
web
empresa
direc-
ci√≥n
222.22.0.12
c.
caso
contrario
bloquear
restantes
tipos
tr√°fico
entrante
saliente
red
interna
222.22/16
soluci√≥n
suponga
tabla
conexiones
alma-
cena
actualmente
conexiones
cach√©
interior
exterior
730
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
730En
soluci√≥n
inventar
n√∫meros
puerto
direcciones
IP
apro-
piados
P26
Suponga
Alicia
desea
visitar
sitio
web
activistas.com
utilizando
servicio
tipo
TOR
servicio
utiliza
servidores
proxy
confabulados
Proxy1
Proxy2
Alicia
obtiene
lugar
certificados
contiene
clave
p√∫blica
Proxy1
Proxy2
servidor
central
Designaremos
K1
K2
K1
K2
operaciones
cifrado
descifrado
claves
p√∫blica
privada
RSA
a.
Utilizando
diagrama
temporizaci√≥n
proporcione
protocolo
sim-
ple
permita
Alicia
establecer
clave
sesi√≥n
compartida
S1
Proxy1
Designe
S1(m
cifrado
descifrado
datos
clave
compartida
S1
b.
Utilizando
diagrama
temporizaci√≥n
proporcione
protocolo
sim-
ple
permita
Alicia
establecer
clave
sesi√≥n
compartida
S2
Proxy2
revelar
direcci√≥n
IP
Proxy2
c.
Suponga
claves
compartidas
S1
S2
establecidas
Utili-
zando
diagrama
temporizaci√≥n
proporcione
protocolo
simple
utilice
criptograf√≠a
clave
p√∫blica
permita
Alicia
solici-
tar
p√°gina
html
activistas.com
revelar
direcci√≥n
IP
Proxy2
revelar
Proxy1
sitio
visitando
diagrama
terminar
llegada
solicitud
HTTP
sitio
activistas.com
Preguntas
discusi√≥n
D1
Suponga
intruso
insertar
eliminar
mensajes
DNS
servidor
DNS
Describa
escenarios
muestren
problemas
intruso
causar
D2
Kerberos
funciona
relaciona
Problema
P10
cap√≠tulo
D3
IPsec
proporciona
seguridad
capa
red
siguen
falta
mecanismos
seguridad
capas
situadas
IP
D4
Investigue
datos
acerca
botnets
protocolos
sistemas
utili-
zan
atacantes
controlar
actualizar
botnets
Pr√°ctica
laboratorio
Wireshark
pr√°ctica
laboratorio
disponible
sitio
web
libro
investigar
protocolo
Capa
sockets
seguros
SSL
Secure
Sockets
Layer
Recuerde
Secci√≥n
8.5
SSL
utiliza
dotar
seguridad
conexi√≥n
TCP
ampliamente
pr√°ctica
proporcionar
seguridad
transacciones
Internet
pr√°ctica
centrarnos
registros
SSL
enviados
conexi√≥n
TCP
Trataremos
perfilar
clasificar
registros
objetivo
entender
PR√ÅCTICA
LABORATORIO
WIRESHARK
731
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
731c√≥mo
Investigaremos
diversos
tipos
registros
SSL
campos
mensajes
SSL
haremos
analizando
traza
registros
SSL
inter-
cambiados
host
servidor
comercio
electr√≥nico
Pr√°ctica
laboratorio
IPsec
pr√°ctica
laboratorio
disponible
sitio
web
libro
explorar
crear
asociaciones
seguridad
IPsec
m√°quinas
linux
pr√°ctica
m√°quinas
linux
normales
deber√°
disponer
adaptador
Ethernet
pr√°ctica
necesitar√°
m√°quinas
linux
teniendo
adaptadores
Ethernet
mitad
pr√°ctica
laboratorio
crear
asociaciones
seguridad
IPsec
utilizando
protocolo
ESP
t√∫nel
definiendo
manualmente
asociaciones
seguridad
IKE
cree
732
CAP√çTULO
SEGURIDAD
REDES
COMPUTADORAS
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
732733
condujo
especializarse
√°rea
seguridad
redes
parezca
extra√±o
respuesta
simple
divertido
formaci√≥n
pro-
gramaci√≥n
administraci√≥n
sistemas
conduce
forma
natural
campo
seguridad
interesado
comunicaciones
tiempos
realizaba
tra-
bajos
programaci√≥n
sistemas
tiempo
compartido
estudiaba
universidad
trabajo
campo
seguridad
estando
motivado
cosas
deseo
conti-
nuar
computadoras
√∫tiles
significa
funci√≥n
verse
corrom-
pida
atacante
deseo
proteger
privacidad
visi√≥n
Usenet
desarrollaba
Originalmente
ve√≠amos
forma
hablar
acerca
inform√°tica
programaci√≥n
computadoras
personas
dispersas
pa√≠s
a√±adido
grupos
usuarios
loca-
cuestiones
administrativas
anuncios
compra-venta
etc.
predicci√≥n
original
iban
generar
mensajes
procedentes
50
100
sitios
m√°xi-
mo
crecimiento
real
experimentado
red
temas
relacionados
sociedad
incluyendo
limitarse
interacci√≥n
seres
humanos
computadoras
grupos
noticias
favoritos
a√±os
cosas
rec.woodworking
dedicado
carpinter√≠a
sci.crypt
dedicado
criptograf√≠a
punto
netnews
visto
desplazado
Web
tuviera
comenzar
redise-
√±arla
tendr√≠a
aspecto
distinto
contin√∫a
herramienta
excelente
apelar
audiencia
amplia
interesada
determinado
tema
depender
nin-
g√∫n
sitio
web
concreto
alguien
inspirado
profesionalmente
forma
profesor
Fred
Brooks
fundador
director
original
departamento
Ciencias
Computaci√≥n
Universidad
Carolina
Norte
Chapel
Hill
jefe
equi-
po
desarroll√≥
IBM
S/360
OS/360
autor
The
Mythical
Man-Month
enorme
Steven
M.
Bellovin
Steven
M.
Bellovin
uni√≥
claustro
profesores
Universidad
Columbia
a√±os
Laboratorio
investigaci√≥n
servicios
red
AT&T
Labs
Research
Florham
Park
New
Jersey
Unidos
inter√©s
principal
centra
redes
seguridad
conceptos
incompatibles
1995
concedieron
galard√≥n
Usenix
Lifetime
Achievement
Award
trabajo
creaci√≥n
Usenet
red
intercambio
grupos
noticias
permiti√≥
enlazar
computadoras
usuarios
compartieran
informaci√≥n
participaran
discusiones
Steve
miembro
electo
National
Academy
of
Engineering
gradu√≥
Universidad
Columbia
doctor
Universidad
Carolina
Norte
Chapel
Hill
ENTREVISTA
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
733influencia
carrera
profesional
ense√±√≥
mirar
cosas
pers-
pectiva
amplia
entender
compromisos
necesarios
examinar
problemas
contex-
to
mundo
real
lioso
mundo
real
te√≥rico
gustar√≠a
equilibrar
serie
intereses
conflicto
hora
dise√±ar
soluci√≥n
tra-
computadoras
ingenier√≠a
arte
llegar
compromisos
adecuados
satisfacer
objetivos
contradictorios
visi√≥n
futuro
redes
seguridad
seguridad
disfrutamos
procede
aislamiento
ejemplo
cortafuegos
funciona
cortando
acceso
m√°quinas
servicios
encontramos
conectividad
creciente
complicado
aislar
cosas
sistemas
producci√≥n
requieren
elementos
separados
interconectados
redes
Dotar
seguridad
mayores
desaf√≠os
cree
mayores
avances
campo
seguridad
all√°
debemos
cient√≠ficamente
criptograf√≠a
ayuda
problemas
seguridad
errores
c√≥digo
problema
complicado
problema
antiguo
resuelto
ciencias
computaci√≥n
opini√≥n
continuar√°
desaf√≠o
estriba
concebir
dotar
seguridad
sistemas
remedio
construirlos
elementos
inse-
guros
fiabilidad
presencia
fallos
hardware
podr√≠-
amos
seguridad
consejo
dar√≠a
estudiantes
relativo
seguridad
Internet
redes
general
aprender
mecanismos
f√°cil
duro
aprender
pensar
forma
paranoica
preciso
recordar
distribuciones
probabilidad
aplicables
campo
atacantes
encontrar
condiciones
improbables
har√°n
detalles
importan
importan
much√≠simo
734
M08_KURO9675_05_SE_CH08.qxd
21/3/10
21:40
P√°gina
734CAP√çTULO
Gesti√≥n
redes
735
Habiendo
completado
cap√≠tulos
texto
perfectamente
conscientes
red
compuesta
elementos
complejos
hardware
software
interactuando
enlaces
dispositivos
conmutaci√≥n
routers
hosts
dispositivos
constituyen
componentes
f√≠sicos
red
protocolos
hardware
software
controlan
coordinan
dispositivos
organizaci√≥n
interconecta
centenares
miles
tales
componen-
tes
formar
red
resulta
sorprendente
componentes
funcionen
oca-
siones
inadecuada
produzcan
fallos
configuraci√≥n
elementos
red
recursos
red
est√©n
sobrexplotados
componentes
red
simple-
mente
rompan
ejemplo
alguien
cortar
cable
derramar
lata
refresco
router
administrador
red
cuyo
trabajo
consiste
mantener
red
fun-
cionamiento
capaz
responder
sucesos
evitar-
Habiendo
potencialmente
miles
componentes
distribuidos
extensa
√°rea
administrador
red
trabaja
Centro
operaciones
red
NOC
Network
Operations
Center
necesita
obviamente
serie
herramientas
ayuden
monito-
rizar
gestionar
controlar
red
cap√≠tulo
examinar
arquitectura
pro-
tocolos
base
informaci√≥n
usados
administradores
red
cabo
tarea
9.1
gesti√≥n
redes
profundizar
tema
gesti√≥n
redes
considerar
lugar
escenarios
ilustrativos
mundo
real
redes
necesario
administrador
monitorice
gestione
controle
sistema
complejo
componentes
interactuando
plantas
genera-
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
735ci√≥n
energ√≠a
el√©ctrica
disponen
sala
control
serie
diales
medi-
dores
indicadores
luminososos
monitorizan
temperatura
presi√≥n
flujo
diversas
v√°lvulas
conductos
recipientes
remotos
componentes
planta
dispositivos
permiten
operador
monitorizar
multitud
componentes
forman
planta
alertarle
famosa
luz
roja
parpadeante
advertencia
est√©
punto
surgir
problema
operador
planta
llevar√°
cabo
serie
acciones
controlar
componentes
forma
similar
cabina
aeronave
llena
instrumentos
permiten
piloto
monitorizar
controlar
m√∫ltiples
componentes
forman
avi√≥n
ejemplos
administrador
monitoriza
serie
dispositivos
remotos
analiza
datos
cerciorarse
dispositivos
est√©n
operativos
operaci√≥n
mantenga
serie
l√≠mi-
tes
prescritos
ejemplo
asegur√°ndose
n√∫cleo
planta
energ√≠a
nuclear
fundir
inminente
avi√≥n
punto
quedarse
combustible
Asimismo
controla
reactivamente
sistema
ajustes
respuesta
cambios
sistema
entorno
sufren
administra
proactivamente
sis-
tema
ejemplo
detectando
tendencias
comportamientos
an√≥malos
permite
tomar
serie
medidas
surjan
problemas
serios
sentido
similar
administrador
red
monitorizar√°
gestionar√°
controlar√°
activamente
sistema
est√©
cargo
redes
redes
computadoras
creaciones
producto
investigaci√≥n
lugar
infraestructura
cr√≠tica
utilizada
centenares
millones
personas
concepto
gesti√≥n
red
exist√≠a
encontraba
problema
red
pod√≠a
ejecutar
comandos
ping
localizar
origen
problema
modificar
configuraciones
sistema
reiniciar
hardware
software
llamar
colega
remoto
llevara
cabo
tareas
RFC
789
disponible
explicaci√≥n
amena
acerca
ca√≠da
escala
ARPAnet
27
octubre
1980
hubiera
disponibles
herra-
mientas
gesti√≥n
red
esfuerzos
recuperarse
ca√≠da
entender
motivos
medida
red
Internet
p√∫blica
intranets
privadas
ido
creciendo
convirti√©ndose
peque√±as
redes
infraestructura
global
ido
creciendo
importancia
necesidad
gestionar
enorme
n√∫mero
com-
ponentes
hardware
software
forman
redes
motivaci√≥n
estudio
gesti√≥n
redes
comenzar
ejemplo
simple
Figura
9.1
ilustra
peque√±a
red
compuesta
routers
serie
hosts
servidores
red
simple
escenarios
administrador
red
aprovechar
enormemente
disponibi-
lidad
herramientas
gesti√≥n
red
Detecci√≥n
fallos
tarjeta
interfaz
host
router
herramien-
tas
gesti√≥n
red
apropiadas
entidad
red
ejemplo
router
informar
administrador
red
interfaces
fallado
obvia-
mente
preferible
recibir
NOC
llamada
usuario
airado
diciendo
conexi√≥n
red
funciona
administrador
red
dedique
activamente
monitorizar
analizar
tr√°fico
red
capaz
impresionar
realmente
usua-
rio
potencialmente
airado
detectando
problemas
interfaz
produzcan
sustituyendo
tarjeta
interfaz
esperar
falle
hacerse
ejem-
plo
administrador
red
observa
incremento
errores
suma
compro-
baci√≥n
tramas
enviadas
interfaz
punto
morir
736
CAP√çTULO
GESTI√ìN
REDES
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
736‚Ä¢
Monitorizaci√≥n
hosts
administrador
red
comprobaciones
peri√≥dicas
hosts
red
encendidos
operativos
administrador
red
capaz
impresionar
usuarios
respondiendo
proactivamente
problema
ca√≠da
host
usuario
informe
Monitorizaci√≥n
tr√°fico
ayuda
implantaci√≥n
recursos
administrador
red
monitorizar
patrones
tr√°fico
origen
destino
obser-
var
ejemplo
intercambian
servidores
segmentos
red
LAN
cantidad
tr√°fico
atraviesa
m√∫ltiples
redes
LAN
reducirse
significativa-
mente
Imagine
feliz
sentir√≠a
mundo
consiguiera
rendimiento
red
necesidad
invertir
equipos
forma
similar
monitorizar
utilizaci√≥n
enlaces
administrador
red
determinar
segmento
LAN
enlace
externo
resto
mundo
sobrecargado
necesario
consecuencia
proporcionar
enlace
ancho
banda
coste
administrador
red
querer
recibir
notificaciones
autom√°ticamente
niveles
congesti√≥n
enlace
excedan
valor
umbral
instalar
enlace
ancho
banda
congesti√≥n
grave
Detecci√≥n
cambios
r√°pidos
tablas
enrutamiento
alteraciones
r√°pidas
ruta
cambios
frecuentes
tablas
enrutamiento
indicar
inestabilidades
enrutamiento
existencia
router
configurado
Ciertamente
administra-
9.1
GESTI√ìN
REDES
737
Host
H1
Host
Enlace
red
externa
Servidor
Figura
9.1
escenario
simple
ilustra
usos
gesti√≥n
red
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
737dor
red
configurado
inadecuadamente
router
preferir√°
descubrir
error
red
caiga
Monitorizaci√≥n
SLA
Acuerdos
nivel
servicio
SLA
Service
Level
Agreements
contratos
definen
m√©tricas
espec√≠ficas
rendimiento
niveles
aceptables
rendimiento
proveedor
red
m√©tricas
Huston
1999a
Verizon
Sprint
proveedores
red
proporcio-
nan
acuerdos
SLA
garantizados
clientes
Verizon
2009
Sprint
2009
SLA
incluyen
disponibilidad
servicio
interrupciones
latencia
tasa
transferen-
cia
requisitos
notificaci√≥n
interrupciones
Evidentemente
criterios
rendimiento
formar
servicio
proveedor
red
usuarios
importancia
administrador
red
capaz
medir
gestionar
prestaciones
Detecci√≥n
intrusiones
administrador
red
desear
notifique
llegado
tr√°fico
red
procedente
origen
sospechoso
ejemplo
host
n√∫mero
puerto
destino
forma
similar
admi-
nistrador
red
querer
detectar
casos
filtrar
existen-
cia
tipos
tr√°fico
ejemplo
paquetes
enrutamiento
origen
n√∫mero
paquetes
SYN
dirigidos
host
caracter√≠s-
ticos
tipos
ataques
considerado
Cap√≠tulo
Organizaci√≥n
Internacional
Estandarizaci√≥n
ISO
creado
modelo
ges-
ti√≥n
red
resulta
√∫til
situar
escenarios
ejemplo
anteriores
marco
trabajo
estructurado
definen
√°reas
gesti√≥n
red
Gesti√≥n
rendimiento
objetivo
gesti√≥n
rendimiento
cuantificar
medir
registrar
analizar
controlar
rendimiento
ejemplo
utilizaci√≥n
tasa
transferencia
distintos
componentes
red
componentes
incluyen
dispositivos
individuales
ejemplo
enlaces
routers
hosts
abstrac-
ciones
terminal
terminal
tales
ruta
red
veremos
ense-
guida
protocolos
est√°ndar
Protocolo
simple
gesti√≥n
red
SNMP
Simple
Network
Management
Protocol
RFC
3410
desempe√±an
papel
fundamental
gesti√≥n
rendimiento
Internet
Gesti√≥n
fallos
objetivo
gesti√≥n
fallos
registrar
detectar
contrarrestar
condiciones
fallo
red
l√≠nea
gesti√≥n
fallos
gesti√≥n
ren-
dimiento
difusa
pensar
gesti√≥n
fallos
gesti√≥n
inmediata
fallos
transitorios
red
ejemplo
fallos
hardware
software
router
host
enlace
gesti√≥n
rendimiento
objetivo
plazo
proporcionar
niveles
aceptables
rendimiento
presencia
demandas
variables
tr√°fico
fallos
ocasionales
dispositivos
red
gesti√≥n
rendimiento
protocolo
SNMP
desempe√±a
papel
fun-
damental
gesti√≥n
fallos
Gesti√≥n
configuraci√≥n
gesti√≥n
configuraci√≥n
permite
administrador
red
controlar
dispositivos
encuentran
red
administrada
confi-
guraciones
hardware
software
dichos
dispositivos
RFC
3139
ofrece
panor√°mica
gesti√≥n
configuraci√≥n
requisitos
redes
basadas
IP
738
CAP√çTULO
GESTI√ìN
REDES
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
738‚Ä¢
Gesti√≥n
cuentas
gesti√≥n
cuentas
permite
gestores
red
especificar
registrar
controlar
acceso
usuarios
dispositivos
recursos
red
cuotas
facturaci√≥n
basada
asignaci√≥n
privilegios
acceso
recursos
caen
campo
gesti√≥n
cuentas
Gesti√≥n
seguridad
objetivo
gesti√≥n
seguridad
controlar
acceso
recursos
red
pol√≠tica
definida
centros
distribu-
ci√≥n
claves
estudiado
Secci√≥n
8.3
componentes
gesti√≥n
seguridad
componente
crucial
cortafuegos
monitorizar
con-
trolar
puntos
acceso
externos
red
organizaci√≥n
tema
estu-
diado
Secci√≥n
8.9
cap√≠tulo
cubrir
rudimentos
gesti√≥n
red
enfo-
conscientemente
limitado
examinaremos
√∫nicamente
infraestructura
necesaria
gesti√≥n
red
arquitectura
global
protocolos
gesti√≥n
red
base
informaci√≥n
permite
administrador
mantener
red
funcionamiento
cubrir
procesos
toma
decisiones
administrador
red
planificar
analizar
responder
informaci√≥n
gesti√≥n
enviada
NOC
√°rea
habr√≠a
temas
tales
identificaci√≥n
gesti√≥n
fallos
Katzela
1995
Medhi
1997
Steinder
2002
detecci√≥n
proactiva
anomal√≠as
Thottan
1998
correla-
ci√≥n
alarmas
Jakobson
1993
cubrir
tema
amplio
gesti√≥n
servicios
Saydam
1996
RFC
3052
AT&T
SLM
2006
provisi√≥n
recursos
tales
ancho
banda
capacidad
servidores
recursos
com-
putaci√≥n
comunicaci√≥n
necesarios
satisfacer
requisitos
servicio
espec√≠ficos
misi√≥n
empresa
√°rea
est√°ndares
tales
TMN
Glitho
1995
Sidor
1998
TINA
Hamada
1997
completos
posiblemente
complejos
cara
tratar
problemas
generales
cuesti√≥n
plantea
gesti√≥n
red
explicacio-
nes
proporcionado
demostraban
necesidad
gesti√≥n
red
ilustraban
usos
concluir
secci√≥n
definici√≥n
√∫nica
frase
larga
concepto
gesti√≥n
red
definici√≥n
extra√≠do
Saydam
1996
gesti√≥n
red
incluye
implantaci√≥n
integraci√≥n
coordinaci√≥n
hardware
software
elementos
humanos
monitorizar
probar
sondear
configurar
analizar
evaluar
controlar
recursos
red
elementos
necesarios
satisfacer
requisitos
respuesta
tiempo
real
rendimiento
operacional
calidad
servicio
coste
razonable
trabalenguas
definici√≥n
pr√°ctica
siguientes
secciones
a√±adiremos
sustancia
definici√≥n
esquem√°tica
ges-
ti√≥n
red
9.2
Infraestructura
gesti√≥n
red
visto
secci√≥n
gesti√≥n
red
requiere
capacidad
monitori-
zar
probar
sondear
configurar
controlar
componentes
hardware
software
9.2
INFRAESTRUCTURA
GESTI√ìN
RED
739
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
739red
Puesto
dispositivos
red
distribuidos
requerir√°
m√≠nimo
administrador
red
capaz
recopilar
datos
ejemplo
prop√≥sitos
moni-
torizaci√≥n
entidad
remota
cambios
dicha
entidad
remota
ejem-
plo
controlarla
analog√≠a
humana
resultar√°
√∫til
entender
infraestructura
necesaria
gesti√≥n
red
Imagine
director
organizaci√≥n
dispone
sucursales
distribuidas
mundo
trabajo
consiste
asegurarse
distintos
com-
ponentes
organizaci√≥n
operen
tipo
problema
har√≠a
m√≠nimo
recopilar√°
peri√≥dicamente
datos
sucursales
informes
diversas
medidas
cuantitativas
actividad
productividad
presupuesto
Ocasionalmente
recibir√°
notificaciones
expl√≠citas
produzca
problema
sucursales
director
sucursal
desee
ascender
escala
corporativa
quitarle
trabajo
enviarle
informes
solicitados
indiquen
marchando
cosas
sucursal
analizar√°
informes
reciba
confiando
operaciones
desarrollan
problema
partes
encon-
tr√°ndose
duda
diversos
problemas
requieran
aten-
ci√≥n
iniciar
di√°logo
personal
sucursales
problem√°ticas
recopilando
datos
comprender
problema
emitiendo
orden
ejecutiva
Haz
cambio
director
sucursal
escenario
humano
com√∫n
impl√≠cita
infraestructura
control
organizaci√≥n
director
lugares
remotos
controlando
sucursales
agentes
remotos
directores
sucursal
protocolos
comuni-
caci√≥n
transmitir
informes
datos
est√°ndar
di√°logos
personales
datos
contenido
informes
medidas
cuantitativas
actividad
productivi-
dad
presupuestos
componentes
escenario
organizativo
humano
correspondiente
componente
campo
gesti√≥n
red
arquitectura
sistema
gesti√≥n
red
conceptualmente
id√©ntica
sencilla
analog√≠a
organizativa
humana
campo
gesti√≥n
red
termi-
nolog√≠a
espec√≠fica
diversos
componentes
arquitectura
gesti√≥n
red
adoptar
dicha
terminolog√≠a
muestra
Figura
9.2
componentes
principales
arquitectura
gesti√≥n
red
entidad
gestora
direc-
tor
analog√≠a
dispositivos
gestionados
sucursales
protocolo
gesti√≥n
red
entidad
gestora
aplicaci√≥n
normalmente
intervenci√≥n
humana
ejecuta
estaci√≥n
central
gesti√≥n
red
situada
Centro
operaciones
red
NOC
entidad
gestora
punto
focal
actividad
administraci√≥n
red
con-
trola
recopilaci√≥n
procesamiento
an√°lisis
visualizaci√≥n
informaci√≥n
gesti√≥n
red
inician
acciones
control
comportamiento
red
administrador
interact√∫a
dispositivos
forman
red
dispositivo
gestionado
equipo
red
incluyendo
software
forma
red
gestionada
sucursal
analog√≠a
humana
dis-
positivo
gestionado
host
router
puente
concentrador
impre-
sora
m√≥dem
dispositivo
gestionado
existir
diversos
objetos
gestionados
objetos
gestionados
elementos
hardware
contenidos
dispositivo
gestionado
ejemplo
tarjeta
interfaz
red
conjuntos
par√°metros
configuraci√≥n
distintos
elementos
hardware
software
ejem-
plo
protocolo
enrutamiento
intradominio
RIP
analog√≠a
humana
740
CAP√çTULO
GESTI√ìN
REDES
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
740objetos
gestionados
departamentos
sucursal
objetos
gestio-
nados
asociados
distintos
elementos
informaci√≥n
recopilan
Base
informaci√≥n
gesti√≥n
MIB
Management
Information
Base
veremos
valo-
res
elementos
informaci√≥n
disposici√≥n
entidad
gestora
casos
modificarlos
analog√≠a
humana
MIB
corres-
ponde
datos
cuantitativos
medidas
actividad
productividad
presupuestos
configurables
entidad
gestora
intercambiados
sucursal
oficina
principal
Estudiaremos
detalle
bases
MIB
Secci√≥n
9.3
Finalmente
dispositivo
gestionado
reside
agente
gesti√≥n
red
proceso
ejecuta
dispositivo
gestionado
comunica
entidad
gestora
lle-
vando
cabo
acciones
locales
dispositivo
gestionado
control
entidad
ges-
tora
analog√≠a
humana
agente
gesti√≥n
red
director
sucursal
tercer
elemento
arquitectura
gesti√≥n
red
protocolo
gesti√≥n
red
protocolo
ejecuta
entidad
gestora
dispositivos
gestionados
permi-
tiendo
consultar
dispositivos
gestionados
cabo
acciones
indirecta
dispositivos
agentes
agentes
utili-
zar
protocolo
gesti√≥n
red
informar
entidad
gestora
ocurrencia
suce-
sos
excepcionales
ejemplo
fallos
componentes
violaci√≥n
umbrales
rendimiento
importante
recalcar
protocolo
gesti√≥n
red
encarga
administrar
red
simplemente
proporciona
serie
capacidades
9.2
INFRAESTRUCTURA
GESTI√ìN
RED
741
Figura
9.2
Principales
componentes
arquitectura
gesti√≥n
red
Entidad
gestora
Protocolo
gesti√≥n
red
Datos
Agente
Dispositivo
gestionado
Dispositivo
gestionado
Dispositivo
gestionado
Dispositivo
gestionado
Datos
Agente
Datos
Agente
Datos
Agente
Datos
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
741administrador
utilizar
gestionar
monitorizar
probar
sondear
configurar
anali-
zar
evaluar
controlar
red
distinci√≥n
sutil
importancia
infraestructura
gesti√≥n
red
conceptualmente
simple
vocabu-
lario
t√≠pico
gesti√≥n
redes
entidad
gestora
dispositivo
gestionado
agente
gesti√≥n
Base
informaci√≥n
administraci√≥n
resultar
confuso
ejemplo
terminolog√≠a
gesti√≥n
red
sencillo
escenario
monitoriza-
ci√≥n
hosts
agentes
gesti√≥n
ubicados
dispositivos
gestionados
con-
sultados
peri√≥dicamente
entidad
gestora
idea
simple
ling√º√≠sticamente
liosa
presente
analog√≠a
organizativa
humana
obvios
paralelismos
gesti√≥n
red
resultar√°
ayuda
seguir
cap√≠tulo
exposici√≥n
acerca
arquitectura
gesti√≥n
red
car√°c-
ter
gen√©rico
amplia
aplicaci√≥n
serie
est√°ndares
gesti√≥n
red
ido
propuestos
a√±os
est√°ndares
gesti√≥n
red
comenzaron
madurar
finales
d√©cada
1980
Elemento
com√∫n
servicios
informa-
ci√≥n
gesti√≥n
Protocolo
com√∫n
informaci√≥n
gesti√≥n
CMISE
CMIP
Common
Management
Information
Services
Element
Common
Management
Information
Proto-
col
OSI
Piscatello
1993
Stallings
1993
Glitho
1998
Protocolo
simple
gesti√≥n
red
SNMP
Simple
Network
Management
Protocol
Internet
RFC
3410
Stallings
1999
Rose
1996
emergiendo
est√°ndares
importantes
Miller
1997
Subramanian
2000
dise√±aron
independientes
redes
productos
espe-
c√≠ficos
fabricantes
Puesto
SNMP
r√°pidamente
dise√±ado
implantado
evidente
necesidad
emplear
mecanismos
gesti√≥n
red
SNMP
encontr√≥
amplio
aceptaci√≥n
Actualmente
SNMP
entorno
gesti√≥n
red
ampliamente
utilizado
implantado
secci√≥n
estudiaremos
detalle
protocolo
SNMP
9.3
entorno
gesti√≥n
est√°ndar
Internet
contrario
sugerir
nombre
SNMP
Simple
Network
Management
Pro-
tocol
gesti√≥n
red
Internet
protocolo
permite
mover
datos
gesti√≥n
entidad
gestora
agentes
desarrollado
complejo
t√©rmino
simple
sugerir
entorno
actual
gesti√≥n
Inter-
net
est√°ndar
ra√≠ces
Protocolo
simple
monitorizaci√≥n
pasarela
SGMP
Simple
Gateway
Monitoring
Protocol
RFC
1028
SGMP
dise√±ado
grupo
investigadores
universitarios
redes
usuarios
gestores
cuya
experiencia
SGMP
permiti√≥
dise√±ar
implementar
implantar
SNMP
meses
Lynch
1993
distinto
proceso
estandarizaci√≥n
SNMP
evo-
lucionado
SNMPv1
pasando
SNMPv2
versi√≥n
reciente
SNMPv3
RFC
3410
lanzada
abril
1999
actualizada
diciembre
2002
Inevitablemente
describe
entorno
gesti√≥n
redes
abor-
darse
determinadas
cuestiones
control
ejercer
administrador
red
742
CAP√çTULO
GESTI√ìN
REDES
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
7429.3
ENTORNO
GESTI√ìN
EST√ÅNDAR
INTERNET
743
PRINCIPLES
IN
PRACTICE
CENTRO
OPERACIONES
RED
SPRINTLINK
redes
tipo
formas
tama√±os
redes
dom√©sticas
peque√±as
ISP
nivel
cometido
operador
red
garantizar
red
funcionando
problemas
ocurre
centro
operaciones
red
NOC
realmente
cometido
operador
red
red
extiende
planeta
Sprint
opera
redes
IP
nivel
mundo
Conocida
SprintLink
obtener
informaci√≥n
www
sprint.com
red
70
puntos
presencia
POP
posiciones
routers
IP
SprintLink
lugares
clientes
interconectan
red
800
routers
mont√≥n
ancho
banda
NOC
principal
SprintLink
Reston
NOC
reserva
Florida
Georgia
Kansas
City
Sprint
mantiene
centros
NOC
redes
ATM
frame-relay
transporte
fibra
√≥ptica
subya-
centes
instante
equipo
centros
operaciones
red
monitoriza
gestiona
equipos
encuentran
n√∫cleo
red
IP
SprintLink
equipo
disponible
tratar
informe
problemas
cliente
respon-
der
solicitudes
automatizaci√≥n
monitorizaci√≥n
correlaci√≥n
alarmas
identifica-
ci√≥n
fallos
restauraci√≥n
servicio
gesti√≥n
configuraciones
generaci√≥n
informes
problemas
clientes
peque√±o
grupo
operadores
ges-
tionen
red
compleja
T√©cnicos
Sprint
monitorizando
red
centros
operaciones
imagen
superior
Contin√∫a
PR√ÅCTICA
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
743Cuando
surgen
problemas
principal
objetivo
operador
SprintLink
restaurar
r√°pidamente
servicio
clientes
operadores
NOC
deciden
orden
preferen-
cias
problema
llevan
cabo
pasos
diagn√≥stico
restauraci√≥n
siguiendo
conjunto
procedimientos
respuesta
conjunto
conocido
problemas
problemas
diagnosticados
forma
inmediata
resueltos
operadores
periodo
tiempo
nivel
severidad
especificado
ejemplo
15
minutos
transferidos
nivel
soporte
centro
asistencia
t√©cnica
nacional
NTAC
National
Technical
Assistance
Center
Sprint
proporciona
soporte
miembros
NTAC
responsables
profundizar
causas
ra√≠z
problemas
escriben
procedi-
mientos
operativos
NOC
trabajan
proveedores
equipos
ejemplo
fabricantes
routers
diagnosticar
solucionar
problemas
relacionados
equipos
necesario
90
ciento
problemas
tratados
directa-
mente
t√©cnicos
ingenieros
NOC
personal
NOC
NTAC
interact√∫a
equipos
incluyendo
NOC
asociados
internos
externos
equipos
opera-
ciones
campo
Sprint
ojos
o√≠dos
manos
puntos
presencia
POP
Sprint
mencionado
anteriormente
cap√≠tulo
gesti√≥n
red
SprintLink
ISP
evolucionado
gesti√≥n
fallos
pasando
ges-
ti√≥n
rendimiento
gesti√≥n
servicios
poniendo
√©nfasis
necesidades
cliente
centran
necesidades
cliente
operadores
Sprint
enorgullecen
excelencia
operacional
papel
hora
mantener
salvaguardar
infraestructura
red
global
ISP
mundo
Recordemos
analog√≠a
organizaci√≥n
humana
secci√≥n
director
directores
sucursales
ponerse
acerca
medidas
relativas
actividad
productividad
presupuesto
empleadas
informar
sucursal
forma
similar
necesitar√°n
acordar
acciones
tomar
director
ejemplo
recortar
presupuesto
pedir
director
sucursal
cam-
bie
determinados
aspectos
funcionamiento
sucursal
despedir
personal
cerrar
sucursal
nivel
detalle
acordar
forma
comunicar√°n
datos
ejemplo
moneda
d√≥lar
euro
realizan
presu-
puestos
unidades
mide
productividad
detalles
parecer
triviales
acordados
necesario
especificar
forma
informaci√≥n
traslada
oficina
principal
sucursales
protocolo
comunicaciones
entorno
gesti√≥n
est√°ndar
Internet
ocupa
cuestiones
entorno
consta
partes
‚Ä¢D
objetos
gesti√≥n
red
conocidos
objetos
MIB
entorno
gesti√≥n
est√°ndar
Internet
informaci√≥n
gesti√≥n
representa
colecci√≥n
objetos
gestionados
juntos
forman
almac√©n
virtual
informaci√≥n
conocido
Base
informaci√≥n
gesti√≥n
MIB
Management
Information
Base
objeto
MIB
contador
n√∫mero
datagramas
IP
descartados
router
errores
existentes
cabecera
datagrama
IP
n√∫mero
errores
detecci√≥n
portadora
tarjeta
interfaz
Ethernet
informa-
744
CAP√çTULO
GESTI√ìN
REDES
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
744ci√≥n
descriptiva
versi√≥n
software
ejecut√°ndose
servidor
DNS
informaci√≥n
ejemplo
determinado
dispositivo
funcionando
correctamente
informaci√≥n
espec√≠fica
protocolo
ejemplo
camino
enrutamiento
destino
objetos
MIB
definen
informaci√≥n
ges-
ti√≥n
mantenida
dispositivo
gestionado
objetos
MIB
relacionados
recopilan
m√≥dulos
MIB
analog√≠a
organizaci√≥n
humana
base
MIB
define
informaci√≥n
transmitida
oficina
principal
sucursales
‚Ä¢U
lenguaje
definici√≥n
datos
conocido
Estructura
informaci√≥n
ges-
ti√≥n
SMI
Structure
of
Management
Information
SMI
define
tipos
datos
modelo
objeto
reglas
escribir
revisar
informaci√≥n
gesti√≥n
objetos
MIB
especifican
lenguaje
definici√≥n
datos
analog√≠a
organizaci√≥n
humana
SMI
emplea
definir
detalles
formato
infor-
maci√≥n
intercambiada
protocolo
SNMP
.SNMP
utiliza
transmitir
informaci√≥n
comandos
entidad
gestora
agente
ejecuta
dispositivo
red
gestionado
repre-
sentaci√≥n
entidad
Capacidades
administraci√≥n
seguridad
adici√≥n
capacidades
representa
principal
mejora
SNMPv3
SNMPv2
arquitectura
gesti√≥n
red
Internet
dise√±o
modular
lenguaje
definici√≥n
datos
MIB
independientes
protocolo
protocolo
independiente
MIB
interesante
rese√±ar
arquitectura
modular
inicial-
mente
utilizada
facilitar
transici√≥n
gesti√≥n
red
basada
SNMP
entorno
gesti√≥n
red
desarrollado
ISO
arquitectura
gesti√≥n
red
competidora
concibi√≥
SNMP
transici√≥n
ocurrir
paso
tiempo
modularidad
dise√±o
SNMP
per-
mitido
evolucionar
revisiones
fundamentales
desarroll√°ndose
forma
inde-
pendiente
partes
principales
SNMP
mencionadas
Evidentemente
tom√≥
decisi√≥n
correcta
modularidad
raz√≥n
equivocada
siguientes
subsecciones
examinar
detalle
componentes
principales
entorno
gesti√≥n
est√°ndar
Internet
9.3.1
Estructura
informaci√≥n
gesti√≥n
SMI
Estructura
informaci√≥n
gesti√≥n
SMI
Structure
of
Management
Informa-
tion
componente
nombre
extra√±o
entorno
gesti√≥n
red
sugiere
acerca
funcionalidad
lenguaje
utilizado
definir
informaci√≥n
gesti√≥n
reside
entidad
red
gestionada
lenguaje
definici√≥n
necesa-
rio
garantizar
sintaxis
sem√°ntica
datos
gesti√≥n
red
definidos
resultan
ambiguos
Observe
SMI
define
instancia
espec√≠fica
datos
contenidos
entidad
red
gestionada
lenguaje
infor-
maci√≥n
especifica
documentos
describen
SMI
SNMPv3
forma
confusa
denomina
SMIv2
RFC
2578
RFC
2579
RFC
2580
Examine-
mos
SMI
abajo
comenzando
tipos
datos
b√°sicos
continua-
ci√≥n
veremos
describen
SMI
objetos
gestionados
objetos
gestionados
relacionados
agrupan
m√≥dulos
9.3
ENTORNO
GESTI√ìN
EST√ÅNDAR
INTERNET
745
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
745746
CAP√çTULO
GESTI√ìN
REDES
Tipos
datos
b√°sicos
SMI
documento
RFC
2578
especifica
tipos
datos
b√°sicos
lenguaje
definici√≥n
m√≥dulos
MIB
SMI
SMI
basada
lenguaje
definici√≥n
objetos
ASN.1
Abstract
Syntax
Notation
One
Notaci√≥n
sintaxis
abstracta
ISO
1987
ISO
X.680
2002
v√©ase
Secci√≥n
9.4
a√±adido
bastantes
tipos
datos
espec√≠ficos
SMI
considerar
SMI
lenguaje
definici√≥n
datos
Tabla
9.1
enumeran
11
tipos
datos
b√°sicos
definidos
documento
RFC
2578
objetos
escalares
imponer
estructura
tabular
colecci√≥n
ordenada
objetos
MIB
utilizando
construcci√≥n
SEQUENCE
OF
desea
detalles
consulte
documento
RFC
2578
tipos
datos
Tabla
9.1
familiares
explican
mayor√≠a
lectores
√∫nico
tipo
datos
detalladamente
tipo
OBJECT
IDENTIFIER
utiliza
nombre
objeto
Construcciones
nivel
superior
SMI
tipos
datos
b√°sicos
lenguaje
definici√≥n
datos
SMI
pro-
porciona
construcciones
lenguaje
nivel
superior
construcci√≥n
OBJECT-TYPEse
utiliza
especificar
tipo
datos
sem√°ntica
objeto
gestionado
Colectivamente
objetos
gestionados
contienen
datos
gesti√≥n
constituyen
base
gesti√≥n
red
10.000
obje-
tos
definidos
documentos
RFC
Internet
RFC
3410
construcci√≥n
Tipo
datos
Descripci√≥n
INTEGER
Entero
32
bits
define
ASN.1
valor
comprendido
/H11002231
231
/H110021
inclusive
valor
lista
posibles
valores
constantes
nombre
Integer32
Entero
32
bits
valor
comprendido
/H11002231
231
/H110021
inclusive
Unsigned32
Entero
32
bits
signo
rango
32
/H110021
inclusive
OCTET
STRING
Cadena
bytes
formato
ASN.1
representa
datos
binarios
arbitrarios
textuales
65.535
bytes
longitud
OBJECT
IDENTIFIER
Nombre
estructurado
formato
ASN.1
asignado
administrativamente
v√©ase
Secci√≥n
9.3.2
IPaddress
Direcci√≥n
Internet
32
bits
orden
byte
red
Counter32
Contador
32
bits
incrementa
32
/H110021
vuelve
Counter64
Contador
64
bits
Gauge32
Entero
32
bits
aumenta
32
/H110021
disminuye
incrementa
decrementa
TimeTicks
Tiempo
medido
1/100
suceso
Opaque
Cadena
ASN.1
interpretada
necesaria
cuestiones
compatibilidad
abajo
Tabla
9.1
Tipos
datos
b√°sicos
SMI
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
7469.3
ENTORNO
GESTI√ìN
EST√ÅNDAR
INTERNET
747
OBJECT-TYPEtiene
cl√°usulas
cl√°usula
SYNTAXde
definici√≥n
OBJECT-TYPE
especifica
tipo
datos
b√°sico
asociado
objeto
cl√°usula
MAX-ACCESS
especi-
fica
objeto
gestionado
le√≠do
escrito
creado
valor
incluido
notificaci√≥n
cl√°usula
STATUS
indica
definici√≥n
objeto
actualizada
v√°lida
obsoleta
cuyo
caso
implementarse
definici√≥n
incluida
prop√≥sitos
hist√≥ricos
desuso
obsoleta
implementable
cues-
tiones
interoperabilidad
implementaciones
antiguas
cl√°usula
DESCRIPTION
contiene
definici√≥n
textual
legible
objeto
documenta
prop√≥sito
objeto
gestionado
deber√≠a
proporcionar
informaci√≥n
sem√°ntica
necesaria
implemen-
tar
objeto
gestionado
ejemplo
construcci√≥n
OBJECT-TYPE
considere
definici√≥n
tipo
objeto
ipSystemStatsInDeliversdel
RFC
4293
objeto
define
contador
32
bits
controla
n√∫mero
datagramas
IP
recibido
dispositivo
gestio-
nado
entregado
√©xito
protocolo
capa
superior
l√≠nea
definici√≥n
referencia
nombre
objeto
tema
abordaremos
subsecci√≥n
ipSystemStatsInDelivers
OBJECT-TYPE
SYNTAX
Counter32
MAX-ACCESS
read-only
STATUS
current
DESCRIPTION
The
number
of
datagrams
successfully
delivered
to
IPuser-protocols
including
ICMP
When
tracking
interface
statistics
the
counter
of
the
interface
to
which
these
datagrams
were
addressed
is
incremented
This
interface
might
not
be
the
same
as
theinput
interface
for
some
of
the
datagrams
Discontinuities
in
the
value
of
this
counter
can
occur
at
re-initial-
ization
of
the
management
system
and
at
other
times
as
indicated
by
the
value
of
ipSystemStatsDiscontinuityTime
ipSystemStatsEntry
18
construcci√≥n
MODULE-IDENTITYpermite
agrupar
objetos
relacionados
m√≥dulo
ejemplo
RFC
4293
especifica
m√≥dulo
MIB
define
objetos
ges-
tionados
incluyendo
ipSystemStatsInDelivers
permiten
gestionar
implementa-
ciones
Protocolo
Internet
IP
Protocolo
mensajes
control
Internet
ICMP
asociado
RFC
4022
especifica
m√≥dulo
MIB
TCP
documento
RFC
4133
especifica
m√≥dulo
MIB
UDP
RFC
4502
define
m√≥dulo
MIB
moni-
torizaci√≥n
remota
RMON
contener
definiciones
OBJECT-TYPE
obje-
tos
gestionados
m√≥dulo
construcci√≥n
MODULE-IDENTITY
contiene
cl√°usulas
documentar
informaci√≥n
contacto
autor
m√≥dulo
fecha
actualizaci√≥n
historial
revisiones
descripci√≥n
textual
m√≥dulo
Considere
ejemplo
definici√≥n
m√≥dulo
gesti√≥n
protocolo
IP
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
747748
CAP√çTULO
GESTI√ìN
REDES
ipMIB
MODULE-IDENTITY
LAST-UPDATED
200602020000Z
ORGANIZATION
IETF
IPv6
MIB
Revision
Team
CONTACT-INFO
Editor
Shawn
A.
Routhier
Interworking
Labs
108
Whispering
Pines
Dr.
Suite
235
Scotts
Valley
CA
95066
EMail
sar@iwl.com
DESCRIPTION
The
MIB
module
for
managing
IP
and
ICMP
implementations
but
excluding
their
management
of
IP
routes
Copyright
The
Internet
Society
2006
This
version
of
this
MIB
module
is
part
of
RFC
4293
see
the
RFC
itself
for
full
legal
notices
REVISION
200602020000Z
DESCRIPTION
The
IP
version
neutral
revision
with
added
IPv6
objects
for
ND
default
routers
and
router
advertisements
As
well
as
being
the
successor
to
RFC
2011
this
MIB
is
also
the
successor
to
RFCs
2465
and
2466
Published
as
RFC
4293
REVISION
199411010000Z
DESCRIPTION
separate
MIB
module
IP-MIB
for
IP
and
ICMP
management
objects
Published
as
RFC
2011
REVISION
199103310000Z
DESCRIPTION
The
initial
revision
of
this
MIB
module
was
part
of
MIB-II
which
was
published
as
RFC
1213
mib-2
48
construcci√≥n
NOTIFICATION-TYPE
utiliza
especificar
informaci√≥n
rela-
cionada
mensajes
InformationRequesty
SNMPv2-Trapgenerados
agente
entidad
gestora
v√©ase
Secci√≥n
9.3.3
informaci√≥n
incluye
descripci√≥n
DESCRIPTION
textual
acerca
enviados
mensajes
lista
valores
incluidos
mensaje
generado
desea
detalles
consulte
documento
RFC
2578
construcci√≥n
MODULE-COMPLIANCEdefine
conjunto
objetos
gestionados
m√≥dulo
agente
implementar
cons-
trucci√≥n
AGENT-CAPABILITIES
especifica
capacidades
agentes
definiciones
notificaci√≥n
objetos
sucesos
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
7489.3.2
Base
informaci√≥n
gesti√≥n
MIB
mencionado
anteriormente
pensarse
Base
informaci√≥n
ges-
ti√≥n
MIB
valores
reflejan
colectivamente
actual
red
valores
con-
sultados
definidos
entidad
gestora
enviando
mensajes
SNMP
agente
ejecutando
dispositivo
gestionado
representaci√≥n
entidad
gestora
objetos
gestionados
especifican
utilizando
construcci√≥n
SMI
OBJECT-TYPEque
explicado
anteriormente
recopilan
m√≥dulos
MIB
utilizando
construcci√≥n
MODULE
-IDENTITY
IETF
ocupado
estandarizando
m√≥dulos
MIB
asociados
routers
hosts
equipos
red
tarea
incluye
datos
b√°sicos
identificaci√≥n
ele-
mento
determinado
hardware
informaci√≥n
gesti√≥n
acerca
protocolos
interfaces
red
dispositivo
2006
200
m√≥dulos
MIB
basados
est√°n-
dares
n√∫mero
m√≥dulos
MIB
espec√≠ficos
fabricantes
privados
est√°ndares
IETF
necesitaba
definir
forma
identificar
nombrar
m√≥dulos
estandarizados
objetos
gestionados
espec√≠ficos
contenidos
m√≥dulos
lugar
cero
IETF
adopt√≥
marco
identificaci√≥n
denomi-
naci√≥n
objetos
estandarizados
utilizado
Organizaci√≥n
Internacional
Estandarizaci√≥n
ISO
ocurre
organismos
estandarizaci√≥n
ISO
planes
entorno
identificaci√≥n
objetos
estandarizados
identificar
posibles
objetos
estandarizados
ejemplo
formatos
datos
protocolos
ele-
mentos
informaci√≥n
red
independientemente
organizaci√≥n
estan-
darizaci√≥n
ejemplo
Internet
IETF
ISO
IEEE
ANSI
fabricante
equipo
propietario
red
magn√≠fico
objetivo
entorno
identificaci√≥n
objetos
adoptado
ISO
lenguaje
definici√≥n
objetos
ASN.1
Abstract
Syntax
Notation
One
ISO
X.680
2002
veremos
Secci√≥n
9.4
m√≥dulos
MIB
estan-
darizados
acomodo
entorno
denominaci√≥n
continua-
ci√≥n
muestra
Figura
9.3
entorno
denominaci√≥n
ISO
objetos
nombran
forma
jer√°rquica
Observe
punto
ramificaci√≥n
√°rbol
nombre
n√∫mero
mostrado
par√©ntesis
punto
√°rbol
identificado
secuencia
nombres
n√∫meros
especifica
camino
ra√≠z
punto
√°rbol
identificaci√≥n
encontrar
utilidad
basada
Web
divertida
incompleta
oficial
permite
recorrer
√°rbol
identifi-
caci√≥n
objetos
utilizando
informaci√≥n
ramificaciones
aportada
voluntarios
Alvestrand
1997
France
Telecom
2006
superior
jerarqu√≠a
encuentran
ISO
Sector
Estandarizaci√≥n
Telecomunicaciones
Uni√≥n
Internacional
Telecomunicaciones
ITU-T
orga-
nizaciones
est√°ndares
principales
ocupan
ASN.1
rama
une
esfuerzos
organizaciones
rama
ISO
√°rbol
entradas
correspondientes
est√°ndares
ISO
1.0
est√°ndares
emitidos
organismos
estandarizaci√≥n
distintos
pa√≠ses
miembros
ISO
1.2
Figura
9.3
muestra
Organismos
miembros
ISO
1.2
1.2.840
encuentran
serie
est√°ndares
IEEE
ANSI
empresas
espec√≠ficas
incluyen
RSA
1.2.840.11359
Microsoft
1.2.840.113556
formatos
archivo
Microsoft
1.2.840.113556.4
diversos
productos
Microsoft
ejemplo
Word
1.2.840.113556.4.2
interesados
9.3
ENTORNO
GESTI√ìN
EST√ÅNDAR
INTERNET
749
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
749750
CAP√çTULO
GESTI√ìN
REDES
ITU-T
Uni√≥n
ISO
ITU-T
2)ISO
Est√°ndar
Organismos
miembros
ISO
Organizaciones
identificadas
ISO
Organismos
identificados
OTAN
57
Open
Software
Foundation
22
US
DoD
Internet
directory
experimental
security
mail
private
snmpv2
management
MIB-2
system
address
translation
icmp
udp
cmot
interface
ip
tcp
egp
8)
transmission
10
rmon
16
snmp
11
Figura
9.3
√Årbol
identificaci√≥n
objetos
ASN.1
redes
archivos
Microsoft
centrar
atenci√≥n
rama
etiquetada
1.3
corresponde
est√°ndares
emitidos
organismos
reconoci-
ISO
incluyen
Departamento
Defensa
Unidos
US
DoD
rama
encontraremos
est√°ndares
Internet
Open
Software
Foun-
dation
22
asociaci√≥n
l√≠neas
a√©reas
SITA
69
organismos
identificados
OTAN
57
organizaciones
rama
Internetdel
√°rbol
1.3.6.1
categor√≠as
rama
private
1.3.6.1.4
encontramos
lista
IANA
2009b
nombres
c√≥digos
empresariales
privados
miles
empresas
privadas
registradas
IANA
Internet
Assigned
Numbers
Authority
IANA
2009a
ramas
management
1.3.6.1.2
MIB-2
1.3.6.1.2.1
√°rbol
identificaci√≥n
objetos
encontramos
definiciones
m√≥dulos
MIB
estandarizados
viaje
llegar
espacio
nombres
ISO
M√≥dulos
MIB
estandarizados
nivel
inferior
√°rbol
Figura
9.3
muestra
m√≥dulos
MIB
orientados
hardware
importantes
system
interface
m√≥dulos
asociados
importantes
protocolos
Internet
RFC
5000
enumera
m√≥dulos
MIB
estandarizados
documentos
RFC
relativos
MIB
tediosos
√°ridos
leer
resultan
instructivos
comer
verdura
salud
definiciones
m√≥dulos
MIB
tipo
informaci√≥n
contenida
m√≥dulo
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
750Identificador
Nombre
Tipo
Descripci√≥n
RFC
1213
objeto
1.3.6.1.2.1.1.1
sysDescr
OCTET
STRING
Nombre
completo
identificaci√≥n
versi√≥n
tipo
hardware
sistema
sistema
operativo
software
red
1.3.6.1.2.1.1.2
sysObjectID
OBJECT
IDENTIFIER
ID
objeto
asignado
fabricante
proporciona
f√°cil
ambiguo
determinar
clase
m√°quina
gestionada
1.3.6.1.2.1.1.3
sysUpTime
TimeTicks
tiempo
cent√©simas
gesti√≥n
red
sistema
reinicializada
1.3.6.1.2.1.1.4
sysContact
OCTET
STRING
persona
contacto
nodo
gestionado
informaci√≥n
ponerse
contacto
dicha
persona
1.3.6.1.2.1.1.5
sysName
OCTET
STRING
nombre
asignado
administrativamente
nodo
gestionado
convenio
nombre
dominio
completamente
cualificado
nodo
1.3.6.1.2.1.1.6
sysLocation
OCTET
STRING
Localizaci√≥n
f√≠sica
nodo
1.3.6.1.2.1.1.7
sysServices
Integer32
valor
codificado
indica
conjunto
servicios
disponible
nodo
f√≠sicos
ejemplo
repeti-
dor
enlace
datos
subred
ejemplo
puente
Internet
ejemplo
pasarela
IP
terminal
termi-
nal
ejemplo
host
aplicaciones
Tabla
9.2
Objetos
gestionados
grupo
System
MIB-2
objetos
gestionados
caen
rama
system
contienen
informaci√≥n
general
acerca
dispositivo
gestionado
dispositivos
gestionados
soportar
objetos
MIB
system
Tabla
9.2
define
objetos
grupo
system
definen
documento
RFC
1213
Tabla
9.3
define
objetos
gestionados
m√≥dulo
MIB
protocolo
UDP
entidad
gestora
9.3.3
Operaciones
protocolo
SNMP
correspondencias
transporte
versi√≥n
Protocolo
simple
gesti√≥n
red
SNMPv2
RFC
3416
utiliza
transportar
informaci√≥n
MIB
entidades
gestoras
agentes
ejecutan
represen-
taci√≥n
entidades
gestoras
com√∫n
SNMP
solicitud-res-
puesta
entidad
gestora
SNMPv2
env√≠a
solicitud
agente
SNMPv2
recibe
cabo
acciones
env√≠a
respuesta
dicha
solicitud
Normal-
mente
solicitud
utilizar√°
consultar
recuperar
modificar
establecer
valo-
res
objetos
MIB
asociados
dispositivo
gestionado
com√∫n
SNMP
agente
env√≠a
mensaje
solicitado
conocido
mensaje
TRAP
entidad
gestora
mensajes
TRAP
utilizan
notificar
entidad
gestora
9.3
ENTORNO
GESTI√ìN
EST√ÅNDAR
INTERNET
751
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
751752
CAP√çTULO
GESTI√ìN
REDES
Tipo
PDU
0‚Äì3
ID
solicitud
error
0‚Äì5
√çndice
error
Nombre
ValorNombre
Nombre
Valor
Tipo
PDU
Empresa
Direcc
agente
Tipo
Trap
0‚Äì7
C√≥digo
espec√≠fico
Marca
tiempo
Valor
Obtener
establecer
cabecera
Cabecera
Trap
Informaci√≥n
Trap
PDU
SNMP
Variables
obtener
establecer
Figura
9.4
Formato
PDU
SNMP
Identificador
Nombre
Tipo
Descripci√≥n
RFC
4113
objeto
1.3.6.1.2.1.7.1
udpInDatagrams
Counter32
N√∫mero
datagramas
UDP
entregados
usuarios
UDP
1.3.6.1.2.1.7.2
udpNoPorts
Counter32
N√∫mero
datagramas
UDP
recibidos
aplicaci√≥n
puerto
destino
1.3.6.1.2.1.7.3
udpInErrors
Counter32
N√∫mero
datagramas
UDP
recibidos
pudieron
suministrados
razones
distintas
faltara
aplicaci√≥n
puerto
destino
1.3.6.1.2.1.7.4
udpOutDatagrams
Counter32
Numero
datagramas
UDP
enviados
entidad
Tabla
9.3
Objetos
gestionados
seleccionados
m√≥dulo
UDP
MIB-2
situaci√≥n
excepcional
lugar
cambios
valores
objetos
MIB
Ante-
riormente
Secci√≥n
9.1
visto
administrador
red
desear
recibir
mensaje
TRAP
ejemplo
interfaz
deja
funcionar
congesti√≥n
alcanza
nivel
predefinido
enlace
lugar
suceso
destacable
Observe
serie
compromisos
importantes
sondeo
interacci√≥n
solicitud-res-
puesta
captura
trapping
v√©anse
problemas
cap√≠tulo
SNMPv2
define
tipos
mensajes
conocidos
gen√©ricamente
Unidades
datos
protocolo
PDU
Protocol
Data
Units
enumeran
Tabla
9.4
des-
criben
continuaci√≥n
formato
unidades
PDU
muestra
Figura
9.4
PDU
GetRequest
GetNextRequesty
GetBulkRequestson
enviadas
entidad
gestora
agente
solicitar
valor
objetos
MIB
disposi-
tivo
gestionado
agente
identificadores
objeto
objetos
MIB
cuyos
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
752valores
solicitados
especifican
variables
PDU
GetRequest
GetNextRequesty
GetBulkRequestdifieren
granularidad
solicitudes
datos
GetRequestpuede
solicitar
conjunto
arbitrario
valores
MIB
utilizarse
m√∫ltiples
GetNextRequests
recorrer
secuencialmente
lista
tabla
objetos
MIB
GetBulkRequest
permite
devolver
bloques
datos
evitando
sobrecarga
incurre
enviaron
mensajes
GetRequest
GetNextRequest
casos
agente
responde
PDU
Responseque
contiene
identificadores
objeto
valores
asociados
‚Ä¢U
SetRequest
establecer
valor
objetos
MIB
dispositivo
gestionado
agente
responde
PDU
Response
error
noError
confirmar
valor
definido
‚Ä¢U
InformRequest
notificar
entidad
ges-
tora
informaci√≥n
MIB
remota
entidad
receptora
entidad
receptora
responde
PDU
Response
error
noError
con-
firmar
recepci√≥n
PDU
InformRequest
‚Ä¢E
rados
as√≠ncronamente
generados
respuesta
solicitud
recibida
respuesta
suceso
entidad
gestora
requiere
notificaci√≥n
documento
RFC
3418
define
tipos
mensajes
TRAP
conocidos
arranque
fr√≠o
caliente
dispositivo
establecimiento
p√©rdida
enlace
p√©r-
dida
vecino
suceso
fallo
autenticaci√≥n
solicitud
TRAP
recibida
requiere
respuesta
entidad
gestora
Tipo
PDU
SNMPv2
Emisor-receptor
Descripci√≥n
GetRequest
entidad
gestora
agente
Obtener
valor
instancias
objeto
MIB
GetNextRequest
entidad
gestora
agente
Obtener
valor
instancia
objeto
MIB
lista
tabla
GetBulkRequest
entidad
gestora
agente
Obtener
valores
bloque
datos
ejemplo
tabla
tama√±o
InformRequest
entidad
gestora
entidad
Informar
entidad
gestora
remota
valores
MIB
gestora
remotos
acceso
SetRequest
entidad
gestora
agente
Establecer
valor
instancias
objeto
MIB
Response
agente
entidad
gestora
Generado
respuesta
entidad
gestora
entidad
gestora
GetRequest
GetNextRequest
GetBulkRequest
SetRequest
PDU
InformRequest
SNMPv2-Trap
agente
entidad
gestora
Informar
gestor
suceso
excepcional
Tabla
9.4
Tipos
PDU
SNMPv2
9.3
ENTORNO
GESTI√ìN
EST√ÅNDAR
INTERNET
753
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
753754
CAP√çTULO
GESTI√ìN
REDES
Dada
naturaleza
solicitud-respuesta
SNMPv2
conveniente
se√±alar
PDU
SNMP
transportadas
protocolos
trans-
porte
distintos
normalmente
transportadas
carga
√∫til
datagrama
UDP
documento
RFC
3417
establece
UDP
correspondencia
transporte
pre-
ferida
UDP
protocolo
transporte
fiable
garant√≠a
solicitud
respuesta
recibida
destino
entidad
gestora
utiliza
campo
ID
solicitud
PDU
numerar
solicitudes
env√≠a
agente
res-
puesta
agente
toma
ID
solicitud
solicitud
recibida
campo
ID
solicitud
utilizado
entidad
gestora
detectar
solicitudes
respuestas
perdidas
Depender√°
entidad
gestora
decidir
retransmite
solicitud
reci-
bido
respuesta
correspondiente
transcurrido
periodo
tiempo
particular
est√°ndar
SNMP
obliga
aplicar
procedimiento
concreto
retransmisio-
nes
siquiera
indica
retransmisi√≥n
llevarse
cabo
obliga
entidad
gestora
act√∫e
forma
responsable
frecuencia
duraci√≥n
retransmisio-
nes
preguntarse
actuar
protocolo
responsable
9.3.4
Seguridad
administraci√≥n
dise√±adores
SNMPv3
SNMPv3
interpretarse
SNMPv2
serie
capacidades
adicionales
seguridad
administraci√≥n
RFC
3410
Real-
mente
cambios
SNMPv3
SNMPv2
cam-
bios
evidentes
√°rea
administraci√≥n
seguridad
papel
central
seguridad
SNMPv3
particularmente
importante
falta
adecuada
seguridad
SNMP
usara
principalmente
monitorizar
cuestio-
nes
control
ejemplo
rara
emplea
SetRequesten
SNMPv1
Puesto
SNMP
madurado
versiones
funcionalidad
crecido
n√∫mero
documentos
est√°ndar
relacionados
SNMP
demuestra
documento
RFC
RFC
3411
describe
arquitec-
tura
describir
entornos
gesti√≥n
SNMP
idea
arquitectura
describir
entorno
parecer
compleja
objetivo
RFC
3411
admi-
rable
introducir
lenguaje
com√∫n
describir
funcionalidad
acciones
tomadas
agente
entidad
gestora
SNMPv3
arquitectura
entidad
SNMPv3
clara
recorrido
dicha
arquitectura
servir√°
afianzar
comprensi√≥n
SNMP
denominadas
aplicaciones
SNMP
compuestas
generador
coman-
receptor
notificaciones
dispositivo
reenv√≠o
proxy
normalmente
encuentran
entidad
gestora
contestador
comandos
emisor
notificaciones
habitualmente
disponibles
agente
posibilidad
aplicaciones
generador
comandos
genera
PDU
GetRequest
GetNextRequest
GetBulkRequesty
SetRequestque
examinado
Secci√≥n
9.3.3
controla
respuestas
recibidas
PDU
contestador
comandos
ejecuta
agente
recibe
procesa
responde
utilizando
mensaje
Response
PDU
recibidas
GetRe-
quest
GetNextRequest
GetBulkRequest
SetRequest
aplicaci√≥n
origina
notificaciones
agente
genera
PDU
Trap
PDU
recibidas
procesadas
aplicaci√≥n
receptora
notificaciones
entidad
gestora
aplicaci√≥n
reenv√≠o
proxy
reenv√≠a
PDU
solicitud
notificaci√≥n
respuesta
PDU
enviada
aplicaci√≥n
SNMP
pasa
continuaci√≥n
motor
SNMP
enviada
apropiado
protocolo
transporte
Figura
9.5
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
7549.3
ENTORNO
GESTI√ìN
EST√ÅNDAR
INTERNET
755
muestra
PDU
generada
aplicaci√≥n
generador
comandos
pasa
lugar
m√≥dulo
distribuci√≥n
determina
versi√≥n
SNMP
continua-
ci√≥n
PDU
procesada
sistema
procesamiento
mensajes
encapsula
cabecera
mensaje
contiene
n√∫mero
versi√≥n
SNMP
ID
mensaje
informaci√≥n
tama√±o
mensaje
necesita
cifrado
autenticaci√≥n
incluyen
apropiados
campos
cabecera
suministran
informaci√≥n
consulte
RFC
3411
detalles
mensaje
SNMP
PDU
generada
aplicaci√≥n
informaci√≥n
cabecera
mensaje
pasa
protocolo
transporte
apropiado
protocolo
transporte
preferido
mensajes
SNMP
UDP
mensajes
SNMP
transportados
carga
√∫til
datagrama
UDP
n√∫mero
puerto
preferido
SNMP
puerto
161
puerto
162
utiliza
mensajes
TRAP
visto
anteriormente
mensajes
SNMP
emplean
monitori-
zar
controlar
ejemplo
comando
SetRequest
ele-
mentos
red
Evidentemente
intruso
pudiera
interceptar
mensajes
SNMP
generar
paquetes
SNMP
infraestructura
gesti√≥n
afectar
red
fundamental
mensajes
SNMP
transmitidos
forma
segura
Sor-
prendentemente
versi√≥n
reciente
SNMP
seguridad
reci-
bido
atenci√≥n
merece
seguridad
SNMPv3
conoce
seguridad
basada
usuario
RFC
3414
concepto
tradicional
usuario
identificado
nombre
usuario
informaci√≥n
seguridad
asociada
ejemplo
con-
Generador
comandos
Aplicaciones
SNMP
Motor
SNMP
Receptor
notificaciones
Reenviador
proxy
Distribuidor
Sistema
procesamiento
mensajes
Puntualidad
autenticaci√≥n
privacidad
Seguridad
Capa
transporte
Control
acceso
Generador
comandos
Originador
notificaciones
PDU
Cabec
seguridad
mensaje
PDU
Figura
9.5
Motor
aplicaciones
SNMPv3
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
755756
CAP√çTULO
GESTI√ìN
REDES
Actualmente
disponibles
centenares
miles
productos
gesti√≥n
red
integrando
grado
entorno
gesti√≥n
red
fundamentos
SNMP
estudiado
secci√≥n
repaso
productos
queda
√°mbito
texto
duda
lejos
atenci√≥n
lector
proporcionamos
referencias
productos
destacados
punto
partida
introducci√≥n
herramientas
gesti√≥n
red
Cap√≠tulo
12
libro
Subramanian
2000
herramientas
gesti√≥n
red
dividirse
forma
general
fabricantes
equipos
red
construyen
especialmente
gesti√≥n
equipos
destinadas
gesti√≥n
red
equipos
heterog√©neos
ofertas
espec√≠ficas
fabricantes
serie
herramientas
gesti√≥n
red
Network
Application
Performance
Analysis
NAPA
Cisco
desarrollada
dispositivos
Cisco
Cisco
NAPA
2009
Juniper
ofrece
sistemas
soporte
operaci√≥n
OSS
Operation
Support
Systems
apro-
visionamiento
red
soporte
SLA
QoS
Juniper
2009
trase√±a
valor
clave
privilegios
acceso
SNMPv3
proporciona
mecanismos
cifrado
autenticaci√≥n
protecci√≥n
ataques
reproducci√≥n
v√©ase
Secci√≥n
8.3
control
acceso
Cifrado
PDU
SNMP
cifrarse
utilizando
est√°ndar
DES
Data
Encryption
Standard
CBC
Cipher
Block
Chaining
Observe
est√°ndar
DES
sistema
clave
compartida
clave
secreta
usuario
cifra
datos
conocida
entidad
receptora
descifrar
datos
Autenticaci√≥n
SNMP
utiliza
t√©cnica
MAC
Message
Authentication
Code
estudiado
Secci√≥n
8.3.1
proporcionar
autenticaci√≥n
protecci√≥n
frente
falsificaciones
RFC
2401
Recuerde
t√©cnica
MAC
requiere
emisor
receptor
tengan
clave
secreta
com√∫n
Protecci√≥n
frente
ataques
reproducci√≥n
Recuerde
Cap√≠tulo
emplearse
n√∫meros
distintivos
protegerse
frente
ataques
reproducci√≥n
SNMPv3
adopta
t√©cnica
relacionada
asegurarse
mensaje
recibido
reproducci√≥n
mensaje
receptor
requiere
emisor
incluya
valor
mensaje
basado
contador
receptor
contador
funciona
n√∫mero
distintivo
refleja
tiempo
transcurrido
lugar
reinicio
software
gesti√≥n
red
receptor
n√∫mero
reinicios
software
receptor
configurado
contador
mensaje
recibido
encuentre
margen
error
valor
real
receptor
mensaje
aceptado
men-
saje
reproducci√≥n
momento
mensaje
autenticado
descifrado
detalles
consulte
RFC
3414
Control
acceso
SNMPv3
proporciona
mecanismo
control
acceso
basado
vistas
RFC
3415
controla
informaci√≥n
gesti√≥n
red
consultada
definida
usuario
entidad
SNMP
mantiene
informaci√≥n
acerca
pol√≠ticas
derechos
acceso
Almac√©n
datos
configuraci√≥n
local
LCD
PR√ÅCTICA
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
7569.4
ASN.1
757
Local
Configuration
Datastore
Partes
LCD
accesibles
objetos
gestiona-
definen
MIB
configuraci√≥n
modelo
control
acceso
basado
vistas
RFC
3415
gestionadas
manipuladas
remotamente
v√≠a
SNMP
9.4
ASN.1
libro
abordado
serie
interesantes
temas
acerca
redes
compu-
tadoras
secci√≥n
dedicada
ASN.1
encuentre
lista
temas
interesantes
verduras
conocimiento
ASN.1
amplio
tema
servicios
presentaci√≥n
ASN.1
est√°ndar
ISO
utiliza
serie
protocolos
relacionados
Internet
particu-
larmente
√°rea
gesti√≥n
red
ejemplo
visto
Secci√≥n
9.3
variables
MIB
SNMP
inextricablemente
ligadas
ASN.1
material
proporcionado
ASN.1
secci√≥n
√°rido
esperamos
lector
considere
importancia
motivarse
considere
experimento
mental
Suponga
copiar
datos
forma
fiable
directamente
memoria
computadora
memoria
computadora
remota
pudiera
hacerse
estar√≠a
resuelto
pro-
blema
comunicaci√≥n
respuesta
pregunta
depende
definici√≥n
pro-
blema
comunicaci√≥n
Ciertamente
copia
perfecta
memoria
memoria
pasar√≠a
exactamente
bits
bytes
equipo
software
ejecuta
computadora
receptora
acceda
datos
ver√°
valores
almacenados
memoria
computadora
emisora
respuesta
pregunta
necesariamente
quid
problema
arquitecturas
computadora
sistemas
operativos
compiladores
emplean
conve-
nios
distintos
almacenar
representar
datos
datos
transmitirse
almacenarse
distintas
computadoras
ocurre
redes
comunicaciones
problema
representaci√≥n
datos
solucionarse
Veamos
ejemplo
problema
Considere
fragmento
c√≥digo
C.
disponer
estructura
memoria
struct
char
codigo
int
prueba
prueba.x
259
prueba.codigo
izquierda
Figura
9.6
muestra
disposici√≥n
datos
arquitectura
hipot√©tica
formada
√∫nico
byte
memoria
contiene
car√°cter
seguido
palabra
16
bits
contiene
valor
entero
259
almacenado
byte
significativo
lugar
derecha
Figura
9.6
mues-
tra
disposici√≥n
memoria
computadora
car√°cter
seguido
valor
entero
almacenado
byte
significativo
lugar
entero
16
bits
alineado
principio
palabra
16
bits
Ciertamente
realizara
copia
literal
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
757758
CAP√çTULO
GESTI√ìN
REDES
memorias
computadoras
empleara
definici√≥n
estructura
acceder
valores
almacenados
ver√≠an
resultados
ambas
com-
putadoras
distintas
arquitecturas
empleen
formatos
datos
internos
problema
real
importante
problema
concreto
almacenamiento
enteros
for-
matos
com√∫n
nombre
sistema
big-endian
almace-
nar
n√∫meros
enteros
coloca
lugar
bytes
significativos
direcci√≥n
almacenamiento
menor
sistema
little-endian
almacena
lugar
bytes
significativos
procesadores
Sun
SPARC
Motorola
emplean
sistema
big-endian
procesa-dores
Intel
DEC
Compaq
Alpha
emplean
sistema
little-
endian
t√©rminos
big-endian
little-endian
tomados
libro
viajes
Gulli-
Jonathan
Swift
grupos
personas
insisten
forma
dogm√°tica
cosa
formas
analog√≠a
arquitecturas
computadora
clara
grupo
personas
tierra
Lilliput
insist√≠a
romper
huevos
extremo
big-endians
grupo
quer√≠a
romperlos
extremo
peque√±o
diferencia
causa
rebeli√≥n
contienda
civil
Puesto
computadoras
distintas
almacenan
representan
datos
formas
dife-
rentes
afrontar
protocolos
red
ejemplo
agente
SNMP
desea
enviar
mensaje
Response
contiene
valor
entero
n√∫mero
datagramas
UDP
recibidos
deber√≠a
representar
valor
entero
enviar
entidad
gestora
utilizando
ordenaci√≥n
big-endian
little-endian
opci√≥n
agente
enviara
bytes
entero
orden
almacenados
entidad
ges-
tora
opci√≥n
agente
enviara
entero
utilizando
orden
almace-
namiento
entidad
receptora
reordenara
bytes
caso
necesario
Cualquiera
opciones
precisa
emisor
receptor
conozcan
formato
representaci√≥n
enteros
opci√≥n
disponer
m√©todo
independiente
m√°quina
indepen-
diente
sistema
operativo
independiente
lenguaje
describir
n√∫meros
enteros
tipos
datos
disponer
lenguaje
definici√≥n
datos
reglas
establecer
forma
tipos
datos
transmitido
red
reciben
datos
determinado
tipo
reciben
formato
cono-
cido
almacenados
formato
espec√≠fico
m√°quina
requerido
SMI
estudiado
Secci√≥n
9.3
ASN.1
adoptan
opci√≥n
jerga
ISO
est√°ndares
describen
servicio
presenta-
ci√≥n
servicio
transmisi√≥n
traducci√≥n
informaci√≥n
formato
espec√≠fico
00000001
00000011
prueba.codigo
prueba.x
prueba.codigo
prueba.x
00000011
00000001
Figura
9.6
disposiciones
datos
distintas
arquitecturas
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
7589.4
ASN.1
759
Hippie
a√±os
60
Chupi
Abuela
Adolescente
Chupi
Figura
9.7
problema
presentaci√≥n
Hippie
a√±os
60
Servicio
presentaci√≥n
Abuela
Adolescente
Servicio
presentaci√≥n
gusta
Estupendo
Mola
Chupi
gusta
Servicio
presentaci√≥n
Figura
9.8
problema
presentaci√≥n
resuelto
m√°quina
Figura
9.7
ilustra
problema
presentaci√≥n
mundo
real
receptores
comprende
idea
esencial
comunicando
muestra
Figura
9.8
servicio
presentaci√≥n
resolver
problema
traduciendo
idea
lenguaje
independiente
persona
entendi-
miento
com√∫n
servicio
presentaci√≥n
enviando
dicha
informaci√≥n
recep-
tor
traduci√©ndola
lenguaje
receptor
comprenda
Tabla
9.5
muestra
tipos
datos
definidos
ASN.1
Recuerde
estudio
SMI
hablado
tipos
datos
INTEGER
OCTET
STRING
OBJECT
IDENTIFIER
objetivo
afortunadamente
proporcionar
introducci√≥n
completa
ASN.1
remitimos
lector
est√°ndares
libro
impreso
l√≠nea
Larmouth
1996
descripci√≥n
tipos
construc-
tores
ASN.1
tales
SEQUENCE
SET
permiten
definir
tipos
datos
estructu-
rados
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
759760
CAP√çTULO
GESTI√ìN
REDES
Etiqueta
Tipo
Descripci√≥n
BOOLEAN
valor
true
falso
false
INTEGER
arbitrariamente
BITSTRING
Lista
bits
OCTET
STRING
Lista
bytes
NULL
valor
OBJECT
IDENTIFIER
Nombre
√°rbol
denominaci√≥n
est√°ndar
ASN.1
v√©ase
Secci√≥n
9.2.2
REAL
Punto
flotante
Tabla
9.5
Tipos
datos
ASN.1
seleccionados
proporcionar
lenguaje
definici√≥n
datos
ASN.1
propor-
ciona
Reglas
b√°sicas
codificaci√≥n
BER
Basic
Encoding
Rules
especifican
instancias
objetos
definidas
utilizando
lenguaje
definici√≥n
datos
ASN.1
enviarse
red
reglas
BER
adoptan
m√©todo
denominado
TLV
Type
Length
Value
Tipo
Longitud
Valor
codificar
datos
transmi-
si√≥n
elemento
datos
enviar
transmite
tipo
datos
longi-
tud
elemento
datos
valor
real
elemento
orden
sencillo
convenio
datos
recibidos
pr√°cticamente
identifican
Figura
9.9
muestra
enviar√≠an
elementos
datos
ejem-
plo
simple
ejemplo
emisor
desea
enviar
cadena
caracteres
smith
seguida
valor
decimal
259
binario
00000001
00000011
byte
valor
seguido
byte
valor
utilizando
ordenaci√≥n
big-endian
byte
flujo
transmitido
valor
indica
tipo
elemento
datos
OCTET
STRING
codificaci√≥n
TLV
byte
flujo
contiene
longitud
cadena
OCTET
STRING
caso
tercer
byte
flujo
inicio
cadena
OCTET
STRING
longitud
contiene
representaci√≥n
ASCII
letra
s.
valores
elemento
datos
valor
etiqueta
tipo
INTE-
GER
entero
longitud
bytes
representaci√≥n
bytes
ordenaci√≥n
big-endian
valor
decimal
259
exposici√≥n
tocado
subconjunto
peque√±o
simple
ASN.1
recursos
disponibles
aprender
ASN.1
incluyen
docu-
mento
est√°ndares
ASN.1
ISO
X.680
2002
libro
l√≠nea
relativo
OSI
Lar-
mouth
1996
sitios
web
relacionados
ASN.1
OSS
2007
France
Telecom
2006
9.5
Conclusi√≥n
Terminamos
estudio
gesti√≥n
red
refiere
redes
cap√≠tulo
dedicado
gesti√≥n
red
comenzado
planteando
necesidad
proporcionar
herramientas
apropiadas
administrador
red
persona
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
7609.5
CONCLUSI√ìN
761
cuyo
trabajo
consiste
mantener
red
activa
funcionando
monitorizar
probar
sondear
configurar
analizar
evaluar
controlar
funcionamiento
red
analog√≠as
presentadas
gesti√≥n
sistemas
complejos
plantas
energ√≠a
aviones
organizaciones
humanas
ayudado
entender
necesidad
visto
arquitectura
sistemas
gesti√≥n
red
giran
torno
componentes
clave
entidad
gestora
red
conjunto
dispositivos
remotos
gestionados
entidad
gestora
Bases
informaci√≥n
gesti√≥n
MIB
disponibles
dis-
positivos
contienen
datos
acerca
operaci√≥n
dispositivos
agentes
remotos
comunican
informaci√≥n
MIB
llevan
cabo
acciones
control
entidad
gestora
red
protocolo
comunicaci√≥n
enti-
dad
gestora
dispositivos
remotos
Ac
Internet
protocolo
SNMP
particular
visto
SNMP
instancia
componentes
clave
arquitectura
gesti√≥n
red
dedicado
tiempo
considerable
examinar
objetos
MIB
SMI
lenguaje
definici√≥n
datos
especificar
bases
MIB
protocolo
SNMP
SMI
ASN.1
estre-
apellido::=
OCTET
STRING
codigo::=
INTEGER
codigo
259
apellido
smith
M√≥dulo
declaraciones
tipos
datos
escrito
ASN.1
Instancias
tipos
datos
especificados
m√≥dulo
Reglas
b√°sicas
codificaci√≥n
BER
Flujo
bytes
transmitido
Figura
9.9
Ejemplo
codificaci√≥n
BER
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
761762
CAP√çTULO
GESTI√ìN
REDES
chamente
ligados
ASN.1
desempe√±a
papel
clave
capa
presentaci√≥n
modelo
referencia
capas
ISO
OSI
examinado
brevemente
ASN.1
importante
detalles
ASN.1
necesidad
proporcionar
tra-
ducci√≥n
formatos
datos
espec√≠ficos
m√°quinas
red
arquitecturas
red
reconocen
expl√≠citamente
importancia
servicio
disponiendo
capa
presentaci√≥n
capa
ausente
pila
protocolos
Internet
merece
pena
destacar
temas
gesti√≥n
red
decidido
abordar
temas
tales
identificaci√≥n
gesti√≥n
fallos
detec-
ci√≥n
proactiva
anomal√≠as
correlaci√≥n
alarmas
cuestiones
ges-
ti√≥n
servicios
ejemplo
oposici√≥n
gesti√≥n
red
importantes
temas
merecen
libro
lector
recurrir
referencias
dadas
Secci√≥n
9.1
Problemas
cuestiones
repaso
Cap√≠tulo
Problemas
repaso
SECCI√ìN
9.1
R1
beneficia
administrador
red
disponer
herramientas
gesti√≥n
red
Describa
escenarios
R2
√°reas
gesti√≥n
red
definidas
organizaci√≥n
ISO
R3
diferencia
gesti√≥n
red
gesti√≥n
servicios
SECCI√ìN
9.2
R4
Defina
siguientes
t√©rminos
entidad
gestora
dispositivo
gestionado
agente
ges-
ti√≥n
MIB
protocolo
gesti√≥n
red
SECCI√ìN
9.3
R5
papel
SMI
gesti√≥n
red
R6
diferencia
importante
mensaje
solicitud-respuesta
mensaje
TRAP
SNMP
R7
tipos
mensajes
utilizados
SNMP
R8
motor
SNMP
SECCI√ìN
9.4
R9
prop√≥sito
√°rbol
identificaci√≥n
objetos
ASN.1
R10
papel
ASN.1
capa
presentaci√≥n
modelo
referencia
ISO/
OSI
R11
Internet
capa
presentaci√≥n
tratan
diferen-
cias
arquitecturas
m√°quinas
ejemplo
distinta
representaci√≥n
enteros
distintas
m√°quinas
R12
significado
codificaci√≥n
TLV
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
762PREGUNTAS
DISCUSI√ìN
763
Problemas
P1
Considere
formas
lugar
comunicaci√≥n
entidad
gestora
dispositivo
gestionado
solicitud-respuesta
TRAP
ven-
tajas
inconvenientes
m√©todos
t√©rminos
costes
tiempo
notificaci√≥n
producen
sucesos
excepcionales
robustez
mensajes
perdidos
entidad
gestora
dispositivo
P2
Secci√≥n
9.3
visto
preferible
transportar
mensajes
SNMP
data-
gramas
UDP
fiables
cree
dise√±adores
SNMP
eligieron
UDP
lugar
TCP
protocolo
transporte
SNMP
P3
identificador
objeto
ASN.1
protocolo
RMON
v√©ase
Figura
9.3
P4
Suponga
trabaja
empresa
Unidos
desea
desarrollar
pro-
pia
MIB
gestionar
l√≠nea
productos
registrar√≠a
√°rbol
identificaci√≥n
objetos
Figura
9.3
Sugerencia
investigar
RFC
documentos
responder
pregunta
P5
Recuerde
Secci√≥n
9.3.2
empresa
privada
crear
varia-
bles
MIB
rama
private
1.3.6.4
Suponga
IBM
deseara
crear
MIB
software
servidor
web
cualificador
OID
1.3.6.1.4
responder
pregunta
consultar
IANA
2009b
Realice
b√∫squeda
Web
vea
encontrar
MIB
ser-
vidor
IBM
P6
cree
longitud
precede
valor
codificaci√≥n
TLV
lugar
continuaci√≥n
valor
P7
Considere
Figura
9.9
codificaci√≥n
BER
codigo,276
ape-
llido,‚ÄúMarco
P8
Considere
Figura
9.9
codificaci√≥n
BER
codigo,160
ape-
llido,‚ÄúDario
Preguntas
discusi√≥n
D1
planta
energ√≠a
el√©ctrica
cabina
avi√≥n
indique
analog√≠a
sistema
distribuido
complejo
necesite
controlado
D2
Considere
escenario
Secci√≥n
9.1
actividades
cree
adminis-
trador
red
desear
monitorizar
D3
Lea
documento
RFC
789
haberse
evitado
ca√≠da
ARPAnet
1980
haberse
simplificado
recuperaci√≥n
administradores
ARPAnet
hubieran
dispuesto
herramientas
gesti√≥n
red
actuales
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
763764
decidi√≥
especializarse
campo
redes
fascinado
construir
tipo
cosas
dediqu√©
introducir
horquillas
pelo
enchufes
ni√±o
desarrollando
inter√©s
equipos
sonido
adolescencia
fabricando
sistemas
sonido
grupos
rock
parec√≠an
suficientemente
potentes
pulverizar
hormig√≥n
universidad
traba-
jaba
reparando
televisiones
equipos
radio
principalmente
equipos
sonido
sent√≠
intere-
sado
computadoras
digital
incluyendo
hardware
software
Comenc√©
tratar
interconectar
tipo
equipos
extra√±os
dediqu√©
conectar
perif√©ricos
procesadores
sistemas
campo
redes
evolucionada
interfaces
actualmente
Internet
evolucionada
redes
consisti√≥
trabajo
industria
computadoras
dedicaba
a√±os
profesi√≥n
pas√©
universidad
Purdue
tiempo
toc√≥
impartir
formaci√≥n
cursos
definen
curr√≠culum
estudiantes
ciclo
Ingenier√≠a
Inform√°tica
El√©ctrica
trabajo
inclu√≠a
dise√±ar
cursos
dedicados
temas
nacientes
hardware
software
microprocesadores
ejemplo
duran-
semestre
clase
dise√±ar
computadora
chips
componentes
construy√©ndola
pr√°cticas
laboratorio
curso
equipos
encargaba
unidad
central
proceso
subsistema
memoria
subsistema
etc.
semes-
tre
escrib√≠amos
software
sistema
hardware
hab√≠amos
construido
tiempo
comenc√©
trabajar
tareas
direcci√≥n
sistemas
infor-
m√°ticos
campus
encarg√°ndome
informar
rector
director
servicios
usuario
sistemas
computadoras
acad√©micos
trabajo
representa
desaf√≠o
Seguir
estando
cambios
campo
t√©cnico
negocios
director
perfil
t√©cnico
dif√≠cil
actualizado
res-
pecta
avances
t√©cnicos
experimentados
sector
papel
exige
seguir
cambios
producen
entorno
empresarial
ejemplo
fusiones
adquisiciones
Jeff
Case
Jeff
Case
fundador
director
t√©cnico
SNMP
Research
Inc
SNMP
Simple
Network
Management
Protocol
productor
l√≠der
elaboraci√≥n
est√°ndares
Internet
productos
basados
est√°ndares
gesti√≥n
redes
Jeff
gradu√≥
Educaci√≥n
Industrial
Tecnolog√≠a
Ingenier√≠a
El√©ctrica
obtuvo
masters
Educaci√≥n
Industrial
Ingenier√≠a
El√©ctrica
Universidad
Purdue
doctor√≥
Educaci√≥n
T√©cnica
Universidad
Illinois
Urbana-Champaign
ENTREVISTA
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
764¬øCu√°l
cree
futuro
redes
Internet
futuro
crecimiento
sostenido
velocidad
ubicuidad
creciente
con-
expansi√≥n
tensi√≥n
anarqu√≠a
direcci√≥n
centralizada
correo
basura
herramientas
combatir
correo
basura
problemas
seguridad
soluciones
seguridad
Finalmente
debemos
preparados
completamente
inesperado
personas
inspirado
profesionalmente
difunto
padre
hombre
negocios
√©xito
Dilbert
doctores
Vint
Cerf
Jon
Postel
Marshall
Rose
Chuck
Davin
personas
conocidas
sector
Internet
Bill
Seifert
socio
capital
riesgo
doctor
Rupert
Evans
profesor
t√©sis
esposa
trabaja
con-
migo
empresa
lugar
importante
Jes√∫s
o√≠do
notable
colecci√≥n
citas
trabajaba
profesor
sol√≠a
ilustrar
ense√±anzas
citas
ejemplo
valioso
libros
Gauss
ocasiones
distancia
teor√≠a
pr√°ctica
distancia
teor√≠a
pr√°ctica
teor√≠a
distancia
teor√≠a
pr√°ctica
pr√°ctica
idea
cita
mayores
obst√°culos
hora
desarrollar
est√°ndares
Internet
dinero
factores
pol√≠ticos
ego
errores
liderazgo
utilizaci√≥n
sorprendente
tecnolog√≠a
SNMP
llegu√©
involucrarme
cuestiones
gesti√≥n
Internet
√∫nico
objeto
satisfacer
necesidades
supervivencia
Necesitaba
disponer
herra-
mientas
gestionar
infraestructura
red
organizaci√≥n
√©xito
existen-
cia
personas
necesitaban
resolver
problemas
similares
atribu√≠ble
intuici√≥n
suerte
trabajo
duro
importante
arqui-
tectura
correcta
765
M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
765M09_KURO9675_05_SE_CH09.qxd
21/3/10
19:37
P√°gina
766Referencias
767
Aclaraci√≥n
URL
referencias
proporcionan
continuaci√≥n
incluido
URL
p√°ginas
web
documentos
exclusivamente
web
materiales
hayan
publicados
conferencia
revista
podido
localizar
URL
material
diferencia
ediciones
anteriores
libro
incluido
URL
correspondientes
conferencias
publicaciones
revistas
dichos
documentos
normalmente
encontrarse
utilizando
motor
b√∫squeda
disponible
sitio
web
conferencia
ejemplo
documentos
conferencias
workshops
ACM
Sigcomm
disponibles
http://www.acm.org/sigcomm
suscripci√≥n
digital
URL
proporcionan
continuaci√≥n
validaron
probaron
enero
2009
actualmente
est√©
desactualizado
favor
consulte
versi√≥n
l√≠nea
libro
http:/
/www.awl.com
kurose-ross
obtener
bibliograf√≠a
actualizada
Aclaraci√≥n
documentos
RFC
Request
for
Comments
Internet
disponibles
copias
documentos
RFC
Internet
sitios
editor
documentos
RFC
Internet
Society
organismo
supervisa
RFC
mantiene
sitio
http://www.rfc-editor.org
sitio
buscar
RFC
espec√≠fico
t√≠tulo
n√∫mero
autores
muestra
actualizaciones
RFC
localizados
RFC
Internet
actualizados
quedado
obsoletos
existencia
documentos
posteriores
sitio
favorito
consultar
RFC
original
http://www.rfc-editor.org
3Com
Addressing
2009
3Com
Corp
White
paper
Understanding
IP
addressing
Everything
you
ever
wanted
to
know
http://www.3com.com/other/pdfs/infra/corpinfo/en_US/501302.pdf
3GPP
2009
P√°gina
principal
Third
Generation
Partnership
Project
http://www.3gpp.org/
802.11
Security
2009
The
Unofficial
802.11
Security
Web
Page
http://www.drizzle.com/~aboba/
IEEE/
Abitz
1993
P.
Albitz
C.
Liu
DNS
and
BIND
O‚ÄôReilly
Associates
Petaluma
CA
1993
Abramson
1970
N.
Abramson
The
Aloha
System‚ÄîAnother
Alternative
for
Computer
Communications
Proc
1970
Fall
Joint
Computer
Conference
AFIPS
Conference
p√°g.
37
1970
Abramson
1985
N.
Abramson
Development
of
the
Alohanet
IEEE
Transactions
on
Information
Theory
ol
IT-31
N¬∫
marzo
1985
p√°gs
119‚Äì123
Ahn
1995]J.
S.
Ahn
P.
B.
Danzig
Z.
Liu
Yan
Experience
with
TCP
Vegas
Emulation
and
Experiment
Proc
1995
ACM
SIGCOMM(Boston
MA
agosto
1995
p√°gs
185‚Äì195
Akamai
2009
P√°gina
principal
Akamai
http://www.akamai.com
Akella
2003
A.
Akella
S.
Seshan
A.
Shaikh
An
empirical
Evaluation
of
Wide-area
Internet
Bottlenecks
Proc
2003
ACM
Internet
Measurement
Conf
Miami
FL
noviembre
2003
Alvestrand
1997
H.
Alvestrand
Object
Identifier
Registry
http://www.alvestrand.no/objectid/
Anderson
1995
J.
B.
Andersen
T.
S.
Rappaport
S.
Yoshida
Propagation
Measurements
and
Models
for
Wireless
Communications
Channels
IEEE
Communications
Magazine
enero
1995
p√°gs
42‚Äì49
Aperjis
2008
C.
Aperjis
M.J.
Freedman
R.
Johari
Peer-assisted
Content
Sistribution
with
Prices
Proc
ACM
CoNEXT‚Äô08,(Madrid
diciembre
2008
Appenzeller
2004
G.
Appenzeller
I.
Keslassy
N.
McKeown
Sizing
Router
Buffers
Proc
2004
ACM
SIGCOMM
Portland
OR
agosto
2004
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
767[ARIN
1996
ARIN
IP
allocation
report
ftp://rs.arin.net/netinfo/ip_network_allocations
Ash
1998
G.
R.
Ash
Dynamic
Routing
in
Telecommunications
Networks
McGraw
Hill
NY
NY
1998
ASO-ICANN
2009
The
Address
Supporting
Organization
home
page
http://www.aso
.icann.org
AT&T
SLM
2008]AT&T
Business
AT&T
Enterprise
Hosting
Services
Service
Guide
http:/
/www.att.com
abs
serviceguide
docs
eh_sg.pdf
Atheros
2009
Atheros
Communications
Inc
Atheros
AR5006
WLAN
Chipset
Product
Bulletins
http://www.atheros.com/pt/AR5006Bulletins.htm
Ayanoglu
1995
E.
Ayanoglu
S.
Paul
T.
F.
Porta
K.
K.
Sabnani
R.
D.
Gitlin
AIRMAIL
Link-Layer
Protocol
for
Wireless
Networks
ACM
ACM
Baltzer
Wireless
Networks
Journal
47‚Äì60
febrero
1995
Bakre
1995
A.
Bakre
B.
R.
Badrinath
I-TCP
Indirect
TCP
for
Mobile
Hosts
Proc
1995
Int
Conf
on
Distributed
Computing
Systems
ICDCS
mayo
1995
p√°gs
136‚Äì143
Balakrishnan
1997
H.
Balakrishnan
Padmanabhan
S.
Seshan
R.
Katz
Comparison
of
Mechanisms
for
Improving
TCP
Performance
Over
Wireless
Links
IEEE
ACM
Transactions
on
Networking
Vo
Baran
1964
P.
Baran
On
Distributed
Communication
Networks
IEEE
Transactions
on
Communication
Systems
marzo
1964
Rand
Corporation
Technical
report
with
the
same
title
Memorandum
RM-3420-PR
1964
http://www.rand.org/publications/RM/RM3420/
Bardwell
2004
J.
Bardwell
You
Believe
You
Understand
What
You
Think
Said
The
Truth
About
802.11
Signal
And
Noise
Metrics
Discussion
Clarifying
Often-Misused
802.11
WLAN
Terminologies
http://www.connect802.com/download/techpubs/2004/you_believe_D100201.pdf
Baset
2006
S.
A.
Basset
and
H.
Schulzrinne
An
analysis
of
the
Skype
peer-to-peer
Internet
Telephony
Protocol
Proc
2006
IEEE
Infocom
Barcelona
Espa√±a
abril
2006
BBC
2001
BBC
news
online
Small
Slice
of
Design
abril
2001
http://news.bbc.co.uk/2/hi/
science
nature/1264205.stm
BBC
Multicast
2009
BB
BBC
Multicast
Trial
http://support.bbc.co.uk/multicast/
Beheshti
2008
N.
Beheshti
Ganjali
M.
Ghobadi
N.
McKeown
G.
Salmon
Experimental
Study
of
Router
Buffer
Sizing
Proc
ACM
Internet
Measurement
Conference
October
2008
Vo
Bender
2000
P.
Bender
P.
Black
M.
Grob
R.
Padovani
N.
Sindhushayana
A.
Viterbi
CDMA
HDR
bandwidth-efficient
high-speed
wireless
data
service
for
nomadic
users
IEEE
Commun
Mag
ol
38
N¬∫
julio
2000
p√°gs
70‚Äì77
Berners-Lee
1989
T.
Berners-Lee
CERN
Information
Management
Proposal
marzo
1989
mayo
1990
http://www.w3.org/History/1989/proposal.html
Berners-Lee
1994
T.
Berners-Lee
R.
Cailliau
A.
Luotonen
H.
Frystyk
Nielsen
A.
Secret
The
World-Wide
Web
Communications
of
the
ACM
Vo
Bernstein
2009
D.
Bernstein
SYN
Cookies
http://cr.yp.to/syncookies.html
Bertsekas
1991
D.
Bertsekas
R.
Gallagher
Data
Networks
2¬™
ed
Prentice
Hall
Englewood
Cliffs
NJ
1991
Bhimani
1996
A.
Bhimani
Securing
the
Commercial
Internet
Communications
of
the
ACM
Vo
39
N¬∫
marzo
1996
p√°gs
29‚Äì35
Biddle
2003
P.
Biddle
P.
England
M.
Peinado
B.
Willman
The
Darknet
and
the
Future
of
Content
Distribution
2002
ACM
Workshop
on
Digital
Rights
Management
noviembre
2002
Washington
D.C.
http://crypto.stanford.edu/DRM2002/darknet5.doc
Biersack
1992
E.
W.
Biersack
Performance
evaluation
of
forward
error
correction
in
ATM
networks
Proc
1999
ACM
SIGCOMM
Baltimore
MD
agosto
1992
p√°gs
248‚Äì257
768
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
768[BIND
2009
Internet
Software
Consortium
page
on
BIND
http://www.isc.org/bind.html
Bisdikian
2001
C.
Bisdikian
An
Overview
of
the
Bluetooth
Wireless
Technology
IEEE
Communications
Magazine
N¬∫
12
diciembre
2001
p√°gs
86‚Äì94
Bishop
2003
M.
Bishop
Computer
Security
Art
and
Science
Boston
Addison
Wesley
Boston
MA
2003
BitTorrent
2009
P√°gina
principal
BitTorrent.org
http://www.bittorrent.org
Black
1995
U.
Black
ATM
Volume
Foundation
for
Broadband
Networks
Prentice
Hall
1995
Blumenthal
2001
M.
Blumenthal
D.
Clark
Rethinking
the
Design
of
the
Internet
the
End-to-end
Arguments
vs
the
Brave
New
World
ACM
Transactions
on
Internet
Technology
ol
N¬∫
agosto
2001
p√°gs
70‚Äì109
Bochman
1984
G.
Bochmann
C.
A.
Sunshine
Formal
methods
in
communication
protocol
design
IEEE
Transactions
on
Communications
ol
28
N¬∫
abril
1980
p√°gs
624‚Äì631
Bolot
1994
J-C.
Bolot
T.
Turletti
rate
control
scheme
for
packet
video
in
the
Internet
Proc
1994
IEEE
Infocom
p√°gs
1216‚Äì1223
Bolot
1996
J-C.
Bolot
A.
Vega-Garcia
Control
Mechanisms
for
Packet
Audio
in
the
Internet
Proc
1996
IEEE
Infocom
p√°gs
232‚Äì239
Bradner
1996
S.
Bradner
A.
Mankin
IPng
Internet
Protocol
Next
Generation
Addison-Wesley
Reading
MA
1996
Brakmo
1995
L.
Brakmo
L.
Peterson
TCP
Vegas
End
to
End
Congestion
Avoidance
on
Global
Internet
IEEE
Journal
of
Selected
Areas
in
Communications
ol
13
N¬∫
p√°gs
1465‚Äì1480
octubre
1995
Breslau
2000
L.
Breslau
E.
Knightly
S.
Shenker
I.
Stoica
H.
Zhang
Endpoint
Admission
Control
Architectural
Issues
and
Performance
Proc
2000
ACM
SIGCOMM
Estocolmo
Suecia
agosto
2000
Brodnik
1997
A.
Brodnik
S.
Carlsson
M.
Degemark
S.
Pink
Small
Forwarding
Tables
for
Fast
Routing
Lookups
Proc
1997
ACM
SIGCOMM(Cannes
Francia
octubre
1997
p√°gs
3‚Äì15
Bush
1945
Bush
As
We
May
Think
The
Atlantic
Monthly
julio
1945
http://www.theatlantic
com
unbound
flashbks
computer
bushf.htm
Byers
1998
J.
Byers
M.
Luby
M.
Mitzenmacher
Rege
digital
fountain
approach
to
reliable
distribution
of
bulk
data
Proc
1998
ACM
SIGCOMM(Vancouver
Canad√°
agosto
1998
p√°gs
56‚Äì67
Cablelabs
2009
P√°gina
principal
CableLabs
http://www.cablelabs.com
CacheLogic
2009
P√°gina
principal
CacheLogic
http://www.cachelogic.com
Caesar
2005
M.
Caesar
Rexford
BGP
Routing
Policies
in
ISP
Networks
IEEE
Network
Magazine
vol.
19
N¬∫
noviembre
2005
Caldwell
2009
C.
Caldwell
The
Prime
Pages
http://www.utm.edu/research/primes/prove
Cardwell
2000
N.
Cardwell
S.
Savage
T.
Anderson
Modeling
TCP
Latency
Proc
2000
IEEE
Infocom
Tel-Aviv
Israel
marzo
2000
CASA
2009
Center
for
Collaborative
Adaptive
Sensing
of
the
Atmosphere
http://www
.casa.umass
edu
Casado
2007
M.
Casado
M.
Freedman
J.
Pettit
J.
Luo
N.
McKeown
S.
Shenker
Ethane
Taking
Control
of
the
Enterprise
Proc
ACM
SIGCOMM
07,(agosto
2007
Kyoto
Jap√≥n
Casner
1992
S.
Casner
S.
Deering
First
IETF
Internet
Audiocast
ACM
SIGCOMM
Computer
Communications
Review
Vol
22
N¬∫
julio
1992
p√°gs
92‚Äì97
Ceiva
2009
P√°gina
principal
Ceiva
http://www.ceiva.com/
CENS
2009
Center
for
Embedded
Network
Sensing
http://www.cens.ucla.edu/
Cerf
1974
Cerf
R.
Kahn
Protocol
for
Packet
Network
Interconnection
IEEE
Transactions
on
Communications
Technology
ol
COM-22
N¬∫
p√°gs
627‚Äì641
REFERENCIAS
769
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
769[CERT
2001‚Äì09
CERT
Advisory
2001‚Äì09
Statistical
Weaknesses
in
TCP
IP
Initial
Sequence
Numbers
http://www.cert.org/advisories/CA-2001-09.html
CERT
2003‚Äì04
CERT
CERT
Advisory
CA-2003-04
MS-SQL
Server
Worm
http://
www.cert
org
advisories
CA-2003-04.html
CERT
2009
Centro
coordinaci√≥n
CERT
http://www.cert.org/advisories
CERT
Filtering
2009
CERT
Packet
Filtering
for
Firewall
Systems
http://www.cert.org/
tech_tips
packet_filtering.html
Cert
SYN
1996
CERT
Advisory
CA-96.21
TCP
SYN
Flooding
and
IP
Spoofing
Attacks
http:/
/www.cert.org
advisories
CA-1998-01.html
Chao
2001
H.
J.
Chao
C.
Lam
E.
Oki
Broadband
Packet
Switching
Technologies‚ÄîA
Practical
Guide
to
ATM
Switches
and
IP
Routers
John
Wiley
Sons
2001
Chen
2000
G.
Chen
D.
Kotz
Survey
of
Context-Aware
Mobile
Computing
Research
Technical
Report
TR2000-381
Dept
of
Computer
Science
Dartmouth
College
noviembre
2000
http://www.cs.dartmouth.edu/reports/TR2000-381.pdf
Chen
2006
K.-T.
Chen
C.-Y
Huang
P.
Huang
C.-L.
Lei
Quantifying
Skype
User
Satisfaction
Proc
2006
ACM
SIGCOMM
Pisa
Italia
septiembre
2006
Cheswick
2000
B.
Cheswick
H.
Burch
S.
Branigan
Mapping
and
Visualizing
the
Internet
Proc
2000
Usenix
Conference
junio
2000
San
Diego
Chiu
1989]D.
Chiu
R.
Jain
Analysis
of
the
Increase
and
Decrease
Algorithms
for
Congestion
Avoidance
in
Computer
Networks
Computer
Networks
and
ISDN
Systems
ol
17
N¬∫
p√°gs
1‚Äì14
http://www.cs.wustl.edu/~jain/papers/cong_av.htm
Christiansen
2001
M.
Christiansen
K.
Jeffay
D.
Ott
F.
D.
Smith
Tuning
Red
for
Web
Traffic
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
junio
2001
p√°gs
249‚Äì264
Chuang
2005
S.
Chuang
S.
Iyer
N.
McKeown
Practical
Algorithms
for
Performance
Guarantees
in
Buffered
Crossbars
Proc
2005
IEEE
Infocom
Cicconetti
2006
C.
Cicconetti
L.
Lenzini
A.
Mingozi
K.
Eklund
Quality
of
Service
Support
in
802.16
Networks
IEEE
Network
Magazine
marzo
abril
2006
p√°gs
50‚Äì55
Cisco
12000
2009
Cisco
Systems
Inc
Cisco
XR
12000
Series
and
Cisco
12000
Series
Routers
http://www.cisco.com/en/US/products/ps6342/index.html
Cisco
8500
2009
Cisco
Systems
Inc
Catalyst
8500
Campus
Switch
Router
Architecture
http:/
/www.cisco.com
univercd
cc
td
doc
product
l3sw/8540
rel_12_0
w5_6f
softcnfg/1cfg8500.pdf
Cisco
NAT
2009
Cisco
Systems
Inc
How
NAT
Works
http://www.cisco.com/en/US/tech/tk648/
tk361
technologies_tech_note09186a0080094831.shtml
Cisco
NAPA
2009]Cisco
Systems
Inc
Cisco
Network
Application
Performance
Analysis
NAPA
Solution
http://www.cisco.com/en/US/products/sw/netmgtsw/index.html
Cisco
QoS
2009
Cisco
Systems
Inc
Advanced
QoS
Services
for
the
Intelligent
Internet
http:/
/www.cisco.com
warp
public
cc
pd
iosw
ioft
ioqo
tech
qos_wp.htm
Cisco
Queue
2009
Cisco
Systems
Inc
Congestion
Management
Overview
http://www
.cisco
com
US
docs
ios/12_2
qos
configuration
guide
qcfconmg.html
Cisco
Security
2009
Cisco
Systems
Inc
Why
You
Need
Firewall
http://www.cisco
.com
en/
US
products
sw
secursw
ps743
products_user_guide_chapter09186a008007f303.html
Cisco
Switches
2009
Cisco
Systems
Inc
Multiservice
Switches
http://www.cisco.com/warp/
public
cc
pd
index.shtml
Cisco
SYN
2009
Cisco
Systems
Inc
Defining
Strategies
to
Protect
Against
TCP
SYN
Denial
of
Service
Attacks
http://www.cisco.com/en/US/tech/tk828/technologies_tech
note09186a00800f67d5.shtml
Clark
1988
D.
Clark
The
Design
Philosophy
of
the
DARPA
Internet
Protocols
Proc
1988
ACM
SIGCOMM
Stanford
CA
agosto
1988
770
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
770[Clarke
2002
I.
Clarke
T.
W.
Hong
S.
G.
Miller
O.
Sandberg
B.
Wiley
Protecting
Free
Expression
Online
with
Freenet
IEEE
Internet
Computing
enero‚Äìfebrero
2002
p√°gs
40‚Äì49
Cohen
1977
D.
Cohen
Issues
in
Transnet
Packetized
oice
Communication
Proc
Fifth
Data
Communications
Symposium
Snowbird
Utah
septiembre
1977
p√°gs
6‚Äì13
Cohen
2003
B.
Cohen
Incentives
to
Build
Robustness
in
BitTorrent
First
Workshop
on
the
Economics
of
Peer-to-Peer
Systems
Berkeley
CA
junio
2003
Cookie
Central
2009
P√°gina
principal
Cookie
Central
http://www.cookiecentral.com/
n_cookie_faq.htm
CoolStreaming
2005]X.
Zhang
J.
Liu
J.
B.
Li
T.-S.
P.
Yum
CoolStreamingDONet/:AD
driven
Overlay
Network
for
Peer-to-Peer
Live
Media
Streaming
Proc
IEEE
INFOCOM
marzo
2005
Miami
FL
Cormen
2001
T.
H.
Cormen
Introduction
to
Algorithms
2nd
Ed
MIT
Press
Cambridge
MA
2001
Crow
1997
B.
Crow
I.
Widjaja
J.
Kim
P.
Sakai
IEEE
802.11
Wireless
Local
Area
Networks
IEEE
Communications
Magazine
septiembre
1997
p√°gs
116‚Äì126
Crowcroft
1995
J.
Crowcroft
Z.
Wang
A.
Smith
J.
Adams
Comparison
of
the
IETF
and
ATM
Service
Models
IEEE
Communications
Magazine
nov./
dic
1995
p√°gs
12‚Äì16
Crowcroft
1999
J.
Crowcroft
M.
Handley
I.
Wakeman
Internetworking
Multimedia
Morgan-
Kaufman
San
Francisco
1999
Cusumano
1998
M.
A.
Cusumano
D.
B.
Yoffie
Competing
on
Internet
Time
Lessons
from
Netscape
and
its
Battle
with
Microsoft
Free
Press
NY
NY
1998
Daigle
1991
J.
N.
Daigle
Queuing
Theory
for
Telecommunications
Addison-Wesley
Reading
MA
1991
Dalal
1978
Y.
Communications
of
the
ACM
ol
21
N¬∫
12
diciembre
1978
p√°gs
1040‚Äì1048
Davie
2000
B.
Davie
Rekhter
MPLS
Technology
and
Applications
Morgan
Kaufmann
Series
in
Networking
2000
Davies
2004
G.
Davies
F.
Kelly
Network
Dimensioning
Service
Costing
and
Pricing
in
Packet-
switched
Environment
Telecommunications
Policy
ol
28
N¬∫
p√°gs
391‚Äì412
DEC
1990
Digital
Equipment
Corporation
In
Memoriam
J.
C.
R.
Licklider
1915‚Äì1990
SRC
Research
Report
61
agosto
1990
http://www.memex.org/licklider.pdf
DeClercq
2002
J.
DeClercq
O.
Paridaens
Scalability
Implications
of
Virtual
Private
Networks
IEEE
Communications
Magazine
ol
40
N¬∫
mayo
2002
p√°gs
151‚Äì157
Demers
1990]A.
Demers
S.
Keshav
S.
Shenker
Analysis
and
Simulation
of
Fair
Queuing
Algorithm
Internetworking
Research
and
Experience
Vo
Denning
1997
D.
Denning
Editor
P.
Denning
Preface
Internet
Besieged
Countering
Cyberspace
Scofflaws
Addison-Wesley
Reading
MA
1997
dhc
2009
P√°gina
principal
grupo
trabajo
Configuraci√≥n
din√°mica
hosts
IETF
http:/
/www.ietf.org
html.charters
dhc-charter.html
Diggavi
2004
S.
N.
Diggavi
N.
Al-Dhahir
A.
Stamoulis
R.
Calderbank
Great
Expectations
The
Value
of
Spatial
Diversity
in
Wireless
Networks
Proceedings
of
the
IEEE
vol.
92
N¬∫
febrero
2004
Diot
2000
C.
Diot
B.
N.
Levine
B.
Lyles
H.
Kassem
D.
Balensiefen
Deployment
Issues
for
the
IP
Multicast
Service
and
Architecture
IEEE
Network
Vo
78‚Äì88
Dmitiropoulos
2007
X.
Dmitiropoulos
D.
Krioukov
M.
Fomenkov
B.
Huffaker
Hyun
KC
Claffy
G.
Riley
AS
Relationships
Inference
and
Validation
ACM
Computer
Communication
Review
enero
2007
REFERENCIAS
771
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
771[Dodge
2009
M.
Dodge
An
Atlas
of
Cyberspaces
http://www.cybergeography.org/atlas/isp_maps
html
Donahoo
2001
M.
Donahoo
K.
Calvert
TCP
IP
Sockets
in
Practical
Guide
for
Programmers
Morgan
Kaufman
2001
Doucer
2002
J.
R.
Douceur
The
Sybil
Attack
First
International
Workshop
on
Peer-to-Peer
Systems
IPTPS
02)(Cambridge
MA
marzo
2002
DSL
2009
P√°gina
principal
DSL
Forum
http://www.dslforum.org/
Dhunghel
2008
P.
Dhungel
D.
Wu
B.
Schonhorst
K.W.
Ross
Measurement
Study
of
Attacks
on
BitTorrent
Leechers
7th
International
Workshop
on
Peer-to-Peer
Systems
IPTPS
2008
Tampa
Bay
febrero
2008
Droms
2002
R.
Droms
T.
Lemon
The
DHCP
Handbook
2nd
Edition
SAMS
Publishing
2002
Edney
2003
J.
Edney
W.
A.
Arbaugh
Real
802.11
Security
Wi-Fi
Protected
Access
and
802.11i
Addison-Wesley
Professional
2003
Eklund
2002
K.
Eklund
R.
Marks
K.
Stanswood
S.
Wang
IEEE
Standard
802.16
Technical
Overview
of
the
Wireless
MAN
Air
Interface
for
Broadband
Wireless
Access
IEEE
Communica-
tions
Magazine
junio
2002
p√°gs
98‚Äì107
Ellis
1987
H.
Ellis
The
Story
of
Non-Secret
Encryption
http://jya.com/ellisdoc.htm
Ericsson
2009
Ericsson
The
Evolution
of
Edge
http://www.ericsson.com/technology/
whitepapers
broadband
evolution_of_EDGE.shtml
ESM
2009
P√°gina
principal
End
System
Multicast
http://esm.cs.cmu.edu/
Estrin
1997
D.
Estrin
M.
Handley
A.
Helmy
P.
Huang
D.
Thaler
Dynamic
Bootstrap
Mechanism
for
Rendezvous-based
Multicast
Routing
Proceedings
of
IEEE
Infocom
98(Nueva
York
NY
abril
1998
Falkner
2007
J.
Falkner
M.
Piatek
J.P.
John
A.
Krishnamurthy
T.
Anderson
Profiling
Million
Sser
DHT
Proc
ACM
Internet
Measurement
Conference
noviembre
2007
Faloutsos
1999
C.
Faloutsos
M.
Faloutsos
P.
Faloutsos
What
Does
the
Internet
Look
Like
Empirical
Laws
of
the
Internet
Topology
Proc
1999
ACM
SIGCOMM
Boston
MA
agosto
1999
Feamster
2004
N.
Feamster
J.
Winick
J.
Rexford
Model
for
BGP
Routing
for
Network
Engineering
Proc
2004
ACM
SIGMETRICS
NY
NY
junio
2004
Feldman
2005
M.
Feldman
J.
Chuang
Overcoming
Free-riding
Behavior
in
Peer-to-peer
Systems
ACM
SIGecom
Exchanges
julio
2005
Feldmeier
1988
D.
Feldmeier
Improving
Gateway
Performance
with
Routing
Table
Cache
Proc
1988
IEEE
Infocom
Orleans
marzo
1988
Feldmeier
1995
D.
Feldmeier
Fast
Software
Implementation
of
Error
Detection
Codes
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
diciembre
1995
p√°gs
640‚Äì652
FIPS
1995
Federal
Information
Processing
Standard
Secure
Hash
Standard
FIPS
Publication
180-1
http://www.itl.nist.gov/fipspubs/fip180-1.htm
Floyd
1999
S.
Floyd
K.
Fall
Promoting
the
Use
of
End-to-End
Congestion
Control
in
the
Internet
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
octubre
1998
p√°gs
458‚Äì472
Floyd
2000
S.
Floyd
M.
Handley
J.
Padhye
J.
Widmer
Equation-Based
Congestion
Control
for
Unicast
Applications
Proc
2000
ACM
SIGCOMM
Estocolmo
Suecia
agosto
2000
Floyd
2001
S.
Floyd
Report
on
Some
Recent
Developments
in
TCP
Congestion
Control
IEEE
Communications
Magazine
abril
2001
Floyd
2009
S.
Floyd
References
on
RED
Random
Early
Detection
Queue
Management
http:/
/www.icir.org
floyd
red.html
Floyd
Synchronization
1994
S.
Floyd
Jacobson
Synchronization
of
Periodic
Routing
Messages
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
abril
1997
p√°gs
122‚Äì136
772
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
772[Floyd
TCP
1994
S.
Floyd
TCP
and
Explicit
Congestion
Notification
ACM
SIGCOMM
Computer
Communications
Review
ol
24
N¬∫
p√°gs
10‚Äì23
Oct
1994
Fluhrer
2001
S.
Fluhrer
I.
Mantin
A.
Shamir
Weaknesses
in
the
Key
Scheduling
Algorithm
of
RC4
Eighth
Annual
Workshop
on
Selected
Areas
in
Cryptography(Toronto
Canad√°
agosto
2002
Fortz
2000
B.
Fortz
M.
Thorup
Internet
Traffic
Engineering
by
Optimizing
OSPF
Weights
Proc
2000
IEEE
Infocom
Tel
Aviv
Israel
abril
2000
Fortz
2002
B.
Fortz
J.
Rexford
M.
Thorup
Traffic
Engineering
with
Traditional
IP
Routing
Protocols
IEEE
Communication
Magazine
Oct
2002
Foster
2002
I.
Foster
The
Grid
New
Infrastructure
for
21st
Century
Science
Physics
Today
55(2):42‚Äì47
2002
Fraleigh
2003
C.
Fraleigh
T.
Tobagi
C.
Diot
Provisioning
IP
backbone
Networks
to
Support
Latency
Sensitive
Traffic
Proc
IEEE
Infocom
Conference
San
Francisco
marzo
2003
France
Telecom
2009
Object
Identifier
OID
repository
http://asn1.elibel.tm.fr/oid/
Fraleigh
2003
C.
Fraleigh
F.
Tobagi
C.
Diot
Provisioning
IP
Backbone
Networks
to
Support
Latency
Sensitive
Traffic
Proc
2003
IEEE
Infocom
San
Francisco
CA
marzo
2003
Freedman
2004
M.
J.
Freedman
E.
Freudenthal
D.
Mazires
Democratizing
Content
Publication
with
Coral
USENIX
NSDI
2004
Friedman
1999
T.
Friedman
D.
Towsley
Multicast
Session
Membership
Size
Estimation
Proc
1999
IEEE
Infocom
York
marzo
1999
Frost
1994
J.
Frost
BSD
Sockets
Quick
and
Dirty
http://world.std.com/~jimf/papers/
sockets
sockets.html
Gallagher
1983
R.
G.
Gallagher
P.
A.
Humblet
P.
M.
Spira
Distributed
Algorithm
for
Minimum
Weight-Spanning
Trees
ACM
Trans
on
Programming
Languages
and
Systems
1(5
enero
1983
p√°gs
66‚Äì77
Gao
2001
L.
Gao
J.
Rexford
Stable
Internet
Routing
Without
Global
Coordination
IEEE
ACM
Trans
Networking
ol
N¬∫
diciembre
2001
p√°gs
681‚Äì692
Garces-Erce
2003
L.
Garces-Erce
K.
W.
Ross
E.
Biersack
P.
Felber
G.
Urvoy-Keller
TOPLUS
Topology
Centric
Lookup
Service
Fifth
Int
Workshop
on
Networked
Group
Communications
NGC
2003
Munich
septiembre
2003
http://cis.poly.edu/~ross/papers/TOPLUS.pdf
Gartner
2003
F.
C.
Gartner
Survey
of
Self-Stabilizing
Spanning-Tree
Construction
Algorithms
Technical
Report
IC/2003/38
Swiss
Federal
Institute
of
Technology
EPFL
School
of
Computer
and
Communication
Sciences
10
junio
2003
http://ic2.epfl.ch/publications/
documents
IC_TECH_REPORT_200338.pdf
Gauthier
1999
L.
Gauthier
C.
Diot
J.
Kurose
End-to-end
Transmission
Control
Mechanisms
for
Multiparty
Interactive
Applications
on
the
Internet
Proc
1999
IEEE
Infocom
York
NY
abril
1999
Giacopelli
1990
J.
Giacopelli
M.
Littlewood
W.
D.
Sincoskie
Sunshine
high
performance
self-
routing
broadband
packet
switch
architecture
1990
International
Switching
Symposium
An
extended
version
of
this
paper
appeared
in
IEEE
J.
Selected
Areas
in
Communications
ol
N¬∫
octubre
1991
p√°gs
1289‚Äì1298
Girard
1990
A.
Girard
Routing
and
Dimensioning
in
Circuit-Switched
Networks
Addison-Wesley
Reading
MA
1990
Glitho
1995
R.
Glitho
S.
Hayes
eds
special
issue
on
Telecommunications
Management
Network
IEEE
Communications
Magazine
Vo
Glitho
1998
R.
Glitho
Contrasting
OSI
Systems
Management
to
SNMP
and
TMN
Journal
of
Network
and
Systems
Management
ol
N¬∫
junio
1998
p√°gs
113‚Äì131
Gnutella
2009
The
Gnutella
Protocol
Specification
v0.4
http://www9.limewire.com/developer/
gnutella_protocol_0.4.pdf
REFERENCIAS
773
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
773[Goodman
1997
David
J.
Goodman
Wireless
Personal
Communications
Systems
Prentice-
Hall
1997
Goralski
1999
W.
Goralski
Frame
Relay
for
High-Speed
Networks
John
Wiley
York
1999
Goralski
2001
W.
Goralski
Optical
Networking
and
WDM
Osborne
McGraw-Hill
Berkeley
CA
2001
Griffin
2009
T.
Griffin
Interdomain
Routing
Links
http://www.cl.cam.ac.uk/~tgg22/
interdomain/
Guha
2006
S.
Guha
N.
Daswani
R.
Jain
An
Experimental
Study
of
the
Skype
Peer-to-Peer
oIP
System
Proc
Fifth
Int
Workshop
on
P2P
Systems(Santa
Barbara
CA
2006
Guo
2005
L.
Guo
S.
Chen
Z.
Xiao
E.
X.
Ding
X.
Zhang
Measurement
Analysis
and
Modeling
of
BitTorrent-like
Systems
ACM
Internet
Measurement
Conference
IMC
2005
Gupta
1998
P.
Gupta
S.
Lin
N.
McKeown
Routing
lookups
in
hardware
at
memory
access
speeds
Proc
1998
IEEE
Infocom
San
Francisco
CA
abril
1998
p√°gs
1241‚Äì1248
Gupta
2001
P.
Gupta
N.
McKeown
Algorithms
for
Packet
Classification
IEEE
Network
Magazine
ol
15
N¬∫
Mar./abril
2001
p√°gs
24‚Äì32
2008
S.
Rhee
I.
L.
Xu
CUBIC
New
TCP-Friendly
High-Speed
TCP
Variant
ACM
SIGOPS
Operating
System
Review
2008
Hain
2005
T.
Hain
Pragmatic
Report
on
IPv4
Address
Space
Consumption
Internet
Protocol
Journal
ol
N¬∫
Halabi
2000
S.
Halabi
Internet
Routing
Architectures
2¬™
Ed
Cisco
Press
2000
Halperin
2008
D.
Halperin
T.
Heydt-Benjamin
B.
Ransford
S.
Clark
B.
Defend
W.
Morgan
K.
Fu
T.
Kohno
W.
Maisel
Pacemakers
and
implantable
cardiac
defibrillators
Software
radio
attacks
and
zero-power
defenses
Proc
29th
Annual
IEEE
Symposium
on
Security
and
Privacy
mayo
2008
Hamada
1997
T.
Hamada
H.
Kamata
S.
Hogg
An
Overview
of
the
TINA
Management
Architec-
ture
Journal
of
Network
and
Systems
Management
ol
N¬∫
diciembre
1997
p√°gs
411‚Äì435
Hei
2007
X.
Hei
C.
Liang
J.
Liang
Liu
K.
W.
Ross
Measurement
Study
of
Large-scale
P2P
IPTV
System
IEEE
Trans
on
Multimedia
diciembre
2007
Heidemann
1997
J.
Heidemann
K.
Obraczka
J.
Touch
Modeling
the
Performance
of
HTTP
over
Several
Transport
Protocols
IEEE
ACM
Transactions
on
Networking
Vo
p√°gs
616‚Äì630
Held
2001
G.
Held
Data
Over
Wireless
Networks
Bluetooth
WAP
and
Wireless
LANs
McGraw-
Hill
2001
Hersent
2000
O.
Hersent
D.
Gurle
J-P.
Petit
IP
Telephony
Packet-Based
Multimedia
Communi-
cation
Systems
Pearson
Education
Limited
Edinburgh
2000
Holland
2001
G.
Holland
N.
Vaidya
Bahl
Rate-Adaptive
MAC
Protocol
for
Multi-Hop
Wireless
Networks
Proc
2001
ACM
Int
Conference
of
Mobile
Computing
and
Networking
Mobicom01
Roma
Italia
julio
2001
Hollot
2002
C.V
Hollot
Misra
D.
Towsley
W.
Gong
Analysis
and
design
of
controllers
for
AQM
routers
supporting
TCP
flows
IEEE
Transactions
on
Automatic
Control
ol
47
N¬∫
junio
2002
p√°gs
945‚Äì959
Huang
2002
C.
Haung
Sharma
K.
Owens
Makam
Building
Reliable
MPLS
Networks
Using
Path
Protection
Mechanism
IEEE
Communications
Magazine
Vo
p√°gs
156‚Äì162
Huang
2005
Y.
r-
ff
Networks
Grow
Larger
Proc
IEEE
Int
Conf
Network
Protocols
ICNP
Boston
MA
noviembre
2005
Huang
2007
C.
Huang
Jin
Li
K.W.
Ross
Can
Internet
oD
be
profitable
Proc
ACM
SIGCOMM
Kyoto
agosto
2007
774
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
774[Huang
2008
C.
Huang
J.
Li
Angela
Wang
and
K.W.
Ross
Understanding
Hybrid
CDN-P2P
Why
Limelight
Needs
its
Own
Red
Swoosh
NOSSDA
2008
Braunschweig
Alemania
mayo
2008
Huitema
1998
C.
Huitema
IPv6
The
New
Internet
Protocol
2nd
Ed
Prentice
Hall
Englewood
Cliffs
NJ
1998
Huston
1999a
G.
Huston
Interconnection
Peering
and
Settlements‚ÄîPart
The
Internet
Protocol
Journal
Vo
Huston
2001
G.
Huston
Analyzing
the
Internet
BGP
Routing
Table
The
Internet
Protocol
Journal
ol
N¬∫
marzo
2001
Huston
2004
G.
Huston
NAT
Anatomy
Look
Inside
Network
Address
Translators
The
Internet
Protocol
Journal
Vo
Huston
2008a
G.
Huston
Confronting
Ipv4
Address
Exhaustion
http://www.potaroo
.net
ispcol/
2008-10
v4depletion.html
Huston
2008b
G.
Huston
G.
Michaelson
IPv6
Deployment
Just
where
are
we
http://
www
potaroo.net/ispcol/2008-04/ipv6.html
IAB
2009
P√°gina
principal
Internet
Architecture
Board
http://www.iab.org/
IANA
2009a
P√°gina
principal
Internet
Assigned
Number
Authority
http://www.iana.org/
IANA
2009b
Internet
Assigned
Number
Authority
Private
Enterprise
Numbers
http://
www.iana
org
assignments
enterprise-numbers
IANA
Protocol
Numbers
2009
Internet
Assigned
Numbers
Authority
Protocol
Numbers
http:/
/www.iana.org
assignments
protocol-numbers
protocol-numbers.xhtml
ICANN
2009
P√°gina
principal
The
Internet
Corporation
for
Assigned
Names
and
Numbers
http://www.icann.org
IEC
Optical
2009
IEC
Online
Education
Optical
Access
http://www.iec.org/online/tutorials/
opt_acc/
IEEE
802
2009
P√°gina
principal
comit√©
est√°ndares
IEEE
802
LAN
MAN
http:/
/www.ieee802.org/
IEEE
802.11
1999
IEEE
802.11
1999
Edition
ISO
IEC
8802-11
1999
IEEE
Standards
for
Informa-tion
Technology‚ÄîTelecommunications
and
Information
Exchange
Between
Systems‚ÄîLocal
and
Metro-politan
Area
Network‚ÄîSpecific
Requirements‚ÄîPart
11
Wireless
LAN
Medium
Access
Control
MAC
and
Physical
Layer
PHY
Specification
http://standards.ieee.org/getieee802/
download/802.11-1999.pdf
IEEE
802.11n
IEEE
IEEE
P802.11‚ÄîTask
Group
N‚ÄîMeeting
Update
Status
of
802.11n
http:/
/grouper.ieee.org
groups/802/11
Reports
tgn_update.htm
IEEE
802.15
2009
P√°gina
principal
grupo
trabajo
IEEE
802.15
WPAN
http://grouper
ieee.org/groups/802/15/.
IEEE
802.16d
2004
IEEE
IEEE
Standard
for
Local
and
metropolitan
area
networks
Part
16
Air
Interface
for
Fixed
Broadband
Wireless
Access
Systems
http://standards.ieee.org/getieee802/
download/802.16-2004.pdf
IEEE
802.16e
2005
IEEE
IEEE
Standard
for
Local
and
metropolitan
area
networks
Part
16
Air
Interface
for
Fixed
and
Mobile
Broadband
Wireless
Access
Systems
Amendment
Physical
and
Medium
Access
Control
Layers
for
Combined
Fixed
and
Mobile
Operation
in
Licensed
Bands
and
Corrigendum
http://standards.ieee.org/getieee802/download/802
.16e-2005.pdf
IEEE
802.1q
2005
IEEE
IEEE
Standard
for
Local
and
Metropolitan
Area
Networks
Virtual
Bridged
Local
Area
Networks
http://standards.ieee.org/getieee802/download/802
.1Q-2005.pdf
IEEE
802.1X
IEEE
Std
802.1X-2001
Port-Based
Network
Access
Control
http://
standards.ieee
org
reading
ieee
std_public
description
lanman/802.1x-2001_desc.html
IEEE
802.3
2009
IEEE
IEEE
802.3
CSMA
CD
Ethernet
http://grouper.ieee.org/groups/802/3/
IEEE
802.5
2009
P√°gina
principal
IEEE
IEEE
802.5
http://www.ieee802.org/5/www8025org/
REFERENCIAS
775
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
775[IETF
2009
P√°gina
principal
Internet
Engineering
Task
Force
http://www.ietf.org
IMAP
2009
The
IMAP
Connection
http://www.imap.org/
Intel
2009
Intel
Corp
Intel
82544
Gigabit
Ethernet
Controller
http://www.intel.com/design/
network
products
lan
docs/82544_docs.htm
Intel
WiMax
2009
Intel
Corp
WiMax
Technology
http://www.intel.com/technology/wimax/
index.htm
Internet2
Multicast
2009
P√°gina
principal
Internet2
Multicast
Working
Group
http://multicast
.internet2.edu/
IPv6
2009
P√°gina
principal
IPv6.com
http://www.ipv6.com/
ISC
2009
P√°gina
principal
Internet
Systems
Consortium
http://www.isc.org
ISI
1979
Information
Sciences
Institute
DoD
Standard
Internet
Protocol
Internet
Engineering
Note
123
diciembre
1979
http://www.isi.edu/in-notes/ien/ien123.txt
ISO
2009
P√°gina
principal
Organizaci√≥n
Internacional
Estandarizaci√≥n
ISO
International
Organization
for
Standardization
http://www.iso.org/
ISO
X.680
2002
International
Organization
for
Standardization
X.680
ITU-T
Recommendation
X.680
2002
Information
Technology‚ÄîAbstract
Syntax
Notation
One
ASN.1
Specification
of
Basic
Notation
http://www.itu.int/ITU-T/studygroups/com17/languages/X.680-0207.pdf
ITU
2005
International
Telecommunication
Union
The
Internet
of
Things
2005
http://
www.itu
int
osg
spu
publications
internetofthings
InternetofThings_summary.pdf
ITU
2009
P√°gina
principal
ITU
http://www.itu.int/
ITU
Statistics
2009
International
Telecommunications
Union
ICT
Statistics
http://
www.itu.int/
ITU-D
icteye
Reports.aspx
Iyer
2002
S.
Iyer
R.
Zhang
N.
McKeown
Routers
with
Single
Stage
of
Buffering
Proc
2002
ACM
SIGCOMM
Pittsburgh
PA
agosto
2002
Jacobson
1988
Jacobson
Congestion
Avoidance
and
Control
Proc
1988
ACM
SIGCOMM
Stanford
CA
agosto
1988
p√°gs
314‚Äì329
Jain
1986
R.
Jain
timeout-based
congestion
control
scheme
for
window
flow-controlled
networks
IEEE
Journal
on
Selected
Areas
in
Communications
SAC-4
octubre
1986
Jain
1989
R.
Jain
Delay-Based
Approach
for
Congestion
Avoidance
in
Interconnected
Heterogeneous
Computer
Networks
ACM
SIGCOMM
Computer
Communications
Review
ol
19
N¬∫
1989
p√°gs
56‚Äì71
Jain
1994
R.
Jain
FDDI
Handbook
High-Speed
Networking
Using
Fiber
and
Other
Media
Addison-Wesley
Reading
MA
1994
Jain
1996
R.
Jain
S.
Kalyanaraman
S.
Fahmy
R.
Goyal
S.
Kim
Tutorial
Paper
on
ABR
Source
Behavior
ATM
Forum/96-1270
Oct
1996
http://www.cse.wustl.edu/~jain/atmf/ftp/atm96-1270.pdf
Jaiswal
2003
S.
Jaiswal
G.
Iannaccone
C.
Diot
J.
Kurose
D.
Towsley
Measurement
and
Classification
of
Out-of-Sequence
Packets
in
Tier-1
IP
backbone
Proc
2003
IEEE
Infocom
Jakobson
1993
G.
Jacobson
M.
Weissman
Alarm
Correlation
IEEE
Network
Magazine
1993
p√°gs
52‚Äì59
Ji
2003
P.
Ji
Z.
Ge
J.
Kurose
D.
Towsley
Comparison
of
Hard-state
and
Soft-state
Signaling
Protocols
Proc
2003
ACM
SIGCOMM
Karlsruhe
Alemania
agosto
2003
Jiang
2001
W.
Jiang
J.
Lennox
H.
Schulzrinne
K.
Singh
Towards
Junking
the
PBX
Deploying
IP
Telephony
NOSSDAV‚Äô01(Port
Jefferson
NY
junio
2001
Jin
2004
C.
Jin
D.
X.
We
S.
Low
FAST
TCP
Motivation
architecture
algorithms
performance
Proc
2004
IEEE
Infocom
Hong
Kong
marzo
2004
Juniper
2009
Juniper
Networks
Provider
Network
Management
http://www.juniper
.net/
solutions
service_provider
provider_network_management/
776
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
776[Kaaranen
2001
H.
Kaaranen
S.
Naghian
L.
Laitinen
A.
Ahtiainen
Niemi
Networks
Architecture
Mobility
and
Services
York
John
Wiley
Sons
2001
Kahn
1978
R.
E.
Kahn
S.
Gronemeyer
J.
Burchfiel
R.
Kunzelman
Advances
in
Packet
Radio
Technology
Proc
of
the
IEEE
66
11
noviembre
1978
Kamerman
1997]A.
Kamerman
L.
Monteban
WaveLAN-II
High‚ÄìPerformance
Wireless
LAN
for
the
Unlicensed
Band
Bell
Labs
Technical
Journal
Summer
1997
p√°gs
118‚Äì133
Kangasharju
2000
J.
Kangasharju
K.
W.
Ross
J.
W.
Roberts
Performance
Evaluation
of
Redirection
Schemes
in
Content
Distribution
Networks
Proc
5th
Web
Caching
and
Content
Distribution
Workshop
Lisboa
Portugal
mayo
2000
Kar
2000
K.
Kar
M.
Kodialam
T.
Lakshman
Minimum
Interference
Routing
of
Bandwidth
Guaranteed
Tunnels
with
MPLS
Traffic
Engineering
Applications
IEEE
J.
Selected
Areas
in
Communications
diciembre
2000
Karol
1987
M.
Karol
M.
Hluchyj
A.
Morgan
Input
Versus
Output
Queuing
on
Space-
Division
Packet
Switch
IEEE
Transactions
on
Communications
Vo
p√°gs
1347‚Äì1356
Katabi
2002
D.
Katabi
M.
Handley
C.
Rohrs
Internet
Congestion
Control
for
Future
High
Band-
width-Delay
Product
Environments
Proc
2002
ACM
SIGCOMM
Pittsburgh
PA
agosto
2002
Katzela
1995
I.
Katzela
M.
Schwartz
Schemes
for
Fault
Identification
in
Communication
Networks
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
diciembre
1995
p√°gs
753‚Äì764
Kaufman
1995
C.
Kaufman
R.
Perlman
M.
Speciner
Network
Security
Private
Communication
in
Public
World
Prentice
Hall
Englewood
Cliffs
NJ
1995
Kelly
1998
F.
P.
Kelly
A.
Maulloo
D.
Rate
control
for
communication
networks
Shadow
prices
proportional
fairness
and
stability
J.
Operations
Res
Soc
ol
49
N¬∫
p√°gs
237‚Äì252
marzo
1998
Kelly
2003
T.
Kelly
Scalable
TCP
improving
performance
in
high
speed
wide
area
networks
ACM
SIGCOMM
Computer
Communications
Review
Vo
p√°gs
83‚Äì91
Keshav
1998
S.
Keshav
R.
Sharma
Issues
and
Trends
in
Router
Design
IEEE
Communications
Magazine
ol
36
N¬∫
mayo
1998
p√°gs
144‚Äì151
Keslassy
2003
I.
Keslassy
S.
Chuang
K.
Yu
D.
Miller
M.
Horowitz
O.
Solgaard
McKeown
Scaling
Internet
Routers
Using
Optics
Proc
2003
ACM
SIGCOMM
Karlsruhe
Alemania
agosto
2003
Kilkki
1999
K.
Kilkki
Differentiated
Services
for
the
Internet
Macmillan
Technical
Publishing
Indianapolis
IN
1999
Kim
2005
H.
Kim
S.
Rixner
Pai
Network
Interface
Data
Caching
IEEE
Transactions
on
Computers
ol
54
N¬∫
11
noviembre
2005
p√°gs
1394‚Äì1408
Kim
2008
C.
Kim
M.
Caesar
J.
Rexford
Floodless
in
SEATTLE
Scalable
Ethernet
Architecture
for
Large
Enterprises
Proc
ACM
SIGCOMM
08(agosto
2008
Seattle
WA
Kleinrock
1961
L.
Kleinrock
Information
Flow
in
Large
Communication
Networks
RLE
Quarterly
Progress
Report
julio
1961
Kleinrock
1964
L.
Kleinrock
1964
Communication
Nets
Stochastic
Message
Flow
and
Delay
McGraw-Hill
NY
NY
1964
Kleinrock
1975
L.
Kleinrock
Queuing
Systems
Vol
John
Wiley
York
1975
Kleinrock
1975b
L.
Kleinrock
F.
A.
Tobagi
Packet
Switching
in
Radio
Channels
Part
I‚ÄîCarrier
Sense
Multiple-Access
Modes
and
Their
Throughput-Delay
Characteristics
IEEE
Transactions
on
Communications
ol
23
N¬∫
12
diciembre
1975
p√°gs
1400‚Äì1416
Kleinrock
1976
L.
Kleinrock
Queuing
Systems
Vol
John
Wiley
York
1976
Kleinrock
2004
L.
Kleinrock
The
Birth
of
the
Internet
http://www.lk.cs.ucla.edu/LK/Inet/birth
html
REFERENCIAS
777
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
777[Kohler
2006
E.
Kohler
M.
Handley
S.
Floyd
DDCP
Designing
DCCP
Congestion
Control
Without
Reliability
Proc
2006
ACM
SIGCOMM
Pisa
Italia
septiembre
2006
Korhonen
2003
J.
Korhonen
Introduction
to
Mobile
Communications
2¬™
ed
Artech
House
2003
Koziol
2003
J.
Koziol
Intrusion
Detection
with
Snort
Sams
Publishing
2003
Krishnamurthy
2001]B.
Krishnamurthy
J.
Rexford
Web
Protocols
and
Practice
HTTP/
1.1
Networking
Protocols
and
Traffic
Measurement
Addison-Wesley
Boston
MA
2001
Krishnamurthy
2001b]B.
Krishnamurthy
C.
Wills
Zhang
On
the
Use
and
Performance
of
Content
Distribution
Networks
ACM
Internet
Measurement
Conference,2001
Kulkarni
2005
S.
Kulkarni
C.
Rosenberg
Opportunistic
Scheduling
Generalizations
to
Include
Mul-tiple
Constraints
Multiple
Interfaces
and
Short
Term
Fairness
Wireless
Networks
11
557‚Äì569
2005
Kumar
2006
R.
Kumar
K.W.
Ross
Optimal
Peer-Assisted
File
Distribution
Single
and
Multi-
Class
Problems
IEEE
Workshop
on
Hot
Topics
in
Web
Systems
and
Technologies
Boston
2006
Kurose
1996
Unix
Network
Progranmming
http://gaia.cs.umass.edu/ntu_socket/
Labovitz
1997
C.
Labovitz
G.
R.
Malan
F.
Jahanian
Internet
Routing
Instability
Proc
1997
ACM
SIGCOMM
Cannes
Francia
septiembre
1997
p√°gs
115‚Äì126
Labrador
1999
M.
Labrador
S.
Banerjee
Packet
Dropping
Policies
for
ATM
and
IP
Networks
IEEE
Communications
Surveys
ol
N¬∫
tercer
trimestre
1999
p√°gs
2‚Äì14
Lacage
2004
M.
Lacage
M.H.
Manshaei
T.
Turletti
IEEE
802.11
Rate
Adaptation
Practical
Approach
ACM
Int
Symposium
on
Modeling
Analysis
and
Simulation
of
Wireless
and
Mobile
Systems
MSWiM
octubre
2004
Venecia
Italia
Lakshman
1997
T.
Lakshman
U.
Madhow
The
Performance
of
TCP
IP
for
Networks
with
High
Bandwidth-Delay
Products
and
Random
Loss
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
1997
p√°gs
336‚Äì350
Lam
1980
S.
Lam
Carrier
Sense
Multiple
Access
Protocol
for
Local
Networks
Computer
Networks
ol
1980
p√°gs
21‚Äì32
1980
Lamport
1981
L.
Lamport
Password
Authentication
with
Insecure
Communication
Communications
of
the
ACM
ol
24
N¬∫
11
noviembre
1981
p√°gs
770‚Äì772
Larmouth
1996
J.
Larmouth
Understanding
OSI
International
Thomson
Computer
Press
1996
Chapter
of
this
book
deals
with
ASN.1
and
is
available
on-line
at
http://www.salford
.ac.uk
iti/
books
osi
all.html#head8
Lawton
2001
G.
Lawton
Is
IPv6
Finally
Gaining
Ground
IEEE
Computer
Magazine
agosto
2001
p√°gs
11‚Äì15
Leiner
1998
B.
Leiner
Cerf
D.
Clark
R.
Kahn
L.
Kleinrock
D.
Lynch
J.
Postel
L.
Roberts
S.
Woolf
Brief
History
of
the
Internet
http://www.isoc.org/internet/history/brief.html
Li
2004
L.
Li
D.
Alderson
W.
Willinger
J.
Doyle
First-Principles
Approach
to
Understanding
the
Internet‚Äôs
Router-Level
Topology
Proc
2004
ACM
SIGCOMM
Portland
Oreg√≥n
agosto
2004
Li
2007
J.
Li
M.
Guidero
Z.
Wu
E.
Purpus
T.
Ehrenkranz
BGP
Routing
Dynamics
Revisited
ACM
Computer
Communication
Review
abril
2007
Liang
2006
J.
Liang
N.
Naoumov
K.W.
Ross
The
Index
Poisoning
Attack
in
P2P
File-Sharing
Systems
Proc
2006
IEEE
Infocom
2006
Barcelona
Espa√±a
abril
2006
Lin
2001
Y.
Wireless
and
Mobile
Network
Architectures
John
Wiley
and
Sons
York
NY
2001
Liogkas
2006
N.
Liogkas
R.
Nelson
E.
Kohler
L.
Zhang
Exploiting
BitTorrent
For
Fun
But
Not
Profit
6th
International
Workshop
on
Peer-to-Peer
Systems
IPTPS
2006
Liu
2002
B.
Liu
D.
Goeckel
D.
Towsley
TCP-Cognizant
Adaptive
Forward
Error
Correction
in
Wireless
Networks
Proc
2002
Global
Internet
778
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
778[Locher
2006
T.
Locher
P.
Moor
S.
Schmid
R.
Wattenhofer
Free
Riding
in
BitTorrent
is
Cheap
Proc
ACM
HotNets
2006
Irvine
CA
noviembre
2006
Lui
2004
J.
Lui
Misra
D.
Rubenstein
On
the
Robustness
of
Soft
State
Protocols
Proc
IEEE
Int
Conference
on
Network
Protocols
ICNP
04
p√°gs
50‚Äì60
Luotonen
1998
A.
Luotonen
Web
Proxy
Servers
Prentice
Hall
Englewood
Cliffs
Jersey
1998
Lynch
1993
D.
Lynch
M.
Rose
Internet
System
Handbook
Addison-Wesley
Reading
MA
1993
Macedonia
1994
M.
Macedonia
D.
Brutzman
MBone
Provides
Audio
and
Video
Across
the
Internet
IEEE
Computer
Magazine
ol
27
N¬∫
abril
1994
p√°gs
30‚Äì36
Mahdavi
1997
J.
Mahdavi
S.
Floyd
TCP-Friendly
Unicast
Rate-Based
Flow
Control
unpublished
note
enero
1997
Malware
2006
Computer
Economics
2005
Malware
Report
The
Impact
of
Malicious
Code
Attacks
http://www.computereconomics.com
manet
2009
IETF
Mobile
Ad-hoc
Networks
manet
Working
Group
http://www.ietf.org/html
charters
manet-charter.html
Mao
2002
Z.
M.
Mao
C.
Cranor
F.
Douglis
M.
Rabinovich
O.
Spatscheck
J.
Wang
Precise
and
Efficient
Evaluation
of
the
Proximity
between
Web
Clients
and
Their
Local
DNS
Servers
USENIX
2002
Maymounkov
2002
P.
Maymounkov
D.
Mazi√®res
Kademlia
Peer-to-Peer
Information
System
Based
on
the
XOR
Metric
Proceedings
of
the
1st
International
Workshop
on
Peerto-Peer
Systems
IPTPS
02
p√°gs
53‚Äì65
marzo
2002
McKeown
1997a
N.
McKeown
M.
Izzard
A.
Mekkittikul
W.
Ellersick
M.
Horowitz
The
Tiny
Tera
Packet
Switch
Core
IEEE
Micro
Magazine
enero
febrero
1997
McKeown
1997b
N.
McKeown
Fast
Switched
Backplane
for
Gigabit
Switched
Router
Business
Communications
Review
ol
27
N¬∫
12
http://tiny-tera.stanford.edu/~nickm/papers/
cisco_fasts_wp.pdf
McQuillan
1980
J.
McQuillan
I.
Richer
E.
Rosen
The
New
Routing
Algorithm
for
the
Arpanet
IEEE
Transactions
on
Communications
ol
28
N¬∫
mayo
1980
p√°gs
711‚Äì719
Medhi
1997
D.
Medhi
D.
Tipper
eds
Special
Issue
Fault
Management
in
Communication
Networks
Journal
of
Network
and
Systems
Management
ol
N¬∫
junio
1997
Meng
2005
X.
Meng
IPv4
Address
Allocation
and
the
BGP
Routing
Table
Evolution
Computer
Communication
Reviews
ol
35
N¬∫
2005
p√°gs
71‚Äì80
Metcalfe
1976
R.
M.
Metcalfe
D.
R.
Boggs
Ethernet
Distributed
Packet
Switching
for
Local
Computer
Networks
Communications
of
the
Association
for
Computing
Machinery
ol
19
N¬∫
julio
1976
p√°gs
395‚Äì404
MFA
Forum
2009]P√°gina
principal
Ip
MPLS
Forum
http://www.ipmplsforum.org/
Microsoft
Player
Media
2009
P√°gina
principal
Microsoft
Windows
Media
http://www
.microsoft.com
windows
windowsmedia/
Miller
1997
M.A.
Miller
Managing
Internetworks
with
SNMP
2¬™
ed
Books
York
1997
Mirkovic
2005
J.
Mirkovic
S.
Dietrich
D.
Dittrich
P.
Reiher
Internet
Denial
of
Service
Attack
and
Defense
Mechanisms
Prentice
Hall
2005
Mockapetris
1988
P.
Mockapetris
K.
J.
Dunlap
Development
of
the
Domain
Name
System
Proc
1988
ACM
SIGCOMM
Stanford
CA
agosto
1988
Mockapetris
2005
P.
Mockapetris
Sigcomm
Award
Lecture
v√≠deo
disponible
http://
www
postel.org/sigcomm
Mogul
2003
J.
Mogul
TCP
offload
is
dumb
idea
whose
time
has
come
Proc
HotOS
IX
The
9th
Workshop
on
Hot
Topics
in
Operating
Systems
2003
USENIX
Association
REFERENCIAS
779
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
779[Molinero-Fern√°ndez
2002
P.
Molinero-Fern√°ndez
N.
McKeown
H.
Zhang
Is
IP
Going
to
Take
Over
the
World
of
Communications
Proc
2002
ACM
Hotnets
Molle
1987
M.
L.
Molle
K.
Sohraby
A.
N.
Venetsanopoulos
Space-Time
Models
of
Asynchronous
CSMA
Protocols
for
Local
Area
Networks
IEEE
Journal
on
Selected
Areas
in
Communications
ol
N¬∫
1987
p√°gs
956‚Äì968
Moore
2001
D.
Moore
G.
oelker
S.
Savage
Inferring
Internet
Denial
of
Service
Activity
Proc
2001
USENIX
Security
Symposium
Washington
DC
agosto
2001
Moore
2003
D.
Moore
Paxson
S.
Savage
C.
Shannon
S.
Staniford
N.
Weaver
Inside
the
Slammer
Worm
2003
IEEE
Security
and
Privacy
Conference
Moshchuck
2006
A.
Moshchuk
T.
Bragin
S.
Gribble
H.
Levy
Crawler-based
Study
of
Spyware
on
the
Web
Proc
13th
Annual
Network
and
Distributed
Systems
Security
Symposium
NDSS
2006
San
Diego
CA
febrero
2006
Mouly
1992
M.
Mouly
M.
Pautet
The
GSM
System
for
Mobile
Communications
Cell
and
Sys
Palaiseau
Francia
1992
Moy
1998
J.
Moy
OSPF
Anatomy
of
An
Internet
Routing
Protocol
Addison-Wesley
Reading
MA
1998
Mukherjee
1997
B.
Mukherjee
Optical
Communication
Networks
McGraw-Hill
1997
Murphy
2003
V√©ase
RFC
4272
Nahum
2002
E.
Nahum
T.
Barzilai
D.
Kandlur
Performance
Issues
in
WWW
Servers
IEEE
ACM
Transactions
on
Networking
ol
10
N¬∫
Feb
2002
Naoumov
2006
N.
Naoumov
K.W.
Ross
Exploiting
P2P
Systems
for
DDoS
Attacks
Intl
Workshop
on
Peer-to-Peer
Information
Management
Hong
Kong
mayo
2006
Neglia
2007
G.
Neglia
G.
Reina
H.
Zhang
D.
Towsley
A.
Venkataramani
J.
Danaher
Availability
in
BitTorrent
Systems
Proc
IEEE
INFOCOM
2007
mayo
2007
Neumann
1997
R.
Neumann
Internet
Routing
Black
Hole
The
Risks
Digest
Forum
on
Risks
to
the
Public
in
Computers
and
Related
Systems
ol
19
N¬∫
12
mayo
1997
http://
catless.ncl.ac.uk/
Risks/19.12.html#subj1.1
Newman
2008
D.
Newman
802.11n
Gear
10
Times
Faster
Than
Current
Wi-Fi
Offerings
Network
World
Oct
27
2008
http://www.networkworld.com/reviews/2008/102708-wlan-
test.html?page=1
Nicholson
2006
Nicholson
Chawathe
M.
Chen
B.
Noble
D.
Wetherall
ImprovedAccess
Point
Selection
Proc
2006
ACM
Mobisys
Conference
Uppsala
Sweden
2006
Nielsen
1997
H.
F.
Nielsen
J.
Gettys
A.
Baird-Smith
E.
Prud‚Äôhommeaux
H.
W.
Lie
C.
Lilley
Network
Performance
Effects
of
HTTP/1.1
CSS1
and
PNG
W3C
Document
1997
also
appears
in
Proc
1997
ACM
SIGCOM
Cannes
Francia
septiembre
1997
p√°gs
155‚Äì166
NIST
2001
National
Institute
of
Standards
and
Technology
Advanced
Encryption
Standard
AES
Federal
Information
Processing
Standards
197
noviembre
2001
http://csrc.nist
.gov/
publications
fips
fips197
fips-197.pdf
Nmap
2009
P√°gina
principal
Nmap
http://www.insecure.com/nmap
Nonnenmacher
1998
J.
Nonnenmacher
E.
Biersak
D.
Towsley
Parity-Based
Loss
Recovery
for
Reliable
Multicast
Transmission
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
agosto
1998
p√°gs
349‚Äì361
NTIA
1998
National
Telecommunications
and
Information
Administration
NTIA
US
Department
of
Commerce
Management
of
Internet
names
and
addresses
Docket
Number
980212036-8146-
02
http://www.ntia.doc.gov/ntiahome/domainname/6_5_98dns.htm
Odlyzko
2003
A.
Odlyzko
Internet
Traffic
Growth
Sources
and
Implications
A.
M.
Optical
Transmission
Systems
and
Equipment
for
WDM
Networking
II
Proc
SPIE
5247
2003
p√°gs
1‚Äì15
http://www.dtc.umn.edu/~odlyzko/doc/itcom.internet.growth.pdf
780
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
780[OSI
2009
P√°gina
principal
International
Organization
for
Standardization
http://www.iso.org/
iso
ISOOnline.frontpage
OSS
2009
OSS
Nokalva
ASN.1
Resources
http://www.oss.com/asn1/
Padhye
2000
J.
Padhye
Firoiu
D.
Towsley
J.
Kurose
Modeling
TCP
Reno
Performance
Simple
Model
and
its
Empirical
Validation
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
abril
2000
p√°gs
133‚Äì145
Padhye
2001
J.
Padhye
S.
Floyd
On
Inferring
TCP
Behavior
Proc
2001
ACM
SIGCOMM
San
Diego
CA
agosto
2001
Pan
1997
P.
Pan
H.
Schulzrinne
Staged
Refresh
Timers
for
RSVP
Proc
2nd
Global
Internet
Conference
Phoenix
AZ
diciembre
1997
Parekh
1993
A.
Parekh
R.
Gallagher
generalized
processor
sharing
approach
to
flow
control
in
integrated
services
networks
the
single-node
case
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
junio
1993
p√°gs
344‚Äì357
Partridge
1992
C.
Partridge
S.
Pink
An
Implementation
of
the
Revised
Internet
Stream
Protocol
ST-2
Journal
of
Internetworking
Research
and
Experience
ol
N¬∫.
marzo
1992
Partridge
1998
C.
Partridge
et
Fifty
Gigabit
per
second
IP
Router
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
junio
1998
p√°gs
237‚Äì248
Paxson
1997
V.
Proc
1997
ACM
SIGCOMM
Cannes
Francia
septiembre
1997
Perkins
1994
A.
Perkins
Networking
with
Bob
Metcalfe
The
Red
Herring
Magazine
noviembre
1994
Perkins
1998
C.
Perkins
O.
Hodson
Hardman
Survey
of
Packet
Loss
Recovery
Techniques
for
Streaming
Audio
IEEE
Network
Magazine
sept./oct
1998
p√°gs
40‚Äì47
Perkins
1998b
C.
Perkins
Mobile
IP
Design
Principles
and
Practice
Addison-Wesley
Reading
MA
1998
Perkins
2000
C.
Perkins
Ad
Hoc
Networking
Addison-Wesley
Reading
MA
2000
Perlman
1999
R.
Perlman
Interconnections
Bridges
Routers
Switches
and
Internetworking
Protocols
2¬™
ed
Addison-Wesley
Professional
Computing
Series
Reading
MA
1999
PGPI
2009
The
International
PGP
Home
Page
http://www.pgpi.org
Phifer
2000]L.
Phifer
The
Trouble
with
NAT
The
Internet
Protocol
Journal
Vo
diciembre
2000
http://www.cisco.com/warp/public/759/ipj_3-4/ipj_3-4_nat.html
Piatek
2007
M.
Piatek
T.
Isdal
T.
Anderson
A.
Krishnamurthy
A.
Venkataramani
Do
Incentives
Build
Robustness
in
Bittorrent
Proc
NSDI
2007
Piatek
2008
M.
Piatek
T.
Isdal
A.
Krishnamurthy
T.
Anderson
One
hop
Reputations
for
Peer-to-
peer
File
Sharing
Workloads
Proc
NSDI
2008
Pickholtz
1982
R.
Pickholtz
D.
Schilling
L.
Milstein
Theory
of
Spread
Spectrum
Communication‚Äîa
Tutorial
IEEE
Transactions
on
Communications
ol
30
N¬∫
mayo
1982
p√°gs
855‚Äì884
pingplotter
2009
P√°gina
principal
pingplotter
http://www.pingplotter.com
Piscatello
1993
D.
Piscatello
A.
Lyman
Chapin
Open
Systems
Networking
Addison-Wesley
Reading
MA
1993
Point
Topic
2006
Point
Topic
Ltd
World
Broadband
Statistics
Q1
2006,http://www
.pointtopic
com
Potaroo
2009
Growth
of
the
BGP
Table‚Äì1994
to
Present
http://bgp.potaroo.net/
PPLive
2009
P√°gina
principal
PPLive
http://www.pplive.com
PriMetrica
2009
Global
Internet
Geography
http://www.telegeography.com/products/gig/index.php
QuickTime
2009
P√°gina
principal
QuickTime
http://www.apple.com/quicktime
REFERENCIAS
781
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
781[Quittner
1998
J.
Quittner
M.
Slatalla
Speeding
the
Net
The
Inside
Story
of
Netscape
and
How
it
Challenged
Microsoft
Atlantic
Monthly
Press
1998
Ramakrishnan
1990
K.
K.
Ramakrishnan
R.
Jain
Binary
Feedback
Scheme
for
Congestion
Avoidance
in
Computer
Networks
ACM
Transactions
on
Computer
Systems
Vo
1990
p√°gs
158‚Äì181
Raman
1999
S.
Raman
S.
McCanne
Model
Analysis
and
Protocol
Framework
for
Soft
State-
based
Communication
Proc
1999
ACM
SIGCOMM
Boston
MA
agosto
1999
Raman
2007
B.
Raman
K.
Chebrolu
Experiences
in
using
WiFi
for
Rural
Internet
in
India
IEEE
Communications
Magazine
Special
Issue
on
New
Directions
in
Networking
Technologies
in
Emerging
Economies
Jan
2007
Ramaswami
1998
R.
Ramaswami
K.
Sivarajan
Optical
Networks
Practical
Perspective
Morgan
Kaufman
Publishers
1998
Ramjee
1994
R.
Ramjee
J.
Kurose
D.
Towsley
H.
Schulzrinne
Adaptive
Playout
Mechanisms
for
Packetized
Audio
Applications
in
Wide-Area
Networks
Proc
1994
IEEE
Infocom
Rao
1996
K.
R.
Rao
and
J.
J.
Hwang
Techniques
and
Standards
for
Image
Video
and
Audio
Coding
Prentice
Hall
Englewood
Cliffs
NJ
1996
RAT
2009
Robust
Audio
Tool
http://www-mice.cs.ucl.ac.uk/multimedia/software/rat/
Ratnasamy
2001
S.
Ratnasamy
P.
Francis
M.
Handley
R.
Karp
S.
Shenker
Scalable
Content-
Addressable
Network
Proc
2001
ACM
SIGCOMM
San
Diego
CA
agosto
2001
RealNetworks
2009
P√°gina
principal
RealNetworks
http://www.realnetworks.com
Ren
2006
S.
Ren
L.
Guo
X.
Zhang
ASAP
an
AS-aware
peer-relay
protocol
for
high
quality
Vo
Proc
2006
IEEE
ICDCS
Lisboa
Portugal
julio
2006
Rescorla
2001
E.
Rescorla
SSL
and
TLS
Designing
and
Building
Secure
Systems
Addison-Wesley
Boston
2001
RFC
001
S.
Crocker
Host
Software
RFC
001
the
very
first
RFC
RFC
768
J.
Postel
User
Datagram
Protocol
RFC
768
agosto
1980
RFC
789
E.
Rosen
Vulnerabilities
of
Network
Control
Protocols
RFC
789
RFC
791
J.
Postel
Internet
Protocol
DARPA
Internet
Program
Protocol
Specification
RFC
791
septiembre
1981
RFC
792
J.
Postel
Internet
Control
Message
Protocol
RFC
792
septiembre
1981
RFC
793
J.
Postel
Transmission
Control
Protocol
RFC
793
septiembre
1981
RFC
801
J.
Postel
NCP
TCP
Transition
Plan
RFC
801
noviembre
1981
RFC
826
D.
C.
Plummer
An
Ethernet
Address
Resolution
Protocol‚Äîor‚ÄîConverting
Network
Protocol
Addresses
to
48
bit
Ethernet
Address
for
Transmission
on
Ethernet
Hardware
RFC
826
noviembre
1982
RFC
829
V.
RFC
854
J.
Postel
J.
Reynolds
TELNET
Protocol
Specification
RFC
854
mayo
1993
RFC
950
J.
Mogul
J.
Postel
Internet
Standard
Subnetting
Procedure
RFC
950
agosto
1985
RFC
959
J.
Postel
J.
Reynolds
File
Transfer
Protocol
FTP
RFC
959
octubre
1985
RFC
977
B.
Kantor
P.
Lapsley
Network
News
Transfer
Protocol
RFC
977
febrero
1986
RFC
1028
J.
Davin
J.D.
Case
M.
Fedor
M.
Schoffstall
Simple
Gateway
Monitoring
Protocol
RFC
1028
noviembre
1987
RFC
1034
P.
V.
Mockapetris
Domain
Names‚ÄîConcepts
and
Facilities
RFC
1034
noviembre
1987
RFC
1035
P.
Mockapetris
Domain
Names‚ÄîImplementation
and
Specification
RFC
1035
noviembre
1987
782
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
782[RFC
1058
C.
L.
Hendrick
Routing
Information
Protocol
RFC
1058
junio
1988
RFC
1071
R.
Braden
D.
Borman
C.
Partridge
Computing
The
Internet
Checksum
RFC
1071
septiembre
1988
RFC
1075
D.
Waitzman
C.
Partridge
S.
Deering
Distance
Vector
Multicast
Routing
Protocol
RFC
1075
noviembre
1988
RFC
1112
S.
Deering
Host
Extension
for
IP
Multicasting
RFC
1112
agosto
1989
RFC
1122
R.
Braden
Requirements
for
Internet
Hosts‚ÄîCommunication
Layers
RFC
1122
octubre
1989
RFC
1123
R.
Braden
ed
Requirements
for
Internet
Hosts‚ÄîApplication
and
Support
RFC-1123
octubre
1989
RFC
1142
D.
Oran
OSI
IS-IS
Intra-domain
Routing
Protocol
RFC
1142
febrero
1990
RFC
1190
C.
Topolcic
Experimental
Internet
Stream
Protocol
Version
ST-II
RFC
1190
octubre
1990
RFC
1191
J.
Mogul
S.
Deering
Path
MTU
Discovery
RFC
1191
noviembre
1990
RFC
1213
K.
McCloghrie
M.
T.
Rose
Management
Information
Base
for
Network
Management
of
TCP
IP-based
internets
MIB-II
RFC
1213
marzo
1991
RFC
1256
S.
Deering
ICMP
Router
Discovery
Messages
RFC
1256
septiembre
1991
RFC
1320
R.
Rivest
The
MD4
Message-Digest
Algorithm
RFC
1320
abril
1992
RFC
1321
R.
Rivest
The
MD5
Message-Digest
Algorithm
RFC
1321
abril
1992
RFC
1323
Jacobson
S.
Braden
D.
Borman
TCP
Extensions
for
High
Performance
RFC
1323
mayo
1992
RFC
1422
S.
Kent
Privacy
Enhancement
for
Internet
Electronic
Mail
Part
II
Certificate-
Based
Key
Management
RFC
1422
RFC
1547
D.
Perkins
Requirements
for
an
Internet
Standard
Point-to-Point
Protocol
RFC
1547
diciembre
1993
RFC
1584
J.
Moy
Multicast
Extensions
to
OSPF
RFC
1584
marzo
1994
RFC
1633
R.
Braden
D.
Clark
S.
Shenker
Integrated
Services
in
the
Internet
Architecture
an
Overview
RFC
1633
junio
1994
RFC
1636
R.
Braden
D.
Clark
S.
Crocker
C.
Huitema
Report
of
IAB
Workshop
on
Security
in
the
Internet
Architecture
RFC
1636
noviembre
1994
RFC
1661
W.
Simpson
ed
The
Point-to-Point
Protocol
PPP
RFC
1661
julio
1994
RFC
1662
W.
Simpson
ed
PPP
in
HDLC-like
framing
RFC
1662
julio
1994
RFC
1700
J.
Reynolds
J.
Postel
Assigned
Numbers
RFC
1700
octubre
1994
RFC
1752
S.
Bradner
A.
Mankin
The
Recommendations
for
the
IP
Next
Generation
Protocol
RFC
1752
enero
1995
RFC
1760
N.
Haller
The
KEY
One-Time
Password
System
RFC
1760
febrero
1995
RFC
1918
Y.
rg
for
Private
Internets
RFC
1918
febrero
1996
RFC
1930
J.
Hawkinson
T.
Bates
Guidelines
for
Creation
Selection
and
Registration
of
an
Autonomous
System
AS
RFC
1930
marzo
1996
RFC
1938
N.
Haller
C.
Metz
One-Time
Password
System
RFC
1938
mayo
1996
RFC
1939
J.
Myers
M.
Rose
Post
Office
Protocol‚ÄîVersion
RFC
1939
mayo
1996
RFC
1945
T.
Berners-Lee
R.
Fielding
H.
Frystyk
Hypertext
Transfer
Protocol‚ÄîHTTP/1.0
RFC
1945
mayo
1996
RFC
2003
C.
Perkins
IP
Encapsulation
within
IP
RFC
2003
octubre
1996
RFC
2004
C.
Perkins
Minimal
Encapsulation
within
IP
RFC
2004
octubre
1996
REFERENCIAS
783
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
783[RFC
2018
M.
Mathis
J.
Mahdavi
S.
Floyd
A.
Romanow
TCP
Selective
Acknowledgment
Options
RFC
2018
octubre
1996
RFC
2050
K.
Hubbard
M.
Kosters
D.
Conrad
D.
Karrenberg
J.
Postel
Internet
Registry
IP
Allocation
Guidelines
RFC
2050
noviembre
1996
RFC
2104
H.
Krawczyk
M.
Bellare
R.
Canetti
HMAC
Keyed-Hashing
for
Message
Authentication
RFC
2104
febrero
1997
RFC
2131
R.
Droms
Dynamic
Host
Configuration
Protocol
RFC
2131
marzo
1997
RFC
2136
P.
Vixie
S.
Thomson
Y.
Rekhter
J.
Bound
Dynamic
Updates
in
the
Domain
Name
System
RFC
2136
abril
1997
RFC
2153
W.
Simpson
PPP
Vendor
Extensions
RFC
2153
mayo
1997
RFC
2205
R.
Braden
Ed
L.
Zhang
S.
Berson
S.
Herzog
S.
Jamin
Resource
ReSerVation
Protocol
RSVP)‚ÄîVersion
Functional
Specification
RFC
2205
septiembre
1997
RFC
2210
J.
Wroclawski
The
Use
of
RSVP
with
IETF
Integrated
Services
RFC
2210
septiembre
1997
RFC
2211
J.
Wroclawski
Specification
of
the
Controlled-Load
Network
Element
Service
RFC
2211
septiembre
1997
RFC
2215
S.
Shenker
J.
Wroclawski
General
Characterization
Parameters
for
Integrated
Service
Network
Elements
RFC
2215
septiembre
1997
RFC
2246
T.
Dierks
C.
Allen
The
TLS
Protocol
RFC
2246
enero
1998
RFC
2253
M.
Wahl
S.
Kille
T.
Howes
Lightweight
Directory
Access
Protocol
v3
RFC
2253
diciembre
1997
RFC
2284
L.
Blunk
J.
ollbrecht
PPP
Extensible
Authentication
Protocol
EAP
RFC
2284
marzo
1998
RFC
2326
H.
Schulzrinne
A.
Rao
R.
Lanphier
Real
Time
Streaming
Protocol
RTSP
RFC
2326
abril
1998
RFC
2328
J.
Moy
OSPF
Version
RFC
2328
abril
1998
RFC
2420
H.
Kummert
The
PPP
Triple-DES
Encryption
Protocol
3DESE
RFC
2420
septiembre
1998
RFC
2437
B.
Kaliski
J.
Staddon
PKCS
RSA
Cryptography
Specifications
Version
RFC
2437
octubre
1998
RFC
2453
G.
Malkin
RIP
Version
RFC
2453
noviembre
1998
RFC
2460
S.
Deering
R.
Hinden
Internet
Protocol
Version
IPv6
Specification
RFC
2460
diciembre
1998
RFC
2475
S.
Blake
D.
Black
M.
Carlson
E.
Davies
Z.
Wang
W.
Weiss
An
Architecture
for
Differentiated
Services
RFC
2475
diciembre
1998
RFC
2578
K.
McCloghrie
D.
Perkins
J.
Schoenwaelder
Structure
of
Management
Information
Version
SMIv2
RFC
2578
abril
1999
RFC
2579
K.
McCloghrie
D.
Perkins
J.
Schoenwaelder
Textual
Conventions
for
SMIv2
RFC
2579
abril
1999
RFC
2580
K.
McCloghrie
D.
Perkins
J.
Schoenwaelder
Conformance
Statements
for
SMIv2
RFC
2580
abril
1999
RFC
2581
M.
Allman
Paxson
W.
Stevens
TCP
Congestion
Control
RFC
2581
abril
1999
RFC
2597
J.
Heinanen
F.
Baker
W.
Weiss
J.
Wroclawski
Assured
Forwarding
PHB
Group
RFC
2597
junio
1999
RFC
2616
R.
Fielding
J.
Gettys
J.
Mogul
H.
Frystyk
L.
Masinter
P.
Leach
T.
Berners-Lee
R.
Fielding
Hypertext
Transfer
Protocol‚ÄîHTTP/1.1
RFC
2616
junio
1999
784
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
784[RFC
2663
P.
Srisuresh
M.
Holdrege
IP
Network
Address
Translator
NAT
Terminology
and
Considerations
RFC
2663
RFC
2702
D.
Awduche
J.
Malcolm
J.
Agogbua
M.
O‚ÄôDell
J.
McManus
Requirements
for
Traffic
Engineering
Over
MPLS
septiembre
1999
RFC
2716
B.
Aboba
D.
Simon
PPP
EAP
TLS
Authentication
Protocol
RFC
2716
octubre
1999
RFC
2733
J.
Rosenberg
H.
Schulzrinne
An
RTP
Payload
Format
for
Generic
Forward
Error
Correction
RFC
2733
diciembre
1999
RFC
2827
P.
Ferguson
D.
Senie
Network
Ingress
Filtering
Defeating
Denial
of
Service
Attacks
which
Employ
IP
Source
Address
Spoofing
RFC
2827
mayo
2000
RFC
2865
C.
Rigney
S.
Willens
A.
Rubens
W.
Simpson
Remote
Authentication
Dial
In
User
Service
RADIUS
RFC
2865
junio
2000
RFC
2960]R.
Stewart
Q.
Xie
K.
Morneault
C.
Sharp
H.
Schwarzbauer
T.
Taylor
I.
Rytina
M.
Kalla
L.
Zhang
Paxson
Stream
Control
Transmission
Protocol
RFC
2960
octubre
2000
RFC
2961
L.
Berger
D.
Gan
G.
Swallow
P.
Pan
F.
Tommasi
S.
Molendini
RSVP
Refresh
Overhead
Reduction
Extensions
RFC
2961
abril
2001
RFC
2988
Paxson
M.
Allman
Computing
TCP‚Äôs
Retransmission
Timer
RFC
2988
noviembre
2000
RFC
3007
B.
Wellington
Secure
Domain
Name
System
DNS
Dynamic
Update
RFC
3007
noviembre
2000
RFC
3022
P.
Srisuresh
K.
Egevang
Traditional
IP
Network
Address
Translator
Traditional
NAT
RFC
3022
enero
2001
RFC
3022
P.
Srisuresh
K.
Egevang
Traditional
IP
Network
Address
Translator
Traditional
NAT
RFC
3022
enero
2001
RFC
3031
E.
Rosen
A.
Viswanathan
R.
Callon
Multiprotocol
Label
Switching
Architecture
RFC
3031
enero
2001
RFC
3032
E.
Rosen
D.
Tappan
G.
Fedorkow
Rekhter
D.
Farinacci
T.
Li
A.
Conta
MPLS
Label
Stack
Encoding
RFC
3032
enero
2001
RFC
3052
M.
Eder
S.
Nag
Service
Management
Architectures
Issues
and
Review
RFC
3052
enero
2001
RFC
3139
L.
Sanchez
K.
McCloghrie
J.
Saperia
Requirements
for
Configuration
Management
of
IP-Based
Networks
RFC
3139
junio
2001
RFC
3168
K.
Ramakrishnan
S.
Floyd
D.
Black
The
Addition
of
Explicit
Congestion
Notification
ECN
to
IP
RFC
3168
septiembre
2001
RFC
3209
D.
Awduche
L.
Berger
D.
Gan
T.
Li
Srinivasan
G.
Swallow
RSVP-TE
Extensions
to
RSVP
for
LSP
Tunnels
RFC
3209
diciembre
2001
RFC
3221
G.
Huston
Commentary
on
Inter-Domain
Routing
in
the
Internet
RFC
3221
diciembre
2001
RFC
3232
J.
Reynolds
Assigned
Numbers
RFC
1700
is
Replaced
by
an
On-line
Database
RFC
3232
enero
2002
RFC
3246
B.
Davie
A.
Charny
J.C.R.
Bennet
K.
Benson
J.Y
Boudec
W.
Courtney
S.
Davari
Firoiu
D.
Stiliadis
An
Expedited
Forwarding
PHB
Per-Hop
Behavior
RFC
3246
marzo
2002
RFC
3260
D.
Grossman
New
Terminology
and
Clarifications
for
Diffserv
RFC
3260
abril
2002
RFC
3261
J.
Rosenberg
H.
Schulzrinne
G.
Carmarillo
A.
Johnston
J.
Peterson
R.
Sparks
M.
Handley
E.
Schooler
SIP
Session
Initiation
Protocol
RFC
3261
julio
2002
RFC
3272
J.
Boyle
Gill
A.
Hannan
D.
Cooper
D.
Awduche
B.
Christian
W.S.
Lai
Overview
and
Principles
of
Internet
Traffic
Engineering
RFC
3272
mayo
2002
REFERENCIAS
785
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
785[RFC
3286
L.
Ong
J.
Yoakum
An
Introduction
to
the
Stream
Control
Transmission
Protocol
SCTP
RFC
3286
mayo
2002
RFC
3344
C.
Perkins
ed
IP
Mobility
Support
for
IPv4
RFC
3344
octubre
2002
RFC
3346
J.
Boyle
Gill
A.
Hannan
D.
Cooper
D.
Awduche
B.
Christian
W.
S.
Lai
Applicability
Statement
for
Traffic
Engineering
with
MPLS
RFC
3346
agosto
2002
RFC
3376
B.
Cain
S.
Deering
I.
Kouvelas
B.
Fenner
A.
Thyagarajan
Internet
Group
Management
Protocol
Version
RFC
3376
octubre
2002
RFC
3390
M.
Allman
S.
Floyd
C.
Partridge
Increasing
TCP‚Äôs
Initial
Window
RFC
3390
octubre
2002
RFC
3410
J.
Case
R.
Mundy
D.
Partain
Introduction
and
Applicability
Statements
for
Internet
Standard
Management
Framework
RFC
3410
diciembre
2002
RFC
3411
D.
Harrington
R.
Presuhn
B.
Wijnen
An
Architecture
for
Describing
Simple
Network
Management
Protocol
SNMP
Management
Frameworks
RFC
3411
diciembre
2002
RFC
3414
U.
Blumenthal
User-based
Security
Model
USM
for
version
of
the
Simple
Network
Management
Protocol
SNMPv3
RFC
3414
diciembre
2002
RFC
3415
B.
Wijnen
R.
Presuhn
K.
McCloghrie
View-based
Access
Control
Model
ACM
for
the
Simple
Network
Management
Protocol
SNMP
RFC
3415
diciembre
2002
RFC
3416
R.
Presuhn
J.
Case
K.
McCloghrie
M.
Rose
S.
Waldbusser
Version
of
the
Protocol
Operations
for
the
Simple
Network
Management
Protocol
SNMP
diciembre
2002
RFC
3417
R.
Presuhn
Transport
Mappings
for
the
Simple
Network
Management
Protocol
SNMP
RFC
3417
diciembre
2002
RFC
3439
R.
Bush
and
D.
Meyer
Some
internet
architectural
guidelines
and
philosophy
RFC
3439
diciembre
2003
RFC
3468
L.
Andersson
G.
Swallow
The
Multiprotocol
Label
Switching
MPLS
Working
Group
Decision
on
MPLS
Signaling
Protocols
RFC
3468
febrero
2003
RFC
3469
V.
F.
MPLS)-based
Recovery
RFC
3469
febrero
2003
ftp://ftp.rfc-editor.org/in-notes/rfc3469.txt
RFC
3501
M.
Crispin
Internet
Message
Access
Protocol‚ÄîVersion
4rev1
RFC
3501
marzo
2003
RFC
3550
H.
Schulzrinne
S.
Casner
R.
Frederick
Jacobson
RTP
Transport
Protocol
for
Real-Time
Applications
RFC
3550
julio
2003
RFC
3569
S.
Bhattacharyya
ed
An
Overview
of
Source-Specific
Multicast
SSM
RFC
3569
julio
2003
RFC
3588
P.
Calhoun
J.
Loughney
E.
Guttman
G.
Zorn
J.
Arkko
Diameter
Base
Protocol
RFC
3588
septiembre
2003
RFC
3618
B.
Fenner
D.
Meyer
Ed
Multicast
Source
Discovery
Protocol
MSDP
RFC
3618
octubre
2003
RFC
3649]S.
Floyd
High
Speed
TCP
for
Large
Congestion
Windows
RFC
3649
diciembre
2003
RFC
3782
S.
Floyd
T.
Henderson
A.
Gurtov
The
NewReno
Modification
to
TCP‚Äôs
Fast
Recovery
Algorithm
RFC
3782
abril
2004
RFC
3973
A.
Adams
J.
Nicholas
W.
Siadak
Protocol
Independent
Multicast‚ÄîDense
Mode
PIM-DM
Protocol
Specification
Revised
RFC
3973
enero
2005
RFC
4022
R.
Raghunarayan
Ed
Management
Information
Base
for
the
Transmission
Control
Protocol
TCP
RFC
4022
marzo
2005
RFC
4113
B.
Fenner
J.
Flick
Management
Information
Base
for
the
User
Datagram
Protocol
UDP
RFC
4113
junio
2005
RFC
4213
E.
Nordmark
R.
Gilligan
Basic
Transition
Mechanisms
for
IPv6
Hosts
and
Routers
RFC
4213
octubre
2005
786
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
786[RFC
4271
Y.
T.
enero
2006
RFC
4272
S.
Murphy
BGP
Security
Vulnerabilities
Analysis
RFC
4274
enero
2006
RFC4274
Meyer
D.
K.
Patel
BGP-4
Protocol
Analysis
RFC
4274
enero
2006
RFC4276
Hares
S.
A.
Retana
BGP
Implementation
Report
RFC
4276
enero
2006
RFC
4291
R.
Hinden
S.
Deering
IP
Version
Addressing
Architecture
RFC
4291
febrero
2006
RFC
4293
S.
Routhier
Ed
Management
Information
Base
for
the
Internet
Protocol
IP
RFC
4293
abril
2006
RFC
4301
S.
Kent
K.
Seo
Security
Architecture
for
the
Internet
Protocol
RFC
4301
diciembre
2005
RFC
4302
S.
Kent
IP
Authentication
Header
RFC
4302
diciembre
2005
RFC
4303
S.
Kent
IP
Encapsulating
Security
Payload
ESP
RFC
4303
diciembre
2005
RFC
4305
D.
Eastlake
Cryptographic
Algorithm
Implementation
Requirements
for
Encapsulating
Security
Payload
ESP
and
Authentication
Header
AH
RFC
4305
diciembre
2005
RFC
4340
E.
Kohler
M.
Handley
S.
Floyd
Datagram
Congestion
Control
Protocol
DCCP
RFC
4340
marzo
2006
RFC
4443
A.
Conta
S.
Deering
M.
Gupta
Ed
Internet
Control
Message
Protocol
ICMPv6
for
the
Internet
Protocol
Version
IPv6
Specification
RFC
4443
marzo
2006
RFC
4346
T.
Dierks
E.
Rescorla
The
Transport
Layer
Security
TLS
Protocol
Version
1.1
RFC
4346
abril
2006
RFC
4502
S.
Waldbusser
Remote
Network
Monitoring
Management
Information
Base
Version
RFC
4502
mayo
2006
RFC
4601
B.
Fenner
M.
Handley
H.
Holbrook
I.
Kouvelas
Protocol
Independent
Multicast
Sparse
Mode
PIM-SM
Protocol
Specification
Revised
RFC
4601
agosto
2006
RFC
4607
H.
Holbrook
B.
Cain
Source-Specific
Multicast
for
IP
RFC
4607
agosto
2006
RFC
4611
M.
McBride
J.
Meylor
D.
Meyer
Multicast
Source
Discovery
Protocol
MSDP
Deployment
Scenarios
RFC
4611
agosto
2006
RFC
4632
V.
T.
r-
Assignment
and
Aggregation
Plan
RFC
4632
agosto
2006
RFC
5000
RFC
editor
Internet
Official
Protocol
Standards
RFC
5000
mayo
2008
RFC
5110
P.
Savola
Overview
of
the
Internet
Multicast
Routing
Architecture
RFC
5110
enero
2008
RFC
5218
D.
Thaler
B.
Aboba
What
Makes
For
Successful
Protocol
RFC
5218
julio
2008
RFC
5321
J.
Klensin
Simple
Mail
Transfer
Protocol
RFC
5321
octubre
2008
RFC
5322
P.
Resnick
Ed
Internet
Message
Format
RFC
5322
octubre
2008
RFC
5348
S.
Floyd
M.
Handley
J.
Padhye
J.Widmer
TCP
Friendly
Rate
Control
TFRC
Protocol
Specification
RFC
5348
septiembre
2008
RFC
5411
Rosenberg
Hitchhiker‚Äôs
Guide
to
the
Session
Initiation
Protocol
SIP
RFC
5411
febrero
2009
Rhee
1998
I.
Rhee
Error
Control
Techniques
for
Interactive
Low-bit
Rate
Video
Transmission
over
the
Internet
Proc
1998
ACM
SIGCOMM
Vancouver
BC
agosto
1998
Roberts
1967
L.
Roberts
T.
Merril
Toward
Cooperative
Network
of
Time-Shared
Computers
AFIPS
Fall
Conference
octubre
1966
Roberts
2004
J.
Roberts
Internet
Traffic
QoS
and
Pricing
Proceedings
of
the
IEEE
ol
92
N¬∫
septiembre
2004
p√°gs
1389‚Äì1399
Rom
1990
R.
Rom
M.
Sidi
Multiple
Access
Protocols
Performance
and
Analysis
Springer-
Verlag
York
1990
REFERENCIAS
787
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
787[Root-servers
2009
http://www.root-servers.org/
Rose
1996
M.
Rose
The
Simple
Book
An
Introduction
to
Internet
Management
Revised
Second
Edition
Prentice
Hall
Englewood
Cliffs
NJ
1996
Rosenberg
2000
J.
Rosenberg
L.
Qiu
H.
Schulzrinne
Integrating
Packet
FEC
into
Adaptive
Playout
Buffer
Algorithms
on
the
Internet
Proc
2000
IEEE
Infocom
Tel
Aviv
Israel
abril
2000
Ross
1995
K.
W.
Ross
Multiservice
Loss
Models
for
Broadband
Telecommunication
Networks
Springer
Berl√≠n
1995
Ross
2009
K.
W.
Ross
PowerPoint
slides
on
network
Security
http://cis.poly.edu/~ross
Rowston
2001
A.
Rowston
P.
Druschel
Pastry
Scalable
Distributed
Object
Location
and
Routing
for
Large-Scale
Peer-to-Peer
Systems
in
Proc
2001
IFIP
ACM
Middleware
Heidelberg
Alemania
2001
RSA
1978
R.
Rivest
A.
Shamir
L.
Adelman
Method
for
Obtaining
Digital
Signatures
and
Public-key
Cryptosystems
Communications
of
the
ACM
ol
21
N¬∫
p√°gs
120‚Äì126
febrero
1978
RSA
Fast
2009
RSA
Laboratories
How
fast
is
RSA
http://www.rsa.com/rsalabs/node
.asp?id=2215
RSA
Key
2009
RSA
Laboratories
How
large
key
should
be
used
in
the
RSA
Crypto
system
http://www.rsa.com/rsalabs/node.asp?id=2218
Rubenstein
1998
D.
Rubenstein
J.
Kurose
D.
Towsley
Real-Time
Reliable
Multicast
Using
Proactive
Forward
Error
Correction
Proceedings
of
NOSSDAV
98(Cambridge
UK
julio
1998
Rubin
2001
A.
Rubin
White-Hat
Security
Arsenal
Tackling
the
Threats
Addison-Wesley
2001
Ruiz-Sanchez
2001
M.
Ruiz-S√°nchez
E.
Biersack
W.
Dabbous
Survey
and
Taxonomy
of
IP
Address
Lookup
Algorithms
IEEE
Network
Magazine
ol
15
N¬∫
p√°gs
8‚Äì23
marzo
abril
2001
Saltzer
1984
J.
Saltzer
D.
Reed
D.
Clark
End-to-End
Arguments
in
System
Design
ACM
Transactions
on
Computer
Systems
TOCS
Vo
Saroiu
2002
S.
Saroiu
P.K.
Gummadi
S.D.
Gribble
Measurement
Study
of
Peer-to-Peer
File
Sharing
Systems
Proc
of
Multimedia
Computing
and
Networking
MMCN),2002
Saroiu
2002b
S.
Saroiu
K.
P.
Gummadi
R.
J.
Dunn
S.
D.
Gribble
H.
M.
Levy
An
Analysis
of
Internet
Content
Delivery
Systems
USENIX
OSDI
2002
Saydam
1996
T.
Saydam
T.
Magedanz
From
Networks
and
Network
Management
into
Service
and
Service
Management
Journal
of
Networks
and
System
Management
Vo
1996
p√°gs
345‚Äì348
Schiller
2003
J.
Schiller
Mobile
Communications
2¬™
edici√≥n
Addison
Wesley
2003
Schneier
1995
B.
Schneier
Applied
Cryptography
Protocols
Algorithms
and
Source
Code
in
John
Wiley
and
Sons
1995
Schulzrinne
1997
H.
Schulzrinne
Comprehensive
Multimedia
Control
Architecture
for
the
Internet
NOSSDAV‚Äô97
Network
and
Operating
System
Support
for
Digital
Audio
and
Video)(St
Louis
MO
mayo
1997
Schulzrinne-RTP
2009
Sitio
RTP
Henning
Schulzrinne
http://www.cs.columbia.edu/~hgs/rtp
Schulzrinne-RTSP
2009
Sitio
RTSP
Henning
Schulzrinne
http://www.cs.columbia.edu/~hgs/
rtsp
Schulzrinne-SIP
2009]Sitio
SIP
Henning
Schulzrinne
http://www.cs.columbia.edu/~hgs/sip
Schwartz
1977
M.
Schwartz
Computer-Communication
Network
Design
and
Analysis
Prentice-
Hall
Englewood
Cliffs
N.J.
1997
Schwartz
1980
M.
Schwartz
Information
Transmission
Modulation
and
Noise
McGraw
Hill
NY
NY
1980
Schwartz
1982
M.
Schwartz
Performance
Analysis
of
the
SNA
Virtual
Route
Pacing
Control
IEEE
Transactions
on
Communications
ol
30
N¬∫
enero
1982
p√°gs
172‚Äì184
788
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
788[Scourias
2009
J.
Scourias
Overview
of
the
Global
System
for
Mobile
Communications
GSM
http://www.privateline.com/PCS/GSM0.html
Segaller
1998
S.
Segaller
Nerds
2.0.1
Brief
History
of
the
Internet
TV
Books
York
1998
Shacham
1990
N.
Shacham
P.
McKenney
Packet
Recovery
in
High-Speed
Networks
Using
Coding
and
Buffer
Management
Proc
1990
IEEE
Infocom
San
Francisco
CA
abril
1990
p√°gs
124‚Äì131
Sharma
2003
P.
Sharma
Perry
R.
Malpani
IP
Multicast
Operational
Network
management
Design
Challenges
and
Experiences
IEEE
Network
Magazine
marzo
2003
p√°gs
49‚Äì55
Sidor
1998
D.
Sidor
TMN
Standards
Satisfying
Today‚Äôs
Needs
While
Preparing
for
Tomorrow
IEEE
Communications
Magazine
ol
36
N¬∫
marzo
1998
p√°gs
54‚Äì64
SIP
Software
2009
H.
Schulzrinne
Software
Package
site
http://www.cs.columbia.edu/IRT/
software
Skoudis
2004
E.
Skoudis
L.
Zeltser
Malware
Fighting
Malicious
Code
Prentice
Hall
2004
Skoudis
2006
E.
Skoudis
T.
Liston
Counter
Hack
Reloaded
Step-by-Step
Guide
to
Computer
Attacks
and
Effective
Defenses
2¬™
ed
Prentice
Hall
2006
Skype
2009
P√°gina
principal
Skype
www.skype.com
SMIL
2009
P√°gina
principal
W3C
Synchronized
Multimedia
http://www.w3.org/AudioVideo
Snort
2009
P√°gina
principal
Sourcefire
Inc
Snort
http://http://www.snort.org/
Solari
1997]S.
J.
Solari
Digital
Video
and
Audio
Compression
McGraw
Hill
NY
NY
1997
Solensky
1996
F.
Solensky
IPv4
Address
Lifetime
Expectations
in
IPng
Internet
Protocol
Next
Generation
S.
Bradner
A.
Mankin
ed
Addison-Wesley
Reading
MA
1996
Spragins
1991
J.
D.
Spragins
Telecommunications
Protocols
and
Design
Addison-Wesley
Reading
MA
1991
Sprint
2009
Sprint
Corp
Dedicated
Internet
Access
Service
Level
Agreements
http://
www
sprint.com/business/resources/dedicated_internet_access.pdf
Srikant
2004
R.
Srikant
The
Mathematics
of
Internet
Congestion
Control
Birkhauser
2004
Srinivasan
1999
V.
rg
Expansion
ACM
Transactions
Computer
Sys
ol
17
N¬∫
febrero
1999
p√°gs
1‚Äì40
Sripanidkulchai
2004
K.
Sripanidkulchai
B.
Maggs
H.
Zhang
An
analysis
of
live
streaming
workloads
on
the
Internet
Proc
4th
ACM
SIGCOMM
Internet
Measurement
Conference(Taormina
Sicilia
Italia
p√°gs
41‚Äì54
2004
Stallings
1993
W.
Stallings
SNMP
SNMP
v2
and
CMIP
The
Practical
Guide
to
Network
Management
Standards
Addison-Wesley
Reading
MA
1993
Stallings
1999
W.
Stallings
SNMP
SNMPv2
SNMPv3
and
RMON
and
2,Addison-Wesley
Reading
MA
1999
Steinder
2002
M.
Steinder
A.
Sethi
Increasing
robustness
of
fault
localization
through
analysis
of
lost
spurious
and
positive
symptoms
Proc
2002
IEEE
Infocom
Stevens
1990
W.
R.
Stevens
Unix
Network
Programming
Prentice-Hall
Englewood
Cliffs
NJ
Stevens
1994
W.
R.
Stevens
TCP
IP
Illustrated
Vol
The
Protocols
Addison-Wesley
Reading
MA
1994
Stevens
1997
W.R.
Stevens
Unix
Network
Programming
Volume
Networking
APIs-Sockets
and
XTI
2nd
edition
Prentice-Hall
Englewood
Cliffs
NJ
1997
Stewart
1999]J.
Stewart
BGP4
Interdomain
Routing
in
the
Internet
Addison-Wesley
1999
Stoica
2001
I.
Stoica
R.
Morris
D.
Karger
M.F.
Kaashoek
H.
Balakrishnan
Chord
Scalable
Peer-to-Peer
Lookup
Service
for
Internet
Applications
Proc
2001
ACM
SIGCOMM
San
Diego
CA
agosto
2001
REFERENCIAS
789
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
789[Stone
1998
J.
Stone
M.
Greenwald
C.
Partridge
J.
Hughes
Performance
of
Checksums
and
CRC‚Äôs
Over
Real
Data
IEEE
ACM
Transactions
on
Networking
Vo
p√°gs
529‚Äì543
Stone
2000
J.
Stone
C.
Partridge
When
Reality
and
the
Checksum
Disagree
Proc
2000
ACM
SIGCOMM
Estocolmo
Suecia
agosto
2000
Strayer
1992
W.
T.
Strayer
B.
Dempsey
A.
Weaver
XTP
The
Xpress
Transfer
Protocol
Addison-
Wesley
Reading
MA
1992
Stubblefield
2002
A.
Stubblefield
J.
Ioannidis
A.
Rubin
Using
the
Fluhrer
Mantin
and
Shamir
Attack
to
Break
WEP
Proceedings
of
2002
Network
and
Distributed
Systems
Security
Symposium
2002
17‚Äì22
Subramanian
2000
M.
Subramanian
Network
Management
Principles
and
Practice
Addison-
Wesley
Reading
MA
2000
Subramanian
2002
L.
Subramanian
S.
Agarwal
J.
Rexford
R.
Katz
Characterizing
the
Internet
Hierarchy
from
Multiple
Vantage
Points
Proc
2002
IEEE
Infocom
Sundaresan
2006
K.Sundaresan
K.
Papagiannaki
The
Need
for
Cross-layer
Information
in
Access
Point
Selection
Proc
2006
ACM
Internet
Measurement
Conference(R√≠o
Janeiro
octubre
2006
2006
A.-J.
D.
Choffnes
A.
Kuzmanovic
F.
Bustamante
Drafting
Behind
Akamai
ACM
SIGCOMM
septiembre
2006
Suh
2006
K.
Suh
D.
R.
Figueiredo
J.
Kurose
D.
Towsley
Characterizing
and
detecting
relayed
traffic
case
study
using
Skype
Proc
2006
IEEE
Infocom
Barcelona
Espa√±a
abril
2006
Sunshine
1978
C.
Sunshine
Dalal
Connection
Management
in
Transport
Protocols
Computer
Networks
North-Holland
Amsterdam
1978
TechnOnLine
2009
TechOnLine
Protected
Wireless
Networks
online
webcast
tutorial
http:/
/www.techonline.com
community
tech_topic
internet/21752
Thaler
1997
D.
Thaler
and
C.
Ravishankar
Distributed
Center-Location
Algorithms
IEEE
Journal
on
Selected
Areas
in
Communications
ol
15
N¬∫
abril
1997
p√°gs
291‚Äì303
Think
2009
Technical
History
of
Network
Protocols
Cyclades
http://www.cs.utexas
.edu
users/
chris
think
Cyclades
index.shtml
Thottan
1998
M.
Thottan
C.
Ji
Proactive
Anomaly
Detection
Using
Distributed
Intelligent
Agents
IEEE
Network
Magazine
ol
12
N¬∫
sept./oct
1998
p√°gs
21‚Äì28
Tobagi
1990
F.
Tobagi
Fast
Packet
Switch
Architectures
for
Broadband
Integrated
Networks
Proc
of
the
IEEE
ol
78
N¬∫
enero
1990
p√°gs
133‚Äì167
TOR
2009
Tor
Anonymity
Online
http://www.torproject.org
Turner
1988
J.
S.
Turner
Design
of
Broadcast
packet
switching
network
IEEE
Transactions
on
Communications
ol
36
N¬∫
junio
1988
p√°gs
734‚Äì743
Turner
2009
B.
Turner
Wireless
Tutorial
http://blogs.nmscommunications
.com/
communications/2008/10/2g-3g-4g-wireless-tutorial.html
UPnP
Forum
2009
P√°gina
principal
UPnP
Forum
http://www.upnp.org/
der
Berg
2008
R.
der
Berg
How
the
Net
works
an
introduction
to
peering
and
transit
http://arstechnica.com/guides/other/peering-and-transit.ars
Varghese
1997
G.
Varghese
A.
Lauck
Hashed
and
Hierarchical
Timing
Wheels
Efficient
Data
Structures
for
Implementing
Timer
Facility
IEEE
ACM
Transactions
on
Networking
ol
N¬∫
diciembre
1997
p√°gs
824‚Äì834
Vasudevan
2006
S.
Vasudevan
C.
Diot
J.
Kurose
D.
Towsley
Facilitating
Access
Point
Selection
in
IEEE
802.11
Wireless
Networks
Proc
2005
ACM
Internet
Measurement
Conference(San
Francisco
CA
octubre
2005
790
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
790[Verizon
2009
Verizon
US
Products
and
Services
http://www.verizonbusiness.com/terms/us/
products/
Verizon
FIOS
2009
FIOS
FAQ
http://www22.verizon.com/Residential/FiOSInternet/FAQ/FAQ
htm
Verma
2001]D.
C.
Verma
Content
Distribution
Networks
An
Engineering
Approach
John
Wiley
2001
Villamizar
1994
C.
Villamizar
C.
Song
High
performance
tcp
in
ansnet
ACM
SIGCOMM
Computer
Communications
Review
ol
24
N¬∫
1994
p√°gs
45‚Äì60
Viterbi
1995
A.
Viterbi
CDMA
Principles
of
Spread
Spectrum
Communication
Addison-Wesley
Reading
MA
1995
Voydock
1983
L.
oydock
S.T.
Kent
Security
Mechanisms
in
High-Level
Network
Protocols
ACM
Computing
Surveys
ol
15
N¬∫
junio
1983
p√°gs
135‚Äì171
W3C
1995
The
World
Wide
Web
Consortium
Little
History
of
the
World
Wide
Web
1995
http://www.w3.org/History.html
Wakeman
1992
I.
Wakeman
J.
Crowcroft
Z.
Wang
D.
Sirovica
Layering
Considered
Harmful
IEEE
Network
enero
1992
p√°gs
20‚Äì24
Waldvogel
1997
M.
Waldvogel
et
Scalable
High
Speed
IP
Routing
Lookup
Proc
1997
ACM
SIGCOMM
Cannes
Francia
septiembre
1997
Walker
2000]J.
Walker
IEEE
P802.11
Wireless
LANs
Unsafe
at
Any
Key
Size
An
Analysis
of
the
WEP
Encapsulation
Oct
2000
http://www.drizzle.com/~aboba/IEEE/0-362.zip
Wall
1980
D.
Wall
Mechanisms
for
Broadcast
and
Selective
Broadcast
Ph
D.
thesis
Stanford
University
junio
1980
Wang
2004
B.
Wang
J.
Kurose
P.
Shenoy
D.
Towsley
Multimedia
Streaming
via
TCP
An
Analytic
Performance
Study
Proc
ACM
Multimedia
Conf
NY
NY
octubre
2004
Weatherspoon
2000
S.
Weatherspoon
Overview
of
IEEE
802.11b
Security
Intel
Technology
Journal
2nd
Quarter
2000
http://download.intel.com/technology/itj/q22000/pdf/art_5.pdf
Wei
2005
W.
Wei
B.
Wang
C.
Zhang
J.
Kurose
D.
Towsley
Classification
of
Access
Network
Types
Ethernet
Wireless
LAN
ADSL
Cable
Modem
or
Dialup
Proc
2005
IEEE
Infocom
abril
2005
Wei
2006
W.
Wei
C.
Zhang
H.
Zang
J.
Kurose
D.
Towsley
Inference
and
Evaluation
of
Split-
Connection
Approaches
in
Cellular
Data
Networks
Proc
Active
and
Passive
Measurement
Workshop
Adelaide
Australia
marzo
2006
Wei
2007
D.
X.
Wei
C.
Jin
S.
H.
Low
S.
Hegde
FAST
TCP
Motivation
Architecture
Algorithms
Performance
IEEE
ACM
Transactions
on
Networking
2007
Weiser
1991
M.
Weiser
The
Computer
for
the
Twenty-First
Century
Scientific
American
septiembre
1991
94‚Äì10
http://www.ubiq.com/hypertext/weiser/SciAmDraft3.html
Wigle.net
2009
Wireless
Geographic
Logging
Engine
http://www.wigle.net
Williams
1993
R.
Williams
Painless
Guide
to
CRC
Error
Detection
Algorithms
http://www
ross.net/crc/crcpaper.html
WiMax
Forum
2009
WiMax
Forum
http://www.wimaxforum.org
Wireshark
2009
P√°gina
principal
Wireshark
http://www.wireshark.org
Wischik
2005
D.
Wischik
N.
McKeown
Part
Buffer
Sizes
for
Core
Routers
ACM
SIGCOMM
Computer
Communications
Review
ol
35
N¬∫
julio
2005
Woo
1994
T.
Woo
R.
Bindignavle
S.
S.
Lam
SNP
an
interface
for
secure
network
programming
Proc
1994
Summer
USENIX
Boston
MA
junio
1994
p√°gs
45‚Äì58
Wood
2009
L.
Wood
Lloyds
Satellites
Constellations
http://www.ee.surrey.ac.uk/Personal/L.
Wood
constellations
iridium.html
REFERENCIAS
791
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
791[Xanadu
2009
P√°gina
principal
proyecto
Xanadu
http://www.xanadu.com/
Xiao
2000
X.
Xiao
A.
Hannan
B.
Bailey
L.
Traffic
Engineering
with
MPLS
in
the
Internet
IEEE
Network
marzo
abril
2000
Xie
2008
H.
Xie
.R.
Yang
A.
Krishnamurthy
Liu
A.
Silberschatz
P4P
Provider
Portal
for
Applications
Proc
ACM
SIGCOMM
Seattle
agosto
2008
Yannuzzi
2005
M.
Yannuzzi
X.
Masip-Bruin
O.
Bonaventure
Open
Issues
in
Interdomain
Routing
Survey
IEEE
Network
Magazine
nov./dic
2005
Yavatkar
1994]R.
Yavatkar
N.
Bhagwat
Improving
End-to-End
Performance
of
TCP
over
Mobile
Internetworks
Proc
Mobile
94
Workshop
on
Mobile
Computing
Systems
and
Applications
diciembre
1994
Youtube
2009
P√°gina
principal
Youtube
www.youtube.com
Yu
2006
H.
Yu
M.
Kaminsky
P.
B.
Gibbons
A.
Flaxman
SybilGuard
Defending
Against
Sybil
Attacks
via
Social
Networks
Proc
2006
ACM
Pisa
Italia
septiembre
2006
Zegura
1997
E.
Zegura
K.
Calvert
M.
Donahoo
Quantitative
Comparison
of
Graph-based
Models
for
Internet
Topology
IEEE
ACM
Transactions
on
Networking
Vo
1997
V√©ase
http://www.cc.gatech.edu/projects/gtim
obtener
paquete
software
permite
generar
redes
estructura
red
terminal
tr√°nsito
Zhang
1993
L.
Zhang
S.
Deering
D.
Estrin
S.
Shenker
D.
Zappala
RSVP
New
Resource
Reservation
Protocol
IEEE
Network
Magazine
ol
N¬∫
septiembre
1993
p√°gs
8‚Äì18
Zhao
2004
B.
Zhao
L.
Huang
J.
Stribling
S.
C.
Rhea
A.
D.
Joseph
J.
Kubiatowicz
Tapestry
AR
IEEE
Journal
on
Selected
Areas
in
Communications
ol
22
N¬∫
enero
2004
Zimmerman
1980
H.
Zimmerman
OS1
Reference
Model-The
ISO
Model
of
Architecture
for
Open
Systems
Interconnection
IEEE
Transactions
on
Communications
Vo
p√°gs
425‚Äì432
Zimmermann
2009
P.
Zimmermann
Why
do
you
need
PGP
http://www.pgpi.org/doc/whypgp/
en/
792
REFERENCIAS
Z01_KURO9675_05_SE_REF.qxd
21/3/10
15:02
P√°gina
792√çndice
Abandono
pares
149‚Äì150
ABR
Available
Bit
Rate
servicio
256
262‚Äì265
306
Acceso
m√∫ltiple
420
430‚Äì443
454‚Äì458
506‚Äì508
acceso
celular
Internet
529‚Äì535
acceso
m√∫ltiple
sondeo
portadora
CSMA
439‚Äì441
454‚Äì458
514‚Äì520
acceso
m√∫ltiple
divisi√≥n
c√≥digo
CDMA
506‚Äì508
ALOHA
protocolos
434‚Äì438
canales
difusi√≥n
417
430
capa
enlace
420
430‚Äì443
454‚Äì458
colisiones
431‚Äì433
439‚Äì441
514‚Äì520
Ethernet
454‚Äì458
FDDI
443
multiplexaci√≥n
divisi√≥n
frecuencia
FDM
433‚Äì434
multiplexaci√≥n
divisi√≥n
tiempo
TDM
433‚Äì434
protocolos
acceso
aleatorio
434‚Äì442
protocolos
particionamiento
canal
433‚Äì434
protocolos
toma
turnos
441‚Äì442
redes
√°rea
local
LAN
442‚Äì443
508‚Äì529
redes
inal√°mbricas
506‚Äì535
retardo
propagaci√≥n
canal
439‚Äì440
tramas
431‚Äì433
WiFi
508‚Äì529
Acceso
telef√≥nico
redes
13‚Äì14
nivel
servicio
SLA
738
fases
154
230
250‚Äì251
Acumulativo
reconocimiento
219
234
Ad
hoc
redes
inal√°mbricas
501‚Äì502
Adaptaci√≥n
velocidad
WiFi
524‚Äì525
Adaptador
red
422‚Äì424
Agente
ajeno
537
544
Agentes
usuario
115
Agregaci√≥n
direcciones
333
Algoritmo
descifrado
657
Algoritmo
enrutamiento
global
355
Algoritmo
vector
distancias
DV
355
360‚Äì367
algoritmo
enrutamiento
descentral-
izado
355
360‚Äì361
Bellman-Ford
ecuaci√≥n
360‚Äì361
bucle
enrutamiento
365
coste
enlace
362‚Äì363
inversa
envenenada
365‚Äì366
relaci√≥n
rutas
coste
m√≠nimo
360
tablas
enrutamiento
362‚Äì363
algoritmos
enlaces
366‚Äì367
Algoritmos
basados
conmutaci√≥n
circuitos
367
Algoritmos
enrutamiento
din√°mico
355
Algoritmos
descentralizados
355
360‚Äì361
Algoritmos
est√°ticos
355
Alias
servidor
correo
127
ALOHA
particiones
protocolo
435‚Äì438
ALOHA
protocolos
434‚Äì438
√Åmbito
direcciones
privadas
NAT
340
Ancho
banda
26
89
267
607
aplicaciones
sensibles
89
escalado
ancho
banda
RTCP
607
frecuencia
26‚Äì27
tanteo
267
Anycast
direcci√≥n
347
AON
Active
Optical
Network
17
AP
V√©ase
Punto
acceso
API
Application
Programming
Interface
Aplicaciones
red
49
82‚Äì86
95‚Äì151
correo
electr√≥nico
115‚Äì125
FTP
protocolo
49
112‚Äì114
P2P
Peer-to-Peer
82‚Äì85
139‚Äì151
protocolos
capa
aplicaci√≥n
94
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
793Aplicaciones
red
continuaci√≥n
sistema
nombres
dominio
DNS
49
125‚Äì139
World
Wide
Web
95‚Äì112
Aplicaciones
distribuidas
5‚Äì6
10
AQM
Active
Queue
Management
321
√Årbol
basado
origen
395‚Äì396
√Årbol
compartido
grupo
394‚Äì395
√Årbol
recubrimiento
388‚Äì390
√Årea
troncal
OSPF
377
ARP
Address
Resolution
Protocol
445‚Äì450
direccionamiento
capa
enlace
445‚Äì450
env√≠o
datagramas
nodos
448‚Äì450
paquete
447
subredes
448‚Äì450
tabla
447‚Äì448
ARPA
Advanced
Research
Projects
Agency
59‚Äì62
ARQ
Automatic
Repeat
Request
protocolos
207‚Äì215
bit
alternante
214‚Äì215
parada
espera
208‚Äì209
reconocimientos
ACK
206‚Äì211
reconocimientos
negativos
NAK
206‚Äì211
Arranque
lento
TCP
268‚Äì269
ASN.1
Abstract
Syntax
Notation
One
746
749‚Äì750
757‚Äì760
Asociaci√≥n
seguridad
SA
700‚Äì701
Ataque
interposici√≥n
57
684
Ataque
inundaci√≥n
SYN
254‚Äì255
Ataque
reproducci√≥n
680‚Äì682
ATM
Asynchronous
Transfer
Mode
pro-
tocolo
256
262‚Äì265
Autenticaci√≥n
punto
terminal
654
669‚Äì684
ataque
reproducci√≥n
680‚Äì682
ataque
interposici√≥n
684
autenticaci√≥n
clave
p√∫blica
682‚Äì684
n√∫meros
distintivos
680‚Äì682
Autenticaci√≥n
clave
672
Aut√≥nomos
sistemas
AS
368‚Äì384
enrutamiento
patata
caliente
370
enrutamiento
interno
sistema
aut√≥nomo
368‚Äì369
371‚Äì377
383
ruta
abierta
corta
OSPG
372
375‚Äì377
protocolo
enrutamiento
sis-
temas
aut√≥nomos
369‚Äì370
Protocolo
informaci√≥n
enrutamiento
RIP
371‚Äì375
Protocolo
pasarela
frontera
BGP
377‚Äì384
protocolos
algoritmo
enrutamiento
367‚Äì371
routers
pasarela
368‚Äì369
Autoridad
certificaci√≥n
CA
678‚Äì680
Base
datos
asociaciones
seguridad
SAD
701
Base
datos
pol√≠ticas
seguridad
SPD
704
Base
informaci√≥n
gesti√≥n
V√©ase
MIB
Bellman-Ford
ecuaci√≥n
360‚Äì361
BER
Basic
Encoding
Rules
760
BER
Bit
Error
Rate
504‚Äì505
BGP
Border
Gateway
Protocol
377‚Äì384
atributos
379‚Äì381
enrutamiento
sistemas
aut√≥nomos
377‚Äì384
pares
378‚Äì381
pol√≠tica
enrutamiento
382‚Äì384
prefijos
379
selecci√≥n
ruta
381‚Äì382
sesi√≥n
externa
eBGP
378‚Äì379
sesi√≥n
interna
iBGP
378‚Äì379
Bidireccional
transferencia
datos
205
Bit
alternante
protocolo
214‚Äì215
Bit
incremento
265
Bit
errores
206‚Äì215
BitTorrent
142‚Äì145
183‚Äì184
Bloques
direcciones
IP
335
Bluetooth
IEEE
802.15.1
526‚Äì527
Botnet
54
Buffer
cliente
580‚Äì581
Buffer
emisi√≥n
230
Buffer
salida
cola
28
Caballo
Troya
55
794
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
794Cabecera
campos
56
232
602‚Äì603
Cable
cobre
par
trenzado
21‚Äì22
Cable
redes
15‚Äì17
Cach√©
web
servidor
proxy
107‚Äì111
Cach√©
107‚Äì111
132‚Äì134
Calidad
servicio
QoS
632‚Äì638
admisi√≥n
llamadas
633‚Äì637
establecimiento
llamadas
633‚Äì637
garant√≠as
multimedia
633‚Äì638
Internet
servicios
637‚Äì638
reserva
recursos
633
RSVP
protocolo
reserva
recursos
636‚Äì637
se√±alizaci√≥n
firme
636
se√±alizaci√≥n
fr√°gil
636
servicios
integrados
Intserv
637‚Äì638
CAM
Content
Addressable
Memory
316
Canales
radio
terrestres
22
Canales
radio
v√≠a
sat√©lite
23
Capa
aplicaci√≥n
49
52
81‚Äì184
aplicaciones
red
49
82‚Äì85
94‚Äì151
arquitecturas
aplicaciones
red
82‚Äì85
correo
electr√≥nico
e-mail
115‚Äì125
direccionamiento
procesos
93
HTTP
protocolo
49
95‚Äì111
120
Interfaz
programaci√≥n
aplicaciones
API
87
mensajes
49
52
86
P2P
82‚Äì85
125‚Äì151
procesos
comunicaci√≥n
86‚Äì87
Protocolo
transferencia
archivos
FTP
49
112‚Äì114
protocolos
49
94
seguridad
90
servicios
transporte
88‚Äì94
sistema
nombres
dominio
DNS
49
125‚Äì139
SMTP
protocolo
49
115‚Äì122
socket
programaci√≥n
87
151‚Äì167
SSL
Secure
Socket
Layer
92
tasa
transferencia
89
TCP
protocolo
50
90‚Äì91
92
96‚Äì100
151‚Äì161
temporizaci√≥n
89
transferencia
datos
fiable
88
UDP
protocolo
50
91‚Äì93
151‚Äì167
World
Wide
Web
95‚Äì112
Capa
enlace
53
55
417‚Äì496
515‚Äì517
acceso
m√∫ltiple
420
430‚Äì443
454‚Äì458
adaptador
red
422‚Äì424
ARP
protocolo
445‚Äì450
canales
difusi√≥n
417
430
conexiones
punto
punto
417‚Äì419
430
470
Conmutaci√≥n
etiquetas
multiproto-
colo
MPLS
474‚Äì477
conmutador
switch
451
460‚Äì470
control
acceso
MAC
420
444‚Äì445
direccionamiento
444‚Äì450
Ethernet
53
450‚Äì460
implementaci√≥n
422‚Äì424
nodos
419
421
444‚Äì450
PPP
protocolo
53
419
470‚Äì474
protocolo
50
reconocimientos
WiFi
515‚Äì517
redes
√°rea
local
LAN
442‚Äì443
450‚Äì452
460‚Äì470
servicios
proporcionados
419‚Äì421
solicitudes
p√°ginas
web
477‚Äì483
tramas
53
55
419‚Äì420
431‚Äì433
452‚Äì454
Capa
red
50
52
186‚Äì190
299‚Äì416
697‚Äì705
ABR
servicio
redes
ATM
306
algoritmos
enrutamiento
300‚Äì304
321‚Äì322
353‚Äì371
arquitectura
router
312‚Äì323
capa
transporte
186‚Äì190
CBR
servicio
redes
ATM
306
configuraci√≥n
conexi√≥n
303
306‚Äì312
datagramas
50
52
323‚Äì329
344‚Äì351
direccionamiento
329‚Äì342
345
enrutamiento
difusi√≥n
382‚Äì393
enrutamiento
multidifusi√≥n
393‚Äì397
enrutamiento
299‚Äì304
353‚Äì356
367‚Äì397
ICMP
protocolo
343‚Äì345
IPsec
protocolo
352‚Äì353
697‚Äì704
modelos
servicio
304‚Äì306
√çNDICE
795
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
795Capa
red
continuaci√≥n
protocolo
50
Protocolo
Internet
IP
323‚Äì353
redes
circuitos
virtuales
VC
306‚Äì307
312
redes
datagramas
306‚Äì307
310‚Äì312
redes
privadas
virtuales
VPN
697‚Äì704
reenv√≠o
299‚Äì304
323‚Äì353
Capa
sockets
seguros
V√©ase
SSL
Capa
f√≠sica
51
Capas
protocolos
46‚Äì53
arquitectura
capas
46‚Äì51
capa
aplicaci√≥n
49
capa
enlace
50
capa
transporte
49
capa
f√≠sica
51
datagramas
50
52‚Äì53
mensajes
49
52‚Äì53
modelo
referencia
OSI
51
modelo
servicio
48‚Äì49
pila
protocolos
48
redes
computadoras
49‚Äì51
segmentos
50
52‚Äì53
tramas
50
52‚Äì53
Carga
√∫til
campo
53
520
CBR
servicio
redes
ATM
306
CDMA
Code
Division
Multiple
Access
506‚Äì508
CDN
Content
Distribution
Network
569
573
595‚Äì598
Celdas
531
gesti√≥n
recursos
RM
264
Centro
conmutaci√≥n
servicios
m√≥viles
MSC
549
551‚Äì554
Centro
conmutaci√≥n
m√≥vil
MSC
533
Centro
conmutaci√≥n
pasarela
servi-
cios
m√≥viles
GMSC
549
Centro
operaciones
red
V√©ase
NOC
C√©sar
cifrado
658
664
CIDR
Classless
Interdomain
Routing
332‚Äì335
Cifrado
352
654‚Äì655
656‚Äì657
V√©ase
Criptograf√≠a
bloque
660‚Äì662
monoalfab√©tico
658‚Äì660
Cifrado
clave
p√∫blica
657
664‚Äì669
676‚Äì679
682‚Äì684
autenticaci√≥n
punto
terminal
usando
682‚Äì684
Autoridad
certificaci√≥n
CA
678‚Äì679
claves
p√∫blica
privada
665
Diffie-Helman
algoritmo
intercam-
bio
claves
664‚Äì665
integridad
mensajes
678‚Äì679
RSA
algoritmo
666‚Äì669
Claves
665
668
672
clave
sesi√≥n
668
clave
privada
665
clave
p√∫blica
665
Clientes
86
Cliente-servidor
arquitectura
83‚Äì85
154‚Äì167
capa
aplicaci√≥n
82‚Äì85
Java
aplicaciones
154‚Äì167
programaci√≥n
sockets
154‚Äì167
TCP
protocolo
151‚Äì161
UDP
protocolo
151‚Äì167
COA
Care-of
Address
539
545
Coaxial
cable
22
Cola
buffer
salida
28
Colas
29
34‚Äì45
319‚Äì323
620‚Äì624
bloqueo
HOL
322
prioridad
621‚Äì622
turno
rotatorio
623‚Äì624
equitativas
ponderadas
WFQ
623‚Äì624
gesti√≥n
activa
colas
AQM
321
intensidad
tr√°fico
39
mecanismos
planificaci√≥n
620‚Äì624
p√©rdida
paquetes
29
38‚Äì40
planificador
paquetes
321
entrar-primero
salir
FIFO
620‚Äì621
RED
algoritmo
321
retardos
29
34‚Äì39
routers
capa
red
319‚Äì323
velocidad
entramado
con-
mutaci√≥n
319‚Äì320
Colisiones
V√©ase
CSMA
Carrier
Sense
Multiple
Access
Acceso
m√∫ltiple
Compartici√≥n
archivos
P2P
86
Comportamiento
salto
PHB
Diffserv
630‚Äì631
796
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
796Compresi√≥n
audio
v√≠deo
574‚Äì576
Comprobaci√≥n
redundancia
c√≠clica
CRC
428‚Äì430
520‚Äì521
Comprobaciones
paridad
425‚Äì427
Comunicaci√≥n
l√≥gica
186
Conexiones
punto
punto
enlaces
230
417‚Äì419
430
470
Conexiones
terminal
terminal
25
40‚Äì42
203
262
439‚Äì440
571‚Äì573
587
control
congesti√≥n
262
dise√±o
sistema
UDP
202
garant√≠a
estricta
572
garant√≠a
parcial
572
retardos
40‚Äì42
439‚Äì440
587
servicio
esfuerzo
571‚Äì573
587
servicios
multimedia
572‚Äì573
587
Conmutaci√≥n
circuitos
23
29‚Äì31
conexiones
terminal
terminal
25
conmutaci√≥n
paquetes
comparaci√≥n
23
movimiento
datos
25
28‚Äì29
multiplexaci√≥n
26‚Äì28
multiplexaci√≥n
estad√≠stica
29‚Äì31
periodos
inactividad
27
Conmutaci√≥n
etiquetas
multiprotocolo
MPLS
474‚Äì477
Conmutaci√≥n
paquetes
23‚Äì25
27‚Äì32
34‚Äì45
58‚Äì59
almacenamiento
reenv√≠o
transmisi√≥n
28
buffer
salida
cola
28
conmutaci√≥n
circuitos
comparaci√≥n
29‚Äì31
desarrollo
58
movimiento
datos
25
28‚Äì29
multiplexaci√≥n
estad√≠stica
29‚Äì31
p√©rdida
paquetes
29
34
38‚Äì40
procesadores
mensajes
interfaz
IMP
59
retardos
35‚Äì44
retardos
cola
29
34‚Äì40
routers
31‚Äì32
303
ruta
sistemas
terminales
switches
capa
enlace
303
tabla
reenv√≠o
31‚Äì32
tasa
transferencia
42‚Äì45
Consultas
DNS
132
Control
conexi√≥n
112
Control
congesti√≥n
189
256‚Äì277
algoritmo
268‚Äì272
arranque
lento
268‚Äì269
asistido
red
262
bit
indicativo
congesti√≥n
CI
264
capa
transporte
189
256‚Äì277
causas
costes
256‚Äì261
celdas
gesti√≥n
recursos
RM
264
conexiones
TCP
paralelo
277
crecimiento
aditivo
decrecimiento
multiplicativo
AIMD
272‚Äì273
enlaces
cuello
botella
274‚Äì277
equidad
274‚Äì277
evitaci√≥n
congesti√≥n
269‚Äì270
intervalo
temporizaci√≥n
267
transferencia
as√≠ncrono
ATM
256
262‚Äì265
recuperaci√≥n
r√°pida
271‚Äì272
tanteo
ancho
banda
267
tasa
transferencia
273
TCP
protocolo
265‚Äì277
terminal
terminal
262
UDP
protocolo
276
velocidad
bit
disponible
ABR
256
262‚Äì265
ventana
congesti√≥n
265‚Äì272
Control
flujo
246‚Äì249
421
Control
trama
campo
522‚Äì523
Cookies
105‚Äì107
Correcci√≥n
errores
FEC
426‚Äì427
592‚Äì593
Correo
electr√≥nico
e-mail
115‚Äì125
684‚Äì691
agentes
usuario
115
basado
Web
125
desarrollo
117
formatos
mensaje
120
IMAP
protocolo
124
PGP
Pretty
Good
Privacy
686
689‚Äì691
POP3
protocolo
122‚Äì124
protocolos
acceso
120‚Äì125
seguridad
684‚Äì691
servidores
correo
115
√çNDICE
797
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
797Correo
electr√≥nico
continuaci√≥n
SMTP
protocolo
49
115‚Äì122
Corresponsal
537
543
Cortafuegos
344
710‚Äì718
filtrado
paquetes
712‚Äì715
filtros
memoria
713‚Äì715
pasarela
aplicaci√≥n
715‚Äì718
TOR
servidor
proxy
717
Crecimiento
aditivo
decrecimiento
multiplicativo
AIMD
control
congesti√≥n
272‚Äì273
Criptograf√≠a
656‚Äì672
algoritmo
cifrado
657
algoritmo
descifrado
657
cifrado
bloque
660‚Äì662
cifrado
C√©sar
658
664
cifrado
clave
p√∫blica
657
664‚Äì669
cifrado
monoalfab√©tico
658‚Äì660
cifrado
polialfab√©tico
659
clave
sesi√≥n
668
clave
privada
665
clave
p√∫blica
665
encadenamiento
bloques
cifrados
CBC
662‚Äì664
funciones
hash
670‚Äì672
RSA
algoritmo
666‚Äì669
sistemas
clave
sim√©trica
658‚Äì664
texto
cifrado
656‚Äì657
CSMA
Carrier
Sense
Multiple
Access
439‚Äì441
454‚Äì458
514‚Äì520
aplicaciones
Ethernet
454‚Äì458
evitaci√≥n
colisiones
CSMA
CA
514‚Äì520
detecci√≥n
colisiones
CSMA
CD
439
454‚Äì458
LAN
inal√°mbrica
WiFi
aplicaciones
514‚Äì520
protocolo
capa
enlace
439‚Äì441
Cubeta
p√©rdidas
vigilancia
624‚Äì627
DARPA
Defense
Advanced
Research
Projects
Agency
60‚Äì62
Datagramas
52
55
323‚Äì329
344‚Äì351
701‚Äì704
Base
datos
pol√≠ticas
seguridad
SPD
704
campos
323‚Äì326
346‚Äì349
fragmentaci√≥n
326‚Äì329
348
inspecci√≥n
seguridad
344
IPsec
701‚Äì704
IPv4
formato
323‚Äì329
IPv6
formato
346‚Äì349
l√≠mite
saltos
348
longitud
325
347
pila
dual
349‚Äì351
Protocolo
Internet
IP
323‚Äì329
345‚Äì349
protocolo
capa
red
50
53
suma
comprobaci√≥n
cabecera
325
348
tiempo
vida
campo
325
Tipo
servicio
TOS
bits
325
transici√≥n
IPv4
IPv6
349‚Äì351
tunelizaci√≥n
350‚Äì351
701‚Äì704
Datos
conexi√≥n
112
DDoS
ataque
56
138‚Äì139
Demultiplexaci√≥n
189‚Äì197
entrega
datos
utilizando
190‚Äì197
n√∫meros
puerto
192‚Äì197
orientado
conexi√≥n
194‚Äì195
conexi√≥n
193‚Äì194
TCP
aplicaciones
194‚Äì197
UDP
aplicaciones
193‚Äì194
Denegaci√≥n
servicio
ataques
55‚Äì56
Denegaci√≥n
servicio
distribuido
DDoS
ataque
56
138‚Äì139
Descompresi√≥n
578
Descubrimiento
agentes
545‚Äì548
Descubrimiento
mensaje
337‚Äì338
Detecci√≥n
aleatoria
temprana
RED
algoritmo
321
DHCP
Dynamic
Host
Configuration
Protocol
336‚Äì339
ACK
mensaje
339
direcciones
IP
capa
red
336‚Äì339
mensaje
descubrimiento
337‚Äì338
mensaje
solicitud
339
oferta
mensaje
338
protocolo
plug-and-play
336
DHT
Distributed
Hash
Table
145‚Äì150
Diffie-Helman
algoritmo
intercambio
claves
664‚Äì665
Diffserv
627‚Äì632
798
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
798aplicaciones
multimedia
627‚Äì632
comportamiento
salto
PHB
630‚Äì631
perfiles
tr√°fico
627‚Äì628
DIFS
Distributed
Inter-frame
Spacing
516
Difusi√≥n
canales
417
430
Dijkstra
algoritmo
356‚Äì360
Dimensionamiento
redes
598‚Äì600
Direcci√≥n
campos
520‚Äì522
Direcci√≥n
cedida
V√©ase
COA
Direcci√≥n
difusi√≥n
445
Direccionamiento
93
329‚Äì342
345
444‚Äì445
538‚Äì539
608‚Äì610
agregaci√≥n
direcciones
333
√°mbito
340
anycast
347
ARP
protocolo
445‚Äì450
bloque
direcciones
335
capa
aplicaci√≥n
94
capa
red
329‚Äì342
345
clases
335
capa
enlace
444‚Äì450
DHCP
protocolo
336‚Äì339
direcci√≥n
ajena
539
direcci√≥n
cedida
COA
539
direcci√≥n
difusi√≥n
445
direcci√≥n
permanente
539
Enrutamiento
dominios
clase
CIDR
332‚Äì335
establecimiento
llamada
SIP
608‚Äì610
gesti√≥n
movilidad
538‚Äì539
host
98
336‚Äì339
independencia
capas
446
interfaz
329‚Äì331
IPv4
329‚Äì342
IPv6
345
MAC
direcciones
444‚Äì445
nodos
444‚Äì450
538‚Äì539
notaci√≥n
decimal
punto
330‚Äì332
prefijo
333
privado
340
Protocolo
Internet
IP
93
329‚Äì342
345
SIP
protocolo
608‚Äì610
subredes
331‚Äì332
448‚Äì450
temporal
336‚Äì337
traducci√≥n
direcciones
red
NAT
339‚Äì342
UPnP
Universal
Plug
and
Play
342
Dispositivos
conmutaci√≥n
451
460‚Äì470
auto-aprendizaje
462‚Äì463
comparaci√≥n
routers
464‚Äì466
capa
enlace
451
460‚Äì470
desventajas
466‚Äì467
dispositivos
plug-and-play
463
envenenamiento
465
Ethernet
451
460‚Äì462
filtrado
460‚Äì462
propiedades
463‚Äì464
redes
√°rea
local
LAN
460‚Äì470
redes
virtuales
√°rea
local
VLAN
466‚Äì470
reenv√≠o
460‚Äì462
transparencia
460
Distribuci√≥n
archivos
P2P
139
DMZ
Demilitarized
Zone
719
DNS
Domain
Name
System
49
125‚Äì139
alias
host
127
alias
servidor
correo
127
almacenamiento
cach√©
132‚Äì134
aplicaciones
red
50
125‚Äì137
base
datos
jer√°rquica
servidores
ra√≠z
129‚Äì132
consultas
132
DDoS
ataque
138‚Äì139
distribuci√≥n
carga
126‚Äì128
IP
direcciones
126‚Äì134
mensajes
134‚Äì136
nombre
host
125
134‚Äì135
problemas
dise√±o
generalizados
128‚Äì129
registros
136‚Äì137
registros
recursos
RR
134‚Äì135
traducci√≥n
nombre
host-direcci√≥n
IP
125‚Äì126
128‚Äì134
DNS
servidores
locales
131‚Äì132
√çNDICE
799
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
799DNS
continuaci√≥n
DNS
servidores
ra√≠z
129‚Äì132
Dominio
nivel
superior
servidores
129‚Äì132
Drop-tail
pol√≠tica
321
DSL
Digital
Subscriber
Line
14‚Äì15
Duraci√≥n
campo
522‚Äì523
DVMRP
Distance-Vector
Multicast
Routing
Protocol
396‚Äì397
EAP
Extensible
Authentication
Protocol
709‚Äì710
EDGE
Enhanced
Data
Rates
for
Global
Evolution
534
EFCI
bit
264
Eficiencia
Ethernet
457
El√°sticas
aplicaciones
89
Emisor
utilizaci√≥n
217‚Äì228
banda
informaci√≥n
113
Encadenamiento
bloques
cifrados
CBC
662‚Äì664
Encapsulaci√≥n
52
541‚Äì542
Enlace
cuello
botella
44
274‚Äì277
Enlaces
inal√°mbricos
499‚Äì500
503‚Äì506
517‚Äì519
conexiones
host
499‚Äì500
desvanecimiento
506
interferencias
503
obstrucci√≥n
504‚Äì505
p√©rdida
propagaci√≥n
503
Preparado
enviar
CTS
518‚Äì519
problemas
terminales
ocultos
505‚Äì506
517‚Äì519
propagaci√≥n
multicamino
503
punto
punto
520
relaci√≥n
se√±al
ruido
SNR
503‚Äì504
Solicitud
transmisi√≥n
RTS
518‚Äì519
tasa
errores
bit
BER
504‚Äì505
Enrutamiento
33‚Äì34
299‚Äì304
353‚Äì356
367‚Äì397
539‚Äì544
545
550
patata
caliente
370
multidifusi√≥n
384‚Äì390
directo
542‚Äì544
encapsulaci√≥n
541‚Äì542
sistemas
aut√≥nomos
369
377‚Äì384
funci√≥n
capa
red
299‚Äì304
grafos
353‚Äì356
indirecto
540‚Äì542
545
interno
sistema
aut√≥nomo
368‚Äì369
371‚Äì377
383
jer√°rquico
367‚Äì384
llamadas
sistemas
m√≥viles
550
mensaje
respuesta
anuncios
372
nodos
m√≥viles
539‚Äì544
n√∫mero
itinerancia
estaci√≥n
m√≥vil
MSRN
550
ruta
abierta
corta
OSPF
372
375‚Äì377
multidifusi√≥n
384
390‚Äì397
problema
enrutamiento
triangular
542
protocolo
localizaci√≥n
usuarios
m√≥viles
543‚Äì544
Protocolo
pasarela
frontera
BGP
377‚Äì384
reenv√≠o
300‚Äì304
reenv√≠o
camino
inverso
RPF
377‚Äì378
396‚Äì397
RIP
protocolo
371‚Äì375
sistemas
aut√≥nomos
AS
368‚Äì384
sistemas
inal√°mbricos
539‚Äì544
545
550
tablas
362‚Äì364
373‚Äì374
Enrutamiento
algoritmos
301‚Äì304
321‚Äì322
353‚Äì371
390
393‚Äì395
basado
conmutaci√≥n
circuitos
367
bucle
enrutamiento
365
colas
321‚Äì322
difusi√≥n
356
390
enlaces
LS
355‚Äì360
366‚Äì367
descentralizado
355
360‚Äì361
Dijkstra
356‚Äì360
din√°mico
355
enrutamiento
jer√°rquico
367‚Äì371
est√°tico
355
funci√≥n
enrutamiento
353‚Äì356
global
355
multidifusi√≥n
393‚Äì395
vector
distancias
355
360‚Äì367
protocolo
enrutamiento
sistemas
aut√≥nomos
369‚Äì370
800
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
800protocolo
enrutamiento
interno
sistema
aut√≥nomo
368
RED
algoritmo
321‚Äì322
sensible
sensible
carga
355
sistemas
aut√≥nomos
AS
368‚Äì371
valores
tabla
reenv√≠o
300‚Äì304
Enrutamiento
difusi√≥n
356
384‚Äì390
algoritmo
356
390
√°rbol
recubrimiento
388‚Äì390
inundaci√≥n
386‚Äì388
reenv√≠o
camino
inverso
RPF
387‚Äì388
unidifusi√≥n
v√≠as
385‚Äì386
Enrutamiento
dominios
clase
V√©ase
CIDR
Enrutamiento
interno
sistema
aut√≥nomo
368‚Äì369
371‚Äì377
383
ruta
abierta
corta
OSPF
372
375‚Äì377
protocolo
algoritmo
368‚Äì369
RIP
protocolo
371‚Äì375
enrutamiento
sistemas
aut√≥nomos
383
Enrutamiento
multidifusi√≥n
384
390‚Äì397
algoritmo
393‚Äì396
aplicaciones
Internet
396‚Äì397
DVMRP
protocolo
396‚Äì397
grupo
multidifusi√≥n
391
indirecci√≥n
direcciones
391
Multidifusi√≥n
independiente
proto-
colo
PIM
protocolo
enrutamiento
396‚Äì397
Protocolo
gesti√≥n
grupos
Internet
IGMP
391‚Äì393
reenv√≠o
camino
inverso
RPF
395‚Äì397
SSM
protocolo
396
Entramado
conmutaci√≥n
313
317‚Äì320
colas
319‚Äì320
funci√≥n
reenv√≠o
router
313
317‚Äì319
velocidad
319‚Äì320
v√≠a
bus
318
v√≠a
memoria
317‚Äì318
v√≠a
red
interconexi√≥n
318
entregar_datos
llamada
203‚Äì205
Entrevistas
Bellovin
Samuel
M.
733‚Äì734
Case
Jeff
764‚Äì765
Cerf
Vinton
G.
415‚Äì416
Cohen
Bram
183‚Äì184
Floyd
Sally
297‚Äì298
Kleinrock
Leonard
79‚Äì80
Lam
Simon
S.
495‚Äì496
Perkins
Charlie
564‚Äì566
Schulzrinne
Henning
650‚Äì652
ER
campo
265
Errores
206‚Äì215
421
424‚Äì430
bits
detecci√≥n
correcci√≥n
424‚Äì425
bits
detectados
423
Comprobaci√≥n
redundancia
c√≠clica
CRC
428‚Äì430
comprobaciones
paridad
425‚Äì428
correcci√≥n
errores
FEC
426‚Äì427
nivel
bit
206‚Äì215
424‚Äì425
servicios
capa
enlace
421
424‚Äì430
servicios
capa
transporte
206‚Äì215
suma
comprobaci√≥n
207
427
transferencia
datos
fiable
rdt
206‚Äì215
Escalabilidad
P2P
140‚Äì142
Espacio
distribuido
tramas
DIFS
516
Espectro
disperso
salto
frecuencia
FHSS
526
Establecimiento
llamada
SIP
608‚Äì610
Establecimiento
llamadas
garant√≠as
QoS
633‚Äì637
Estaci√≥n
base
19
531‚Äì533
controlador
BSC
532
infraestructura
inal√°mbrica
19
531‚Äì533
sistema
BSS
532
transductora
BTS
532
enlaces
LS
algoritmo
355‚Äì360
366‚Äì367
difusi√≥n
356
Dijkstra
356‚Äì360
enrutamiento
global
355
algoritmo
vector
distancias
DV
366‚Äì367
√çNDICE
801
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
801Estado
informaci√≥n
usuario
114
Estructura
informaci√≥n
gesti√≥n
SMI
742‚Äì745
Ethernet
18
51
64‚Äì65
450‚Äì460
acceso
m√∫ltiple
sondeo
portadora
detecci√≥n
colisiones
CSMA
CD
454‚Äì458
aplicaciones
capa
enlace
50
450‚Äì460
conexiones
fiables
453‚Äì454
conmutador
451
460‚Äì462
desarrollo
61
eficiencia
457
estructura
trama
452‚Äì454
hubs
450‚Äì452
repetidor
458
tecnolog√≠a
LAN
450‚Äì452
tecnolog√≠as
458‚Äì460
Etiquetas
VLAN
469‚Äì470
EWMA
Exponential
Weighted
Moving
Average
236‚Äì237
FDDI
Fiber-Distributed
Data
Interface
443
FDM
Frequency-Division
Multiplexing
26‚Äì28
433‚Äì434
FHSS
Frequency-Hopping
Spread
Spectrum
526
Fibra
directa
17
Fibra
hogar
FTTH
redes
17‚Äì18
Fibra
√≥ptica
22
FIFO
First-In-First-Out
cola
620‚Äì621
Filtros
460‚Äì462
712‚Äì715
paquetes
memoria
713‚Äì715
paquetes
712‚Äì715
temporizaci√≥n
236
242‚Äì244
267
control
congesti√≥n
267
intervalos
238
242‚Äì244
retransmisi√≥n
238
243‚Äì244
TCP
protocolo
238
243
267
transferencia
datos
fiable
rdt
239‚Äì241
transferencia
datos
fiable
proce-
samiento
cadena
215‚Äì228
velocidad
emisor
host
243
267
Firmas
digitales
673‚Äì679
Fluctuaci√≥n
571
578
587‚Äì592
paquetes
571
578
587‚Äì592
eliminaci√≥n
578
588‚Äì592
estrategias
retardo
repro-
ducci√≥n
588‚Äì592
flujos
audio
v√≠deo
almacenado
576
591
marcas
tiempo
588
n√∫meros
secuencia
588
redes
multimedia
571
578
588‚Äì592
Flujos
569‚Äì570
577‚Äì585
591
594‚Äì595
acceso
servidor
web
578‚Äì579
buffer
cliente
580‚Äì581
audio
v√≠deo
almacenado
568‚Äì569
577‚Äì581
audio
v√≠deo
vivo
570
entrada
154
salida
154
eliminaci√≥n
fluctuaci√≥n
578
588
recuperaci√≥n
paquetes
perdidos
592‚Äì595
reparaci√≥n
flujos
audio
da√±ados
receptor
594‚Äì595
reproductor
multimedia
578
RTSP
protocolo
576
582‚Äì585
servicios
Internet
577
servidor
580‚Äì581
programaci√≥n
sockets
153‚Äì154
FSM
M√°quina
finitos
205‚Äì206
FTP
File
Transfer
Protocol
49
112‚Äì114
615‚Äì620
aplicaciones
audio
616‚Äì620
comandos
114
conexi√≥n
control
112
conexi√≥n
datos
112
escenarios
aplicaciones
multimedia
616‚Äì620
informaci√≥n
usuario
114
protocolo
capa
aplicaci√≥n
49
112‚Äì114
respuestas
114
banda
informaci√≥n
113
Funci√≥n
medida
Diffserv
630
802
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
802
Gateway
routers
368
Generador
bits
428
Gesti√≥n
activa
colas
AQM
321
Gesti√≥n
potencia
WiFi
525‚Äì526
Gesti√≥n
redes
735‚Äì765
ASN.1
746
749‚Äì750
757‚Äì760
Base
informaci√≥n
gesti√≥n
MIB
741
744‚Äì745
749‚Äì751
centro
operaciones
red
NOC
735
743‚Äì744
entorno
gesti√≥n
est√°ndar
Internet
742‚Äì745
escenarios
735‚Äì739
estructura
informaci√≥n
gesti√≥n
SMI
745‚Äì748
infraestructura
739‚Äì742
SGMP
protocolo
742
SNMP
protocolo
742
751‚Äì757
GET
condicional
mecanismo
111‚Äì112
GMSC
Gateway
Mobile
services
Switching
Center
549
GPRS
General
Packet
Radio
Service
534
Grafos
enrutamiento
353‚Äì356
GSM
Global
System
for
Mobile
Communications
530
532
551‚Äì554
comparaci√≥n
IP
m√≥vil
554
est√°ndares
530
532
transferencia
llamadas
551‚Äì554
Gusanos
55
H.323
est√°ndares
613‚Äì614
Hash
funciones
critpogr√°ficas
670‚Äì672
Hash
tablas
145‚Äì150
abandono
pares
149‚Äì150
circular
147‚Äì149
distribuidas
DHT
145‚Äì150
HFC
Hybrid
Fiber-Coaxial
redes
16
569
H√≠brido
fibra
coaxial
V√©ase
HFC
HLR
Home
Location
Register
549
HOL
bloqueo
322‚Äì323
Hosts
2‚Äì4
93
127
336‚Äì339
498‚Äì502
V√©ase
Nodos
Routers
alias
127
direccionamiento
93
336‚Äì339
inal√°mbricos
498‚Äì502
sistemas
terminales
2‚Äì4
HTTP
HyperText
Transfer
Protocol
49
95‚Äì111
120
conexiones
persistentes
98‚Äì99
conexiones
persistentes
99
cookies
105‚Äì107
formato
mensaje
101‚Äì105
mensaje
respuesta
102‚Äì105
mensaje
solicitud
101‚Äì102
protocolo
capa
aplicaci√≥n
49
95‚Äì105
protocolo
TCP
96‚Äì100
SMTP
comparado
120
tiempo
ida
vuelta
RTT
99‚Äì100
Web
p√°gina
95‚Äì96
World
Wide
Web
95‚Äì105
Hubs
Ethernet
450‚Äì452
Husmeador
paquetes
56‚Äì57
ICMP
Internet
Control
Message
Protocol
343‚Äì345
Identificador
conjunto
servicio
SSID
512
Identificador
origen
sincronizaci√≥n
SSRC
603
IDS
Intrusion
Detection
System
344
718‚Äì721
IEEE
802.11
LAN
inal√°mbrica
V√©ase
WiFi
IETF
Internet
Engineering
Task
Force
est√°ndares
IGMP
Internet
Group
Management
Protocol
391‚Äì393
IKE
Internet
Key
Exchange
704
IMAP
Internet
Mail
Access
Protocol
124
IMP
Interface
Message
Processors
59
Inanici√≥n
581
Indicaci√≥n
congesti√≥n
expl√≠cita
directa
EFCI
bit
264
Indicador
campo
segmento
TCP
232
√çndice
par√°metro
seguridad
SPI
700
Indirecci√≥n
direcciones
391
Ingenier√≠a
tr√°fico
477
Integridad
datos
IPsec
352
Integridad
mensajes
655
669‚Äì679
Autoridad
certificaci√≥n
CA
677‚Äì680
certificaci√≥n
clave
p√∫blica
676‚Äì679
√çNDICE
803
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
803Integridad
mensajes
continuaci√≥n
clave
autenticaci√≥n
672
c√≥digo
autenticaci√≥n
mensaje
MAC
672
firmas
digitales
673‚Äì679
funciones
hash
criptogr√°ficas
670‚Äì672
seguridad
redes
computadoras
655
669‚Äì670
Intercalado
594
Intercambio
claves
Internet
IKE
704
Interfaz
datos
distribuidos
fibra
443
Interfaz
enlace
310‚Äì311
Interfaz
programaci√≥n
aplicaciones
API
Interfaz
329‚Äì331
Internet
1‚Äì66
90‚Äì93
115‚Äì125
189‚Äì190
570‚Äì574
577
742‚Äì745
aplicaciones
distribuidas
5‚Äì6
10
ataques
53‚Äì58
capa
transporte
90‚Äì92
189‚Äì190
capas
protocolo
46‚Äì53
conmutaci√≥n
paquetes
25‚Äì27
30‚Äì34
34‚Äì45
58‚Äì59
correo
electr√≥nico
115‚Äì125
desarrollo
63‚Äì64
entorno
gesti√≥n
red
742‚Äì745
IETF
Internet
Engineering
Task
Force
est√°ndares
medios
f√≠sicos
20‚Äì23
fiabilidad
189
p√©rdida
paquetes
38‚Äì40
protocolo
red
7‚Äì9
redes
acceso
12‚Äì20
redes
computadoras
1‚Äì66
redes
troncales
33
retardos
34‚Äì42
RFC
Requests
for
comments
servicios
flujos
audio
video
577
servicios
transporte
capa
aplicaci√≥n
proporcionados
90‚Äì93
115‚Äì125
sistemas
terminales
hosts
2‚Äì4
20‚Äì23
soporte
multimedia
571‚Äì574
SSL
92
tasa
transferencia
42‚Äì45
TCP
servicios
90‚Äì92
189‚Äì190
telefon√≠a
150‚Äì151
570
UDP
servicios
91‚Äì92
189‚Äì190
Intserv
servicios
integrados
637‚Äì638
Inundaci√≥n
386‚Äì388
Inversa
envenenada
t√©cnica
365‚Äì366
Inversi√≥n
conexi√≥n
342
IP
Internet
Protocol
189‚Äì190
323‚Äì353
474‚Äì477
571
585‚Äì600
V√©ase
IP
m√≥vil
protocolo
aplicaciones
multimedia
571
585‚Äì600
componentes
323
Conmutaci√≥n
etiquetas
multiproto-
colo
MPLS
474‚Äì477
DHCP
protocolo
336‚Äì339
direccionamiento
329‚Äì342
345
Enrutamiento
dominios
clase
CIDR
332‚Äì335
formato
datagramas
323‚Äì329
346‚Äì351
fragmentaci√≥n
326‚Äì329
ICMP
Internet
Control
Message
Protocol
343‚Äì345
IPv4
323‚Äì342
349‚Äì351
IPv6
345‚Äì351
modelo
servicio
189
pila
dual
m√©todo
transici√≥n
versiones
349‚Äì351
reenv√≠o
323‚Äì353
servicio
esfuerzo
189
571
585‚Äì600
servicios
capa
red
189
323‚Äì353
servicios
capa
transporte
189‚Äì190
traducci√≥n
direcciones
red
NAT
339‚Äì342
tunelizaci√≥n
transici√≥n
ver-
siones
350‚Äì351
UPnP
Universal
Plug
and
Play
342
IP
m√≥vil
protocolo
545‚Äì548
554
anuncio
agente
546
comparaci√≥n
est√°ndares
GSM
554
direcci√≥n
cedida
COA
546
enrutamiento
indirecto
545
registro
agente
546‚Äì548
IP
direcciones
93
125
IPS
Intrusion
Prevention
System
344
718
804
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
804IPsec
seguridad
IP
352‚Äì353
697‚Äì705
Asociaci√≥n
seguridad
SA
700‚Äì701
cifrado
352
datagramas
701‚Äì704
IKE
Internet
Key
Exchange
704
integridad
datos
352
negociaci√≥n
critpogr√°fica
352
redes
privadas
virtuales
VPN
697‚Äì704
servicios
capa
red
352‚Äì353
704
IPTV
569
IPv4
323‚Äì342
349‚Äì351
direccionamiento
329‚Äì342
formato
datagrama
323‚Äì329
fragmentaci√≥n
326‚Äì329
transici√≥n
formato
IPv6
349‚Äì351
IPv6
345‚Äì351
direcci√≥n
anycast
347
formato
datagrama
346‚Äì349
pila
dual
349‚Äì351
prioridad
etiquetado
flujo
347
transici√≥n
IPv4
349‚Äì351
tunelizaci√≥n
350‚Äì351
ISP
Internet
Service
Providers
32‚Äì34
igualitarios
34
puntos
presencia
POP
34
redes
troncales
33
sistemas
terminales
4‚Äì5
Iterativa
consulta
132
Java
aplicaciones
154‚Äì167
programaci√≥n
sockets
154‚Äì167
TCP
protocolo
151‚Äì161
UDP
protocolo
161‚Äì167
LAN
Local
Area
Network
20
442‚Äì443
450‚Äì452
460‚Äì470
508‚Äì529
531
705‚Äì710
Bluetooth
IEEE
802.15.1
526‚Äì527
conmutadores
capa
enlace
460‚Äì470
evoluci√≥n
Ethernet
450‚Äì452
FDDI
443
frente
tecnolog√≠a
celular
531
inal√°mbrica
20
508‚Äì529
705‚Äì710
protocolos
acceso
m√∫ltiple
442‚Äì444
508‚Äì529
seguridad
705‚Äì710
token
ring
443
virtual
VLAN
466‚Äì470
WEP
Wired
Equivalent
Privacy
706‚Äì708
WiFi
IEEE
802.11
20
508‚Äì526
705‚Äì710
WiMax
IEEE
802.16
527‚Äì529
L√≠mite
saltos
348
L√≠nea
abonado
digital
V√©ase
DSL
Malware
54‚Äì55
MAN
Metropolitan
Area
Network
443
M√°quina
finitos
FSM
205‚Äì206
Marcas
tiempo
588
603
Marcos
temporales
433‚Äì434
Media
m√≥vil
exponencialmente
ponderada
EWMA
236‚Äì237
Medios
f√≠sicos
20‚Äì23
42
cable
coaxial
22
cable
cobre
par
trenzado
21‚Äì22
canales
radio
terrestre
22
canales
radio
v√≠a
sat√©lite
23
fibra
√≥ptica
22
guiados
21
guiados
21
retardo
empaquetamiento
42
Memoria
direccionable
contenido
V√©ase
CAM
Mensajes
28
49
52‚Äì53
86
101‚Äì105
120
135‚Äì136
186
309
336‚Äì339
343‚Äì345
371‚Äì372
610‚Äì611
aplicaciones
capa
red
309
336‚Äì339
343‚Äì345
371‚Äì372
capa
aplicaci√≥n
49
52‚Äì53
correo
electr√≥nico
formatos
120
respuesta
HTTP
102‚Äì105
respuesta
RIP
anuncios
372
se√±alizaci√≥n
309
solicitud
HTTP
101‚Äì102
DHCP
protocolo
336‚Äì339
HTTP
formato
101‚Äì105
ICMP
protocolo
343‚Äì345
paquetes
28
√çNDICE
805
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
805Mensajes
continuaci√≥n
segmentos
capa
transporte
186
SIP
protocolo
610‚Äì611
sistema
nombres
dominio
DNS
135‚Äì137
Metarchivo
578‚Äì579
M√©todo
basado
nodo
central
389
MIB
Management
Information
Base
741
744‚Äì745
749‚Äì751
Minitel
proyecto
62‚Äì63
Modems
13‚Äì14
16
transferencia
as√≠ncrono
V√©ase
ATM
t√∫nel
datagramas
350‚Äì351
701‚Äì704
Movilidad
gesti√≥n
535‚Äì544
549‚Äì554
agente
ajeno
537
544
corresponsal
537
543
dimensiones
535‚Äì537
direcci√≥n
cedida
COA
539
direccionamiento
538‚Äì539
encapsulaci√≥n
541‚Äì542
enrutamiento
539‚Äì544
550
enrutamiento
directo
542‚Äì544
enrutamiento
indirecto
540‚Äì542
nodos
m√≥viles
538‚Äì544
red
ajena
visitada
537
549
red
537
549
redes
celulares
549‚Äì554
transferencia
llamadas
551‚Äì554
MSC
Mobile
Switching
Center
533
MSRN
Mobile
Station
Roaming
Number
550
MSS
Maximum
Segment
Size
230‚Äì232
MTU
Maximum
Transmission
Unit
230
Multidifusi√≥n
espec√≠fica
origen
proto-
colo
V√©ase
SSM
Multimedia
tiempo
real
570
600‚Äì614
aplicaciones
audio
v√≠deo
570
H.323
est√°ndares
613‚Äì614
Protocolo
control
RTP
RTCP
605‚Äì607
RTP
protocolo
600‚Äì604
SIP
protocolo
607‚Äì613
telefon√≠a
Internet
570
Multiplexaci√≥n
26‚Äì28
29‚Äì31
190‚Äì197
capa
transporte
190‚Äì197
conmutaci√≥n
paquetes
28‚Äì31
estad√≠stica
29‚Äì31
n√∫meros
puerto
192‚Äì197
orientada
conexi√≥n
194‚Äì195
divisi√≥n
frecuencia
FDM
26‚Äì28
divisi√≥n
tiempo
TDM
26‚Äì28
recopilaci√≥n
paso
datos
utilizando
189‚Äì197
redes
conmutaci√≥n
circuitos
26
conexi√≥n
193‚Äì194
sockets
191‚Äì193
TCP
aplicaciones
194‚Äì197
UDP
aplicaciones
193‚Äì194
NAT
Network
Address
Translation
339‚Äì342
Negativo
reconocimiento
NAK
206‚Äì211
Negociaci√≥n
criptogr√°fica
IPsec
352
bit
265
nmap
exploraci√≥n
puertos
196
filtrado
par
145
guiado
21
persistente
conexi√≥n
98‚Äì99
NOC
Network
Operations
Center
735
743‚Äì744
Nodo
soporte
GPRS
V√©ase
SGSN
Nodos
34‚Äì42
353‚Äì355
419
421
444‚Äì450
538‚Äì544
agente
ajeno
537
544
agente
537
capa
enlace
419
421
444‚Äì450
control
flujo
421
corresponsal
537
543
detecci√≥n
errores
421
direccionamiento
444‚Äì450
538‚Äì539
enrutamiento
dispositivos
m√≥viles
539‚Äì544
env√≠o
datagramas
448‚Äì450
grafos
354‚Äì355
m√≥viles
538‚Äì544
retardo
34‚Äì42
transmisi√≥n
semiduplex
full-duplex
421
Nombre
host
125
128‚Äì135
alias
127
almacenamiento
cach√©
DNS
132‚Äì134
806
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
806base
datos
servidores
DNS
129‚Äì132
can√≥nico
127
registros
recursos
RR
134‚Äì135
traducci√≥n
direcci√≥n
IP
125
128‚Äì134
Notaci√≥n
sintaxis
abstracta
V√©ase
ASN.1
Notaci√≥n
decimal
punto
330‚Äì332
nslookup
programa
136
N√∫mero
itinerancia
estaci√≥n
m√≥vil
MSRN
550
N√∫mero
reconocimiento
campo
seg-
mento
TCP
232
N√∫meros
puerto
94
192‚Äì197
destino
94
192
origen
192
exploraci√≥n
196
inversi√≥n
193‚Äì194
servidores
web
196‚Äì197
N√∫meros
secuencia
209
218‚Äì223
232
236
386‚Äì388
522‚Äì523
588
602
ARQ
protocolos
209
campo
232
522‚Äì523
602
eliminaci√≥n
fluctuaci√≥n
588
GBN
protocolo
218‚Äì222
inundaci√≥n
controlada
386
repetici√≥n
selectiva
SR
222
TCP
segmentos
232‚Äì236
N√∫meros
distintivos
680‚Äì682
Objeto
archivos
96
Opciones
campo
segmento
TCP
232
OSPF
Open
Shortest
Path
First
372
375‚Äì377
√°rea
troncal
377
enrutamiento
interno
sistema
aut√≥nomo
371
375‚Äì377
funcionalidades
avanzadas
enrutamiento
375‚Äì376
pesos
enlaces
377
routers
frontera
√°rea
377
P2P
Peer-to-Peer
82‚Äì85
139‚Äì151
arquitectura
83‚Äì85
BitTorrent
protocolo
142‚Äì145
capa
aplicaci√≥n
139‚Äì151
compartici√≥n
archivos
86
distribuci√≥n
archivos
139‚Äì145
escalabilidad
140‚Äì142
Internet
telefon√≠a
150‚Äì151
proceso
cliente
86
proceso
servidor
86
Skype
aplicaci√≥n
150‚Äì151
tabla
hash
distribuida
DHT
145‚Äì150
tiempo
distribuci√≥n
140‚Äì142
Paquete
asfixia
bloqueo
262
Paquetes
28
38‚Äì40
203‚Äì228
262
571
578
586‚Äì595
601‚Äì602
606‚Äì607
asfixia
bloqueo
262
duplicados
209
213
fluctuaci√≥n
571
578
588‚Äì592
n√∫mero
secuencia
209
p√©rdida
29
38‚Äì40
211‚Äì215
586‚Äì587
592‚Äì595
redes
multimedia
571
578
586‚Äì595
601‚Äì602
606‚Äì607
retransmisi√≥n
207
213‚Äì215
RTP
protocolo
601‚Äì602
606‚Äì607
servicios
esfuerzo
571
586‚Äì595
transferencia
datos
fiable
rdt
203‚Äì228
Parada
espera
protocolos
207‚Äì208
216‚Äì217
Pares
143‚Äì145
378‚Äì379
ISP
igualitarios
34
filtrados
145
Protocolo
pasarela
frontera
BGP
378‚Äì381
Particiones
tiempo
433‚Äì437
Pasarela
aplicaci√≥n
715‚Äì718
Pasarela
routers
368
P√©rdida
propagaci√≥n
503
Perfiles
tr√°fico
Diffserv
629‚Äì630
Pesos
enlaces
OSPF
377
PGP
Pretty
Good
Privacy
686
689‚Äì691
Picored
Bluetooth
526‚Äì527
Pila
dual
m√©todo
IP
349‚Äì351
PIM
Protocol
Independent
Multicast
pro-
tocolo
enrutamiento
396‚Äì397
√çNDICE
807
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
807Planificaci√≥n
mecanismos
V√©ase
Colas
Planificador
paquetes
321
PLMN
Public
Land
Mobile
Network
549‚Äì550
Plug-and-play
protocolo
336
463
Poda
396
Pol√≠tica
importaci√≥n
381
PON
Passive
Optical
Network
17
POP
punto
presencia
34
POP3
protocolo
122‚Äì124
PPP
Point-to-Point
Protocol
50
419
470‚Äì474
Prefijos
310‚Äì311
333
379
Preparado
enviar
CTS
518‚Äì519
ruta
abierta
corta
V√©ase
OSPF
Problemas
terminal
oculto
505‚Äì506
517‚Äì519
Procesadores
mensajes
interfaz
IMP
59
Programa
cliente
Programa
servidor
Programaci√≥n
basada
sucesos
221
Propagaci√≥n
multicamino
503
Protocolo
ampliable
autenticaci√≥n
V√©ase
EAP
Protocolo
acceso
correo
Internet
V√©ase
IMAP
Protocolo
configuraci√≥n
din√°mica
host
V√©ase
DHCP
Protocolo
control
transmisi√≥n
V√©ase
TCP
Protocolo
datagramas
usuario
V√©ase
UDP
Protocolo
enrutamiento
multidi-
fusi√≥n
vector
distancias
V√©ase
DVMRP
Protocolo
gesti√≥n
grupos
Internet
V√©ase
IGMP
Protocolo
informaci√≥n
enrutamiento
V√©ase
RIP
Protocolo
inicio
sesi√≥n
V√©ase
SIP
Protocolo
Internet
V√©ase
IP
Protocolo
mensajes
control
Internet
V√©ase
ICMP
Protocolo
pasarela
frontera
V√©ase
BGP
Protocolo
pasarela
interior
V√©ase
Protocolo
enrutamiento
interno
sistema
aut√≥nomo
Protocolo
paso
testigo
442
Protocolo
resoluci√≥n
direcciones
V√©ase
ARP
Protocolo
sondeo
441‚Äì442
Protocolo
transferencia
archivos
V√©ase
FTP
Protocolo
transferencia
hipertexto
V√©ase
HTTP
Protocolo
transmisi√≥n
flujos
tiempo
real
V√©ase
RTSP
Protocolo
transporte
tiempo
real
V√©ase
RTP
Protocolo
punto
punto
V√©ase
PPP
Protocolo
simple
gesti√≥n
red
V√©ase
SNMP
Protocolo
simple
transferencia
correo
V√©ase
SMTP
Protocolos
analog√≠a
humana
7‚Äì8
acceso
aleatorio
434‚Äì442
454‚Äì458
514‚Äì520
enrutamiento
terminal
terminal
31‚Äì32
particionamiento
canal
433‚Äì434
red
8‚Äì9
toma
turnos
441‚Äì442
ventana
deslizante
218
banda
582
IETF
est√°ndares
Proxy
servidor
SIP
611‚Äì613
Puertos
entrada
routers
313‚Äì316
Puertos
salida
routers
314
319
Puntero
datos
urgentes
segmento
TCP
232
Punto
acceso
AP
18
501
511
Punto
cita
389
Punto
presencia
POP
34
QoS.
V√©ase
Calidad
servicio
rdt_enviar
llamada
203‚Äì205
221
rdt_recibir
llamada
203‚Äì205
808
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
808Reconocimientos
206‚Äì211
219
232
236
240‚Äì246
acumulativo
219
234
242
duplicados
210‚Äì211
243‚Äì244
negativos
NAK
206‚Äì210
n√∫mero
232
p√©rdida
241‚Äì242
positivos
ACK
206‚Äì211
240‚Äì242
retransmisi√≥n
r√°pida
244‚Äì246
superpuestos
236
TCP
protocolo
232‚Äì236
240‚Äì246
Recuperaci√≥n
p√©rdida
paquetes
592‚Äì595
correcci√≥n
errores
FEC
592‚Äì593
intercalado
594
reparaci√≥n
flujos
audio
da√±ados
receptor
594‚Äì595
Recuperaci√≥n
r√°pida
TCP
271‚Äì272
Recursiva
consulta
132
RED
Random
Early
Detection
algo-
ritmo
321
Red
ajena
visitada
537
549
Red
√°rea
local
V√©ase
LAN
Red
√°rea
local
virtual
V√©ase
VLAN
Red
√°rea
metropolitana
MAN
443
Red
distribuci√≥n
contenido
V√©ase
CDN
Red
m√≥vil
terrestre
p√∫blica
V√©ase
PLMN
Red
privada
virtual
V√©ase
VPN
Red
537
549
Red
terminal
382‚Äì384
Red
terminal
multiconectada
382
Red
vehicular
ad
hoc
ANET
502
Redes
acceso
12‚Äì21
V√©ase
tambi√©nAcceso
m√∫ltiple
acceso
inal√°mbrico
√°rea
extensa
19
acceso
telef√≥nico
13‚Äì14
cable
15‚Äì17
DSL
14‚Äì15
Ethernet
18
FTTH
17
telco
12‚Äì13
WiFi
18
WiMAX
20
Redes
circuitos
virtuales
VC
306‚Äì309
312
conexi√≥n
308
fase
configuraci√≥n
308‚Äì309
fase
terminaci√≥n
309
fase
transferencia
datos
309
mensajes
se√±alizaci√≥n
309
or√≠genes
312
routers
307‚Äì309
servicio
orientado
conexi√≥n
306‚Äì307
Redes
computadoras
1‚Äì80
82‚Äì85
653‚Äì697
V√©ase
Internet
acceso
inal√°mbrico
√°rea
extensa
18‚Äì20
acceso
telef√≥nico
13‚Äì14
arquitectura
82‚Äì85
arquitectura
capas
46‚Äì52
ataques
53‚Äì58
cable
15‚Äì17
capa
aplicaci√≥n
49
52‚Äì53
82‚Äì85
capas
protocolos
46‚Äì53
conmutaci√≥n
circuitos
23‚Äì31
conmutaci√≥n
paquetes
23‚Äì25
28‚Äì32
34‚Äì45
58‚Äì59
DSL
14‚Äì15
Ethernet
18
FTTH
17
historia
58‚Äì65
ISP
Internet
Service
Provider
32‚Äì34
medios
f√≠sicos
20‚Äì23
multiplexaci√≥n
26‚Äì28
39‚Äì31
n√∫cleo
23‚Äì34
p√©rdida
paquetes
38‚Äì40
programa
cliente
programa
servidor
protocolo
7‚Äì9
redes
acceso
12‚Äì21
retardos
34‚Äì42
seguridad
53‚Äì58
653‚Äì697
sistemas
terminales
hosts
2‚Äì4
20‚Äì23
tasa
transferencia
42‚Äì45
WiFi
18
WiMAX
20
√çNDICE
809
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
809Redes
datagramas
306‚Äì307
310‚Äì312
coincidencia
prefijo
310‚Äì311
interfaz
enlace
310‚Äì311
or√≠genes
312
routers
310‚Äì311
servicio
conexi√≥n
306‚Äì307
Redes
malla
inal√°mbricas
502
Redes
inal√°mbricas
18
497‚Äì566
acceso
inal√°mbrico
√°rea
extensa
20
acceso
m√∫ltiple
divisi√≥n
c√≥digo
CDMA
506‚Äì50
ad
hoc
501‚Äì502
Bluetooth
IEEE
802.15.1
526‚Äì527
enlaces
499‚Äì500
503‚Äì506
estaci√≥n
base
500‚Äì501
512
gesti√≥n
movilidad
535‚Äì544
549‚Äì554
hosts
498‚Äì499
impacto
TCP
555‚Äì556
impacto
UDP
555‚Äì556
infraestructura
502
IP
m√≥vil
545‚Äì548
LAN
18
508‚Äì529
sistemas
celulares
529‚Äì535
549‚Äì554
transferencia
501
551‚Äì554
WiFi
IEEE
802.11
20
508‚Äì526
WiMax
IEEE
802.16
20
527‚Äì529
Redes
m√≥viles
ad
hoc
MANET
502
537
Redes
multimedia
567‚Äì652
aplicaciones
interactivas
tiempo
real
570
600‚Äì614
audio
568‚Äì571
574‚Äì585
588‚Äì592
594‚Äì595
616‚Äì620
calidad
servicio
QoS
633‚Äì638
compresi√≥n
574‚Äì576
fluctuaci√≥n
571
578
588‚Äì592
flujos
569‚Äì570
577‚Äì585
591
594‚Äì595
FTP
aplicaciones
616‚Äì620
mecanismos
planificaci√≥n
colas
620‚Äì624
mecanismos
vigilancia
624‚Äì627
m√∫ltiples
clases
servicios
615‚Äì633
p√©rdida
paquetes
586‚Äì587
592‚Äì595
redes
distribuci√≥n
contenido
CDN
569
573
595‚Äì598
redes
solapadas
multidifusi√≥n
573
RSVP
Resource
ReSerVation
Protocol
636‚Äì637
servicio
esfuerzo
571
585‚Äì600
servicio
diferenciado
Diffserv
627‚Äì633
servicios
integrados
Intserv
637‚Äì638
soporte
Internet
572‚Äì574
v√≠deo
568‚Äì570
574‚Äì585
Redes
√≥pticas
activas
AON
17
Redes
√≥pticas
pasivas
PON
17
Redes
solapadas
multidifusi√≥n
573
Reenv√≠o
31‚Äì32
299‚Äì304
323‚Äì353
387‚Äì388
395‚Äì397
460‚Äì462
conmutadoras
capa
enlace
460‚Äì462
datagramas
325‚Äì329
344‚Äì351
direccionamiento
329‚Äì342
345
enrutamiento
299‚Äì304
387‚Äì388
395‚Äì397
fragmentaci√≥n
326‚Äì329
348
funciones
capa
red
299‚Äì304
323‚Äì353
ICMP
Internet
Control
Message
Protocol
343‚Äì345
IP
protocolo
Internet
323‚Äì353
IPv4
323‚Äì342
349‚Äì351
IPv6
345‚Äì351
camino
inverso
RPF
387‚Äì388
395‚Äì397
seguridad
IPsec
352‚Äì353
tablas
33‚Äì34
299‚Äì304
traducci√≥n
direcciones
red
NAT
339‚Äì342
UPnP
Universal
Plug
and
Play
342
Registrador
SIP
611‚Äì613
Registro
agente
546‚Äì548
Registro
ubicaciones
visitantes
VLR
549
Registro
ubicaciones
HLR
549
Registro
SSL
formato
697
Registros
DNS
136‚Äì137
Reglas
b√°sicas
codificaci√≥n
BER
760
Rellenado
bytes
473‚Äì474
Reparaci√≥n
flujos
audio
da√±ados
receptor
594‚Äì595
810
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
810Repetidor
Ethernet
458
Reproducci√≥n
retardar
588‚Äì592
Retardos
29
34‚Äì42
439‚Äì440
585‚Äì600
comparaci√≥n
retardos
trans-
misi√≥n
propagaci√≥n
37
cola
29
36
38‚Äì40
empaquetamiento
42
procesamiento
35‚Äì36
propagaci√≥n
36‚Äì38
propagaci√≥n
canal
439‚Äì440
sistemas
terminales
42
transmisi√≥n
36
dimensionamiento
redes
598‚Äì600
estrategias
reproducci√≥n
588‚Äì592
fluctuaci√≥n
587‚Äì592
nodal
34‚Äì40
p√©rdida
paquetes
29
38‚Äì40
586‚Äì587
592‚Äì595
redes
conmutaci√≥n
paquetes
34‚Äì42
redes
distribuci√≥n
contenido
CDN
573
595‚Äì598
redes
multimedia
585‚Äì600
servicio
esfuerzo
585‚Äì600
terminal
terminal
40‚Äì42
439‚Äì440
587
traceroute
programa
41‚Äì42
Retransmisi√≥n
r√°pida
244‚Äì246
RFC
Requests
for
comments
RIP
Routing
Information
Protocol
371‚Äì375
RM
celdas
264
Routers
31‚Äì32
300‚Äì304
307‚Äì323
353
368‚Äì371
464‚Äì466
arquitectura
312‚Äì314
arquitectura
capa
red
312‚Äì323
colas
319‚Äì323
comparaci√≥n
conmutadores
capa
enlace
464‚Äì466
destino
353
frontera
√°rea
377
origen
353
pasarela
368‚Äì369
salto
353
entramado
conmutaci√≥n
313
317‚Äì320
funci√≥n
enrutamiento
353
368
predeterminado
353
procesador
enrutamiento
314
puertos
entrada
313‚Äì316
puertos
salida
314
319
red
circuitos
virtuales
307‚Äì309
redes
conmutaci√≥n
paquetes
31‚Äì32
redes
datagramas
310‚Äì311
sistemas
aut√≥nomos
AS
368‚Äì371
switches
capa
enlace
31‚Äì32
303
tablas
reenv√≠o
31‚Äì32
300‚Äì304
velocidad
l√≠nea
315‚Äì316
RPF
Reverse
Path
Forwarding
387‚Äì388
396‚Äì397
RR
registros
recursos
134‚Äì135
RSA
algoritmo
666‚Äì669
RSVP
Resource
ReSerVation
Protocol
636‚Äì637
RTP
Real-time
Transport
Protocol
600‚Äì604
aplicaciones
software
603‚Äì604
cabecera
601‚Äì603
escalado
ancho
banda
RTCP
607
paquetes
601‚Äì602
606‚Äì607
Protocolo
control
RTP
RTCP
605‚Äì607
sesi√≥n
600
RTSP
Real-Time
Streaming
Protocol
576
582‚Äì585
Ruta
354‚Äì355
coste
m√≠nimo
354‚Äì355
360
Sat√©lites
√≥rbita
baja
terrestre
LEO
23
Sat√©lites
geoestacionarios
23
Segmentos
50
52‚Äì53
186
190‚Äì193
201‚Äì203
231‚Äì236
249‚Äì255
campos
cabecera
232‚Äì233
capa
transporte
49
52‚Äì53
186
190‚Äì193
231‚Äì236
conversi√≥n
mensajes
186
estructura
segmento
TCP
231‚Äì233
249‚Äì255
n√∫mero
puerto
campos
190‚Äì193
232
√çNDICE
811
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
811Segmentos
continuaci√≥n
n√∫mero
secuencia
232‚Äì235
suma
comprobaci√≥n
201‚Äì203
231
SYN
249‚Äì255
tama√±o
m√°ximo
MSS
230‚Äì232
transporte
conexi√≥n
201‚Äì203
UDP
estructura
201‚Äì203
unidad
m√°xima
transmisi√≥n
MTU
230
Seguridad
53‚Äì58
90
344
352‚Äì353
653‚Äì697
ataque
reproducci√≥n
680‚Äì682
ataque
interposici√≥n
57
684
ataques
53‚Äì58
autenticaci√≥n
punto
terminal
654
669‚Äì684
capa
aplicaci√≥n
90
capa
red
344
352‚Äì353
cifrado
clave
p√∫blica
657
664‚Äì669
678‚Äì679
682‚Äì684
cifrado
654‚Äì655
656‚Äì657
correo
electr√≥nico
e-mail
684‚Äì691
cortafuegos
344
710‚Äì718
criptograf√≠a
656‚Äì672
ataques
55‚Äì56
funciones
hash
criptogr√°ficas
670‚Äì672
inspecci√≥n
datagramas
344
integridad
mensaje
655
669‚Äì679
IPsec
protocolo
352‚Äì353
697‚Äì704
LAN
inal√°mbrica
705‚Äì710
malware
54‚Äì55
operacional
655
710‚Äì722
packet
sniffers
57
PGP
Pretty
Good
Privacy
686
689‚Äì691
propiedades
comunicaciones
seguras
654‚Äì656
redes
computadoras
53‚Äì58
653‚Äì697
redes
privadas
virtuales
VPN
697‚Äì704
Seguridad
capa
transporte
TLS
691
sistemas
detecci√≥n
intrusiones
IDS
344
718‚Äì721
SSL
691‚Äì697
suplantaci√≥n
IP
57
TCP
protocolo
691‚Äì697
WEP
Wired
Equivalent
Privacy
706‚Äì708
Se√±alizaci√≥n
firme
636
Se√±alizaci√≥n
fr√°gil
636
Se√±alizaci√≥n
mensajes
309
Se√±al-ruido
relaci√≥n
SNR
503‚Äì504
Servicio
entrega
esfuerzo
189
571‚Äì574
585‚Äì600
conexiones
terminal
terminal
retardo
571‚Äì573
587
dimensionamiento
redes
598‚Äì600
fluctuaci√≥n
paquetes
571
587‚Äì588
IP
aplicaciones
189
571‚Äì574
585‚Äì600
limitaciones
586‚Äì588
p√©rdida
paquetes
586‚Äì587
592‚Äì595
redes
distribuci√≥n
contenido
CDN
573
595‚Äì598
Servicio
flujo
bytes
154
Servicio
general
paquetes
radio
GPRS
534
Servicio
universal
comunicaciones
m√≥viles
UMTS
534
Servicios
orientados
conexi√≥n
194‚Äì195
249‚Äì256
306‚Äì307
312
capa
red
306‚Äì307
312
capa
transporte
249‚Äì255
demultiplexaci√≥n
194‚Äì195
gesti√≥n
conexi√≥n
TCP
249‚Äì255
multiplexaci√≥n
194‚Äì195
redes
circuitos
virtuales
VC
306‚Äì307
312
Servicios
conexi√≥n
193‚Äì194
198‚Äì203
306‚Äì307
310‚Äì312
aplicaciones
Internet
199‚Äì200
capa
red
306‚Äì307
310‚Äì312
capa
transporte
193‚Äì194
198‚Äì203
multiplexaci√≥n
demultiplexaci√≥n
193‚Äì194
redes
datagramas
306‚Äì307
310‚Äì312
segmento
estructura
201
suma
comprobaci√≥n
201‚Äì203
UDP
aplicaciones
198‚Äì203
Servidores
86
correo
115
127
DNS
autoritativos
129‚Äì132
SGMP
Simple
Gateway
Monitoring
Protocol
742
812
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
812SGSN
Serving
GPRS
Support
Node
533‚Äì535
SIP
Session
Initiation
Protocol
607‚Äì613
direcciones
610
establecimiento
llamada
608‚Äì610
mensajes
610‚Äì611
registradores
611‚Äì613
servidor
proxy
611‚Äì613
Sistema
basado
anomal√≠as
720
Sistema
basado
firmas
720
Sistema
detecci√≥n
intrusiones
Ve√°se
IDS
Sistema
nombres
dominio
Ve√°se
DNS
Sistema
prevenci√≥n
intrusiones
Ve√°se
IPS
Sistema
global
comunicaciones
m√≥viles
Ve√°se
GSM
Sistemas
celulares
529‚Äì535
549‚Äì554
acceso
Internet
528‚Äì535
acceso
m√∫ltiple
inal√°mbrico
529‚Äì535
ampliaci√≥n
Internet
extended
2.5
533‚Äì535
arquitectura
red
529‚Äì535
clasificaci√≥n
generaciones
530‚Äì531
conexiones
voz
531‚Äì533
enrutamiento
llamadas
550
estaciones
transductoras
532‚Äì533
gesti√≥n
movilidad
549‚Äì554
GSM
est√°ndares
530
532
551‚Äì554
localizaci√≥n
abonados
533
MSC
550‚Äì554
Nodo
soporte
GPRS
SGSN
533‚Äì535
red
m√≥vil
terrestre
p√∫blica
PLMN
549‚Äì550
registro
ubicaci√≥n
visitantes
VLR
549
registro
ubicaciones
HLR
549
tecnolog√≠a
LAN
inal√°mbrica
celular
531
transferencia
llamadas
551‚Äì554
Sistemas
audio
568‚Äì570
574‚Äì585
587‚Äì592
594‚Äì595
616‚Äì620
acceso
servidor
web
578‚Äì579
almacenado
568‚Äì570
576‚Äì581
buffer
cliente
580‚Äì581
compresi√≥n
574‚Äì576
vivo
570
fluctuaci√≥n
578
587‚Äì592
flujos
569‚Äì570
576‚Äì581
FTP
aplicaciones
616‚Äì620
recuperaci√≥n
p√©rdidas
paquetes
592‚Äì593
reparaci√≥n
flujos
receptor
594‚Äì595
reproductor
multimedia
578
RTSP
protocolo
576
582‚Äì585
servicios
flujos
audio
Internet
577
servidor
flujos
580‚Äì581
Sistemas
clave
sim√©trica
658‚Äì664
cifrado
bloque
660‚Äì662
cifrado
C√©sar
658
664
cifrado
monoalfab√©tico
658‚Äì660
cifrado
polialfab√©tico
659
encadenamiento
bloques
cifrados
CBC
662‚Äì664
Sistemas
v√≠deo
568‚Äì570
574‚Äì585
acceso
servidor
web
578‚Äì579
almacenado
568‚Äì569
576‚Äì581
buffer
cliente
580‚Äì581
compresi√≥n
574‚Äì576
flujos
v√≠deo
569‚Äì570
576‚Äì581
reproductor
multimedia
578
RTSP
protocolo
576
582‚Äì585
servicios
flujos
v√≠deo
Internet
577
servidor
flujos
580‚Äì581
v√≠deo
vivo
570
Sistemas
terminales
2‚Äì4
20‚Äì23
42
API
aplicaciones
distribuidas
5‚Äì6
10
clientes
10‚Äì11
dispositivos
10
enlaces
comunicaciones
medios
20‚Äì23
hosts
2‚Äì4
paquetes
Proveedor
servicios
Internet
ISP
4‚Äì5
√çNDICE
813
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
813Sistemas
terminales
continuaci√≥n
retardos
42
routers
ruta
servidores
10‚Äì11
switches
velocidad
transmisi√≥n
Skype
aplicaci√≥n
P2P
150‚Äì151
SLA
Service
Level
Agreement
738
SMTP
Simple
Mail
Transfer
Protocol
49
115‚Äì122
acceso
correo
121‚Äì122
correo
electr√≥nico
115‚Äì122
HTTP
comparado
120
protocolo
capa
aplicaci√≥n
29
115‚Äì122
SNMP
Simple
Network
Management
Protocol
742
751‚Äì757
SNYACK
segmento
249
Sockets
87
190‚Äì193
Sockets
programaci√≥n
87
151‚Äì167
aplicaciones
cliente-servidor
154‚Äì167
flujos
154
Interfaz
programaci√≥n
aplica-
ciones
API
87
interfaz
proceso
red
87
Java
aplicaciones
154‚Äì167
TCP
protocolo
151‚Äì161
UDP
protocolo
151‚Äì167
Solicitud
autom√°tica
repetici√≥n
V√©ase
ARQ
protocolos
Solicitud
comentarios
V√©ase
RFC
Solicitud
transmisi√≥n
RTS
518‚Äì519
SPD
Security
Policy
Database
704
SSID
Service
Set
Identifier
512
SSL
Secure
Sockets
Layer
92
691‚Äì697
cierre
conexi√≥n
697
deducci√≥n
claves
694
fase
693‚Äì694
696‚Äì697
formato
registro
695
seguridad
TCP
92
691‚Äì697
transferencia
datos
694‚Äì695
SSRC
Synchronization
Source
Identifier
603
Subredes
331‚Äì333
448‚Äì450
523‚Äì524
Suma
comprobaci√≥n
201‚Äì203
207
228
231
325
348
427
capa
enlace
427
capa
transporte
201‚Äì203
207
228
232
cabecera
datagrama
325
348
Internet
427
segmentos
UPD
201‚Äì203
TCP
segmento
231
transferencia
datos
fiable
207
228
Suplantaci√≥n
IP
57
SYN
segmentos
TCP
249‚Äì255
Tabla
traducciones
NAT
340
Tablas
hash
distribuidas
DHT
145‚Äì150
Tama√±o
m√°ximo
segmento
V√©ase
MSS
Tarjeta
interfaz
red
NIC
422
Tarjeta
l√≠nea
313
Tasa
errores
bit
504‚Äì505
Tasa
transferencia
42‚Äì45
89
273
aplicaciones
el√°sticas
89
aplicaciones
sensibles
ancho
banda
89
capa
aplicaci√≥n
89
control
congesti√≥n
273
instant√°nea
43
media
43
seguridad
red
42‚Äì45
TCP
protocolo
273
tiempo
ida
vuelta
RTT
273
TCP
Transmission
Control
Protocol
50
90‚Äì94
96‚Äì100
151‚Äì161
189‚Äì190
194‚Äì197
228‚Äì255
265‚Äì277
555‚Äì556
691‚Äì697
fases
154
230
250‚Äì251
aplicaciones
capa
transporte
49
90‚Äì92
189‚Äì190
194‚Äì197
228‚Äì256
265‚Äì277
ataque
inundaci√≥n
SYN
254‚Äì255
cliente-servidor
aplicaci√≥n
154‚Äì161
conexi√≥n
persistente
98‚Äì99
conexi√≥n
persistente
99
conexiones
punto
punto
230
control
congesti√≥n
265‚Äì277
control
flujo
246‚Äì249
demultiplexaci√≥n
194‚Äì197
251‚Äì253
814
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
814estimaci√≥n
tiempo
ida
vuelta
236‚Äì239
estructura
segmento
231‚Äì233
GBN
SR
comparaci√≥n
protocolos
246
gesti√≥n
conexi√≥n
249‚Äì255
HTTP
95‚Äì100
Internet
90‚Äì91
intervalos
temporizaci√≥n
238
241‚Äì244
267
Java
aplicaci√≥n
154‚Äì161
multiplexaci√≥n
194‚Äì197
n√∫meros
secuencia
reconocimiento
233‚Äì236
reconocimientos
ACK
232‚Äì236
240‚Äì246
retransmisi√≥n
r√°pida
244‚Äì246
servicio
flujo
bytes
154
servicio
transferencia
datos
fiable
239‚Äì246
servicios
capa
aplicaci√≥n
50
90‚Äì91
92
96‚Äì100
151‚Äì161
socket
programaci√≥n
151‚Äì161
SSL
92
691‚Äì697
tecnolog√≠a
inal√°mbrica
movilidad
impacto
555‚Äì556
transporte
orientado
conexi√≥n
194‚Äì197
228‚Äì255
TCP
Reno
271‚Äì272
TCP
Tahoe
271‚Äì272
TCP
IP
229
TDL
Top-Level
Domain
servidores
129‚Äì132
TDM
Time-Division
Multiplexing
26‚Äì28
433‚Äì434
Telco
12‚Äì13
Temporizaci√≥n
capa
aplicaci√≥n
89
Texto
cifrado
656‚Äì657
Texto
657
Tiempo
distribuci√≥n
140‚Äì142
Tiempo
envejecimiento
463
Tiempo
ida
vuelta
RTT
99‚Äì100
236‚Äì239
272
Tiempo
vida
campo
325
Tipo
servicio
TOS
bit
325
TLS
Transport
Layer
Security
691
TLV
m√©todo
760
Token
ring
443
TOR
servidor
proxy
717
Torres
telefon√≠a
501
Traceroute
programas
41
Traducci√≥n
direcciones
red
V√©ase
NAT
Tramas
53
55‚Äì56
419‚Äì420
431‚Äì438
452‚Äì454
470
472‚Äì474
513‚Äì514
520‚Äì523
802.11
campos
520‚Äì523
acceso
m√∫ltiple
430‚Äì438
baliza
513
capa
enlace
50
55‚Äì56
419‚Äì420
431‚Äì438
470
473‚Äì474
capa
f√≠sica
51
colisiones
431‚Äì433
conexiones
fiables
453‚Äì454
estructura
trama
Ethernet
452‚Äì454
exploraci√≥n
activa
pasiva
513
LAN
inal√°mbrica
WiFi
513‚Äì514
520‚Äì523
paquete
datos
470
472‚Äì474
particiones
tiempo
433‚Äì438
PPP
protocolo
470
473‚Äì474
rellenado
bytes
473‚Äì474
Transferencia
datos
fiable
rdt
88
190
203‚Äì228
239‚Äì246
aplicaciones
capa
transporte
88
190
203‚Äì228
239‚Äì246
ARQ
protocolos
207‚Äì215
bidireccional
205
canal
errores
bit
protocolo
rdt2.0
206‚Äì211
canal
p√©rdidas
errores
bit
pro-
tocolo
rdt3.0
211‚Äì215
canal
fiable
protocolo
rdt1.0
205‚Äì206
entregar_datos
llamada
203‚Äì205
errores
bit
206‚Äì215
m√°quina
finitos
FSM
205‚Äì206
modelo
servicio
203‚Äì205
n√∫meros
secuencia
209
218
228
paquetes
datos
211‚Äì215
protocolos
parada
espera
207‚Äì208
216‚Äì217
rdt_enviar
llamada
203‚Äì205
221
rdt_recibir
llamada
203‚Äì205
√çNDICE
815
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
815Transferencia
datos
fiable
rdt
continuaci√≥n
reconocimientos
ACK
206‚Äì211
228
240‚Äì241
reconocimientos
negativos
NAK
206‚Äì211
228
repetici√≥n
selectiva
SR
222‚Äì228
246
Retroceder
GBN
protocolo
218‚Äì222
246
servicios
capa
aplicaci√≥n
88‚Äì89
suma
comprobaci√≥n
detecci√≥n
errores
207
228
TCP
servicios
239‚Äì246
unidireccional
205
Transferencia
datos
fiable
procesamiento
cadena
215‚Äì228
protocolo
parada
espera
comparado
216‚Äì217
protocolo
ventana
deslizante
218
reconocimiento
acumulativo
219
repetici√≥n
selectiva
SR
222‚Äì228
Retroceder
GBN
protocolo
218‚Äì222
sucesos
temporizaci√≥n
219
utilizaci√≥n
emisor
217‚Äì228
Transferencia
datos
fiable
udt
204‚Äì205
Transmisi√≥n
almacenamiento
reenv√≠o
28
Transmisi√≥n
retardo
36
Transmisi√≥n
velocidad
Transporte
capa
49
53
88‚Äì94
185‚Äì280
capa
red
186‚Äì189
control
congesti√≥n
189
256‚Äì277
demultiplexaci√≥n
190‚Äì197
Internet
90‚Äì94
189‚Äì190
multiplexaci√≥n
190‚Äì197
n√∫meros
puerto
192‚Äì197
orientado
conexi√≥n
194‚Äì195
228‚Äì256
protocolo
49
segmentos
50
52
186
190‚Äì193
seguridad
90
servicios
186‚Äì190
servicios
temporizaci√≥n
89
servicios
transporte
disponibles
aplicaciones
88‚Äì94
189
servidores
web
196‚Äì197
conexi√≥n
193‚Äì194
198‚Äì203
tasa
transferencia
89
TCP
servicios
49
90‚Äì91
92
189‚Äì190
194‚Äì197
228‚Äì256
265‚Äì277
transferencia
datos
fiable
88
190
203‚Äì228
239‚Äì246
UDP
servicios
50
91‚Äì92
189‚Äì190
193‚Äì194
198‚Äì203
276
Troncalizaci√≥n
VLAN
468‚Äì470
UDP
User
Datagram
Protocol
50
91‚Äì93
161‚Äì168
189‚Äì190
193‚Äì194
198‚Äì203
276
555‚Äì556
aplicaciones
capa
transporte
49
91‚Äì93
189‚Äì190
193‚Äì194
198‚Äì203
277
cliente-servidor
aplicaci√≥n
161‚Äì168
equidad
control
congesti√≥n
276
estructura
segmento
201
Internet
aplicaciones
91‚Äì93
199‚Äì200
Java
aplicaci√≥n
163‚Äì167
multiplexaci√≥n
demultiplexaci√≥n
193‚Äì194
programaci√≥n
sockets
161‚Äì168
servicios
capa
aplicaci√≥n
49
91‚Äì93
161‚Äì168
suma
comprobaci√≥n
201‚Äì203
231
tecnolog√≠a
inal√°mbrica
movilidad
impacto
555‚Äì556
transporte
conexi√≥n
198‚Äì203
UMTS
Universal
Telecommunication
Service
534
Unidad
m√°xima
transmisi√≥n
MTU
230
Unidifusi√≥n
v√≠as
385‚Äì386
Unidireccional
transferencia
datos
205
UPnP
Universal
Plug
and
Play
342
Velocidad
bit
disponible
V√©ase
ABR
Velocidad
chip
CDMA
506‚Äì508
Velocidad
l√≠nea
routers
315‚Äì316
Velocidad
expl√≠cita
ER
campo
265
816
√çNDICE
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
816Velocidades
datos
mejoradas
evoluci√≥n
global
EDGE
534
Ventana
recepci√≥n
232
247
Vigilancia
mecanismos
624‚Äì627
Virus
55
VLAN
Virtual
Local
Area
Network
466‚Äì470
VPN
Virtual
Private
Network
697‚Äì705
Web
correo
electr√≥nico
basado
125
Web
navegadores
96
Web
p√°ginas
95‚Äì96
477‚Äì483
acceso
flujos
audio
v√≠deo
578‚Äì579
aplicaciones
protocolo
red
477‚Äì483
direcciones
IP
477‚Äì480
enrutamiento
dominio
481
HTTP
protocolo
96
interacci√≥n
cliente-servidor
482‚Äì483
metarchivo
578‚Äì579
servidores
web
96
578‚Äì579
solicitudes
477‚Äì483
WEP
Wired
Equivalent
Privacy
706‚Äì708
802.11
protocolo
MAC
514‚Äì520
802.11
trama
520‚Äì523
802.11i
mecanismos
seguridad
708‚Äì721
WFQ
colas
equitativas
ponderadas
623‚Äì624
626
WiFi
18
508‚Äì526
705‚Äì710
adaptaci√≥n
velocidad
524‚Äì525
arquitectura
802.11
510‚Äì514
canales
512‚Äì514
conjunto
servicio
b√°sico
BSS
510
CSMA
evitaci√≥n
colisiones
CSMA
CA
514‚Äì520
enlace
punto
punto
520
est√°ndares
802.11
508‚Äì510
exploraci√≥n
activa
pasiva
513‚Äì514
gesti√≥n
potencia
525‚Äì526
jungla
512
movilidad
523‚Äì524
Preparado
enviar
CTS
518‚Äì519
problemas
terminales
ocultos
517‚Äì519
punto
acceso
AP
511
reconocimiento
capa
enlace
515‚Äì517
seguridad
705‚Äì710
solicitud
transmisi√≥n
RTS
518‚Äì519
subredes
523‚Äì524
tramas
512‚Äì514
520‚Äì523
WEP
706‚Äì708
WiMax
IEEE
802.16
20
527‚Äì529
World
Wide
Web
63‚Äì64
95‚Äì112
cach√©
web
servidor
proxy
107‚Äì111
cookies
105‚Äì107
desarrollo
63‚Äì64
GET
condicional
mecanismo
111‚Äì112
HTTP
protocolo
95‚Äì107
Zona
desmilitarizada
DMZ
719
√çNDICE
817
Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
817Z02_KURO9675_05_SE_IDX.qxd
22/3/10
10:39
P√°gina
818jjj!cXTefbaXWhVTV\ba!Vb
XW
ATSTbSTR^\_dcPS^aPb
Kurose
Ross
Redes
computadoras
principal
libro
texto
aprendizaje
aspectos
b√°sicos
redes
profesores
Jim
Kurose
Keith
Ross
presentaci√≥n
atrac-
tiva
temas
utilizando
enfoque
abajo
tratamiento
redes
Internet
edici√≥n
conserva
√©nfasis
original
digmas
capa
aplicaci√≥n
programaci√≥n
aplicacio
nes
protocolos
capa
superior
fomentando
trans
misi√≥n
experiencia
conceptos
protocolos
redes
libro
incluye
suscripci√≥n
meses
tio
web
complementa
libro
suscripci√≥n
gratuita
proporciona
complementos
apoyo
estudiante
inclu
yendo
U√ä
¬òVi√ä¬´√Ä?V√å¬àV
√É√ä`i√ä¬è>L¬ú√Ä
√å¬ú√Ä¬à¬ú√äV¬ú¬ò√ä7¬à√Äi√É
√Ä¬é
U√ä
√ïi√õi√ä¬´√Ä?V√å¬àV
√É√ä`i√ä¬´√Ä¬ú}√Ä>¬ì>V¬à¬ù¬ò
U√ä
¬´¬´¬èi√å√É√äi¬ò√ä>√õ
√ä¬µ√ïi√ä¬à¬è√ï√É√å√Ä>¬ò√ä`¬à√õi√Ä√É¬ú√É√äV¬ú¬òVi¬´√å¬ú√É√äV¬è>√õi√ä√ä
redes
U√ä
√ïi√É√å¬à¬ú¬ò>√Ä¬à¬ú√É√ä¬à¬ò√åi√Ä
V√å¬à√õ¬ú√É√ä¬µ√ïi√ä¬èi√ä
√û√ï`>√Ä?¬ò√ä
√äi√õ>¬è√ï
√Ä√ä√ä
grado
comprensi√≥n
temas
estudiados
U√ä
¬ò√åi√Äi√É>¬ò√åi√É√äi¬ò¬è>Vi√É√ä
√ä¬ú√å√Ä¬ú√É√ä√ÄiV√ï√Ä√É¬ú√É
James
Kurose
i¬à√å
√ä7
√ä,¬ú√É√É
ATSTbSTR^\_dcPS^aPb
D]T]U^`dTSTbRT]ST]cT
XW\V\¬âa
ca^b[XQa^bSTX]cTa{b
Fred
Halsall
Redes
computadores
Internet
,-
√ä
-
√ä7
-
√ä¬ô√án¬án{¬á√án√ì¬ô¬á√§n√é¬á√é
¬àV¬ú¬è?√É√ä
√ÄV¬à>√ä6?√¢¬µ√ïi√¢
Redes
computadores
arquitecturas
comunicaciones
Supuestos
pr√°cticos
,-
/
√ä
-
√ä¬ô√án¬án{¬á√ì√§x¬á{√à√§√á¬á√§
redes.indd
26/3/10
08:21:18

C++
pedo
C++
pedo
Introducción
archivos
código
fuente
C++
suelen
extensión
.cpp
archivos
encabezado
contienen
código
fuente
suelen
utilizarse
situaciones
especiales
obligatorio
extensión
suele
.h
Expresiones
expresión
combinación
válida
opera
ndos
operadores
expresiones
produce
único
resultado
operando
literal
valor
escrito
forma
explícita
variable
constante
valor
retorno
subprograma
subexpresión
operador
expresiones
caracter
secuencia
caracteres
indica
acción
operandos
expresión
contener
delimitadas
paréntes
is
subexpresion
Evaluar
expresión
significa
efectuar
operaciones
indican
operandos
operadores
evaluando
subexpresiones
hubiera
evaluar
expresiones
orden
precedencia
indica
evalúan
subexpresiones
uego
operadores
aritméticos
comparación
booleanos
términos
generales
evalúan
izquierda
derecha
Instrucciones
instrucción
orden
computadora
instrucciones
terminan
punto
coma
instrucciones
agru
padas
laves
instruccion1
instruccion2
instruccion3
formando
bloque
código
Comentarios
Líneas
código
ignoradas
compilador
línea
comentada
encuentran
caracteres
código
comentada
encerrada
forma
/*comentario*/
Palabras
reservadas
combinaciones
caracteres
fines
específicos
formar
instrucción
palabras
usadas
nombrar
elementos
definid
programador
Variables
variable
contenedor
datos
variable
posee
tipo
dato
nombre
identificador
contenido
Declarar
variable
establecer
tipo
dato
nombre
Definir
variable
establecer
contenido
variable
pue
declarada
definida
cuan
tas
haga
falta
Sintaxis
tipos
datos
primitivos
primitivos
modificadores
tipoDeDato
identificador
//Declaración
identificador
operadorDeAsignacion
expresion
//Definición
modificadores
tipoDeDato
identificador
expresion
//^^Declaración
definición
Tipos
datos
primitivos
tipo
dato
forma
organizar
memoria
declarar
variable
asigna
tipo
dato
forma
deberá
contenido
C++
pedo
tipos
datos
primitivos
C++
ofrece
defecto
int
float
double
char
bool
palabras
reservadas
correspondientes
modificadores
pa
labras
reservadas
cambian
característica
comportamiento
variables
modificadores
tipo
dato
signed
unsigned
char
int
double
indican
soportan
valores
negativos
long
short
char
int
double
válidos
aumentan
disminuyen
rango
valores
tomar
modificador
const
impide
variable
definida
combinarse
múltiples
modificadores
Subprogramas
subprograma
proceso
entra
das
salida
principal
retorno
salidas
secundarias
Declarar
subprograma
establecer
tipo
dato
retorno
nom
bre
identificador
entradas
parámetros
formales
Definir
subprogr
ama
consiste
declararlo
establecer
procedimie
nto
cabo
bloque
instrucciones
subprograma
declararse
múltiples
definido
Múltiples
subprogramas
compartir
identificador
tipo
dato
parámetros
coinciden
llama
sobrecarga
funciones
function
overload
Sintaxis
modificadores
tipoDeDato
identificador
parametros
//Declaración
modificadores
tipoDeDato
identificador
parametros
procedimiento
//Declaración
definición
parámetros
colocados
paréntesis
lista
separada
comas
especificando
modificadores
tipo
dato
identificador
declaración
variable
tratara
Llamar
subprograma
ejecutarlo
pasándole
parámetros
necesita
haciéndolo
seguir
procedimiento
subprograma
llamado
expresión
valor
retorno
operando
Sintaxis
identificador(parametros
//Llamada
simple
subprograma
variable
identificador(parametros
^^Llamada
subprograma
cuyo
valor
retorno
almacenado
variable
ubprograma
retornar
busca
comportamiento
declararlo
colocar
palabra
reservada
void
lugar
modificadores
tipo
dato
subprograma
usado
expresiones
subprograma
declarado
forma
retorne
logra
colocando
instrucciones
return
variable
return
palabra
reservada
indica
finalización
procedimiento
variable
identificador
variable
tipo
dato
especificado
declaración
definición
subprograma
main
función
llamada
automáticamente
ejecutar
programa
Estructuras
control
estructuras
control
formas
ejecutar
in
strucciones
múltiples
dependiendo
condiciones
estructura
condicional
if
else
if
else
permite
ejecutar
bloques
código
dependiendo
valor
expresión
C++
pedo
bucles
inexactos
while
do
while
permiten
ejecutar
instrucciones
cantidad
general
des
conocida
expresión
ucle
ex
acto
for
facili
ta
ejecución
instrucciones
forma
estructurada
claridad
códi
go
logra
finiendo
variable
control
evaluando
expresión
involucra
iteración
ejecutando
bloque
instrucciones
expresión
modificando
variable
control
cuarto
paso
ealizados
forma
clara
principio
bucle
sintaxis
estructuras
documento
C++
Tipos
datos
primitivos
tipos
datos
primitivos
definidos
programadores
C++
conocidos
registros
objetos
C++
ueden
creados
formas
estructuras
struct
clases
class
imilares
struct
heredados
predecesor
C++
class
método
popular
crear
tipos
dato
primitivos
enfocar
explicar
struct
Sintaxis
struct
tipoDeDatoNoPrimitivo
propiedades
métodos
variables
//^^Creación
struct
tipo
dato
primitivo
nombre
identificaremos
struct
variables
lista
variables
tipo
dato
declaradas
momento
tipo
dato
variables
opcionales
elementos
crear
struct
propiedades
variables
struct
declaran
definen
forma
variable
común
métodos
subprogramas
struct
declaran
definen
forma
subprograma
común
Declarar
variable
tipo
dato
primitivo
hacerse
struct
mostrado
variable
tipo
dato
primitivo
Definir
variable
tipo
to
primitivo
siem
pre
sencillo
casos
específicos
string
primitivo
consiste
definir
propiedades
manualmente
acceder
propiedad
método
struct
operador
punto
definir
propiedades
métodos
recuperar
valores
llamarlos
respectivamente
Sintaxis
variable.propiedad
expresion
//Definir
propiedad
variable.metodo
//Llamar
método
variable.propiedad.propiedad
//^^Acceder
propiedad
propiedad
tipo
dato
//primitivo
struct
soportan
construct
ores
métodos
llamados
utomáticamente
declarar
variable
tipo
facilitan
definición
Punteros
punteros
pointers
tipo
especial
variable
guardan
dirección
memoria
variable
tipo
dato
manipular
punteros
operadores
principales
dirección-de
address-
of
derreferencia
dereference
variable
devuelve
dirección
variable
almacenada
puntero
recupera
valor
variable
dirección
almacenada
C++
pedo
declarar
puntero
símbolo
operador
derreferencia
Sintaxis
modificadores
tipoDeDato
identificador
//Declaración
identificador
variable
//Definición
modificadores
tipoDeDato
identificador
variable
//^^Declaración
definición
variable
identificador
//Derreferenciación
punteros
permiten
pasaje
varia
bles
referencia
sub
programas
especificar
parámetro
referencia
Agregar
mbolo
perador
dirección-de
tipo
dato
identificador
parámetro
formal
Indicar
parámetros
formales
punteros
llamar
subprograma
pasarle
punteros
Arreglos
arreglos
espacio
contiguo
memoria
asignado
ubicación
múltiples
valores
tipo
dato
arreglos
caracterizan
dirección
memoria
elemento
elemento
almacenado
puntero
pasar
arreglo
parámetro
subprograma
realidad
pasamos
puntero
cantidad
dimensiones
número
entero
positivo
capacidad
dimensión
cir
cantidad
valores
almacenar
capacidad
define
producto
capacidades
dimensión
Declarar
arreglo
determinar
tipo
dato
identificador
Asignar
memoria
arreglo
determinar
dimensiones
capacidad
lograr
gracias
subprogramas
programados
malloc
Definir
arreglo
valores
elementos
Sintaxis
modificadores
tipoDeDato
identificador[capacidad
//^^Declaración
asignación
memoria
arreglo
unidimensional
modificadores
tipoDeDato
identificador[capacidad1][capacidad2]^
//^^Declaración
asignación
memoria
arreglo
bidimensional
modificadores
tipoDeDato
identificador
//^^Declaración
arreglo
unidimensional
modificadores
tipoDeDato
identificador[3
var1
var2
var3
//^^Declaración
asignación
memoria
definición
arreglo
//unidimensional
modificadores
tipoDeDato
identificador
identificador
tipoDeDato
malloc(sizeof(tipoDeDato
10
/*Esto
declaración
puntero
asignación
memoria
10
elementos
subprograma
malloc*/
acceder
valores
arreglo
colocar
coordenadas
dimensión
corchetes
Sintaxis
identificador[expresion1
expresion2
//Definir
valor
//del
elemento
expresion1
arreglo
identificador
valor
//de
expresion2
variable
identificador[expresion1][expresion2];//Definir
valor
//de
variable
valor
elemento
expresion2
elemento
//expresion1
arreglo
identificador
Preprocesador
preprocesador
programa
llamado
compilador
ompilar
programa
preprocesador
ejecuta
directivas
líneas
empezadas
permite
darle
flexibilidad
código
fuente
directiva
include
permite
dividir
código
programa
archivos
funcionamiento
explicado
archivo
C++

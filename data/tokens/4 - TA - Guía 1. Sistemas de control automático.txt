INGENIERÍA
SISTEMAS
INFORMACIÓN
NIVEL
2024
TECNOLOGÍAS
AUTOMATIZACIÓNTECNOLOGÍAS
AUTOMATIZACIÓN
priSISTEMAS
CONTROL
AUTOMÁTICOGuía
Clasificación
Representación
sistemas
automatizaciónContenidos
SECCIÓN
TEORÍA
Introducción
sistemas
control
iModelado
iiControl
Características
principales
iiiSeñales
ivLazo
abierto
Lazo
cerrado
Clasificación
sistemas
control
iSistema
lineal
iiSistema
invariante
tiempo
iiiSistema
lineal
invariante
tiempo
LTI
ivSistema
causal
vSistema
memoria
viSistema
inversible
Sistemas
control
automático
Página
451
Introducción
sistemas
control
sistemas
control
juegan
papel
crucial
mundo
moderno
especialmente
procesos
automatizados
conocimiento
herramientas
dinámica
control
esencial
garantizar
crecimiento
automatización
reducción
costos
incremento
ganancias
viiSistema
serie
paralelo
Modelo
sistema
espacio
SECCIÓN
PRÁCTICA
4Ejercitación
iiElija
opción
justifique
sistema
iiiDe
enunciado
realice
modelo
correspondiente
iv
Tomamos
ejemplo
modelo
teoría
masa
resorte
codificamos
MatLab
obtener
4.1
Forma
matricial
4.2
Soluciónde
sistema
4.3
Gráficas
solución
sistemavEjemplo
Planteo
modelo
matemático
sistema
continuo.(Homework
SECCIÓN
PRÁCTICA
SOFTWARE
Introducción
aplicación
MatLab
Gráficos
SECCIÓN
PRÁCTICA
COMPETENCIAS
xx
Ejercitación
Sistemas
control
automático
Página
45deﬁnitiva
sistemas
permiten
optimización
recursos
disponibles
fundamental
entorno
competitivo
tecnológicamente
avanzado
Controlar
sistema
implica
capacidad
gestionar
mejorar
procesos
eﬁciente
permitiendo
organizaciones
adaptarse
rápidamente
cambios
demandas
mercado
mundo
conectado
vital
comprender
problemas
desafíos
surgen
integración
tecnologías
avanzadas
diversos
sectores
Entender
importancia
sistemas
control
iniciar
estudio
detallado
Comenzaremos
explorar
características
sistemas
señales
aprenderemos
describirlos
modelos
matemáticos
conocimiento
permitirá
desarrollar
aplicar
estrategias
control
efectivas
optimicen
rendimiento
eﬁciencia
sistemas
automatizados
sistema
control
conﬁguración
estructurada
coordinada
componentes
recibe
entradas
procesa
entradas
genera
salidas
inﬂuir
comportamiento
sistema
ﬁn
alcanzar
objetivo
especíﬁco
generalmente
utilizando
mecanismos
retroalimentación
mantener
estabilidad
compensar
perturbaciones
i.
Modelado
modelado
sistemas
herramienta
fundamental
entender
predecir
comportamiento
diversos
sistemas
físicos
placa
electrónica
hardware
abstractos
conjunto
relaciones
matemáticas
modelado
codiﬁcar
funcionamiento
interno
sistema
creando
representaciones
matemáticas
capturan
dinámicas
comportamientos
modelos
matemáticos
implementados
software
especíﬁcos
facilitando
análisis
optimización
herramientas
computacionales
avanzadas
sistema
combinación
componentes
actúan
interconectados
cumplir
determinado
objetivo
Gráficamente
pensar
sistema
rectángulo
caja
negra
yvariables
actúan
sistema
flechas
entran
sonexcitaciones
entradas
flechas
salen
variables
producidas
porel
sistema
salidas
pensar
sistemas
relación
entradas-salidas
Sistemas
control
automático
Página
45Modelado
Entrada
Salida
enfoques
modelado
útiles
propósitos
control
Modelado
Entrada
Salida
tipo
modelado
centra
describir
relación
estímulos
aplicados
sistema
entradas
respuestas
observadas
salidas
enfoque
especialmente
útil
situaciones
complejidad
interna
sistema
elevada
detalles
internos
completamente
conocidos
accesibles
modelado
desarrollar
entendimiento
práctico
aplicable
comportamiento
sistema
totalidad
relación
entrada
salida
representa
matemáticamente
Función
Transferencia
proceso
Función
Transferencia
herramienta
poderosa
permite
analizar
diseñar
sistemas
control
proporciona
representación
simpliﬁcada
manejable
entradas
transforman
salidas
función
deriva
ecuaciones
diferenciales
describen
sistema
expresa
términos
dominio
Laplace
facilita
análisis
estabilidad
respuesta
sistema
siguientes
guías
trabajo
abordaremos
profundidad
concepto
Función
Transferencia
ii
Control
Características
principales
Controlar
proceso
consiste
mantener
constantes
variables
preﬁjadas
antemano
variables
controladas
ejemplo
Presión
Temperatura
Nivel
Caudal
Humedad
etc.
ejemplo
sistema
control
analicemos
temperatura
cuerpo
temperatura
sube
37ºC
suda
refrescando
cuerpo
temperatura
tiende
bajar
37ºC
cuerpo
involuntariamente
comienza
temblar
contracción
muscular
calienta
cuerpo
normalice
temperatura
caso
Sistema
medida
sensores
Células
nerviosas
piel
esencia
modelado
sistemas
proporciona
comprensión
profunda
ydetallada
operan
sistemas
permitiendo
control
mejoracontinua
Modelado
Entrada
Salida
basa
idea
entradadada
sistema
generará
salida
específica
sistema
control
conjunto
elementos
otrosistema
proceso
planta
permanezca
fiel
programa
establecido
Sistemas
control
automático
Página
45
Señal
consigna
37ºC
Acción
control
temperatura
Sudar
temblar
elementos
sistema
control
trabajan
juntos
monitorear
regular
ajustar
comportamiento
sistema
objetivo
asegurando
opere
especiﬁcaciones
deseadas
sistemas
control
fundamentales
mantener
estabilidad
eﬁciencia
eﬁcacia
procesos
automatizados
permitiendo
funcionamiento
consistente
predecible
Características
Principales
Entradas
Inputs
Señales
datos
representan
variables
desean
controlar
afectan
comportamiento
sistema
Ejemplos
temperatura
velocidad
posición
presión
Salidas
Outputs
respuestas
sistema
controlado
resultan
procesamiento
entradas
Ejemplos
movimiento
motor
cambio
temperatura
ajuste
válvulas
Controlador
componente
sistema
control
procesa
entradas
determina
acciones
necesarias
obtener
salida
deseada
dispositivo
físico
termostato
algoritmo
software
PID
control
Sistema
Controlado
Planta
proceso
dispositivo
cuya
conducta
desea
controlar
Ejemplos
horno
industrial
vehículo
máquina
herramienta
Retroalimentación
Feedback
mecanismo
salida
sistema
devuelve
entrada
ajustarla
corregir
desviación
deseado
retroalimentación
positiva
negativa
sistemas
control
generalmente
utilizan
retroalimentación
negativa
mantener
estabilidad
Perturbaciones
Disturbances
Factores
externos
afectan
rendimiento
sistema
compensados
controlador
iii
Señales
Sistemas
control
automático
Página
45Las
señales
manifestaciones
físicas
procesos
naturales
artiﬁciales
diversas
naturalezas
Características
comunes
dispositivos
circuitos
sistemas
electrónicos
manipulan
señales
eléctricas
monitorear
regular
controlar
diversos
procesos
Señal
continua
señal
continua
función
continua
variables
Ejemplos
señales
distintos
tipos
electro
gramas
usados
medicina
señales
unidimensionales
representan
curvas
función
tiempo
distintos
tipos
radiografías
señales
bidimensionales
resultados
tomografía
axial
computarizada
resonancia
nuclear
magnética
señales
tridimensionales
señales
continuas
entendidas
funciones
continuas
variables
fundamentales
numerosos
aspectos
sistemas
señales
representan
fenómenos
físicos
varían
continua
tiempo
espacio
tales
temperatura
presión
velocidad
corriente
eléctrica
métodos
matemáticos
herramientas
analíticas
utilizan
control
sistemas
especíﬁcamente
desarrollados
tratar
señales
continuas
Dependencia
Variables
señales
funciones
variables
independientes
Portadoras
Información
Contienen
información
comportamiento
naturaleza
fenómeno
físico
cuestión
sistema
control
señal
definir
representaciónfísica
cantidad
variable
transmite
información
elcomportamiento
sistema
Tipo
señal
eléctrica
Gráﬁca
tipo
señal
eléctrica
Señal
analógica
Número
inﬁnito
valores
variación
continua
tiempo
Señal
digital
Número
ﬁnito
valores
variación
discreta
valores
tiempo
Señal
digital
binaria
valores
concretos
señal
eléctrica
adoptar
niveles
tensión
Sistemas
control
automático
Página
45Al
abordar
señales
funciones
continuas
variables
facilita
técnicas
avanzadas
análisis
diseño
tales
transformada
Laplace
transformada
Fourier
indispensables
resolución
problemas
dominio
tiempo
frecuencia
técnicas
permiten
descomponer
estudiar
señales
componentes
fundamentales
facilitando
comprensión
comportamiento
implementación
estrategias
control
adecuadas
Proceso
analógico
proceso
digital
proceso
analógico
involucra
señales
analógicas
señales
continuas
Dichas
señales
deﬁnen
intervalo
tiempo
continuo
describen
ecuaciones
diferenciales
proceso
digital
involucra
señales
digitales
representa
variables
discretas
cambiar
valores
discretos
tiempo
Dichos
instantes
notan
KT
kt
k=0
período
muestreo
estudio
sistemas
control
fundamental
comprender
manejar
procesos
analógicos
digitales
enfoques
ofrece
ventajas
únicas
emplea
contextos
alcanzar
objetivos
especíﬁcos
control
automatización
sistemas
procesos
analógicos
caracterizan
señales
continuas
varían
continua
tiempo
señales
representan
directamente
magnitudes
físicas
temperatura
presión
velocidad
corriente
eléctrica
sistemas
control
analógicos
operan
continua
suelen
emplear
componentes
electrónicos
ampliﬁcadores
operacionales
resistencias
condensadores
inductores
procesar
señales
estudio
procesos
analógicos
esencial
fenómenos
naturales
sistemas
físicos
inherentemente
analógicos
Comprender
trabajar
señales
permite
ingenieros
control
diseñar
sistemas
interactúen
precisa
eﬁciente
mundo
real
técnicas
análisis
mencionadas
transformada
Laplace
ecuaciones
diferenciales
utilizan
ampliamente
modelar
diseñar
sistemas
control
analógicos
procesos
digitales
implican
señales
discretas
varían
pasos
ﬁnitos
tiempo
señales
representan
valores
binarios
procesadas
computadoras
microcontroladores
sistemas
control
digital
convierten
señales
analógicas
mundo
real
señales
digitales
convertidores
analógico-digitales
ADC
procesan
señales
utilizando
algoritmos
implementados
software
estudio
procesos
digitales
crucial
actualidad
creciente
adopción
tecnologías
digitales
aspectos
vida
moderna
sistemas
control
digital
ofrecen
ventajas
signiﬁcativas
capacidad
implementar
algoritmos
complejos
ﬂexibilidad
diseño
facilidad
integración
sistemas
digitales
permiten
implementación
técnicas
avanzadas
control
control
predictivo
control
adaptativo
Integración
proceso
analógico
digital
sistemas
control
modernos
común
encontrar
integración
procesos
analógicos
digitales
integración
permite
aprovechar
mundos
precisión
continuidad
señales
analógicas
ﬂexibilidad
potencia
procesamiento
señales
Sistemas
control
automático
Página
45digitales
ejemplo
sistema
control
industrial
sensores
medir
variables
físicas
continua
analógica
procesamiento
toma
decisiones
realizan
digital
iv
Lazo
abierto
Lazo
cerrado
Lazo
abierto
entrada
elige
base
experiencia
dichos
sistemas
producir
valor
salida
requerido
ve
modiﬁcada
cambio
condiciones
operación
externas
principal
diferencia
información
alimente
regreso
retroalimentación
Ventajas
sencillos
consecuencia
costo
conﬁabilidad
frecuencia
inexactos
descomponen
reemplazan
fácilmente
tostador
automático
sistema
control
lazo
abierto
controlado
regulador
tiempo
tiempo
requerido
tostadas
anticipado
usuario
forma
sistema
control
calidad
tostada
salida
interrumpido
determinado
tiempo
constituye
entrada
acción
control
Lazo
cerrado
señal
retroalimentación
entrada
salida
utiliza
modiﬁcar
entrada
salida
mantenga
constante
cambios
condiciones
operación
Ventajas
exactos
sensible
perturbaciones
cambios
características
componentes
velocidad
respuesta
incrementa
mecanismo
piloto
automático
avión
controla
forman
sistema
control
lazo
cerrado
realimentación
objetivo
mantener
dirección
especíﬁca
avión
cambios
atmosféricos
sistema
ejecutará
tarea
midiendo
continuamente
dirección
instantánea
avión
ajustando
automáticamente
superﬁcies
dirección
timón
aletas
etc.
dirección
instantánea
coincida
especiﬁcada
piloto
operador
ﬁja
anterioridad
piloto
automático
forma
sistema
control
climatizador
automóvil
variación
salida
variable
mide
controlador
modiﬁca
señal
control
estabilice
sistema
situación
sistema
planta
mide
momento
control
información
salida
Planta
Sistemas
control
automático
Página
452
Clasiﬁcación
sistemas
control
clasiﬁcación
sistemas
control
esencial
entender
diseñar
estrategias
efectivas
control
optimicen
rendimiento
procesos
automatizados
Clasiﬁcar
sistemas
permite
comprensión
características
comportamiento
clasiﬁcación
facilita
análisis
teórico
sistemas
crucial
seleccionar
aplicar
técnicas
control
adecuadas
i.
Sistema
lineal
Principio
Homogenenidad
Proporcionalidad
Escabilidad
sistema
cumple
principio
homogeneidad
entrada
multiplicada
escalar
produce
salida
sistema
multiplicada
escalar
Principio
Superposición
Aditividad
sistema
cumple
principio
superposición
entradas
sumadas
pasadas
sistema
lineal
salida
equivalente
suma
entradas
evaluadas
individualmente
sistema
define
lineal
cumple
principios
fundamentales
Principio
homogeneidad
proporcionalidad
escabilidad
Principio
superposición
aditividad
entrada
sistema
lineal
salida
multiplicada
escalar
sistema
salida
multiplicada
Sistemas
control
automático
Página
45Las
propiedades
analizadas
enunciarse
entradas
multiplicadas
factores
respectivamente
suma
entradas
dará
suma
salidas
individualmente
Ejemplos
suma
salida
entrada
independiente
coincide
salida
entradas
sumadas
SISTEMA
LINEAL
propiedades
homogeneidad
superposición
caracterizan
sistemalineal
indican
sistema
responde
proporcional
entradas
yque
respuesta
suma
múltiples
entradas
suma
lasrespuestas
individuales
entradas
f(x
Principio
Homogeneidad
Principio
Superposición
Análisis
salida
variable
separado
Análisis
salida
suma
variables
Sistemas
control
automático
Página
10
45La
suma
salida
entrada
independiente
coincide
salida
entradas
sumadas
SISTEMA
LINEAL
ii
Sistema
invariante
tiempo
sistema
invariante
tiempo
ambas
salidas
idénticas
ﬁgura
retrasada
t0
sistema
invariante
tiempo
descripto
ecuaciones
diferenciales
sistemas
invariantes
tiempo
modelados
ecuaciones
coeﬁcientes
constantes
ecuación
diferencial
coeﬁcientes
constantes
signiﬁca
parámetros
sistema
cambiando
tiempo
entrada
dará
resultado
independientemente
momento
aplicado
Ejemplos
f(x
Principio
Homogeneidad
Principio
Superposición
Análisis
salida
variable
separado
Análisis
salida
suma
variables
sistema
invariante
tiempo
Time-
Invariant
propiedad
quecierta
entrada
dará
salida
independientemente
momentoen
aplicada
sistema
entrada
deﬁnida
tiempo
entrada
deﬁnida
tiempo
t0
y(t
Sistemas
control
automático
Página
11
45Sea
x1(t
salida
y1(t
x2(t
x1
t-t0
demostrar
salidas
iguales
y2(t
y1
t-t0
a.
Salida
y1
t-t0
Dada
x1(t
salida
y1(t
x1(t
x1(t-t0
salida
y1(t-t0
x1(t-t0
b.
Salida
y2(t
Dada
x2(t
salida
y2(t
x2(t
x1(t-t0
desarrollado
puntos
demuestra
y2(t
y1
t-t0
SISTEMA
INVARIANTE
TIEMPO
x1(t
salida
y1(t
x2(t
x1
t-t0
demostrar
salidas
iguales
y2(t
y1
t-t0
a.
Salida
y1
t-t0
Dada
x1(t
salida
y1(t
t.
x1(t
x1(t-t0
salida
y1(t-t0
t-t0
x1
t-t0
b.
Salida
y2(t
Dada
x2(t
salida
y2(t
t.x2(t
t.
x1(t-t0
desarrollado
puntos
demuestra
y2(t
y1
t-t0
SISTEMA
VARIANTE
TIEMPO
iii
Sistema
lineal
invariante
tiempo
LTI
sistemas
LTI
subconjuntos
sistemas
lineales
obedecen
principio
superposición
efecto
aplicar
tiempo
invariante
deﬁnición
sistema
lineal
sección
y(t
t.x
Representa
versión
escalada
desplazada
tiempo
entrada
salida
ﬁgura
Sistemas
control
automático
Página
12
45iv
Sistema
causal
signiﬁca
entrada
recibida
tiempo
t0
sistema
deberá
salida
tiempo
ejemplo
sistema
no-causal
detectar
viene
entrada
salida
entrada
llegue
sistema
causal
tipo
sistema
salida
sistema
instante
tiempo
depende
únicamente
entradas
presentes
pasadas
futuras
característica
esencial
mayoría
sistemas
control
reales
información
futura
generalmente
disponible
gráﬁca
representa
sistema
causal
salida
produce
entrada
ocurrió
tiempo
Ejemplos
v.
Sistema
inversible
forma
sistema
invertible
observar
salida
determinar
entrada
sistema
causal
depende
valores
futuros
entradas
paradeterminar
salida
y(n
x(n)^2
sistema
lineal
causal
y(n
x(2.n
sistema
lineal
causal
sistema
invertible
distintas
entradas
producen
distintas
salidas
Sistemas
control
automático
Página
13
45Un
sistema
inversible
sistema
conocimiento
salida
sistema
determinar
única
entrada
produjo
salida
palabras
sistema
inversible
permite
recuperar
entradas
originales
salidas
observadas
Ejemplos
vi
Sistema
memoria
sistema
memoria
depende
únicamente
entrada
actual
sistema
memoria
depende
entradas
anteriores
entrada
actual
sistema
guarda
información
entradas
anteriores
permite
memoria
comportamiento
sistema
memoria
salida
tiempo
actual
depende
entradas
futuras
típicamente
sistemas
memoria
dependen
entradas
pasadas
caso
especíﬁco
salida
tiempo
actual
depende
entradas
futuras
dependencia
entrada
futura
indica
sistema
necesita
recordar
ocurrido
implica
forma
memoria
sentido
amplio
Ejemplos
y(t)=
2x(t
sistema
inverso
x(t)=1/2
y(t
interconectarlos
serie
obtiene
entrada
original
salida
sistema
inversible
sistema
diferencia
valores
sucesivos
salida
precisamente
valor
entrada
sistema
inverso
y(t)=seno(x(t
función
periódica
período
2π
signiﬁca
múltiples
valores
x(t
seno
valor
ejemplo
seno
π/2
seno
5π/2
sistema
inversible
sistema
memoria
salida
valor
variableindependiente
depende
entrada
instante
tiempo
y(t)=
2x(t
Sistema
memoria
Sistemas
control
automático
Página
14
45vii
Sistema
serie
paralelo
Modelo
sistema
espacio
análisis
diseño
sistemas
control
abordar
representación
sistemas
perspectivas
representación
externa
representación
interna
representación
externa
sistema
centra
relación
directa
señales
entrada
salida
enfoque
utiliza
comprender
entradas
estímulos
afectan
salidas
respuestas
sistema
función
transferencia
herramienta
comúnmente
empleada
representación
proporciona
descripción
matemática
sistema
dominio
frecuencia
función
transferencia
particularmente
útil
análisis
estabilidad
respuesta
frecuencia
sistemas
lineales
invariantes
tiempo
LTI
Sistema
memoria
y(t)=
2x(t+1
Sistema
memoria
sistema
serie
representa
configuración
salida
bloquese
convierte
entrada
formando
cadena
lineal
bloques
sistema
paralelo
bloques
reciben
entradasimultáneamente
salidas
combinan
generalmente
sumándose
paraformar
salida
sistema
Sistema
LTI
serie
sistemas
serie
orden
intercambiado
vea
afectada
salida
sistema
sistemas
series
llamados
sistemas
cascada
Sistema
LTI
paralelo
sistemas
LTI
paralelo
sistema
equivalente
deﬁnido
suma
sistemas
individuales
Sistemas
control
automático
Página
15
45La
representación
interna
enfoca
dinámica
interna
sistema
variables
variables
proporcionan
descripción
completa
sistema
momento
permiten
predecir
comportamiento
futuro
basado
actual
entradas
presentes
modelo
espacio
herramienta
principal
representación
expresado
conjunto
ecuaciones
diferenciales
orden
modelo
espacio
especialmente
potente
sistemas
complejos
multivariables
permite
descripción
detallada
dinámica
interna
sistema
sistema
dinámico
deﬁne
menor
colección
variables
reales
cuyo
valor
determinado
instante
resume
dinámico
sistema
suﬁciente
predecir
evolución
futura
descripción
interna
establece
señales
entrada
salida
relación
indirecta
formaliza
denominadas
ecuaciones
salida
escribimos
caso
variable
continua
vector
mínima
colección
variables
necesarias
describir
completamente
sistema
dispuestas
vector
función
transición
permite
determinar
evolución
vector
determinado
instante
conocimiento
actual
entradas
control
aplicadas
u.
función
lectura
salida
suministra
valor
salidas
actuales
base
información
general
dimensión
vectores
cualquiera
particular
reducen
escalar
sistema
denomina
SISO
single-input
single-output
caso
ambas
dimensiones
fuesen
mayores
unidad
sistema
denomina
MIMO
multiple-input
multiple-
output
representación
interna
representación
variables
relacionarámatemáticamente
salidas
entradas
variables
estadocomo
paso
intermedio
método
trabaja
dominio
tiempo
x’(t)=Ф(x(t),u(t
y(t)=ψ(Ф(x(t),u(t
ecuaciones
x’(t
llaman
ecuaciones
ecuaciones
y(t
llaman
ecuaciones
salida
Sistemas
control
automático
Página
16
45El
conocimiento
vector
determinado
instante
t0
entradas
aplicadas
sistema
momento
permite
salida
sistema
instante
posterior
t.
espacio
proceso
deﬁne
conjunto
contiene
posibles
valores
vector
espacio
vectorial
dimensional
sistemas
dinámicos
lineales
funciones
transición
lectura
aplicaciones
lineales
vector
variables
vector
entradas
vector
salidas
matriz
dinámica
dimensión
matriz
mando
control
dimensión
matriz
salida
lectura
dimensión
matriz
inﬂuencia
directa
entrada
salida
dimensión
suele
nula
mayoría
aplicaciones
sistema
invariante
tiempo
matrices
constantes
sistema
Admite
representación
matricial
representación
matricial
escribirse
conjunto
ecuaciones
diferenciales
orden
ecuación
diferencial
orden
lineal
coeﬁcientes
constantes
llevarse
forma
matricial
ecuación
diferencial
orden
deﬁne
x’(t)=Ax(t
Bu(t
y(t)=Cx(t
Du(t
Sistemas
control
automático
Página
17
45La
representación
matricial
sistema
diagrama
situación
consideremos
x2(t
derivada
x(t
sentido
inverso
obtener
x1(t
signiﬁca
recuperar
x(t
conocimiento
derivada
integrar
desea
recuperar
x1(t
integrar
Generalizando
dada
x^n
recuperar
x(t
integrar
consideramos
ecuación
homogénea
f(t)=0
Sistemas
control
automático
Página
18
45En
forma
general
teoría
control
moderna
basa
descripción
modelo
sistema
ecuaciones
diferenciales
orden
combinarse
ecuación
diferencial
vectorial-
matricial
orden
complejidad
ecuaciones
aumenta
forma
cualitativa
incremento
número
variables
entradas
salidas
métodos
espacio
particularmente
adecuados
cálculos
computadora
representación
matricial
Ejemplos
sistema
ecuaciones
correspondiente
empresa
desarrollo
software
módulos
Prototipo
modelos
desarrollo
evolutivo
Desarrollo
incluye
programación
implementación
prueba
Dada
representación
gráﬁca
Ejemplo
Modelo
Proyecto
Módulos
Prototipo
Producción
Sistemas
control
automático
Página
19
45mismos
pasan
Producción
estima
semana
13%
módulos
Prototipo
pasan
Producción
Inicialmente
750
proyectos
prototipo
módulo
Producción
modelo
representado
software
Vensim
responde
k=0.13
Units
semanas
Modulo
Producción=
INTEG
Desarrollo,0
Units
módulos
Modulo
Prototipo=
INTEG
-Desarrollo,750
Units
módulos
Planteamos
modelo
sistema
ecuaciones
diferenciales
orden
X1(t
Módulos
Prototipo
X2(t
Módulos
Producción
Modelo
masa
simple
resorte
amortiguador
Sistemas
control
automático
Página
20
45Ante
presencia
bacterias
cuerpo
fabrica
anticuerpos
destruyen
anticuerpos
fabrican
tasa
proporcional
número
anticuerpos
bacterias
reproducen
velocidad
proporcional
cantidad
bacterias
momento
ecuaciones
problema
X1(t
Cantidad
ANTICUERPOS
instante
x2(t
Cantidad
BACTERIAS
instante
aplica
método
Transformada
inversa
Laplace
obtener
solución
sistema
ecuación
diferencial
planta
Mx
bx
kx
masa
Kg
constante
amortiguador
constante
resorte
desplazamiento
masa
reacción
resorte
amortiguador
producida
desplazamiento
masa
ecuación
matricial
resultante
gráﬁca
representa
modelo
hidráulico
tanques
interconectados
forma
paralela
ecuación
matricial
resultante
Modelo
anticuerpos
bacterias
Proponemos
a=0.1
x(0)=10
Sistemas
control
automático
Página
21
45Cada
tanque
representado
variable
modelo
describirá
variables
x1
x2
x3
representa
cantidad
sal
tanque
respectivamente
instante
t.
Utilizamos
ecuación
diferencial
simple
representar
matemáticamente
problema
derivada
variable
importancia
modelar
sistemas
continuos
representan
factores
crecen
decaen
función
tasa
determinada
cantidades
iniciales
sal
tanques
salmuera
libra
x1(0
15
x2(0
x3(0
sistema
ecuaciones
Sustituyendo
valores
ecuaciones
obtiene
Modelo
tanques
ﬁgura
presentan
tanques
salmuera
contienen
V1
V2
V3
galones
salmuera
galón
3,785
litros
tanque
ﬂuye
agua
dulce
ﬂuye
salmuera
tanque
tanque
tanque
xi(t
cantidad
libras
sal
tanque
tiempo
i=1,2,3
velocidades
ﬂujo
galones
minuto
determinar
cantidades
sal
tiempo
tanques
salmuera
ki
Vi
Condiciones
Iniciales
x1(0
15
x2(0
x3(0
V1=20
V2=40
V3=50
r=10
gal
min
Encontrar
cantidad
sal
tanque
instante
Sistemas
control
automático
Página
22
45La
solución
sistema
forma
x’(t)=Ax(t
desarrollado
resolver
Transformada
Laplace
solución
indica
cantidad
sal
tanque
t>0
gráﬁca
evolución
tanque
representación
modelo
Diagrama
Simulación
tanque
inﬂuencia
ﬂujo
cuya
ecuación
queda
representada
x’1=-k1x1
tanque
inﬂuencia
ﬂujo
cuya
ecuación
queda
representada
x’2=
k1x1
k2x2
tanque
inﬂuencia
ﬂujo
cuya
ecuación
queda
representada
x’3=
k2x2
k3x3
Sistemas
control
automático
Página
23
454
Ejercitación
Tache
opción
corresponda
enunciado
complete
solicite
obtener
proposiciones
verdaderas
SECCIÓN
PRÁCTICA
a.
y(n)=x
-n
evaluar
función
n=2
n=-2
aﬁrmar
sistema
causal
causal
b.
y(2
depende
implica
sistema
causal
causal
cambio
y(2
depende
implica
sistema
causal
causal
c.
sistemas
físicos
tiempo
real
causales
causales
tiempo
desplaza
d.
salida
depende
valor
entrada
sistema
memoria
e.
función
inversa
introducir
señal
salida
original
devuelva
señal
entrada
sistema
f.
introducir
señal
salida
original
obtener
señal
entrada
sistema
Sistemas
control
automático
Página
24
452
Elija
opción
justiﬁque
sistema
Lineal/
Causal
/Invariante
Lineal/
Causal
Variante
enunciado
realice
modelo
correspondiente
ﬁgura
muestra
Sistema
eléctrico
doble
recinto
-sistema
térmico-
sistema
mantener
ajustar
temperaturas
recintos
acotándolas
valores
teniendo
parámetros
físicos
recintos
recintos
contienen
ﬂuidos
afectan
modelo
propuesto
propiedades
físicas
químicas
varían
entrada
salida
ﬂuido
recintos
período
ensayo
sistema
modelado
mostrar
interacción
recintos
entrada
resistencia
eléctrica
afecta
recinto
exterior
ﬁgura
ve
modelo
recintos
pierden
temperatura
energía
absorbida
recinto
recinto
exterior
x2
recibe
energía
entrada
recibe
energía
calórica
aporta
ambiente
exterior
Considerando
constante
temperatura
ambiente
compensa
término
valor
0,25Tamb
g.
sistemas
cuyas
señales
continuas
tiempo
describirse
ecuaciones
diferenciales
diferencias
sistemas
variables
cambiar
valores
discreto
tiempo
describirse
ecuaciones
h.
y(n
n.
x(n
sistema
lineal
lineal
variante
invariante
tiempo
causal
causal
estable
inestable
inversible
inversible
i.
función
lineal
Sistemas
control
automático
Página
25
45Se
tomará
salida
temperatura
recinto
interior
toman
siguientes
parámetros
Condiciones
iniciales
Obtenga
Descripción
modelo
Ecuaciones
Aplicar
condiciones
iniciales
obtener
modelo
Representación
matricial
sistema
Tomamos
ejemplo
modelo
teoría
masa
resorte
codiﬁcamos
MatLab
obtener
4.1
Forma
matricial
4.2
Solución
sistema
4.3
Gráﬁcas
solución
sistema
Ejemplo
Planteo
modelo
matemático
sistema
continuo
Homework
u(t
cantidad
calor
entrada
recinto
.(calentador
eléctrico
T0
Tj
temperaturas
exterior
horno
ambiente
recinto
recinto
interior
respectivamente
Ci
Cj
capacidades
caloríﬁcas
espacio
interior
exterior
respectivamente
hi
hj
coeﬁcientes
transmisión
calor
superﬁcie
interior
exterior
respectivamente
u(t)=0,5
T0=-0,25Tamb
Ci=2
Cj=0.75
hi,=0.5
hj
Sistemas
control
automático
Página
26
45Sistemas
control
automático
Página
27
455
Introducción
aplicación
MatLab
i.
Matlab
Características
Principales
Software
Matemático
Entorno
Integrado
software
MatLab
desarrolló
Laboratorio
matrices
elemento
básico
matriz
sistema
interactivo
lenguaje
programación
cómputos
cientíﬁco
técnico
general
MATLAB
nombre
abreviado
MATrix
LABoratory
programa
cálculos
numéricos
vectores
matrices
caso
particular
trabajar
números
escalares
reales
complejos
MATLAB
lenguaje
computación
técnica
alto
nivel
entorno
interactivo
desarrollo
algoritmos
visualización
datos
análisis
datos
cálculo
numérico
MATLAB
resolver
problemas
cálculo
técnico
rápidamente
lenguajes
programación
tradicionales
tales
C++
FORTRAN
usarlo
amplia
gama
aplicaciones
incluyen
procesamiento
señales
imágenes
comunicaciones
diseño
sistemas
control
sistemas
prueba
medición
modelado
análisis
ﬁnanciero
biología
computacional
conjuntos
herramientas
complementarios
colecciones
funciones
propósitos
especiales
disponibles
separado
amplían
entorno
MATLAB
permitiendo
resolver
problemas
especiales
áreas
aplicación
contiene
serie
funciones
documentar
compartir
trabajo
integrar
código
MATLAB
lenguajes
aplicaciones
distribuir
algoritmos
aplicaciones
desarrollo
usando
MATLAB
Características
Principales
Lenguaje
alto
nivel
cálculo
técnico
Entorno
desarrollo
gestión
código
archivos
datos
SECCIÓN
PRÁCTICA
SOFTWARE
Sistemas
control
automático
Página
28
453
Herramientas
interactivas
exploración
diseño
resolución
problemas
iterativos
Funciones
matemáticas
álgebra
lineal
estadística
análisis
Fourier
ﬁltraje
optimización
integración
numérica
Funciones
gráﬁcas
bidimensionales
tridimensionales
visualización
datos
Herramientas
crear
interfaces
gráﬁcas
usuario
personalizadas
Funciones
integrar
algoritmos
basados
MATLAB
aplicaciones
lenguajes
externos
tales
C++
FORTRAN
Java
COM
Microsoft
Excel
ii
Instalación
Directorios
versiones
fáciles
instalar
importante
núcleo
fundamental
matlab
subdirectorios
BIN
MATLAB
BIN
encuentran
programas
ejecutables
necesario
comentar
matlab
tipos
básicos
funciones
desprende
árbol
directorios
toolboxes
suelen
instalar
forma
subdirectorios
disco
duro
colgando
subdirectorio
TOOLBOX
encuentran
funciones
.m
orientadas
control
sistemas
Ademés
incorporar
toolboxes
signal
processing
image
processing
robust
control
non-linear
control
system
identiﬁcation
etc
funciones
usuario
Funciones
denominadas
built-in
functions
funciones
matlab
incorporadas
internamente
accesibles
usuario
Funciones
llamadas
functions
funciones
cuyo
código
accesible
encuentran
subdirectorio
MATLAB
básicas
funcionamiento
sistema
Sistemas
control
automático
Página
29
45matlab\general
Comandos
propósito
general
matlab\ops
Operadores
caracteres
especiales
matlab\lang
Constructores
lenguaje
programación
matlab\elmat
Matrices
elementales
manipulación
matricial
matlab\elfun
Funciones
matemáticas
elementales
matlab\specfun
Funciones
matemáticas
especiales
matlab\matfun
Funciones
matriciales
algebra
lineal
numérica
matlab\datafun
Análisis
datos
transformada
Fourier
matlab\polyfun
Interpolación
polinomios
matlab\funfun
Funciones
funciones
métodos
ODE
matlab\sparfun
Funciones
matrices
dispersas
matlab\graph2d
Gráﬁcos
dimensiones
matlab\graph3d
Gráﬁcos
dimensiones
matlab\specgraph
Gráﬁcos
especializados
matlab\graphics
Manipulación
gráﬁcos
matlab\uitools
Herramientas
interfaz
gráﬁca
usuario
GUI
matlab\strfun
Cadenas
caracteres
matlab\iofun
Funciones
entrada
salida
ﬁcheros
matlab\timefun
Hora
fecha
matlab\datatypes
Tipos
datos
estructuras
matlab\winfun
Ficheros
interfaz
Windows
DDE
ActiveX
matlab\demos
Ejemplos
demostraciones
simulink\simulink
Simulink
simulink\blocks
Librería
bloques
Simulink
simulink\simdemos
Ejemplos
demostraciones
Simulink
toolbox\control
Paquete
Control
Sistemas
Sistemas
control
automático
Página
30
45iii
Misceláneas
Matlab
Entorno
Trabajo
comando
path
comprobarse
localizaciones
ﬁcheros
programas
trabajar
matlab
pudiendo
añadirse
subdirectorios
personales
conveniencia
forma
cómoda
interactuar
dichas
localizaciones
opción
File
Set-Path
menú
ventana
comandos
función
.m
ejemplo
contenidas
paquete
control
bastará
camino
\matlabxx\toolbox\control
esté
incluido
path
matlab
cosa
ocurrirá
paquete
instaló
adecuadamente
matlab
comienza
trabajando
defecto
subdirectorio
matlabxx\work
cambiar
directorio
trabajo
momento
comando
cd
camino
utilizarse
nombre
completo
comando
desea
chdir
Cabe
funciones
.m
existan
directorio
trabajo
localizadas
necesidad
incluir
directorio
path
matlab
comando
pwd
indica
directorio
trabajo
actual
mostrar
contenido
directorio
trabajo
emplear
comandos
dir
ls
comando
delete
nombre-ﬁchero
emplearse
eliminar
archivo
directorio
trabajo
Asimismo
operaciones
típicas
línea
comandos
sistema
operativo
introduciendo
comando
correspondiente
precedido
símbolo
Resulta
interesante
línea
comandos
matlab
posee
memoria
recuperar
comandos
introducidos
previamente
teclas
movimiento
cursor
abajo
localización
eﬁcaz
comando
introducido
previamente
teclear
caracteres
cursor
buscará
comandos
introducidos
cuyos
caracteres
coincidan
introducidos
posibilidad
ofrece
introducir
comandos
línea
ventana
comandos
separados
coma
punto
coma
limpiarse
contenido
ventana
comandos
instrucción
clc
limpiar
contenido
memoria
completo
variables
creadas
momento
utilizar
clear
all
símbolo
sirve
introducir
comentarios
escrito
símbolo
ﬁnal
línea
ignorado
intérprete
matlab
10
guardar
sesión
archivo
basta
comando
diary
nombrearchivo
archivo
contendrá
comandos
introducidos
correspondientes
resultados
quiera
seguir
almacenando
información
introducirá
diary
oﬀ.
toolbox\local
Librería
funciones
locales
Sistemas
control
automático
Página
31
45
11
desean
almacenar
variables
memoria
ﬁchero
valores
actuales
comando
save
nombre-ﬁchero
crea
ﬁchero
binario
directorio
trabajo
actual
nombre
introducido
extensión
.mat
nombre
ﬁchero
crea
llamado
matlab.mat
caso
desee
guardar
ﬁchero
formato
ascii
introducirá
comando
modiﬁcador
save
-ascii
nombre
ﬁchero
quieren
guardar
serie
variables
introducirá
save
nombre-ﬁchero
nombre-
variables
separadas
espacios
12
recuperar
ﬁcheros
generados
comando
save
utilizará
load
nombre-ﬁchero
13
salida
sistema
efectúa
introducir
quit
exit
simplemente
cerrando
ventana
comandos
14.Los
elementos
ﬁla
matriz
introducir
separados
espacios
comas
indistintamente
15
separar
ﬁlas
matriz
simple
retorno
carro
16
elementos
vectores
matrices
reales
complejos
expresiones
vemos
caso
elemento
vector
C.
17
introduciendo
comando
conjunto
cuya
sintaxis
larga
continuar
línea
introduciendo
ﬁnal
actual
puntos
seguidos
18
variables
asignan
resultados
variables
entorno
almacenan
denomina
espacio
trabajo
matlab
workspace
19
variables
numéricas
escalares
matriciales
matlab
usarse
cadenas
caracteres
delimita
secuencia
caracteres
apóstrofes
cadena
ejemplo
cadena
caracteres
20
comando
help
muestra
ayuda
MatLab
utilizar
help
help
desea
averiguar
iv
Entorno
Trabajo
Matlab
componentes
importantes
entorno
trabajo
MATLAB
editor
caminos
búsqueda
Path
Browser
editor
depurador
errores
Editor
Debugger
visualizador
ambiente
trabajo
Workspace
Browser
Path
Browser
Matlab
llamar
variedad
funciones
programadas
usuarios
funciones
distintas
nombre
interesante
busca
Matlab
función
pida
ejecute
clave
camino
búsqueda
search
path
programa
utiliza
nombre
función
search
path
lista
directorios
modiﬁcar
orden
path
utilizando
Path
Browser
Submenú
Set
Path
menú
File
directorio
actual
concepto
directorio
actual
trabajo
crucial
Matlab
directorio
usuario
guardar
archivos
genere
sesiones
Matlab
detectarlos
contenido
directorio
obtenerse
orden
dir
cambiar
directorio
actual
utiliza
orden
cd
Change
Directory
seguido
nombre
directorio
Ejecutando
cd
sube
nivel
jerarquía
directorios
cambios
hacerse
gráﬁco
Sistemas
control
automático
Página
32
45A
continuación
resumen
brevemente
principales
elementos
disponibles
ventana
cuyo
aspecto
defecto
muestra
Figura
ventana
variar
versión
escencia
Editor
Debbuger
Matlab
particular
importancia
M-archivos
archivos
extensión
.m
archivos
texto
ASCII
contienen
conjunto
órdenes
Matlab
importancia
archivos
teclear
nombre
línea
órdenes
Matlab
ejecutan
órdenes
contenidas
archivo
Matlab
dispone
editor
permite
crear
modiﬁcar
archivos
proceso
edición-Editor
ejecutarlos
paso
paso
detectar
errores
proceso
depuración-
Debugger
Workspace
Browser
espacio
trabajo
Workspace
Matlab
conjunto
variables
determinado
momento
deﬁnidas
memoria
programa
obtener
información
workspace
utilizar
órdenes
who
whos
proporciona
información
detallada
Entornos
trabajo
versiones
2015
2017
Sistemas
control
automático
Página
33
45v
Operadores
vi
Tipos
Variables
Sistemas
control
automático
Página
34
45
vi
Variables
especiales
vii
Sentencias
Control
viii
Principales
Funciones
Matemáticas
Sistemas
control
automático
Página
35
45ix
Programas
Matlab
tipos
programas
scripts
funciones
Scripts
•Es
simplemente
secuencia
órdenes
Matlab
•No
parámetros
argumentos
entrada
salida
•Las
variables
deﬁnidas
guión
globales
llamado
guión
variables
siguen
existiendo
•Tienen
extensión
.m
Funciones
•Tiene
parámetros
argumentos
entrada
salida
desea
•Las
variables
deﬁnidas
función
dejan
existir
ﬁnalizada
ejecución
función
•Se
guardar
nombre
función
extensión
.m
Ejemplo
Guardar
scripts
nombre
scripts1.m
ejecutar
evalúa
función
x^2
valores
10
pasos
clear
all
clc
0;b
10
dx
Sistemas
control
automático
Página
36
45x
dx
x.^2
RTA
16
25
36
49
64
81
100
x.
Actividad
Gráﬁcos
i.
comandos
Sistemas
control
automático
Página
37
45A
continuación
listan
comandos
graﬁcar
MatLab
Sistemas
control
automático
Página
38
45Sistemas
control
automático
Página
39
45ii
Práctica
comandos
GINPUT
GTEXT
comando
útil
Matlab
ginput
help
gineput
gtext
programa
dibuja
x(x-1
ﬁgura
permite
tomar
puntos
ratón
ﬁnal
muestra
pantalla
f='x*(x-1
sin(x
ezplot(f);[x
y]=ginput(6
gtext
gtext({'This
is
the
ﬁrst
line','This
is
the
second
line
gtext({'First
line','Second
line'},'FontName','Times','Fontsize',12
PLOT
-pi
pi/10
pi
tan(sin(x
sin(tan(x
plot(x
y,'--rs','LineWidth',2
lineas
color
rojo
cuadrados
MarkerEdgeColor','k
remarcados
negro
MarkerFaceColor','g
rellenos
color
verde
MarkerSize',10
GRID
XLABEL
YLABEL
x=0
pi/25
pi;y
sin(x
x.*x
plot(x
grid;xlabel
ylabel
valores
Sistemas
control
automático
Página
40
45ﬁgure(gcf
crea
ventana
retorna
control
HOLD
ON
HOLD
OFF
x=-4:0.05:4
exp(-0.5*x).*sin
5*x
ﬁgure
plot(x
xlabel
eje
ylabel
eje
hold
on
exp(-0.5*x).*cos
5*x
plot(x
grid
legend
exponenciales
hold
oﬀ
MESH
close
all
cierro
ﬁgura
u=-8:0.5:8
V]=meshgrid(u
sqrt(U.*U+V.*V)+eps
sin(R)./R
mesh(W
SUBPLOT
ﬁgura
ponerse
línea
empleando
comando
subplot
comando
subplot
permite
separar
ﬁgura
tantas
ﬁguras
quiera
ponerlas
ﬁgura
x=[-3:0.4:3
close
subplot(2,2,1
ﬁgure(gcf
ﬁ=[-6*pi
pi/20:6*pi
plot3(ﬁ.*cos(ﬁ),ﬁ.*sin(ﬁ),ﬁ,'r
Y]=meshgrid(x
Sistemas
control
automático
Página
41
45
ejemplo
suponga
quisiera
senoide
coseno
onda
tangente
graﬁcadas
ﬁgura
ejes
código
hará
linspace(0,2*pi,50
sin(x
cos(x
tan(x
subplot(2,2,1
plot(x
subplot(2,2,2
plot(x
subplot(2,2,3
plot(x
SUBPLOT
0:0.1:2*pi
y1
sin(x
y2
cos(x
subplot(2,1,1
plot(x
y1
title('y
sin(x
subplot(2,1,2
plot(x
y2
title('y
cos(x
AXIS
Graﬁque
función
exp(5t)-1
t=0:0.01:5
exp(5*t)-1
plot(t
Sistemas
control
automático
Página
42
45
gráﬁco
tiende
inﬁnito
Atendiendo
eje
escala
8e10
verse
gráﬁco
idea
pasando
ploteo
miremos
función
Escriba
comando
ventana
comandos
Matlab
axis([0
50
iii
Comandos
destacados
cuadro
representa
resumen
comandos
software
aplicación
guía
Sistemas
control
automático
Página
43
451
Obtenga
representación
MatLab
sistema
ss
Create
state-space
model
convert
to
state-space
model
modelo
espacio
initial
Respuesta
libre
sistema
/condiciones
iniciales
respuesta
temporal
Sys
Continuous-time
dynamic
system
model
except
frequency
response
data
models
sys
can
represent
SISO
or
MIMO
system
except
that
the
matched'discretization
method
supports
SISO
systems
only
sys
can
have
input
output
or
internal
time
delays
however
the
matched
and
impulse
methods
do
not
support
state-space
models
with
internal
time
delays
The
following
identiﬁed
linear
systems
cannot
be
discretized
directly
idgrey
models
with
FcnType
is
Convert
to
idss
model
ﬁrst
idproc
models
Convert
to
idtf
or
idpoly
model
ﬁrst
For
the
syntax
sysd
c2d(sys
Ts
opts
sys
must
be
state-space
model
Crea
objeto
tipo
sistema
Ejemplos
sys
tf(num
den
sys
zpk(ceros
polos
sys
ss(A
Conversión
modelos
SECCIÓN
PRÁCTICA
COMPETENCIAS
xx
Ejercitación
Sistemas
control
automático
Página
44
45**Modelo
ejercicio
tanques
Modelo
masa
simple
resorte
amortiguador
solicita
a-
representación
matricial
solución
sistema
laplace
gráﬁca
solución
sistema
b-
Caracterización
sistema
Representa
respuesta
sistema
térmico
recintos
evaluando
x1
frente
impulso
condiciones
iniciales
siguientes
graﬁque
x0
20
100
suponiendo
temperaturas
iniciales
20
100
grados
recinto
recomienda
utilización
ss
initial
Sistemas
control
automático
Página
45
45
